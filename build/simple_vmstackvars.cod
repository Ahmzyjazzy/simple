; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG82440 DB	'NULL', 00H
	ORG $+3
$SG82441 DB	'RUNTIME ERROR 24 : The varible is not initialized', 00H
	ORG $+6
$SG82469 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82479 DB	'RUNTIME ERROR 24 : The varible is not initialized', 00H
	ORG $+6
$SG82489 DB	'RUNTIME ERROR 24 : The varible is not initialized', 00H
	ORG $+6
$SG82501 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82503 DB	'RUNTIME ERROR 24 : Variable is required for the assignme'
	DB	'nt operation', 00H
	ORG $+11
$SG82635 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82678 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82694 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82710 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82735 DB	'RUNTIME ERROR 24 : Trying to destory the object using th'
	DB	'e this reference ', 00H
_DATA	ENDS
PUBLIC	simple_vm_pushv
PUBLIC	simple_vm_loadaddress
PUBLIC	simple_vm_assignment
PUBLIC	simple_vm_inc
PUBLIC	simple_vm_loadapushv
PUBLIC	simple_vm_newline
PUBLIC	simple_vm_freestack
PUBLIC	simple_vm_setreference
PUBLIC	simple_vm_list_copy
PUBLIC	simple_vm_list_simpointercopy
PUBLIC	simple_vm_beforeequallist
PUBLIC	simple_vm_beforeequalitem
PUBLIC	simple_vm_assignmentpointer
PUBLIC	simple_vm_freeloadaddressscope
PUBLIC	simple_vm_plusplus
PUBLIC	simple_vm_minusminus
PUBLIC	__real@3ff0000000000000
EXTRN	strcmp:PROC
EXTRN	fmod:PROC
EXTRN	simple_string_new2_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_string_add2_gc:PROC
EXTRN	simple_item_setdouble_gc:PROC
EXTRN	simple_item_setpointer_gc:PROC
EXTRN	simple_item_setint_gc:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_setpointer_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_setdouble_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_setstring2_gc:PROC
EXTRN	simple_list_addstring2_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_isnumber:PROC
EXTRN	simple_list_isstring:PROC
EXTRN	simple_list_islist:PROC
EXTRN	simple_list_ispointer:PROC
EXTRN	simple_list_deleteallitems_gc:PROC
EXTRN	simple_list_findpointer:PROC
EXTRN	simple_list_setdouble:PROC
EXTRN	simple_list_copy:PROC
EXTRN	simple_hashtable_deleteitem:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_error2:PROC
EXTRN	simple_vm_newbytecodeitem:PROC
EXTRN	simple_vm_numtostring:PROC
EXTRN	simple_vm_stringtonum:PROC
EXTRN	simple_vm_findvar:PROC
EXTRN	simple_vm_newvar:PROC
EXTRN	simple_vm_listpushv:PROC
EXTRN	simple_vm_listassignment:PROC
EXTRN	simple_vm_stsimple_pushv:PROC
EXTRN	simple_vm_stsimple_assignment:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_setbraceobj:PROC
EXTRN	simple_vm_oop_bracestack:PROC
EXTRN	simple_vm_oop_updateselfpointer:PROC
EXTRN	simple_vm_traceevent:PROC
EXTRN	simple_vm_getglobalscope:PROC
EXTRN	simple_vm_gc_checknewreference:PROC
EXTRN	simple_vm_gc_checkupdatereference:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_pushv DD imagerel $LN20
	DD	imagerel $LN20+794
	DD	imagerel $unwind$simple_vm_pushv
$pdata$simple_vm_loadaddress DD imagerel $LN8
	DD	imagerel $LN8+574
	DD	imagerel $unwind$simple_vm_loadaddress
$pdata$simple_vm_assignment DD imagerel $LN31
	DD	imagerel $LN31+2017
	DD	imagerel $unwind$simple_vm_assignment
$pdata$simple_vm_inc DD imagerel $LN5
	DD	imagerel $LN5+359
	DD	imagerel $unwind$simple_vm_inc
$pdata$simple_vm_loadapushv DD imagerel $LN8
	DD	imagerel $LN8+475
	DD	imagerel $unwind$simple_vm_loadapushv
$pdata$simple_vm_newline DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$simple_vm_newline
$pdata$simple_vm_freestack DD imagerel $LN9
	DD	imagerel $LN9+323
	DD	imagerel $unwind$simple_vm_freestack
$pdata$simple_vm_setreference DD imagerel $LN4
	DD	imagerel $LN4+333
	DD	imagerel $unwind$simple_vm_setreference
$pdata$simple_vm_list_copy DD imagerel $LN22
	DD	imagerel $LN22+824
	DD	imagerel $unwind$simple_vm_list_copy
$pdata$simple_vm_list_simpointercopy DD imagerel $LN13
	DD	imagerel $LN13+314
	DD	imagerel $unwind$simple_vm_list_simpointercopy
$pdata$simple_vm_beforeequallist DD imagerel $LN26
	DD	imagerel $LN26+1282
	DD	imagerel $unwind$simple_vm_beforeequallist
$pdata$simple_vm_beforeequalitem DD imagerel $LN28
	DD	imagerel $LN28+1081
	DD	imagerel $unwind$simple_vm_beforeequalitem
$pdata$simple_vm_assignmentpointer DD imagerel $LN17
	DD	imagerel $LN17+460
	DD	imagerel $unwind$simple_vm_assignmentpointer
$pdata$simple_vm_freeloadaddressscope DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$simple_vm_freeloadaddressscope
$pdata$simple_vm_plusplus DD imagerel $LN11
	DD	imagerel $LN11+484
	DD	imagerel $unwind$simple_vm_plusplus
$pdata$simple_vm_minusminus DD imagerel $LN11
	DD	imagerel $LN11+484
	DD	imagerel $unwind$simple_vm_minusminus
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_pushv DD 010901H
	DD	0a209H
$unwind$simple_vm_loadaddress DD 010901H
	DD	04209H
$unwind$simple_vm_assignment DD 010901H
	DD	0e209H
$unwind$simple_vm_inc DD 010901H
	DD	06209H
$unwind$simple_vm_loadapushv DD 010901H
	DD	08209H
$unwind$simple_vm_newline DD 010901H
	DD	04209H
$unwind$simple_vm_freestack DD 010901H
	DD	06209H
$unwind$simple_vm_setreference DD 010901H
	DD	08209H
$unwind$simple_vm_list_copy DD 011301H
	DD	06213H
$unwind$simple_vm_list_simpointercopy DD 010e01H
	DD	0620eH
$unwind$simple_vm_beforeequallist DD 022919H
	DD	0170117H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
$unwind$simple_vm_beforeequalitem DD 022919H
	DD	0170117H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
$unwind$simple_vm_assignmentpointer DD 010901H
	DD	0a209H
$unwind$simple_vm_freeloadaddressscope DD 010901H
	DD	04209H
$unwind$simple_vm_plusplus DD 010901H
	DD	06209H
$unwind$simple_vm_minusminus DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list$ = 40
vm$ = 64
simple_vm_minusminus PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 493
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 496
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 03	 cmp	 eax, 3
  00028	0f 85 3b 01 00
	00		 jne	 $LN8@simple_vm_
; Line 497
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00047	c1 e8 05	 shr	 eax, 5
  0004a	83 e0 03	 and	 eax, 3
  0004d	83 f8 01	 cmp	 eax, 1
  00050	0f 85 80 00 00
	00		 jne	 $LN7@simple_vm_
; Line 498
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00062	48 6b c0 18	 imul	 rax, 24
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0006b	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00070	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 499
  00075	ba 03 00 00 00	 mov	 edx, 3
  0007a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0007f	e8 00 00 00 00	 call	 simple_list_getitem
  00084	8b 00		 mov	 eax, DWORD PTR [rax]
  00086	c1 e8 03	 shr	 eax, 3
  00089	83 e0 03	 and	 eax, 3
  0008c	83 f8 02	 cmp	 eax, 2
  0008f	75 40		 jne	 SHORT $LN6@simple_vm_
; Line 500
  00091	ba 03 00 00 00	 mov	 edx, 3
  00096	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_list_getitem
  000a0	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000a5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000ad	0f 28 d8	 movaps	 xmm3, xmm0
  000b0	41 b8 03 00 00
	00		 mov	 r8d, 3
  000b6	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000bb	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000c7	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 501
  000cc	e9 0e 01 00 00	 jmp	 $LN9@simple_vm_
$LN6@simple_vm_:
; Line 502
  000d1	e9 91 00 00 00	 jmp	 $LN5@simple_vm_
$LN7@simple_vm_:
; Line 504
  000d6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000db	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e2	48 6b c0 18	 imul	 rax, 24
  000e6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ef	c1 e8 05	 shr	 eax, 5
  000f2	83 e0 03	 and	 eax, 3
  000f5	83 f8 02	 cmp	 eax, 2
  000f8	75 6d		 jne	 SHORT $LN4@simple_vm_
; Line 505
  000fa	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00106	48 6b c0 18	 imul	 rax, 24
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0010f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00114	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 506
  00119	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0011e	8b 00		 mov	 eax, DWORD PTR [rax]
  00120	83 e0 07	 and	 eax, 7
  00123	83 f8 02	 cmp	 eax, 2
  00126	75 3f		 jne	 SHORT $LN3@simple_vm_
  00128	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0012d	8b 00		 mov	 eax, DWORD PTR [rax]
  0012f	c1 e8 03	 shr	 eax, 3
  00132	83 e0 03	 and	 eax, 3
  00135	83 f8 02	 cmp	 eax, 2
  00138	75 2d		 jne	 SHORT $LN3@simple_vm_
; Line 507
  0013a	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0013f	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00144	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0014c	0f 28 d0	 movaps	 xmm2, xmm0
  0014f	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00154	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00159	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00160	e8 00 00 00 00	 call	 simple_item_setdouble_gc
; Line 508
  00165	eb 78		 jmp	 SHORT $LN9@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN5@simple_vm_:
; Line 510
  00167	eb 65		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 512
  00169	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0016e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00175	48 6b c0 18	 imul	 rax, 24
  00179	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0017e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00182	83 e0 07	 and	 eax, 7
  00185	83 f8 02	 cmp	 eax, 2
  00188	75 44		 jne	 SHORT $LN1@simple_vm_
; Line 513
  0018a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0018f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00196	48 6b c0 18	 imul	 rax, 24
  0019a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  001a5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001ad	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001be	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001c2	0f 28 d0	 movaps	 xmm2, xmm0
  001c5	8b d0		 mov	 edx, eax
  001c7	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 514
  001cc	eb 11		 jmp	 SHORT $LN9@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 516
  001ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82710
  001d5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001da	e8 00 00 00 00	 call	 simple_vm_error
$LN9@simple_vm_:
; Line 517
  001df	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001e3	c3		 ret	 0
simple_vm_minusminus ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list$ = 40
vm$ = 64
simple_vm_plusplus PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 466
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 469
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 03	 cmp	 eax, 3
  00028	0f 85 3b 01 00
	00		 jne	 $LN8@simple_vm_
; Line 470
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00047	c1 e8 05	 shr	 eax, 5
  0004a	83 e0 03	 and	 eax, 3
  0004d	83 f8 01	 cmp	 eax, 1
  00050	0f 85 80 00 00
	00		 jne	 $LN7@simple_vm_
; Line 471
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00062	48 6b c0 18	 imul	 rax, 24
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0006b	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00070	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 472
  00075	ba 03 00 00 00	 mov	 edx, 3
  0007a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0007f	e8 00 00 00 00	 call	 simple_list_getitem
  00084	8b 00		 mov	 eax, DWORD PTR [rax]
  00086	c1 e8 03	 shr	 eax, 3
  00089	83 e0 03	 and	 eax, 3
  0008c	83 f8 02	 cmp	 eax, 2
  0008f	75 40		 jne	 SHORT $LN6@simple_vm_
; Line 473
  00091	ba 03 00 00 00	 mov	 edx, 3
  00096	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_list_getitem
  000a0	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000a5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000ad	0f 28 d8	 movaps	 xmm3, xmm0
  000b0	41 b8 03 00 00
	00		 mov	 r8d, 3
  000b6	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000bb	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000c7	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 474
  000cc	e9 0e 01 00 00	 jmp	 $LN9@simple_vm_
$LN6@simple_vm_:
; Line 475
  000d1	e9 91 00 00 00	 jmp	 $LN5@simple_vm_
$LN7@simple_vm_:
; Line 477
  000d6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000db	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e2	48 6b c0 18	 imul	 rax, 24
  000e6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ef	c1 e8 05	 shr	 eax, 5
  000f2	83 e0 03	 and	 eax, 3
  000f5	83 f8 02	 cmp	 eax, 2
  000f8	75 6d		 jne	 SHORT $LN4@simple_vm_
; Line 478
  000fa	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00106	48 6b c0 18	 imul	 rax, 24
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0010f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00114	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 479
  00119	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0011e	8b 00		 mov	 eax, DWORD PTR [rax]
  00120	83 e0 07	 and	 eax, 7
  00123	83 f8 02	 cmp	 eax, 2
  00126	75 3f		 jne	 SHORT $LN3@simple_vm_
  00128	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0012d	8b 00		 mov	 eax, DWORD PTR [rax]
  0012f	c1 e8 03	 shr	 eax, 3
  00132	83 e0 03	 and	 eax, 3
  00135	83 f8 02	 cmp	 eax, 2
  00138	75 2d		 jne	 SHORT $LN3@simple_vm_
; Line 480
  0013a	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0013f	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00144	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0014c	0f 28 d0	 movaps	 xmm2, xmm0
  0014f	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00154	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00159	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00160	e8 00 00 00 00	 call	 simple_item_setdouble_gc
; Line 481
  00165	eb 78		 jmp	 SHORT $LN9@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN5@simple_vm_:
; Line 483
  00167	eb 65		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 485
  00169	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0016e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00175	48 6b c0 18	 imul	 rax, 24
  00179	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0017e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00182	83 e0 07	 and	 eax, 7
  00185	83 f8 02	 cmp	 eax, 2
  00188	75 44		 jne	 SHORT $LN1@simple_vm_
; Line 486
  0018a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0018f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00196	48 6b c0 18	 imul	 rax, 24
  0019a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  001a5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001ad	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001be	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001c2	0f 28 d0	 movaps	 xmm2, xmm0
  001c5	8b d0		 mov	 edx, eax
  001c7	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 487
  001cc	eb 11		 jmp	 SHORT $LN9@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 489
  001ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82694
  001d5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001da	e8 00 00 00 00	 call	 simple_vm_error
$LN9@simple_vm_:
; Line 490
  001df	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001e3	c3		 ret	 0
simple_vm_plusplus ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_freeloadaddressscope PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 562
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 564
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  00015	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 565
  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
simple_vm_freeloadaddressscope ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
pItem$ = 48
list2$ = 56
tv152 = 64
vm$ = 96
simple_vm_assignmentpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 520
$LN17:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 524
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f be 80 4a 19
	00 00		 movsx	 eax, BYTE PTR [rax+6474]
  00015	85 c0		 test	 eax, eax
  00017	0f 85 9e 01 00
	00		 jne	 $LN14@simple_vm_
; Line 525
  0001d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00022	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00029	48 6b c0 18	 imul	 rax, 24
  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00032	48 8b 54 24 60	 mov	 rdx, QWORD PTR vm$[rsp]
  00037	48 8b 44 02 38	 mov	 rax, QWORD PTR [rdx+rax+56]
  0003c	48 89 81 30 19
	00 00		 mov	 QWORD PTR [rcx+6448], rax
; Line 527
  00043	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR list$[rsp], 0
; Line 528
  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	48 6b c0 18	 imul	 rax, 24
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00061	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00065	c1 e8 05	 shr	 eax, 5
  00068	83 e0 03	 and	 eax, 3
  0006b	83 f8 01	 cmp	 eax, 1
  0006e	75 37		 jne	 SHORT $LN13@simple_vm_
; Line 529
  00070	ba 03 00 00 00	 mov	 edx, 3
  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0007a	48 8b 88 30 19
	00 00		 mov	 rcx, QWORD PTR [rax+6448]
  00081	e8 00 00 00 00	 call	 simple_list_islist
  00086	85 c0		 test	 eax, eax
  00088	74 1b		 je	 SHORT $LN12@simple_vm_
; Line 530
  0008a	ba 03 00 00 00	 mov	 edx, 3
  0008f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00094	48 8b 88 30 19
	00 00		 mov	 rcx, QWORD PTR [rax+6448]
  0009b	e8 00 00 00 00	 call	 simple_list_getlist
  000a0	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
$LN12@simple_vm_:
; Line 531
  000a5	eb 60		 jmp	 SHORT $LN11@simple_vm_
$LN13@simple_vm_:
; Line 533
  000a7	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ac	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b3	48 6b c0 18	 imul	 rax, 24
  000b7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000bc	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000c0	c1 e8 05	 shr	 eax, 5
  000c3	83 e0 03	 and	 eax, 3
  000c6	83 f8 02	 cmp	 eax, 2
  000c9	75 37		 jne	 SHORT $LN10@simple_vm_
; Line 534
  000cb	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000d0	48 8b 80 30 19
	00 00		 mov	 rax, QWORD PTR [rax+6448]
  000d7	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 535
  000dc	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000e1	8b 00		 mov	 eax, DWORD PTR [rax]
  000e3	83 e0 07	 and	 eax, 7
  000e6	83 f8 04	 cmp	 eax, 4
  000e9	75 10		 jne	 SHORT $LN9@simple_vm_
; Line 536
  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000f0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000f4	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 538
  000f9	eb 05		 jmp	 SHORT $LN8@simple_vm_
$LN9@simple_vm_:
; Line 539
  000fb	e9 c7 00 00 00	 jmp	 $LN15@simple_vm_
$LN8@simple_vm_:
; Line 542
  00100	eb 05		 jmp	 SHORT $LN7@simple_vm_
$LN10@simple_vm_:
; Line 543
  00102	e9 c0 00 00 00	 jmp	 $LN15@simple_vm_
$LN7@simple_vm_:
$LN11@simple_vm_:
; Line 545
  00107	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0010c	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00111	85 c0		 test	 eax, eax
  00113	0f 84 a0 00 00
	00		 je	 $LN6@simple_vm_
  00119	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0011e	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00125	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00129	0f 8e 8a 00 00
	00		 jle	 $LN6@simple_vm_
; Line 547
  0012f	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00137	eb 0a		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
  00139	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0013d	ff c0		 inc	 eax
  0013f	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_vm_:
  00143	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00148	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0014f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00152	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00156	7f 61		 jg	 SHORT $LN3@simple_vm_
; Line 548
  00158	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0015c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00161	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00168	e8 00 00 00 00	 call	 simple_list_getlist
  0016d	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 549
  00172	ba 02 00 00 00	 mov	 edx, 2
  00177	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0017c	e8 00 00 00 00	 call	 simple_list_getitem
  00181	48 89 44 24 40	 mov	 QWORD PTR tv152[rsp], rax
  00186	ba 01 00 00 00	 mov	 edx, 1
  0018b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00190	e8 00 00 00 00	 call	 simple_list_getitem
  00195	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00199	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv152[rsp]
  0019e	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  001a2	75 13		 jne	 SHORT $LN2@simple_vm_
; Line 550
  001a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82735
  001ab	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001b0	e8 00 00 00 00	 call	 simple_vm_error
; Line 551
  001b5	eb 10		 jmp	 SHORT $LN15@simple_vm_
$LN2@simple_vm_:
; Line 553
  001b7	eb 80		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
$LN6@simple_vm_:
; Line 556
  001b9	eb 0c		 jmp	 SHORT $LN1@simple_vm_
$LN14@simple_vm_:
; Line 557
  001bb	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001c0	c6 80 4a 19 00
	00 00		 mov	 BYTE PTR [rax+6474], 0
$LN1@simple_vm_:
$LN15@simple_vm_:
; Line 559
  001c7	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001cb	c3		 ret	 0
simple_vm_assignmentpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv213 = 32
string$ = 40
cStr$ = 48
__$ArrayPad$ = 160
vm$ = 192
pItem$ = 200
nNum1$ = 208
simple_vm_beforeequalitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 430
$LN28:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001e	48 33 c4	 xor	 rax, rsp
  00021	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 433
  00029	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  00031	8b 00		 mov	 eax, DWORD PTR [rax]
  00033	83 e0 07	 and	 eax, 7
  00036	83 f8 02	 cmp	 eax, 2
  00039	0f 85 45 03 00
	00		 jne	 $LN23@simple_vm_
  0003f	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  00047	8b 00		 mov	 eax, DWORD PTR [rax]
  00049	c1 e8 03	 shr	 eax, 3
  0004c	83 e0 03	 and	 eax, 3
  0004f	83 f8 02	 cmp	 eax, 2
  00052	0f 85 2c 03 00
	00		 jne	 $LN23@simple_vm_
; Line 434
  00058	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00060	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00067	83 f8 01	 cmp	 eax, 1
  0006a	75 3a		 jne	 SHORT $LN22@simple_vm_
; Line 435
  0006c	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  00074	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00079	f2 0f 58 84 24
	d0 00 00 00	 addsd	 xmm0, QWORD PTR nNum1$[rsp]
  00082	0f 28 d0	 movaps	 xmm2, xmm0
  00085	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  0008d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00095	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0009c	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  000a1	e9 d9 02 00 00	 jmp	 $LN21@simple_vm_
$LN22@simple_vm_:
; Line 436
  000a6	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ae	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  000b5	83 f8 02	 cmp	 eax, 2
  000b8	75 3a		 jne	 SHORT $LN20@simple_vm_
; Line 437
  000ba	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  000c2	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000c7	f2 0f 5c 84 24
	d0 00 00 00	 subsd	 xmm0, QWORD PTR nNum1$[rsp]
  000d0	0f 28 d0	 movaps	 xmm2, xmm0
  000d3	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  000db	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000e3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ea	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  000ef	e9 8b 02 00 00	 jmp	 $LN19@simple_vm_
$LN20@simple_vm_:
; Line 438
  000f4	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fc	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00103	83 f8 03	 cmp	 eax, 3
  00106	75 3a		 jne	 SHORT $LN18@simple_vm_
; Line 439
  00108	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  00110	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00115	f2 0f 59 84 24
	d0 00 00 00	 mulsd	 xmm0, QWORD PTR nNum1$[rsp]
  0011e	0f 28 d0	 movaps	 xmm2, xmm0
  00121	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  00129	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00131	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00138	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  0013d	e9 3d 02 00 00	 jmp	 $LN17@simple_vm_
$LN18@simple_vm_:
; Line 440
  00142	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0014a	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00151	83 f8 04	 cmp	 eax, 4
  00154	75 3a		 jne	 SHORT $LN16@simple_vm_
; Line 441
  00156	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  0015e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00163	f2 0f 5e 84 24
	d0 00 00 00	 divsd	 xmm0, QWORD PTR nNum1$[rsp]
  0016c	0f 28 d0	 movaps	 xmm2, xmm0
  0016f	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  00177	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0017f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00186	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  0018b	e9 ef 01 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 442
  00190	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00198	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0019f	83 f8 05	 cmp	 eax, 5
  001a2	75 3f		 jne	 SHORT $LN14@simple_vm_
; Line 443
  001a4	f2 0f 10 8c 24
	d0 00 00 00	 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  001ad	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  001b5	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001ba	e8 00 00 00 00	 call	 fmod
  001bf	0f 28 d0	 movaps	 xmm2, xmm0
  001c2	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  001ca	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001d9	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  001de	e9 9c 01 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 444
  001e3	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001eb	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  001f2	83 f8 06	 cmp	 eax, 6
  001f5	75 40		 jne	 SHORT $LN12@simple_vm_
; Line 445
  001f7	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  001ff	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00204	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  0020d	23 c1		 and	 eax, ecx
  0020f	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00213	0f 28 d0	 movaps	 xmm2, xmm0
  00216	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  0021e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00226	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0022d	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  00232	e9 48 01 00 00	 jmp	 $LN11@simple_vm_
$LN12@simple_vm_:
; Line 446
  00237	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0023f	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00246	83 f8 07	 cmp	 eax, 7
  00249	75 40		 jne	 SHORT $LN10@simple_vm_
; Line 447
  0024b	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  00253	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00258	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00261	0b c1		 or	 eax, ecx
  00263	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00267	0f 28 d0	 movaps	 xmm2, xmm0
  0026a	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  00272	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0027a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00281	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  00286	e9 f4 00 00 00	 jmp	 $LN9@simple_vm_
$LN10@simple_vm_:
; Line 448
  0028b	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00293	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0029a	83 f8 08	 cmp	 eax, 8
  0029d	75 40		 jne	 SHORT $LN8@simple_vm_
; Line 449
  0029f	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  002a7	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  002ac	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  002b5	33 c1		 xor	 eax, ecx
  002b7	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  002bb	0f 28 d0	 movaps	 xmm2, xmm0
  002be	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  002c6	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002ce	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002d5	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  002da	e9 a0 00 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 450
  002df	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002e7	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  002ee	83 f8 09	 cmp	 eax, 9
  002f1	75 3d		 jne	 SHORT $LN6@simple_vm_
; Line 451
  002f3	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  002fb	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00300	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00309	d3 e0		 shl	 eax, cl
  0030b	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0030f	0f 28 d0	 movaps	 xmm2, xmm0
  00312	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  0031a	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00322	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00329	e8 00 00 00 00	 call	 simple_item_setdouble_gc
  0032e	eb 4f		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 452
  00330	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00338	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0033f	83 f8 0a	 cmp	 eax, 10
  00342	75 3b		 jne	 SHORT $LN4@simple_vm_
; Line 453
  00344	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  0034c	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00351	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  0035a	d3 f8		 sar	 eax, cl
  0035c	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00360	0f 28 d0	 movaps	 xmm2, xmm0
  00363	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pItem$[rsp]
  0036b	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_item_setdouble_gc
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN7@simple_vm_:
$LN9@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
$LN17@simple_vm_:
$LN19@simple_vm_:
$LN21@simple_vm_:
; Line 454
  0037f	e9 9d 00 00 00	 jmp	 $LN3@simple_vm_
$LN23@simple_vm_:
; Line 456
  00384	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  0038c	8b 00		 mov	 eax, DWORD PTR [rax]
  0038e	83 e0 07	 and	 eax, 7
  00391	83 f8 01	 cmp	 eax, 1
  00394	75 0a		 jne	 SHORT $LN26@simple_vm_
  00396	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv213[rsp], 1
  0039e	eb 08		 jmp	 SHORT $LN27@simple_vm_
$LN26@simple_vm_:
  003a0	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv213[rsp], 0
$LN27@simple_vm_:
  003a8	83 7c 24 20 01	 cmp	 DWORD PTR tv213[rsp], 1
  003ad	75 5e		 jne	 SHORT $LN2@simple_vm_
  003af	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003b7	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  003be	83 f8 01	 cmp	 eax, 1
  003c1	75 4a		 jne	 SHORT $LN2@simple_vm_
; Line 457
  003c3	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR pItem$[rsp]
  003cb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003cf	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 458
  003d4	4c 8d 44 24 30	 lea	 r8, QWORD PTR cStr$[rsp]
  003d9	f2 0f 10 8c 24
	d0 00 00 00	 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  003e2	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003ea	e8 00 00 00 00	 call	 simple_vm_numtostring
  003ef	4c 8b c0	 mov	 r8, rax
  003f2	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  003f7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003ff	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00406	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 459
  0040b	eb 14		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 460
  0040d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82678
  00414	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0041c	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 463
  00421	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00429	48 33 cc	 xor	 rcx, rsp
  0042c	e8 00 00 00 00	 call	 __security_check_cookie
  00431	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  00438	c3		 ret	 0
simple_vm_beforeequalitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 32
cStr$ = 48
__$ArrayPad$ = 160
vm$ = 192
var$ = 200
nNum1$ = 208
simple_vm_beforeequallist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 393
$LN26:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H
  00017	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001e	48 33 c4	 xor	 rax, rsp
  00021	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 396
  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00036	e8 00 00 00 00	 call	 simple_list_getitem
  0003b	8b 00		 mov	 eax, DWORD PTR [rax]
  0003d	c1 e8 03	 shr	 eax, 3
  00040	83 e0 03	 and	 eax, 3
  00043	83 f8 02	 cmp	 eax, 2
  00046	0f 85 0b 04 00
	00		 jne	 $LN23@simple_vm_
; Line 397
  0004c	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0005b	83 f8 01	 cmp	 eax, 1
  0005e	75 4a		 jne	 SHORT $LN22@simple_vm_
; Line 398
  00060	ba 03 00 00 00	 mov	 edx, 3
  00065	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_getitem
  00072	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00077	f2 0f 58 84 24
	d0 00 00 00	 addsd	 xmm0, QWORD PTR nNum1$[rsp]
  00080	0f 28 d8	 movaps	 xmm3, xmm0
  00083	41 b8 03 00 00
	00		 mov	 r8d, 3
  00089	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  00091	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00099	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a0	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  000a5	e9 a8 03 00 00	 jmp	 $LN21@simple_vm_
$LN22@simple_vm_:
; Line 399
  000aa	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000b2	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  000b9	83 f8 02	 cmp	 eax, 2
  000bc	75 4a		 jne	 SHORT $LN20@simple_vm_
; Line 400
  000be	ba 03 00 00 00	 mov	 edx, 3
  000c3	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  000cb	e8 00 00 00 00	 call	 simple_list_getitem
  000d0	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000d5	f2 0f 5c 84 24
	d0 00 00 00	 subsd	 xmm0, QWORD PTR nNum1$[rsp]
  000de	0f 28 d8	 movaps	 xmm3, xmm0
  000e1	41 b8 03 00 00
	00		 mov	 r8d, 3
  000e7	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  000ef	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000f7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000fe	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00103	e9 4a 03 00 00	 jmp	 $LN19@simple_vm_
$LN20@simple_vm_:
; Line 401
  00108	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00110	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00117	83 f8 03	 cmp	 eax, 3
  0011a	75 4a		 jne	 SHORT $LN18@simple_vm_
; Line 402
  0011c	ba 03 00 00 00	 mov	 edx, 3
  00121	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00129	e8 00 00 00 00	 call	 simple_list_getitem
  0012e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00133	f2 0f 59 84 24
	d0 00 00 00	 mulsd	 xmm0, QWORD PTR nNum1$[rsp]
  0013c	0f 28 d8	 movaps	 xmm3, xmm0
  0013f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00145	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  0014d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00155	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0015c	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00161	e9 ec 02 00 00	 jmp	 $LN17@simple_vm_
$LN18@simple_vm_:
; Line 403
  00166	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0016e	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00175	83 f8 04	 cmp	 eax, 4
  00178	75 4a		 jne	 SHORT $LN16@simple_vm_
; Line 404
  0017a	ba 03 00 00 00	 mov	 edx, 3
  0017f	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00187	e8 00 00 00 00	 call	 simple_list_getitem
  0018c	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00191	f2 0f 5e 84 24
	d0 00 00 00	 divsd	 xmm0, QWORD PTR nNum1$[rsp]
  0019a	0f 28 d8	 movaps	 xmm3, xmm0
  0019d	41 b8 03 00 00
	00		 mov	 r8d, 3
  001a3	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  001ab	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001b3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ba	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  001bf	e9 8e 02 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 405
  001c4	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001cc	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  001d3	83 f8 05	 cmp	 eax, 5
  001d6	75 4f		 jne	 SHORT $LN14@simple_vm_
; Line 406
  001d8	ba 03 00 00 00	 mov	 edx, 3
  001dd	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  001e5	e8 00 00 00 00	 call	 simple_list_getitem
  001ea	f2 0f 10 8c 24
	d0 00 00 00	 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  001f3	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001f8	e8 00 00 00 00	 call	 fmod
  001fd	0f 28 d8	 movaps	 xmm3, xmm0
  00200	41 b8 03 00 00
	00		 mov	 r8d, 3
  00206	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  0020e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00216	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0021d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00222	e9 2b 02 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 407
  00227	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0022f	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00236	83 f8 06	 cmp	 eax, 6
  00239	75 50		 jne	 SHORT $LN12@simple_vm_
; Line 408
  0023b	ba 03 00 00 00	 mov	 edx, 3
  00240	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00248	e8 00 00 00 00	 call	 simple_list_getitem
  0024d	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00252	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  0025b	23 c1		 and	 eax, ecx
  0025d	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00261	0f 28 d8	 movaps	 xmm3, xmm0
  00264	41 b8 03 00 00
	00		 mov	 r8d, 3
  0026a	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  00272	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0027a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00281	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00286	e9 c7 01 00 00	 jmp	 $LN11@simple_vm_
$LN12@simple_vm_:
; Line 409
  0028b	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00293	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0029a	83 f8 07	 cmp	 eax, 7
  0029d	0f 85 8b 00 00
	00		 jne	 $LN10@simple_vm_
; Line 410
  002a3	ba 03 00 00 00	 mov	 edx, 3
  002a8	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  002b0	e8 00 00 00 00	 call	 simple_list_getitem
  002b5	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  002ba	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  002c3	0b c1		 or	 eax, ecx
  002c5	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  002c9	0f 28 d0	 movaps	 xmm2, xmm0
  002cc	ba 03 00 00 00	 mov	 edx, 3
  002d1	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  002d9	e8 00 00 00 00	 call	 simple_list_setdouble
; Line 411
  002de	ba 03 00 00 00	 mov	 edx, 3
  002e3	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  002eb	e8 00 00 00 00	 call	 simple_list_getitem
  002f0	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  002f5	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  002fe	0b c1		 or	 eax, ecx
  00300	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00304	0f 28 d8	 movaps	 xmm3, xmm0
  00307	41 b8 03 00 00
	00		 mov	 r8d, 3
  0030d	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  00315	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0031d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00324	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00329	e9 24 01 00 00	 jmp	 $LN9@simple_vm_
$LN10@simple_vm_:
; Line 412
  0032e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00336	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0033d	83 f8 08	 cmp	 eax, 8
  00340	75 50		 jne	 SHORT $LN8@simple_vm_
; Line 413
  00342	ba 03 00 00 00	 mov	 edx, 3
  00347	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  0034f	e8 00 00 00 00	 call	 simple_list_getitem
  00354	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00359	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00362	33 c1		 xor	 eax, ecx
  00364	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00368	0f 28 d8	 movaps	 xmm3, xmm0
  0036b	41 b8 03 00 00
	00		 mov	 r8d, 3
  00371	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  00379	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00381	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00388	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  0038d	e9 c0 00 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 414
  00392	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0039a	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  003a1	83 f8 09	 cmp	 eax, 9
  003a4	75 4d		 jne	 SHORT $LN6@simple_vm_
; Line 415
  003a6	ba 03 00 00 00	 mov	 edx, 3
  003ab	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  003b3	e8 00 00 00 00	 call	 simple_list_getitem
  003b8	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  003bd	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  003c6	d3 e0		 shl	 eax, cl
  003c8	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  003cc	0f 28 d8	 movaps	 xmm3, xmm0
  003cf	41 b8 03 00 00
	00		 mov	 r8d, 3
  003d5	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  003dd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003e5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003ec	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  003f1	eb 5f		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 416
  003f3	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003fb	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00402	83 f8 0a	 cmp	 eax, 10
  00405	75 4b		 jne	 SHORT $LN4@simple_vm_
; Line 417
  00407	ba 03 00 00 00	 mov	 edx, 3
  0040c	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00414	e8 00 00 00 00	 call	 simple_list_getitem
  00419	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  0041e	f2 0f 2c 8c 24
	d0 00 00 00	 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00427	d3 f8		 sar	 eax, cl
  00429	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0042d	0f 28 d8	 movaps	 xmm3, xmm0
  00430	41 b8 03 00 00
	00		 mov	 r8d, 3
  00436	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR var$[rsp]
  0043e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00446	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0044d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN7@simple_vm_:
$LN9@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
$LN17@simple_vm_:
$LN19@simple_vm_:
$LN21@simple_vm_:
; Line 418
  00452	e9 93 00 00 00	 jmp	 $LN3@simple_vm_
$LN23@simple_vm_:
; Line 420
  00457	ba 03 00 00 00	 mov	 edx, 3
  0045c	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  00464	e8 00 00 00 00	 call	 simple_list_isstring
  00469	83 f8 01	 cmp	 eax, 1
  0046c	75 68		 jne	 SHORT $LN2@simple_vm_
  0046e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00476	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0047d	83 f8 01	 cmp	 eax, 1
  00480	75 54		 jne	 SHORT $LN2@simple_vm_
; Line 421
  00482	ba 03 00 00 00	 mov	 edx, 3
  00487	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR var$[rsp]
  0048f	e8 00 00 00 00	 call	 simple_list_getitem
  00494	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00498	48 89 44 24 20	 mov	 QWORD PTR string$[rsp], rax
; Line 422
  0049d	4c 8d 44 24 30	 lea	 r8, QWORD PTR cStr$[rsp]
  004a2	f2 0f 10 8c 24
	d0 00 00 00	 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  004ab	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004b3	e8 00 00 00 00	 call	 simple_vm_numtostring
  004b8	4c 8b c0	 mov	 r8, rax
  004bb	48 8b 54 24 20	 mov	 rdx, QWORD PTR string$[rsp]
  004c0	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004c8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004cf	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 423
  004d4	eb 14		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 424
  004d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82635
  004dd	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004e5	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 427
  004ea	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  004f2	48 33 cc	 xor	 rcx, rsp
  004f5	e8 00 00 00 00	 call	 __security_check_cookie
  004fa	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  00501	c3		 ret	 0
simple_vm_beforeequallist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
vm$ = 64
list$ = 72
simple_vm_list_simpointercopy PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 364
$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 368
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00017	75 05		 jne	 SHORT $LN10@simple_vm_
; Line 369
  00019	e9 17 01 00 00	 jmp	 $LN11@simple_vm_
$LN10@simple_vm_:
; Line 371
  0001e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00026	eb 0a		 jmp	 SHORT $LN9@simple_vm_
$LN8@simple_vm_:
  00028	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0002c	ff c0		 inc	 eax
  0002e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN9@simple_vm_:
  00032	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00037	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0003e	7f 2f		 jg	 SHORT $LN7@simple_vm_
; Line 372
  00040	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00044	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00049	e8 00 00 00 00	 call	 simple_list_islist
  0004e	85 c0		 test	 eax, eax
  00050	74 1b		 je	 SHORT $LN6@simple_vm_
; Line 373
  00052	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00056	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0005b	e8 00 00 00 00	 call	 simple_list_getlist
  00060	48 8b d0	 mov	 rdx, rax
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00068	e8 00 00 00 00	 call	 simple_vm_list_simpointercopy
$LN6@simple_vm_:
; Line 375
  0006d	eb b9		 jmp	 SHORT $LN8@simple_vm_
$LN7@simple_vm_:
; Line 377
  0006f	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00074	83 78 10 03	 cmp	 DWORD PTR [rax+16], 3
  00078	0f 85 b7 00 00
	00		 jne	 $LN5@simple_vm_
; Line 378
  0007e	ba 01 00 00 00	 mov	 edx, 1
  00083	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00088	e8 00 00 00 00	 call	 simple_list_ispointer
  0008d	85 c0		 test	 eax, eax
  0008f	0f 84 a0 00 00
	00		 je	 $LN4@simple_vm_
  00095	ba 02 00 00 00	 mov	 edx, 2
  0009a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0009f	e8 00 00 00 00	 call	 simple_list_isstring
  000a4	85 c0		 test	 eax, eax
  000a6	0f 84 89 00 00
	00		 je	 $LN4@simple_vm_
  000ac	ba 03 00 00 00	 mov	 edx, 3
  000b1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000b6	e8 00 00 00 00	 call	 simple_list_getitem
  000bb	8b 00		 mov	 eax, DWORD PTR [rax]
  000bd	c1 e8 03	 shr	 eax, 3
  000c0	83 e0 03	 and	 eax, 3
  000c3	83 f8 01	 cmp	 eax, 1
  000c6	75 6d		 jne	 SHORT $LN4@simple_vm_
; Line 380
  000c8	ba 03 00 00 00	 mov	 edx, 3
  000cd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000d2	e8 00 00 00 00	 call	 simple_list_getitem
  000d7	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000db	75 24		 jne	 SHORT $LN3@simple_vm_
; Line 382
  000dd	41 b9 01 00 00
	00		 mov	 r9d, 1
  000e3	41 b8 03 00 00
	00		 mov	 r8d, 3
  000e9	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  000ee	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000fa	e8 00 00 00 00	 call	 simple_list_setint_gc
  000ff	eb 34		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 384
  00101	ba 03 00 00 00	 mov	 edx, 3
  00106	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0010b	e8 00 00 00 00	 call	 simple_list_getitem
  00110	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00114	75 1f		 jne	 SHORT $LN1@simple_vm_
; Line 386
  00116	45 33 c9	 xor	 r9d, r9d
  00119	41 b8 03 00 00
	00		 mov	 r8d, 3
  0011f	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00124	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00129	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00130	e8 00 00 00 00	 call	 simple_list_setint_gc
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN11@simple_vm_:
; Line 390
  00135	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00139	c3		 ret	 0
simple_vm_list_simpointercopy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
tv135 = 36
pNewList2$ = 40
vm$ = 64
pNewList$ = 72
list$ = 80
simple_vm_list_copy PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 315
$LN22:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 320
  00013	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  00018	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0001c	75 05		 jne	 SHORT $LN19@simple_vm_
; Line 321
  0001e	e9 10 03 00 00	 jmp	 $LN20@simple_vm_
$LN19@simple_vm_:
; Line 323
  00023	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0002b	eb 0a		 jmp	 SHORT $LN18@simple_vm_
$LN17@simple_vm_:
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00031	ff c0		 inc	 eax
  00033	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN18@simple_vm_:
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  0003c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003f	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00043	0f 8f 83 01 00
	00		 jg	 $LN16@simple_vm_
; Line 324
  00049	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0004d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00052	e8 00 00 00 00	 call	 simple_list_getitem
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	c1 e8 03	 shr	 eax, 3
  0005c	83 e0 03	 and	 eax, 3
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 2d		 jne	 SHORT $LN15@simple_vm_
; Line 325
  00064	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00068	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_getitem
  00072	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00076	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00080	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00087	e8 00 00 00 00	 call	 simple_list_addint_gc
  0008c	e9 36 01 00 00	 jmp	 $LN14@simple_vm_
$LN15@simple_vm_:
; Line 327
  00091	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00095	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0009a	e8 00 00 00 00	 call	 simple_list_getitem
  0009f	8b 00		 mov	 eax, DWORD PTR [rax]
  000a1	c1 e8 03	 shr	 eax, 3
  000a4	83 e0 03	 and	 eax, 3
  000a7	83 f8 02	 cmp	 eax, 2
  000aa	75 2e		 jne	 SHORT $LN13@simple_vm_
; Line 328
  000ac	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000b0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000b5	e8 00 00 00 00	 call	 simple_list_getitem
  000ba	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  000bf	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  000c4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000d0	e8 00 00 00 00	 call	 simple_list_adddouble_gc
  000d5	e9 ed 00 00 00	 jmp	 $LN12@simple_vm_
$LN13@simple_vm_:
; Line 330
  000da	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000de	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000e3	e8 00 00 00 00	 call	 simple_list_isstring
  000e8	85 c0		 test	 eax, eax
  000ea	74 52		 je	 SHORT $LN11@simple_vm_
; Line 331
  000ec	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000f5	e8 00 00 00 00	 call	 simple_list_getitem
  000fa	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000fe	e8 00 00 00 00	 call	 simple_string_size
  00103	89 44 24 24	 mov	 DWORD PTR tv135[rsp], eax
  00107	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00110	e8 00 00 00 00	 call	 simple_list_getitem
  00115	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00119	8b 4c 24 24	 mov	 ecx, DWORD PTR tv135[rsp]
  0011d	44 8b c9	 mov	 r9d, ecx
  00120	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00123	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00128	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0012d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00134	e8 00 00 00 00	 call	 simple_list_addstring2_gc
  00139	e9 89 00 00 00	 jmp	 $LN10@simple_vm_
$LN11@simple_vm_:
; Line 333
  0013e	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00142	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00147	e8 00 00 00 00	 call	 simple_list_ispointer
  0014c	85 c0		 test	 eax, eax
  0014e	74 2a		 je	 SHORT $LN9@simple_vm_
; Line 334
  00150	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00154	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00159	e8 00 00 00 00	 call	 simple_list_getitem
  0015e	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00162	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00167	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0016c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00173	e8 00 00 00 00	 call	 simple_list_addpointer_gc
  00178	eb 4d		 jmp	 SHORT $LN8@simple_vm_
$LN9@simple_vm_:
; Line 336
  0017a	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0017e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00183	e8 00 00 00 00	 call	 simple_list_islist
  00188	85 c0		 test	 eax, eax
  0018a	74 3b		 je	 SHORT $LN7@simple_vm_
; Line 337
  0018c	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00191	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00196	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0019d	e8 00 00 00 00	 call	 simple_list_newlist_gc
  001a2	48 89 44 24 28	 mov	 QWORD PTR pNewList2$[rsp], rax
; Line 338
  001a7	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  001ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  001b0	e8 00 00 00 00	 call	 simple_list_getlist
  001b5	4c 8b c0	 mov	 r8, rax
  001b8	48 8b 54 24 28	 mov	 rdx, QWORD PTR pNewList2$[rsp]
  001bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001c2	e8 00 00 00 00	 call	 simple_vm_list_copy
$LN7@simple_vm_:
$LN8@simple_vm_:
$LN10@simple_vm_:
$LN12@simple_vm_:
$LN14@simple_vm_:
; Line 340
  001c7	e9 61 fe ff ff	 jmp	 $LN17@simple_vm_
$LN16@simple_vm_:
; Line 342
  001cc	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  001d1	83 78 10 03	 cmp	 DWORD PTR [rax+16], 3
  001d5	0f 85 58 01 00
	00		 jne	 $LN6@simple_vm_
; Line 343
  001db	ba 01 00 00 00	 mov	 edx, 1
  001e0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  001e5	e8 00 00 00 00	 call	 simple_list_ispointer
  001ea	85 c0		 test	 eax, eax
  001ec	0f 84 41 01 00
	00		 je	 $LN5@simple_vm_
  001f2	ba 02 00 00 00	 mov	 edx, 2
  001f7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  001fc	e8 00 00 00 00	 call	 simple_list_isstring
  00201	85 c0		 test	 eax, eax
  00203	0f 84 2a 01 00
	00		 je	 $LN5@simple_vm_
  00209	ba 03 00 00 00	 mov	 edx, 3
  0020e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00213	e8 00 00 00 00	 call	 simple_list_getitem
  00218	8b 00		 mov	 eax, DWORD PTR [rax]
  0021a	c1 e8 03	 shr	 eax, 3
  0021d	83 e0 03	 and	 eax, 3
  00220	83 f8 01	 cmp	 eax, 1
  00223	0f 85 0a 01 00
	00		 jne	 $LN5@simple_vm_
; Line 345
  00229	ba 03 00 00 00	 mov	 edx, 3
  0022e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00233	e8 00 00 00 00	 call	 simple_list_getitem
  00238	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  0023c	0f 85 9e 00 00
	00		 jne	 $LN4@simple_vm_
; Line 347
  00242	41 b9 01 00 00
	00		 mov	 r9d, 1
  00248	41 b8 03 00 00
	00		 mov	 r8d, 3
  0024e	48 8b 54 24 50	 mov	 rdx, QWORD PTR list$[rsp]
  00253	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00258	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0025f	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 348
  00264	41 b9 01 00 00
	00		 mov	 r9d, 1
  0026a	41 b8 03 00 00
	00		 mov	 r8d, 3
  00270	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00275	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0027a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00281	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 350
  00286	ba 01 00 00 00	 mov	 edx, 1
  0028b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00290	e8 00 00 00 00	 call	 simple_list_getitem
  00295	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00299	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0029e	48 8b 88 38 19
	00 00		 mov	 rcx, QWORD PTR [rax+6456]
  002a5	e8 00 00 00 00	 call	 simple_list_findpointer
  002aa	85 c0		 test	 eax, eax
  002ac	75 30		 jne	 SHORT $LN3@simple_vm_
; Line 351
  002ae	ba 01 00 00 00	 mov	 edx, 1
  002b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  002b8	e8 00 00 00 00	 call	 simple_list_getitem
  002bd	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  002c1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002c6	48 8b 90 38 19
	00 00		 mov	 rdx, QWORD PTR [rax+6456]
  002cd	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002d2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002d9	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN3@simple_vm_:
; Line 352
  002de	eb 53		 jmp	 SHORT $LN2@simple_vm_
$LN4@simple_vm_:
; Line 354
  002e0	ba 03 00 00 00	 mov	 edx, 3
  002e5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  002ea	e8 00 00 00 00	 call	 simple_list_getitem
  002ef	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  002f3	75 3e		 jne	 SHORT $LN1@simple_vm_
; Line 356
  002f5	45 33 c9	 xor	 r9d, r9d
  002f8	41 b8 03 00 00
	00		 mov	 r8d, 3
  002fe	48 8b 54 24 50	 mov	 rdx, QWORD PTR list$[rsp]
  00303	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00308	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0030f	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 357
  00314	45 33 c9	 xor	 r9d, r9d
  00317	41 b8 03 00 00
	00		 mov	 r8d, 3
  0031d	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00322	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00327	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0032e	e8 00 00 00 00	 call	 simple_list_setint_gc
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN20@simple_vm_:
; Line 361
  00333	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00337	c3		 ret	 0
simple_vm_list_copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
list$ = 40
pointer$ = 48
vm$ = 80
simple_vm_setreference PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 285
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 293
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 03	 cmp	 eax, 3
  00028	74 0f		 je	 SHORT $LN1@simple_vm_
; Line 294
  0002a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002f	e8 00 00 00 00	 call	 simple_vm_assignment
; Line 295
  00034	e9 0f 01 00 00	 jmp	 $LN2@simple_vm_
$LN1@simple_vm_:
; Line 298
  00039	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00045	48 6b c0 18	 imul	 rax, 24
  00049	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0004e	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00053	48 89 44 24 30	 mov	 QWORD PTR pointer$[rsp], rax
; Line 299
  00058	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0005d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00064	48 6b c0 18	 imul	 rax, 24
  00068	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0006d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00071	c1 e8 05	 shr	 eax, 5
  00074	83 e0 03	 and	 eax, 3
  00077	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 300
  0007b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00080	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00087	fe c8		 dec	 al
  00089	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 302
  00094	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00099	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a0	48 6b c0 18	 imul	 rax, 24
  000a4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000a9	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000ae	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 303
  000b3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b8	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bf	fe c8		 dec	 al
  000c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 305
  000cc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000d1	e8 00 00 00 00	 call	 simple_vm_gc_checkupdatereference
; Line 307
  000d6	41 b9 04 00 00
	00		 mov	 r9d, 4
  000dc	41 b8 02 00 00
	00		 mov	 r8d, 2
  000e2	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000e7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ec	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000f3	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 308
  000f8	4c 8b 4c 24 30	 mov	 r9, QWORD PTR pointer$[rsp]
  000fd	41 b8 03 00 00
	00		 mov	 r8d, 3
  00103	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00108	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00114	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 309
  00119	44 8b 4c 24 20	 mov	 r9d, DWORD PTR nType$[rsp]
  0011e	41 b8 04 00 00
	00		 mov	 r8d, 4
  00124	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00129	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00135	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 311
  0013a	8b 54 24 20	 mov	 edx, DWORD PTR nType$[rsp]
  0013e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00143	e8 00 00 00 00	 call	 simple_vm_gc_checknewreference
$LN2@simple_vm_:
; Line 312
  00148	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0014c	c3		 ret	 0
simple_vm_setreference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nsp$ = 32
list$ = 40
vm$ = 64
simple_vm_freestack PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 242
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 246
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 c7 80 30 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6448], 0
; Line 248
  00019	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001e	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00031	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 250
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  00042	85 c0		 test	 eax, eax
  00044	74 69		 je	 SHORT $LN6@simple_vm_
; Line 262
  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004b	48 8b 80 c0 18
	00 00		 mov	 rax, QWORD PTR [rax+6336]
  00052	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005a	48 8b 88 c0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6336]
  00061	e8 00 00 00 00	 call	 simple_list_getlist
  00066	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 263
  0006b	ba 04 00 00 00	 mov	 edx, 4
  00070	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00075	e8 00 00 00 00	 call	 simple_list_getitem
  0007a	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0007d	89 44 24 20	 mov	 DWORD PTR nsp$[rsp], eax
; Line 264
  00081	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00086	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0008d	8b 4c 24 20	 mov	 ecx, DWORD PTR nsp$[rsp]
  00091	83 c1 64	 add	 ecx, 100		; 00000064H
  00094	3b c1		 cmp	 eax, ecx
  00096	7e 12		 jle	 SHORT $LN5@simple_vm_
; Line 265
  00098	8b 44 24 20	 mov	 eax, DWORD PTR nsp$[rsp]
  0009c	83 c0 64	 add	 eax, 100		; 00000064H
  0009f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a4	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
$LN5@simple_vm_:
; Line 267
  000aa	e9 8f 00 00 00	 jmp	 $LN7@simple_vm_
$LN6@simple_vm_:
; Line 269
  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b4	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  000bb	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  000bf	75 4a		 jne	 SHORT $LN4@simple_vm_
  000c1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f be 80 00 19
	00 00		 movsx	 eax, BYTE PTR [rax+6400]
  000cd	85 c0		 test	 eax, eax
  000cf	75 3a		 jne	 SHORT $LN4@simple_vm_
; Line 270
  000d1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000d6	c6 80 30 18 00
	00 00		 mov	 BYTE PTR [rax+6192], 0
; Line 271
  000dd	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e2	c7 80 90 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6288], 0
; Line 273
  000ec	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f1	48 8b 90 48 18
	00 00		 mov	 rdx, QWORD PTR [rax+6216]
  000f8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000fd	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00104	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 274
  00109	eb 33		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 275
  0010b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00110	0f be 80 00 19
	00 00		 movsx	 eax, BYTE PTR [rax+6400]
  00117	85 c0		 test	 eax, eax
  00119	75 19		 jne	 SHORT $LN2@simple_vm_
; Line 276
  0011b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00120	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00125	0f b6 89 90 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6288]
  0012c	88 88 30 18 00
	00		 mov	 BYTE PTR [rax+6192], cl
; Line 278
  00132	eb 0a		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 279
  00134	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00139	e8 00 00 00 00	 call	 simple_vm_oop_bracestack
$LN1@simple_vm_:
$LN3@simple_vm_:
$LN7@simple_vm_:
; Line 282
  0013e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00142	c3		 ret	 0
simple_vm_freestack ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_newline PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 236
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 237
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0002a	89 81 68 18 00
	00		 mov	 DWORD PTR [rcx+6248], eax
; Line 238
  00030	b2 01		 mov	 dl, 1
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00037	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 239
  0003c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00040	c3		 ret	 0
simple_vm_newline ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv150 = 32
var$ = 40
tv166 = 48
tv180 = 56
vm$ = 80
simple_vm_loadapushv PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 216
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 218
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_findvar
  00033	85 c0		 test	 eax, eax
  00035	75 2a		 jne	 SHORT $LN5@simple_vm_
; Line 219
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	48 6b c9 01	 imul	 rcx, 1
  0004c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00057	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_newvar
$LN5@simple_vm_:
; Line 221
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  0006d	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00071	75 7c		 jne	 SHORT $LN4@simple_vm_
  00073	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00078	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  0007d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00082	48 39 81 40 18
	00 00		 cmp	 QWORD PTR [rcx+6208], rax
  00089	75 64		 jne	 SHORT $LN4@simple_vm_
; Line 223
  0008b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00090	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00097	b9 08 00 00 00	 mov	 ecx, 8
  0009c	48 6b c9 00	 imul	 rcx, 0
  000a0	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000a4	c7 40 08 1f 00
	00 00		 mov	 DWORD PTR [rax+8], 31
; Line 224
  000ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b7	48 6b c0 18	 imul	 rax, 24
  000bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c0	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  000c7	ba 08 00 00 00	 mov	 edx, 8
  000cc	48 6b d2 01	 imul	 rdx, 1
  000d0	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  000d5	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  000da	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  000de	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ea	e8 00 00 00 00	 call	 simple_item_setpointer_gc
$LN4@simple_vm_:
; Line 226
  000ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fb	48 6b c0 18	 imul	 rax, 24
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00109	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 227
  0010e	ba 03 00 00 00	 mov	 edx, 3
  00113	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00118	e8 00 00 00 00	 call	 simple_list_isstring
  0011d	85 c0		 test	 eax, eax
  0011f	74 65		 je	 SHORT $LN3@simple_vm_
; Line 228
  00121	ba 03 00 00 00	 mov	 edx, 3
  00126	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0012b	e8 00 00 00 00	 call	 simple_list_getitem
  00130	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00134	e8 00 00 00 00	 call	 simple_string_size
  00139	89 44 24 20	 mov	 DWORD PTR tv150[rsp], eax
  0013d	ba 03 00 00 00	 mov	 edx, 3
  00142	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00147	e8 00 00 00 00	 call	 simple_list_getitem
  0014c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00150	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00155	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0015c	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00161	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00165	48 89 54 24 30	 mov	 QWORD PTR tv166[rsp], rdx
  0016a	44 8b 44 24 20	 mov	 r8d, DWORD PTR tv150[rsp]
  0016f	45 8b c8	 mov	 r9d, r8d
  00172	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00175	8b d1		 mov	 edx, ecx
  00177	48 8b 44 24 30	 mov	 rax, QWORD PTR tv166[rsp]
  0017c	48 8b c8	 mov	 rcx, rax
  0017f	e8 00 00 00 00	 call	 simple_itemarray_setstring2
  00184	eb 50		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 230
  00186	ba 03 00 00 00	 mov	 edx, 3
  0018b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00190	e8 00 00 00 00	 call	 simple_list_isnumber
  00195	85 c0		 test	 eax, eax
  00197	74 3d		 je	 SHORT $LN1@simple_vm_
; Line 231
  00199	ba 03 00 00 00	 mov	 edx, 3
  0019e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  001a3	e8 00 00 00 00	 call	 simple_list_getitem
  001a8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ad	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001b4	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  001b9	48 83 c2 30	 add	 rdx, 48			; 00000030H
  001bd	48 89 54 24 38	 mov	 QWORD PTR tv180[rsp], rdx
  001c2	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  001c7	8b d1		 mov	 edx, ecx
  001c9	48 8b 44 24 38	 mov	 rax, QWORD PTR tv180[rsp]
  001ce	48 8b c8	 mov	 rcx, rax
  001d1	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 233
  001d6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001da	c3		 ret	 0
simple_vm_loadapushv ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
vm$ = 64
simple_vm_inc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 200
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 202
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_findvar
  00033	85 c0		 test	 eax, eax
  00035	75 2a		 jne	 SHORT $LN2@simple_vm_
; Line 203
  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	48 6b c9 01	 imul	 rcx, 1
  0004c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00057	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_newvar
$LN2@simple_vm_:
; Line 205
  00061	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00066	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  0006d	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00071	75 7c		 jne	 SHORT $LN1@simple_vm_
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00078	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00082	48 39 81 40 18
	00 00		 cmp	 QWORD PTR [rcx+6208], rax
  00089	75 64		 jne	 SHORT $LN1@simple_vm_
; Line 207
  0008b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00090	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00097	b9 08 00 00 00	 mov	 ecx, 8
  0009c	48 6b c9 00	 imul	 rcx, 0
  000a0	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000a4	c7 40 08 28 00
	00 00		 mov	 DWORD PTR [rax+8], 40	; 00000028H
; Line 208
  000ab	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b7	48 6b c0 18	 imul	 rax, 24
  000bb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000c0	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  000c7	ba 08 00 00 00	 mov	 edx, 8
  000cc	48 6b d2 01	 imul	 rdx, 1
  000d0	4c 8b 44 24 40	 mov	 r8, QWORD PTR vm$[rsp]
  000d5	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  000da	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  000de	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ea	e8 00 00 00 00	 call	 simple_item_setpointer_gc
$LN1@simple_vm_:
; Line 210
  000ef	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fb	48 6b c0 18	 imul	 rax, 24
  000ff	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00109	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 211
  0010e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00113	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011a	fe c8		 dec	 al
  0011c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00121	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 212
  00127	ba 03 00 00 00	 mov	 edx, 3
  0012c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00131	e8 00 00 00 00	 call	 simple_list_getitem
  00136	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0013b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00143	0f 28 d8	 movaps	 xmm3, xmm0
  00146	41 b8 03 00 00
	00		 mov	 r8d, 3
  0014c	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  00151	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00156	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0015d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 213
  00162	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00166	c3		 ret	 0
simple_vm_inc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 48
string_one$ = 56
list$ = 64
nNum1$ = 72
string$ = 80
tv231 = 88
pItem$ = 96
vm$ = 128
simple_vm_assignment PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 102
$LN31:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; Line 107
  00009	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00011	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00018	ff c8		 dec	 eax
  0001a	48 98		 cdqe
  0001c	48 6b c0 18	 imul	 rax, 24
  00020	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00028	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0002c	c1 e8 05	 shr	 eax, 5
  0002f	83 e0 03	 and	 eax, 3
  00032	83 f8 03	 cmp	 eax, 3
  00035	75 3b		 jne	 SHORT $LN28@simple_vm_
; Line 108
  00037	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0003f	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00046	85 c0		 test	 eax, eax
  00048	75 0f		 jne	 SHORT $LN27@simple_vm_
; Line 109
  0004a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00052	e8 00 00 00 00	 call	 simple_vm_stsimple_assignment
; Line 110
  00057	eb 14		 jmp	 SHORT $LN26@simple_vm_
$LN27@simple_vm_:
; Line 111
  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82469
  00060	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00068	e8 00 00 00 00	 call	 simple_vm_error
$LN26@simple_vm_:
; Line 112
  0006d	e9 48 07 00 00	 jmp	 $LN25@simple_vm_
$LN28@simple_vm_:
; Line 114
  00072	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0007a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00081	ff c8		 dec	 eax
  00083	48 98		 cdqe
  00085	48 6b c0 18	 imul	 rax, 24
  00089	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00091	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00095	c1 e8 05	 shr	 eax, 5
  00098	83 e0 03	 and	 eax, 3
  0009b	83 f8 02	 cmp	 eax, 2
  0009e	75 12		 jne	 SHORT $LN24@simple_vm_
; Line 115
  000a0	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000a8	e8 00 00 00 00	 call	 simple_vm_listassignment
  000ad	e9 08 07 00 00	 jmp	 $LN23@simple_vm_
$LN24@simple_vm_:
; Line 117
  000b2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ba	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c1	ff c8		 dec	 eax
  000c3	48 98		 cdqe
  000c5	48 6b c0 18	 imul	 rax, 24
  000c9	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000d1	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000d5	c1 e8 05	 shr	 eax, 5
  000d8	83 e0 03	 and	 eax, 3
  000db	83 f8 01	 cmp	 eax, 1
  000de	0f 85 c2 06 00
	00		 jne	 $LN22@simple_vm_
; Line 118
  000e4	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ec	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000f3	48 6b c0 18	 imul	 rax, 24
  000f7	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000ff	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00103	83 e0 07	 and	 eax, 7
  00106	83 f8 01	 cmp	 eax, 1
  00109	0f 85 7d 02 00
	00		 jne	 $LN21@simple_vm_
  0010f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00117	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0011e	83 f8 01	 cmp	 eax, 1
  00121	0f 8f 65 02 00
	00		 jg	 $LN21@simple_vm_
; Line 119
  00127	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0012f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00136	48 6b c0 18	 imul	 rax, 24
  0013a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00142	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00147	e8 00 00 00 00	 call	 simple_string_size
  0014c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00154	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0015b	48 6b c9 18	 imul	 rcx, 24
  0015f	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00167	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0016c	44 8b c0	 mov	 r8d, eax
  0016f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00172	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0017a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00181	e8 00 00 00 00	 call	 simple_string_new2_gc
  00186	48 89 44 24 38	 mov	 QWORD PTR string_one$[rsp], rax
; Line 120
  0018b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00193	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0019a	fe c8		 dec	 al
  0019c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001a4	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 121
  001aa	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 6b c0 18	 imul	 rax, 24
  001bd	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001c5	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001ca	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 122
  001cf	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001de	fe c8		 dec	 al
  001e0	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001e8	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 123
  001ee	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001f6	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  001fd	85 c0		 test	 eax, eax
  001ff	75 5f		 jne	 SHORT $LN20@simple_vm_
; Line 124
  00201	41 b9 01 00 00
	00		 mov	 r9d, 1
  00207	41 b8 02 00 00
	00		 mov	 r8d, 2
  0020d	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00212	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00221	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 125
  00226	48 8b 4c 24 38	 mov	 rcx, QWORD PTR string_one$[rsp]
  0022b	e8 00 00 00 00	 call	 simple_string_size
  00230	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00234	48 8b 44 24 38	 mov	 rax, QWORD PTR string_one$[rsp]
  00239	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  0023c	41 b8 03 00 00
	00		 mov	 r8d, 3
  00242	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00247	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0024f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00256	e8 00 00 00 00	 call	 simple_list_setstring2_gc
; Line 126
  0025b	e9 0e 01 00 00	 jmp	 $LN19@simple_vm_
$LN20@simple_vm_:
; Line 128
  00260	ba 02 00 00 00	 mov	 edx, 2
  00265	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0026a	e8 00 00 00 00	 call	 simple_list_getitem
  0026f	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00273	75 2f		 jne	 SHORT $LN18@simple_vm_
; Line 129
  00275	ba 01 00 00 00	 mov	 edx, 1
  0027a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0027f	e8 00 00 00 00	 call	 simple_list_getitem
  00284	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00288	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0028b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82479
  00292	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0029a	e8 00 00 00 00	 call	 simple_vm_error2
; Line 130
  0029f	e9 38 05 00 00	 jmp	 $LN29@simple_vm_
$LN18@simple_vm_:
; Line 132
  002a4	ba 03 00 00 00	 mov	 edx, 3
  002a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_list_isstring
  002b3	85 c0		 test	 eax, eax
  002b5	74 48		 je	 SHORT $LN17@simple_vm_
; Line 133
  002b7	ba 03 00 00 00	 mov	 edx, 3
  002bc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  002c1	e8 00 00 00 00	 call	 simple_list_getitem
  002c6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002ca	48 89 44 24 50	 mov	 QWORD PTR string$[rsp], rax
; Line 134
  002cf	48 8b 4c 24 38	 mov	 rcx, QWORD PTR string_one$[rsp]
  002d4	e8 00 00 00 00	 call	 simple_string_size
  002d9	44 8b c8	 mov	 r9d, eax
  002dc	48 8b 44 24 38	 mov	 rax, QWORD PTR string_one$[rsp]
  002e1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002e4	48 8b 54 24 50	 mov	 rdx, QWORD PTR string$[rsp]
  002e9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002f1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002f8	e8 00 00 00 00	 call	 simple_string_add2_gc
  002fd	eb 6f		 jmp	 SHORT $LN16@simple_vm_
$LN17@simple_vm_:
; Line 136
  002ff	ba 03 00 00 00	 mov	 edx, 3
  00304	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  00309	e8 00 00 00 00	 call	 simple_list_isnumber
  0030e	85 c0		 test	 eax, eax
  00310	74 5c		 je	 SHORT $LN15@simple_vm_
; Line 137
  00312	ba 03 00 00 00	 mov	 edx, 3
  00317	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0031c	e8 00 00 00 00	 call	 simple_list_getitem
  00321	48 89 44 24 58	 mov	 QWORD PTR tv231[rsp], rax
  00326	48 8b 4c 24 38	 mov	 rcx, QWORD PTR string_one$[rsp]
  0032b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0032e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00336	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0033b	48 8b 44 24 58	 mov	 rax, QWORD PTR tv231[rsp]
  00340	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  00345	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00349	0f 28 c1	 movaps	 xmm0, xmm1
  0034c	0f 28 d8	 movaps	 xmm3, xmm0
  0034f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00355	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  0035a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00362	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00369	e8 00 00 00 00	 call	 simple_list_setdouble_gc
$LN15@simple_vm_:
$LN16@simple_vm_:
$LN19@simple_vm_:
; Line 140
  0036e	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  00373	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0037b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00382	e8 00 00 00 00	 call	 simple_string_delete_gc
  00387	e9 18 04 00 00	 jmp	 $LN14@simple_vm_
$LN21@simple_vm_:
; Line 142
  0038c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00394	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0039b	48 6b c0 18	 imul	 rax, 24
  0039f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003a7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003ab	83 e0 07	 and	 eax, 7
  003ae	83 f8 02	 cmp	 eax, 2
  003b1	0f 85 4a 01 00
	00		 jne	 $LN13@simple_vm_
; Line 143
  003b7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003bf	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003c6	48 6b c0 18	 imul	 rax, 24
  003ca	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003d2	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  003d8	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 144
  003de	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003e6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003ed	fe c8		 dec	 al
  003ef	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003f7	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 145
  003fd	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00405	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0040c	48 6b c0 18	 imul	 rax, 24
  00410	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00418	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0041d	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 146
  00422	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0042a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00431	fe c8		 dec	 al
  00433	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0043b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 147
  00441	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00449	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00450	85 c0		 test	 eax, eax
  00452	75 4c		 jne	 SHORT $LN12@simple_vm_
; Line 148
  00454	41 b9 02 00 00
	00		 mov	 r9d, 2
  0045a	41 b8 02 00 00
	00		 mov	 r8d, 2
  00460	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00465	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0046d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00474	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 149
  00479	f2 0f 10 5c 24
	48		 movsdx	 xmm3, QWORD PTR nNum1$[rsp]
  0047f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00485	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  0048a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00492	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00499	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 150
  0049e	eb 5c		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 152
  004a0	ba 02 00 00 00	 mov	 edx, 2
  004a5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  004aa	e8 00 00 00 00	 call	 simple_list_getitem
  004af	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  004b3	75 2f		 jne	 SHORT $LN10@simple_vm_
; Line 153
  004b5	ba 01 00 00 00	 mov	 edx, 1
  004ba	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  004bf	e8 00 00 00 00	 call	 simple_list_getitem
  004c4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004c8	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  004cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82489
  004d2	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004da	e8 00 00 00 00	 call	 simple_vm_error2
; Line 154
  004df	e9 f8 02 00 00	 jmp	 $LN29@simple_vm_
$LN10@simple_vm_:
; Line 156
  004e4	f2 0f 10 54 24
	48		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  004ea	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  004ef	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004f7	e8 00 00 00 00	 call	 simple_vm_beforeequallist
$LN11@simple_vm_:
; Line 157
  004fc	e9 a3 02 00 00	 jmp	 $LN9@simple_vm_
$LN13@simple_vm_:
; Line 159
  00501	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00509	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00510	48 6b c0 18	 imul	 rax, 24
  00514	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0051c	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00520	83 e0 07	 and	 eax, 7
  00523	83 f8 03	 cmp	 eax, 3
  00526	0f 85 64 02 00
	00		 jne	 $LN8@simple_vm_
  0052c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00534	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0053b	85 c0		 test	 eax, eax
  0053d	0f 85 4d 02 00
	00		 jne	 $LN8@simple_vm_
; Line 160
  00543	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0054b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00552	48 6b c0 18	 imul	 rax, 24
  00556	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0055e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00562	c1 e8 05	 shr	 eax, 5
  00565	83 e0 03	 and	 eax, 3
  00568	83 f8 01	 cmp	 eax, 1
  0056b	74 2e		 je	 SHORT $LN6@simple_vm_
  0056d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00575	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0057c	48 6b c0 18	 imul	 rax, 24
  00580	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00588	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0058c	c1 e8 05	 shr	 eax, 5
  0058f	83 e0 03	 and	 eax, 3
  00592	83 f8 02	 cmp	 eax, 2
  00595	0f 85 f3 01 00
	00		 jne	 $LN7@simple_vm_
$LN6@simple_vm_:
; Line 162
  0059b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005a3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  005aa	48 6b c0 18	 imul	 rax, 24
  005ae	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  005b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  005ba	c1 e8 05	 shr	 eax, 5
  005bd	83 e0 03	 and	 eax, 3
  005c0	83 f8 01	 cmp	 eax, 1
  005c3	75 31		 jne	 SHORT $LN5@simple_vm_
; Line 163
  005c5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005cd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  005d4	48 6b c0 18	 imul	 rax, 24
  005d8	ba 03 00 00 00	 mov	 edx, 3
  005dd	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  005e5	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  005ea	e8 00 00 00 00	 call	 simple_list_getlist
  005ef	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 164
  005f4	eb 33		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 165
  005f6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005fe	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00605	48 6b c0 18	 imul	 rax, 24
  00609	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00611	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00616	48 89 44 24 60	 mov	 QWORD PTR pItem$[rsp], rax
; Line 166
  0061b	48 8b 44 24 60	 mov	 rax, QWORD PTR pItem$[rsp]
  00620	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00624	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
$LN4@simple_vm_:
; Line 168
  00629	33 d2		 xor	 edx, edx
  0062b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00633	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0063a	e8 00 00 00 00	 call	 simple_list_new_gc
  0063f	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 169
  00644	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00649	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0064e	e8 00 00 00 00	 call	 simple_list_copy
; Line 174
  00653	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00658	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00660	e8 00 00 00 00	 call	 simple_vm_list_simpointercopy
; Line 175
  00665	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0066d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00674	fe c8		 dec	 al
  00676	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0067e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 176
  00684	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0068c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00693	48 6b c0 18	 imul	 rax, 24
  00697	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0069f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  006a4	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 177
  006a9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006b1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  006b8	fe c8		 dec	 al
  006ba	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  006c2	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 178
  006c8	41 b9 03 00 00
	00		 mov	 r9d, 3
  006ce	41 b8 02 00 00
	00		 mov	 r8d, 2
  006d4	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  006d9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006e1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006e8	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 179
  006ed	41 b8 03 00 00
	00		 mov	 r8d, 3
  006f3	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  006f8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00700	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00707	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 180
  0070c	ba 03 00 00 00	 mov	 edx, 3
  00711	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  00716	e8 00 00 00 00	 call	 simple_list_getlist
  0071b	4c 8b 44 24 40	 mov	 r8, QWORD PTR list$[rsp]
  00720	48 8b d0	 mov	 rdx, rax
  00723	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0072b	e8 00 00 00 00	 call	 simple_vm_list_copy
; Line 182
  00730	ba 03 00 00 00	 mov	 edx, 3
  00735	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0073a	e8 00 00 00 00	 call	 simple_list_getlist
  0073f	48 8b c8	 mov	 rcx, rax
  00742	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00747	85 c0		 test	 eax, eax
  00749	74 2a		 je	 SHORT $LN3@simple_vm_
; Line 183
  0074b	ba 03 00 00 00	 mov	 edx, 3
  00750	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  00755	e8 00 00 00 00	 call	 simple_list_getlist
  0075a	4c 8b 4c 24 30	 mov	 r9, QWORD PTR var$[rsp]
  0075f	41 b8 01 00 00
	00		 mov	 r8d, 1
  00765	48 8b d0	 mov	 rdx, rax
  00768	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00770	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
$LN3@simple_vm_:
; Line 185
  00775	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0077a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00782	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00789	e8 00 00 00 00	 call	 simple_list_delete_gc
$LN7@simple_vm_:
; Line 187
  0078e	eb 14		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 188
  00790	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82501
  00797	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0079f	e8 00 00 00 00	 call	 simple_vm_error
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN14@simple_vm_:
; Line 191
  007a4	eb 14		 jmp	 SHORT $LN1@simple_vm_
$LN22@simple_vm_:
; Line 192
  007a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82503
  007ad	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  007b5	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN23@simple_vm_:
$LN25@simple_vm_:
; Line 194
  007ba	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007c2	c6 80 49 19 00
	00 00		 mov	 BYTE PTR [rax+6473], 0
; Line 196
  007c9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007d1	48 c7 80 30 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6448], 0
$LN29@simple_vm_:
; Line 197
  007dc	48 83 c4 78	 add	 rsp, 120		; 00000078H
  007e0	c3		 ret	 0
simple_vm_assignment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_loadaddress PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 69
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 70
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_findvar
  00033	85 c0		 test	 eax, eax
  00035	75 6a		 jne	 SHORT $LN5@simple_vm_
; Line 71
  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	48 6b c9 01	 imul	 rcx, 1
  0004c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_newvar
; Line 73
  00061	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f be 80 10 19
	00 00		 movsx	 eax, BYTE PTR [rax+6416]
  0006d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00072	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00079	48 6b c9 18	 imul	 rcx, 24
  0007d	44 8b c8	 mov	 r9d, eax
  00080	41 b8 05 00 00
	00		 mov	 r8d, 5
  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0008b	48 8b 54 08 38	 mov	 rdx, QWORD PTR [rax+rcx+56]
  00090	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00095	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0009c	e8 00 00 00 00	 call	 simple_list_setint_gc
$LN5@simple_vm_:
; Line 76
  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000a6	0f be 80 48 19
	00 00		 movsx	 eax, BYTE PTR [rax+6472]
  000ad	83 f8 01	 cmp	 eax, 1
  000b0	75 05		 jne	 SHORT $LN4@simple_vm_
; Line 77
  000b2	e9 82 01 00 00	 jmp	 $LN6@simple_vm_
$LN4@simple_vm_:
; Line 79
  000b7	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000bc	83 b8 e8 18 00
	00 03		 cmp	 DWORD PTR [rax+6376], 3
  000c3	75 69		 jne	 SHORT $LN3@simple_vm_
; Line 81
  000c5	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000d1	b9 08 00 00 00	 mov	 ecx, 8
  000d6	48 6b c9 00	 imul	 rcx, 0
  000da	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000de	c7 40 08 1e 00
	00 00		 mov	 DWORD PTR [rax+8], 30
; Line 82
  000e5	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000ea	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000f1	48 6b c0 18	 imul	 rax, 24
  000f5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  000fa	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  00101	ba 08 00 00 00	 mov	 edx, 8
  00106	48 6b d2 01	 imul	 rdx, 1
  0010a	4c 8b 44 24 30	 mov	 r8, QWORD PTR vm$[rsp]
  0010f	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  00114	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00118	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0011d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00124	e8 00 00 00 00	 call	 simple_item_setpointer_gc
  00129	e9 e2 00 00 00	 jmp	 $LN2@simple_vm_
$LN3@simple_vm_:
; Line 84
  0012e	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00133	83 b8 e8 18 00
	00 01		 cmp	 DWORD PTR [rax+6376], 1
  0013a	0f 85 d0 00 00
	00		 jne	 $LN1@simple_vm_
; Line 86
  00140	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00145	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0014c	b9 08 00 00 00	 mov	 ecx, 8
  00151	48 6b c9 00	 imul	 rcx, 0
  00155	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00159	c7 40 08 20 00
	00 00		 mov	 DWORD PTR [rax+8], 32	; 00000020H
; Line 87
  00160	ba 03 00 00 00	 mov	 edx, 3
  00165	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 88
  0016f	ba 04 00 00 00	 mov	 edx, 4
  00174	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00179	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 89
  0017e	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00183	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0018a	48 6b c0 18	 imul	 rax, 24
  0018e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00193	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  0019a	ba 08 00 00 00	 mov	 edx, 8
  0019f	48 6b d2 03	 imul	 rdx, 3
  001a3	4c 8b 44 24 30	 mov	 r8, QWORD PTR vm$[rsp]
  001a8	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  001ad	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001b1	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  001b6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001bd	e8 00 00 00 00	 call	 simple_item_setpointer_gc
; Line 90
  001c2	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  001c7	48 8b 80 f0 18
	00 00		 mov	 rax, QWORD PTR [rax+6384]
  001ce	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  001d6	48 8b 88 f0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6384]
  001dd	e8 00 00 00 00	 call	 simple_list_getitem
  001e2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  001e7	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  001ee	ba 08 00 00 00	 mov	 edx, 8
  001f3	48 6b d2 04	 imul	 rdx, 4
  001f7	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  001fb	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001ff	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00204	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0020b	e8 00 00 00 00	 call	 simple_item_setint_gc
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 98
  00210	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00215	44 8b 80 e8 18
	00 00		 mov	 r8d, DWORD PTR [rax+6376]
  0021c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00221	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  00228	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0022d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00234	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN6@simple_vm_:
; Line 99
  00239	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0023d	c3		 ret	 0
simple_vm_loadaddress ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv199 = 32
var$ = 40
tv215 = 48
tv229 = 56
list$ = 64
vm$ = 96
simple_vm_pushv PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmstackvars.c
; Line 20
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 23
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0001a	3b 81 90 18 00
	00		 cmp	 eax, DWORD PTR [rcx+6288]
  00020	7f 05		 jg	 SHORT $LN17@simple_vm_
; Line 25
  00022	e9 ee 02 00 00	 jmp	 $LN18@simple_vm_
$LN17@simple_vm_:
; Line 27
  00027	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0002c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00033	48 6b c0 18	 imul	 rax, 24
  00037	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0003c	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00040	c1 e8 05	 shr	 eax, 5
  00043	83 e0 03	 and	 eax, 3
  00046	83 f8 03	 cmp	 eax, 3
  00049	75 0f		 jne	 SHORT $LN16@simple_vm_
; Line 28
  0004b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00050	e8 00 00 00 00	 call	 simple_vm_stsimple_pushv
  00055	e9 bb 02 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 30
  0005a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0005f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00066	48 6b c0 18	 imul	 rax, 24
  0006a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0006f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00073	c1 e8 05	 shr	 eax, 5
  00076	83 e0 03	 and	 eax, 3
  00079	83 f8 02	 cmp	 eax, 2
  0007c	75 0f		 jne	 SHORT $LN14@simple_vm_
; Line 31
  0007e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00083	e8 00 00 00 00	 call	 simple_vm_listpushv
  00088	e9 88 02 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 33
  0008d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00092	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00099	48 6b c0 18	 imul	 rax, 24
  0009d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000a2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000a6	c1 e8 05	 shr	 eax, 5
  000a9	83 e0 03	 and	 eax, 3
  000ac	83 f8 01	 cmp	 eax, 1
  000af	0f 85 60 02 00
	00		 jne	 $LN12@simple_vm_
; Line 34
  000b5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ba	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c1	48 6b c0 18	 imul	 rax, 24
  000c5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ca	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ce	83 e0 07	 and	 eax, 7
  000d1	83 f8 03	 cmp	 eax, 3
  000d4	0f 85 3b 02 00
	00		 jne	 $LN11@simple_vm_
; Line 35
  000da	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000df	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e6	48 6b c0 18	 imul	 rax, 24
  000ea	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ef	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000f4	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 37
  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000fe	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  00105	85 c0		 test	 eax, eax
  00107	0f 85 05 01 00
	00		 jne	 $LN10@simple_vm_
; Line 38
  0010d	ba 02 00 00 00	 mov	 edx, 2
  00112	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00117	e8 00 00 00 00	 call	 simple_list_getitem
  0011c	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00120	0f 85 ec 00 00
	00		 jne	 $LN9@simple_vm_
; Line 39
  00126	ba 03 00 00 00	 mov	 edx, 3
  0012b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00130	e8 00 00 00 00	 call	 simple_list_isstring
  00135	85 c0		 test	 eax, eax
  00137	0f 84 d5 00 00
	00		 je	 $LN8@simple_vm_
; Line 40
  0013d	ba 03 00 00 00	 mov	 edx, 3
  00142	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00147	e8 00 00 00 00	 call	 simple_list_getitem
  0014c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00150	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82440
  00157	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0015a	e8 00 00 00 00	 call	 strcmp
  0015f	85 c0		 test	 eax, eax
  00161	0f 85 ab 00 00
	00		 jne	 $LN7@simple_vm_
; Line 41
  00167	ba 01 00 00 00	 mov	 edx, 1
  0016c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00171	e8 00 00 00 00	 call	 simple_list_getitem
  00176	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0017a	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82441
  00184	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00189	e8 00 00 00 00	 call	 simple_vm_error2
; Line 42
  0018e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00193	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  0019a	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0019d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a2	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  001a9	e8 00 00 00 00	 call	 simple_list_getlist
  001ae	48 3b 44 24 28	 cmp	 rax, QWORD PTR var$[rsp]
  001b3	75 58		 jne	 SHORT $LN6@simple_vm_
; Line 44
  001b5	ba 01 00 00 00	 mov	 edx, 1
  001ba	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  001bf	e8 00 00 00 00	 call	 simple_list_getitem
  001c4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001c8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	48 8b 89 40 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6208]
  001d4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d7	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  001db	e8 00 00 00 00	 call	 simple_hashtable_deleteitem
; Line 45
  001e0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001e5	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  001ec	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  001f0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001f5	48 8b 90 40 18
	00 00		 mov	 rdx, QWORD PTR [rax+6208]
  001fc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00201	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00208	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN6@simple_vm_:
; Line 47
  0020d	e9 03 01 00 00	 jmp	 $LN18@simple_vm_
$LN7@simple_vm_:
$LN8@simple_vm_:
$LN9@simple_vm_:
$LN10@simple_vm_:
; Line 53
  00212	ba 03 00 00 00	 mov	 edx, 3
  00217	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0021c	e8 00 00 00 00	 call	 simple_list_isstring
  00221	85 c0		 test	 eax, eax
  00223	74 68		 je	 SHORT $LN5@simple_vm_
; Line 54
  00225	ba 03 00 00 00	 mov	 edx, 3
  0022a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0022f	e8 00 00 00 00	 call	 simple_list_getitem
  00234	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00238	e8 00 00 00 00	 call	 simple_string_size
  0023d	89 44 24 20	 mov	 DWORD PTR tv199[rsp], eax
  00241	ba 03 00 00 00	 mov	 edx, 3
  00246	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0024b	e8 00 00 00 00	 call	 simple_list_getitem
  00250	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00254	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00260	48 8b 54 24 60	 mov	 rdx, QWORD PTR vm$[rsp]
  00265	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00269	48 89 54 24 30	 mov	 QWORD PTR tv215[rsp], rdx
  0026e	44 8b 44 24 20	 mov	 r8d, DWORD PTR tv199[rsp]
  00273	45 8b c8	 mov	 r9d, r8d
  00276	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00279	8b d1		 mov	 edx, ecx
  0027b	48 8b 44 24 30	 mov	 rax, QWORD PTR tv215[rsp]
  00280	48 8b c8	 mov	 rcx, rax
  00283	e8 00 00 00 00	 call	 simple_itemarray_setstring2
  00288	e9 88 00 00 00	 jmp	 $LN4@simple_vm_
$LN5@simple_vm_:
; Line 56
  0028d	ba 03 00 00 00	 mov	 edx, 3
  00292	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00297	e8 00 00 00 00	 call	 simple_list_isnumber
  0029c	85 c0		 test	 eax, eax
  0029e	74 3f		 je	 SHORT $LN3@simple_vm_
; Line 57
  002a0	ba 03 00 00 00	 mov	 edx, 3
  002a5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  002aa	e8 00 00 00 00	 call	 simple_list_getitem
  002af	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002b4	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  002bb	48 8b 54 24 60	 mov	 rdx, QWORD PTR vm$[rsp]
  002c0	48 83 c2 30	 add	 rdx, 48			; 00000030H
  002c4	48 89 54 24 38	 mov	 QWORD PTR tv229[rsp], rdx
  002c9	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  002ce	8b d1		 mov	 edx, ecx
  002d0	48 8b 44 24 38	 mov	 rax, QWORD PTR tv229[rsp]
  002d5	48 8b c8	 mov	 rcx, rax
  002d8	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  002dd	eb 36		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 59
  002df	ba 03 00 00 00	 mov	 edx, 3
  002e4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  002e9	e8 00 00 00 00	 call	 simple_list_islist
  002ee	85 c0		 test	 eax, eax
  002f0	74 23		 je	 SHORT $LN1@simple_vm_
; Line 61
  002f2	ba 03 00 00 00	 mov	 edx, 3
  002f7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  002fc	e8 00 00 00 00	 call	 simple_list_getlist
  00301	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 62
  00306	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0030b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00310	e8 00 00 00 00	 call	 simple_vm_oop_setbraceobj
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
$LN18@simple_vm_:
; Line 66
  00315	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00319	c3		 ret	 0
simple_vm_pushv ENDP
_TEXT	ENDS
END
