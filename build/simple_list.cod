; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG83184 DB	01H DUP (?)
?nullstring@?1??simple_list_getstringcolumn@@9@9 DB 01H DUP (?) ; `simple_list_getstringcolumn'::`2'::nullstring
$SG83204 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG83223 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82433 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82450 DB	'OUT OF MEMEORY ', 0aH, '  ', 00H
	ORG $+1
$SG83536 DB	'one', 00H
$SG83498 DB	'Create new list, size = 10 ', 0aH, 00H
	ORG $+3
$SG83499 DB	'List(1) size %d    ', 0aH, 00H
	ORG $+3
$SG83500 DB	'Create empty list ', 0aH, 00H
$SG82512 DB	'%c', 00H
	ORG $+1
$SG83501 DB	'adding 15 items to the list ', 0aH, 00H
	ORG $+2
$SG83505 DB	'x : %d  ', 0aH, 00H
	ORG $+2
$SG83537 DB	'two', 00H
$SG83506 DB	'List(2) size %d    ', 0aH, 00H
	ORG $+3
$SG83510 DB	'The Item Number %d', 00H
	ORG $+1
$SG82513 DB	0aH, 00H
	ORG $+2
$SG83514 DB	'Delete item number 5 ', 0aH, 00H
	ORG $+1
$SG83515 DB	'Delete item number 1 ', 0aH, 00H
	ORG $+1
$SG83516 DB	'Delete item number %d ', 0aH, 00H
$SG83517 DB	'get item number %d ', 0aH, 00H
	ORG $+3
$SG83518 DB	'Deleting List 1 ', 0aH, 00H
	ORG $+2
$SG83544 DB	'item 1', 00H
	ORG $+1
$SG82524 DB	'%d', 0aH, 00H
$SG83519 DB	'Deleting List 2 ', 0aH, 00H
	ORG $+2
$SG83545 DB	'item 2', 00H
	ORG $+1
$SG82532 DB	'%p', 0aH, 00H
$SG83520 DB	'Create List of 1000000 Items  ', 0aH, 00H
$SG83521 DB	'Before Loop  ', 0aH, 00H
	ORG $+1
$SG83525 DB	'empty item', 00H
	ORG $+5
$SG83526 DB	'Done  ', 0aH, 00H
$SG83527 DB	'Deleting List 1 ', 0aH, 00H
	ORG $+6
$SG83529 DB	'Item (2) Item (1) ', 00H
	ORG $+5
$SG83528 DB	'List = {''first item'',{''item (2) item(1)'',''item(2) i'
	DB	'tem(2)''},''lastitem'' , 50 , Pointer to int } ', 0aH, '  ', 00H
	ORG $+5
$SG83530 DB	'Item (2) Item (2) ', 00H
	ORG $+5
$SG83531 DB	'last item', 00H
	ORG $+6
$SG83532 DB	'Printing list ', 0aH, '  ', 00H
	ORG $+6
$SG83533 DB	0aH, ' Copy List1 to List 2 ', 0aH, '  ', 00H
	ORG $+5
$SG83534 DB	0aH, ' Printing List 2 ', 0aH, '  ', 00H
	ORG $+2
$SG83535 DB	0aH, ' use simple_list_setstring and simple_list_getstrin'
	DB	'g  ', 0aH, 00H
	ORG $+3
$SG83538 DB	'three', 00H
	ORG $+6
$SG83542 DB	'Item Number %d = %s  ', 0aH, 00H
	ORG $+1
$SG83543 DB	'using simple_list_addstring  ', 0aH, 00H
	ORG $+1
$SG82519 DB	'%.0f', 0aH, 00H
	ORG $+2
$SG82521 DB	'%.2f', 0aH, 00H
	ORG $+2
$SG83546 DB	'item 3', 00H
	ORG $+1
$SG83547 DB	'item 4', 00H
	ORG $+1
$SG83548 DB	'item 5', 00H
	ORG $+1
$SG83552 DB	'Item Number %d = %s  ', 0aH, 00H
	ORG $+1
$SG83553 DB	'Item Number 1 = %s  ', 0aH, 00H
	ORG $+2
$SG83554 DB	'Item Number 5 = %s  ', 0aH, 00H
	ORG $+2
$SG83555 DB	'Item Number 4 = %s  ', 0aH, 00H
	ORG $+2
$SG83556 DB	'Item Number 3 = %s  ', 0aH, 00H
	ORG $+2
$SG83557 DB	'Item Number 3 = %s  ', 0aH, 00H
	ORG $+2
$SG83558 DB	'Item Number 2 = %s  ', 0aH, 00H
	ORG $+2
$SG83559 DB	'Item Number 3 = %s  ', 0aH, 00H
	ORG $+2
$SG83560 DB	' *** Test Block Pointer *** ', 00H
	ORG $+3
$SG82827 DB	' Message from a block called by block pointer  ', 00H
$SG82828 DB	'List Size %d  ', 0aH, 00H
_DATA	ENDS
PUBLIC	simple_list_new_gc
PUBLIC	simple_list_new2_gc
PUBLIC	simple_list_newitem_gc
PUBLIC	simple_list_test
PUBLIC	simple_list_getitem
PUBLIC	simple_list_delete_gc
PUBLIC	simple_list_deleteitem_gc
PUBLIC	simple_list_print
PUBLIC	simple_list_gettype
PUBLIC	simple_list_setint_gc
PUBLIC	simple_list_addint_gc
PUBLIC	simple_list_setpointer_gc
PUBLIC	simple_list_addpointer_gc
PUBLIC	simple_list_setblockpointer_gc
PUBLIC	simple_list_addblockpointer_gc
PUBLIC	simple_list_isblockpointer
PUBLIC	simple_list_testblockpointer
PUBLIC	simple_list_setdouble_gc
PUBLIC	simple_list_adddouble_gc
PUBLIC	simple_list_setstsimple_gc
PUBLIC	simple_list_setstring2_gc
PUBLIC	simple_list_addstring_gc
PUBLIC	simple_list_addstring2_gc
PUBLIC	simple_list_newlist_gc
PUBLIC	simple_list_setlist_gc
PUBLIC	simple_list_getlist
PUBLIC	simple_list_setactiveitem
PUBLIC	simple_list_copy_gc
PUBLIC	simple_list_isnumber
PUBLIC	simple_list_isstring
PUBLIC	simple_list_islist
PUBLIC	simple_list_ispointer
PUBLIC	simple_list_deleteallitems_gc
PUBLIC	simple_list_insertitem_gc
PUBLIC	simple_list_insertint_gc
PUBLIC	simple_list_insertdouble_gc
PUBLIC	simple_list_insertpointer_gc
PUBLIC	simple_list_insertstsimple_gc
PUBLIC	simple_list_insertstring2_gc
PUBLIC	simple_list_insertblockpointer_gc
PUBLIC	simple_list_insertlist_gc
PUBLIC	simple_list_isiteminsidelist
PUBLIC	simple_list_findstring
PUBLIC	simple_list_finddouble
PUBLIC	simple_list_findpointer
PUBLIC	simple_list_findinlistofobjs
PUBLIC	simple_list_findcpointer
PUBLIC	simple_list_sortnum
PUBLIC	simple_list_sortstr_gc
PUBLIC	simple_list_binarysearchnum
PUBLIC	simple_list_binarysearchstr
PUBLIC	simple_list_swap
PUBLIC	simple_list_getdoublecolumn
PUBLIC	simple_list_getstringcolumn
PUBLIC	simple_list_genarray_gc
PUBLIC	simple_list_deletearray_gc
PUBLIC	simple_list_genhashtable_gc
PUBLIC	simple_list_genhashtable2_gc
PUBLIC	simple_list_refcopy
PUBLIC	simple_list_clear
PUBLIC	simple_list_deliteminsidelist
PUBLIC	simple_list_new
PUBLIC	simple_list_genarray
PUBLIC	simple_list_delete
PUBLIC	simple_list_deletearray
PUBLIC	simple_list_newitem
PUBLIC	simple_list_deleteitem
PUBLIC	simple_list_setint
PUBLIC	simple_list_addint
PUBLIC	simple_list_setpointer
PUBLIC	simple_list_addpointer
PUBLIC	simple_list_setblockpointer
PUBLIC	simple_list_addblockpointer
PUBLIC	simple_list_setdouble
PUBLIC	simple_list_adddouble
PUBLIC	simple_list_setstring
PUBLIC	simple_list_setstring2
PUBLIC	simple_list_addstring
PUBLIC	simple_list_addstring2
PUBLIC	simple_list_newlist
PUBLIC	simple_list_setlist
PUBLIC	simple_list_copy
PUBLIC	simple_list_deleteallitems
PUBLIC	simple_list_insertitem
PUBLIC	simple_list_insertint
PUBLIC	simple_list_insertdouble
PUBLIC	simple_list_insertpointer
PUBLIC	simple_list_insertstring
PUBLIC	simple_list_insertstring2
PUBLIC	simple_list_insertblockpointer
PUBLIC	simple_list_insertlist
PUBLIC	simple_list_sortstr
PUBLIC	simple_list_genhashtable
PUBLIC	simple_list_genhashtable2
EXTRN	exit:PROC
EXTRN	getchar:PROC
EXTRN	printf:PROC
EXTRN	puts:PROC
EXTRN	sprintf:PROC
EXTRN	strcmp:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_string_set_gc:PROC
EXTRN	simple_string_set2_gc:PROC
EXTRN	simple_string_print:PROC
EXTRN	simple_string_lower:PROC
EXTRN	simple_string_set:PROC
EXTRN	simple_item_settype_gc:PROC
EXTRN	simple_item_settype:PROC
EXTRN	simple_items_new_gc:PROC
EXTRN	simple_items_delete_gc:PROC
EXTRN	simple_hashtable_new_gc:PROC
EXTRN	simple_hashtable_newnumber_gc:PROC
EXTRN	simple_hashtable_newpointer_gc:PROC
EXTRN	simple_hashtable_delete_gc:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_printobj:PROC
EXTRN	simple_state_malloc:PROC
EXTRN	simple_state_free:PROC
EXTRN	api_iscpointer_list:PROC
EXTRN	api_cpointer_cmp:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_list_new_gc DD imagerel $LN4
	DD	imagerel $LN4+85
	DD	imagerel $unwind$simple_list_new_gc
$pdata$simple_list_new2_gc DD imagerel $LN9
	DD	imagerel $LN9+294
	DD	imagerel $unwind$simple_list_new2_gc
$pdata$simple_list_newitem_gc DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$simple_list_newitem_gc
$pdata$simple_list_test DD imagerel $LN21
	DD	imagerel $LN21+2061
	DD	imagerel $unwind$simple_list_test
$pdata$simple_list_getitem DD imagerel $LN29
	DD	imagerel $LN29+812
	DD	imagerel $unwind$simple_list_getitem
$pdata$simple_list_delete_gc DD imagerel $LN6
	DD	imagerel $LN6+175
	DD	imagerel $unwind$simple_list_delete_gc
$pdata$simple_list_deleteitem_gc DD imagerel $LN13
	DD	imagerel $LN13+356
	DD	imagerel $unwind$simple_list_deleteitem_gc
$pdata$simple_list_print DD imagerel $LN24
	DD	imagerel $LN24+556
	DD	imagerel $unwind$simple_list_print
$pdata$simple_list_gettype DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$simple_list_gettype
$pdata$simple_list_setint_gc DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$simple_list_setint_gc
$pdata$simple_list_addint_gc DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$simple_list_addint_gc
$pdata$simple_list_setpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$simple_list_setpointer_gc
$pdata$simple_list_addpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$simple_list_addpointer_gc
$pdata$simple_list_setblockpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$simple_list_setblockpointer_gc
$pdata$simple_list_addblockpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$simple_list_addblockpointer_gc
$pdata$simple_list_isblockpointer DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$simple_list_isblockpointer
$pdata$simple_list_testblockpointer DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$simple_list_testblockpointer
$pdata$simple_list_setdouble_gc DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$simple_list_setdouble_gc
$pdata$simple_list_adddouble_gc DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$simple_list_adddouble_gc
$pdata$simple_list_setstsimple_gc DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$simple_list_setstsimple_gc
$pdata$simple_list_setstring2_gc DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$simple_list_setstring2_gc
$pdata$simple_list_addstring_gc DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$simple_list_addstring_gc
$pdata$simple_list_addstring2_gc DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$simple_list_addstring2_gc
$pdata$simple_list_newlist_gc DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$simple_list_newlist_gc
$pdata$simple_list_setlist_gc DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$simple_list_setlist_gc
$pdata$simple_list_getlist DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$simple_list_getlist
$pdata$simple_list_copy_gc DD imagerel $LN16
	DD	imagerel $LN16+427
	DD	imagerel $unwind$simple_list_copy_gc
$pdata$simple_list_isnumber DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$simple_list_isnumber
$pdata$simple_list_isstring DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$simple_list_isstring
$pdata$simple_list_islist DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$simple_list_islist
$pdata$simple_list_ispointer DD imagerel $LN4
	DD	imagerel $LN4+46
	DD	imagerel $unwind$simple_list_ispointer
$pdata$simple_list_deleteallitems_gc DD imagerel $LN7
	DD	imagerel $LN7+221
	DD	imagerel $unwind$simple_list_deleteallitems_gc
$pdata$simple_list_insertitem_gc DD imagerel $LN8
	DD	imagerel $LN8+296
	DD	imagerel $unwind$simple_list_insertitem_gc
$pdata$simple_list_insertint_gc DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$simple_list_insertint_gc
$pdata$simple_list_insertdouble_gc DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$simple_list_insertdouble_gc
$pdata$simple_list_insertpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$simple_list_insertpointer_gc
$pdata$simple_list_insertstsimple_gc DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$simple_list_insertstsimple_gc
$pdata$simple_list_insertstring2_gc DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$simple_list_insertstring2_gc
$pdata$simple_list_insertblockpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$simple_list_insertblockpointer_gc
$pdata$simple_list_insertlist_gc DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$simple_list_insertlist_gc
$pdata$simple_list_isiteminsidelist DD imagerel $LN9
	DD	imagerel $LN9+153
	DD	imagerel $unwind$simple_list_isiteminsidelist
$pdata$simple_list_findstring DD imagerel $LN18
	DD	imagerel $LN18+309
	DD	imagerel $unwind$simple_list_findstring
$pdata$simple_list_finddouble DD imagerel $LN18
	DD	imagerel $LN18+316
	DD	imagerel $unwind$simple_list_finddouble
$pdata$simple_list_findpointer DD imagerel $LN8
	DD	imagerel $LN8+106
	DD	imagerel $unwind$simple_list_findpointer
$pdata$simple_list_findinlistofobjs DD imagerel $LN17
	DD	imagerel $LN17+398
	DD	imagerel $unwind$simple_list_findinlistofobjs
$pdata$simple_list_findcpointer DD imagerel $LN18
	DD	imagerel $LN18+305
	DD	imagerel $unwind$simple_list_findcpointer
$pdata$simple_list_sortnum DD imagerel $LN12
	DD	imagerel $LN12+358
	DD	imagerel $unwind$simple_list_sortnum
$pdata$simple_list_sortstr_gc DD imagerel $LN12
	DD	imagerel $LN12+439
	DD	imagerel $unwind$simple_list_sortstr_gc
$pdata$simple_list_binarysearchnum DD imagerel $LN9
	DD	imagerel $LN9+188
	DD	imagerel $unwind$simple_list_binarysearchnum
$pdata$simple_list_binarysearchstr DD imagerel $LN9
	DD	imagerel $LN9+169
	DD	imagerel $unwind$simple_list_binarysearchstr
$pdata$simple_list_swap DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$simple_list_swap
$pdata$simple_list_getdoublecolumn DD imagerel $LN10
	DD	imagerel $LN10+315
	DD	imagerel $unwind$simple_list_getdoublecolumn
$pdata$simple_list_getstringcolumn DD imagerel $LN10
	DD	imagerel $LN10+316
	DD	imagerel $unwind$simple_list_getstringcolumn
$pdata$simple_list_genarray_gc DD imagerel $LN9
	DD	imagerel $LN9+206
	DD	imagerel $unwind$simple_list_genarray_gc
$pdata$simple_list_deletearray_gc DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$simple_list_deletearray_gc
$pdata$simple_list_genhashtable_gc DD imagerel $LN7
	DD	imagerel $LN7+159
	DD	imagerel $unwind$simple_list_genhashtable_gc
$pdata$simple_list_genhashtable2_gc DD imagerel $LN7
	DD	imagerel $LN7+179
	DD	imagerel $unwind$simple_list_genhashtable2_gc
$pdata$simple_list_deliteminsidelist DD imagerel $LN9
	DD	imagerel $LN9+170
	DD	imagerel $unwind$simple_list_deliteminsidelist
$pdata$simple_list_new DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$simple_list_new
$pdata$simple_list_genarray DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_genarray
$pdata$simple_list_delete DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_delete
$pdata$simple_list_deletearray DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_deletearray
$pdata$simple_list_newitem DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_newitem
$pdata$simple_list_deleteitem DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_list_deleteitem
$pdata$simple_list_setint DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_setint
$pdata$simple_list_addint DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_list_addint
$pdata$simple_list_setpointer DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_setpointer
$pdata$simple_list_addpointer DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_list_addpointer
$pdata$simple_list_setblockpointer DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_setblockpointer
$pdata$simple_list_addblockpointer DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_list_addblockpointer
$pdata$simple_list_setdouble DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$simple_list_setdouble
$pdata$simple_list_adddouble DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$simple_list_adddouble
$pdata$simple_list_setstring DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_setstring
$pdata$simple_list_setstring2 DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$simple_list_setstring2
$pdata$simple_list_addstring DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_list_addstring
$pdata$simple_list_addstring2 DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$simple_list_addstring2
$pdata$simple_list_newlist DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_newlist
$pdata$simple_list_setlist DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_list_setlist
$pdata$simple_list_copy DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_list_copy
$pdata$simple_list_deleteallitems DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_deleteallitems
$pdata$simple_list_insertitem DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_list_insertitem
$pdata$simple_list_insertint DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_insertint
$pdata$simple_list_insertdouble DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$simple_list_insertdouble
$pdata$simple_list_insertpointer DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_insertpointer
$pdata$simple_list_insertstring DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_insertstring
$pdata$simple_list_insertstring2 DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$simple_list_insertstring2
$pdata$simple_list_insertblockpointer DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$simple_list_insertblockpointer
$pdata$simple_list_insertlist DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_list_insertlist
$pdata$simple_list_sortstr DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$simple_list_sortstr
$pdata$simple_list_genhashtable DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_genhashtable
$pdata$simple_list_genhashtable2 DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_list_genhashtable2
pdata	ENDS
xdata	SEGMENT
$unwind$simple_list_new_gc DD 010d01H
	DD	0620dH
$unwind$simple_list_new2_gc DD 011301H
	DD	08213H
$unwind$simple_list_newitem_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_test DD 011319H
	DD	0e204H
	DD	imagerel __GSHandlerCheck
	DD	060H
$unwind$simple_list_getitem DD 010d01H
	DD	0420dH
$unwind$simple_list_delete_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_deleteitem_gc DD 011301H
	DD	08213H
$unwind$simple_list_print DD 010901H
	DD	0a209H
$unwind$simple_list_gettype DD 010d01H
	DD	0620dH
$unwind$simple_list_setint_gc DD 011801H
	DD	06218H
$unwind$simple_list_addint_gc DD 011301H
	DD	04213H
$unwind$simple_list_setpointer_gc DD 011801H
	DD	06218H
$unwind$simple_list_addpointer_gc DD 011301H
	DD	04213H
$unwind$simple_list_setblockpointer_gc DD 011801H
	DD	06218H
$unwind$simple_list_addblockpointer_gc DD 011301H
	DD	04213H
$unwind$simple_list_isblockpointer DD 010d01H
	DD	0420dH
$unwind$simple_list_testblockpointer DD 010901H
	DD	06209H
$unwind$simple_list_setdouble_gc DD 011901H
	DD	06219H
$unwind$simple_list_adddouble_gc DD 011401H
	DD	04214H
$unwind$simple_list_setstsimple_gc DD 011801H
	DD	06218H
$unwind$simple_list_setstring2_gc DD 011801H
	DD	06218H
$unwind$simple_list_addstring_gc DD 011301H
	DD	04213H
$unwind$simple_list_addstring2_gc DD 011801H
	DD	06218H
$unwind$simple_list_newlist_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_setlist_gc DD 011301H
	DD	06213H
$unwind$simple_list_getlist DD 010d01H
	DD	0620dH
$unwind$simple_list_copy_gc DD 011301H
	DD	06213H
$unwind$simple_list_isnumber DD 010d01H
	DD	0420dH
$unwind$simple_list_isstring DD 010d01H
	DD	0420dH
$unwind$simple_list_islist DD 010d01H
	DD	0420dH
$unwind$simple_list_ispointer DD 010d01H
	DD	0420dH
$unwind$simple_list_deleteallitems_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_insertitem_gc DD 011301H
	DD	06213H
$unwind$simple_list_insertint_gc DD 011801H
	DD	04218H
$unwind$simple_list_insertdouble_gc DD 011901H
	DD	04219H
$unwind$simple_list_insertpointer_gc DD 011801H
	DD	04218H
$unwind$simple_list_insertstsimple_gc DD 011801H
	DD	04218H
$unwind$simple_list_insertstring2_gc DD 011801H
	DD	06218H
$unwind$simple_list_insertblockpointer_gc DD 011801H
	DD	04218H
$unwind$simple_list_insertlist_gc DD 011301H
	DD	06213H
$unwind$simple_list_isiteminsidelist DD 010e01H
	DD	0820eH
$unwind$simple_list_findstring DD 011301H
	DD	06213H
$unwind$simple_list_finddouble DD 011401H
	DD	06214H
$unwind$simple_list_findpointer DD 010e01H
	DD	0620eH
$unwind$simple_list_findinlistofobjs DD 011801H
	DD	08218H
$unwind$simple_list_findcpointer DD 011301H
	DD	08213H
$unwind$simple_list_sortnum DD 011701H
	DD	0a217H
$unwind$simple_list_sortstr_gc DD 011801H
	DD	0a218H
$unwind$simple_list_binarysearchnum DD 011901H
	DD	06219H
$unwind$simple_list_binarysearchstr DD 011801H
	DD	06218H
$unwind$simple_list_swap DD 011201H
	DD	06212H
$unwind$simple_list_getdoublecolumn DD 011701H
	DD	06217H
$unwind$simple_list_getstringcolumn DD 011701H
	DD	06217H
$unwind$simple_list_genarray_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_deletearray_gc DD 010e01H
	DD	0420eH
$unwind$simple_list_genhashtable_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_genhashtable2_gc DD 010e01H
	DD	0620eH
$unwind$simple_list_deliteminsidelist DD 010e01H
	DD	0820eH
$unwind$simple_list_new DD 010801H
	DD	04208H
$unwind$simple_list_genarray DD 010901H
	DD	04209H
$unwind$simple_list_delete DD 010901H
	DD	04209H
$unwind$simple_list_deletearray DD 010901H
	DD	04209H
$unwind$simple_list_newitem DD 010901H
	DD	04209H
$unwind$simple_list_deleteitem DD 010d01H
	DD	0420dH
$unwind$simple_list_setint DD 011201H
	DD	04212H
$unwind$simple_list_addint DD 010d01H
	DD	0420dH
$unwind$simple_list_setpointer DD 011201H
	DD	04212H
$unwind$simple_list_addpointer DD 010e01H
	DD	0420eH
$unwind$simple_list_setblockpointer DD 011201H
	DD	04212H
$unwind$simple_list_addblockpointer DD 010e01H
	DD	0420eH
$unwind$simple_list_setdouble DD 011301H
	DD	04213H
$unwind$simple_list_adddouble DD 010f01H
	DD	0420fH
$unwind$simple_list_setstring DD 011201H
	DD	04212H
$unwind$simple_list_setstring2 DD 011701H
	DD	06217H
$unwind$simple_list_addstring DD 010e01H
	DD	0420eH
$unwind$simple_list_addstring2 DD 011301H
	DD	04213H
$unwind$simple_list_newlist DD 010901H
	DD	04209H
$unwind$simple_list_setlist DD 010d01H
	DD	0420dH
$unwind$simple_list_copy DD 010e01H
	DD	0420eH
$unwind$simple_list_deleteallitems DD 010901H
	DD	04209H
$unwind$simple_list_insertitem DD 010d01H
	DD	0420dH
$unwind$simple_list_insertint DD 011201H
	DD	04212H
$unwind$simple_list_insertdouble DD 011301H
	DD	04213H
$unwind$simple_list_insertpointer DD 011201H
	DD	04212H
$unwind$simple_list_insertstring DD 011201H
	DD	04212H
$unwind$simple_list_insertstring2 DD 011701H
	DD	06217H
$unwind$simple_list_insertblockpointer DD 011201H
	DD	04212H
$unwind$simple_list_insertlist DD 010d01H
	DD	0420dH
$unwind$simple_list_sortstr DD 011701H
	DD	06217H
$unwind$simple_list_genhashtable DD 010901H
	DD	04209H
$unwind$simple_list_genhashtable2 DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_genhashtable2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1263
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1264
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_genhashtable2_gc
; Line 1265
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_genhashtable2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_genhashtable PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1258
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1259
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_genhashtable_gc
; Line 1260
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_genhashtable ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 64
left$ = 72
right$ = 80
nColumn$ = 88
cAttribute$ = 96
simple_list_sortstr PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1252
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1253
  00017	48 8b 44 24 60	 mov	 rax, QWORD PTR cAttribute$[rsp]
  0001c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00021	8b 44 24 58	 mov	 eax, DWORD PTR nColumn$[rsp]
  00025	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00029	44 8b 4c 24 50	 mov	 r9d, DWORD PTR right$[rsp]
  0002e	44 8b 44 24 48	 mov	 r8d, DWORD PTR left$[rsp]
  00033	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  00038	33 c9		 xor	 ecx, ecx
  0003a	e8 00 00 00 00	 call	 simple_list_sortstr_gc
; Line 1254
  0003f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00043	c3		 ret	 0
simple_list_sortstr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
simple_list_insertlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1247
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1248
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_list_insertlist_gc
; Line 1249
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_list_insertlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
pBlock$ = 64
simple_list_insertblockpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1242
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1243
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pBlock$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_insertblockpointer_gc
; Line 1244
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_insertblockpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 64
nPos$ = 72
str$ = 80
str_size$ = 88
simple_list_insertstring2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1237
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1238
  00017	8b 44 24 58	 mov	 eax, DWORD PTR str_size$[rsp]
  0001b	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0001f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR str$[rsp]
  00024	44 8b 44 24 48	 mov	 r8d, DWORD PTR nPos$[rsp]
  00029	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 simple_list_insertstring2_gc
; Line 1239
  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
simple_list_insertstring2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
str$ = 64
simple_list_insertstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1232
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1233
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR str$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_insertstsimple_gc
; Line 1234
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_insertstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
pValue$ = 64
simple_list_insertpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1227
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1228
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pValue$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_insertpointer_gc
; Line 1229
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_insertpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
x$ = 64
simple_list_insertdouble PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1222
$LN3:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1223
  00013	f2 0f 10 5c 24
	40		 movsdx	 xmm3, QWORD PTR x$[rsp]
  00019	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00023	33 c9		 xor	 ecx, ecx
  00025	e8 00 00 00 00	 call	 simple_list_insertdouble_gc
; Line 1224
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
simple_list_insertdouble ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
nPos$ = 56
x$ = 64
simple_list_insertint PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1217
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1218
  00012	44 8b 4c 24 40	 mov	 r9d, DWORD PTR x$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_insertint_gc
; Line 1219
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_insertint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
x$ = 56
simple_list_insertitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1212
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1213
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR x$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 1214
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_list_insertitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_deleteallitems PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1206
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1207
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 1208
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_deleteallitems ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pNewList$ = 48
list$ = 56
simple_list_copy PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1201
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1202
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR list$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_list_copy_gc
; Line 1203
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_list_copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_setlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1196
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1197
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 1198
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_list_setlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_newlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1191
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1192
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_newlist_gc
; Line 1193
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_newlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
str$ = 56
str_size$ = 64
simple_list_addstring2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1185
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1186
  00013	44 8b 4c 24 40	 mov	 r9d, DWORD PTR str_size$[rsp]
  00018	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  0001d	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00022	33 c9		 xor	 ecx, ecx
  00024	e8 00 00 00 00	 call	 simple_list_addstring2_gc
; Line 1187
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_addstring2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
str$ = 56
simple_list_addstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1180
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1181
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1182
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_list_addstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 64
index$ = 72
str$ = 80
str_size$ = 88
simple_list_setstring2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1175
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1176
  00017	8b 44 24 58	 mov	 eax, DWORD PTR str_size$[rsp]
  0001b	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0001f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR str$[rsp]
  00024	44 8b 44 24 48	 mov	 r8d, DWORD PTR index$[rsp]
  00029	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 simple_list_setstring2_gc
; Line 1177
  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
simple_list_setstring2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
str$ = 64
simple_list_setstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1170
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1171
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR str$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 1172
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_setstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
x$ = 56
simple_list_adddouble PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1164
$LN3:
  00000	f2 0f 11 4c 24
	10		 movsdx	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1165
  0000f	f2 0f 10 54 24
	38		 movsdx	 xmm2, QWORD PTR x$[rsp]
  00015	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0001a	33 c9		 xor	 ecx, ecx
  0001c	e8 00 00 00 00	 call	 simple_list_adddouble_gc
; Line 1166
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
simple_list_adddouble ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
number$ = 64
simple_list_setdouble PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1159
$LN3:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1160
  00013	f2 0f 10 5c 24
	40		 movsdx	 xmm3, QWORD PTR number$[rsp]
  00019	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  0001e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00023	33 c9		 xor	 ecx, ecx
  00025	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 1161
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	c3		 ret	 0
simple_list_setdouble ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
pBlock$ = 56
simple_list_addblockpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1153
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1154
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR pBlock$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_list_addblockpointer_gc
; Line 1155
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_list_addblockpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
pBlock$ = 64
simple_list_setblockpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1148
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1149
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pBlock$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_setblockpointer_gc
; Line 1150
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_setblockpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
pValue$ = 56
simple_list_addpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1142
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1143
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR pValue$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 1144
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_list_addpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
pValue$ = 64
simple_list_setpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1137
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1138
  00012	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pValue$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1139
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_setpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
x$ = 56
simple_list_addint PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1131
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1132
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR x$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 1133
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_list_addint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
number$ = 64
simple_list_setint PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1126
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1127
  00012	44 8b 4c 24 40	 mov	 r9d, DWORD PTR number$[rsp]
  00017	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  0001c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00021	33 c9		 xor	 ecx, ecx
  00023	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1128
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	c3		 ret	 0
simple_list_setint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_deleteitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1120
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1121
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR index$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 1122
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_list_deleteitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_newitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1115
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1116
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 1117
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_newitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_deletearray PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1110
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1111
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_deletearray_gc
; Line 1112
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_deletearray ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_delete PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1105
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1106
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 1107
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_delete ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_list_genarray PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1100
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1101
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_list_genarray_gc
; Line 1102
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_list_genarray ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nSize$ = 48
simple_list_new PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1095
$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1096
  00008	8b 54 24 30	 mov	 edx, DWORD PTR nSize$[rsp]
  0000c	33 c9		 xor	 ecx, ecx
  0000e	e8 00 00 00 00	 call	 simple_list_new_gc
; Line 1097
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
simple_list_new ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pItem2$ = 40
list2$ = 48
list$ = 80
pItem$ = 88
simple_list_deliteminsidelist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 646
$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 650
  0000e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00016	eb 0a		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
  00018	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001c	ff c0		 inc	 eax
  0001e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_lis:
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  00027	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0002e	7f 73		 jg	 SHORT $LN4@simple_lis
; Line 651
  00030	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00034	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00039	e8 00 00 00 00	 call	 simple_list_getitem
  0003e	48 89 44 24 28	 mov	 QWORD PTR pItem2$[rsp], rax
; Line 652
  00043	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem2$[rsp]
  00048	48 39 44 24 58	 cmp	 QWORD PTR pItem$[rsp], rax
  0004d	75 15		 jne	 SHORT $LN3@simple_lis
; Line 653
  0004f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00053	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00058	e8 00 00 00 00	 call	 simple_list_deleteitem
; Line 654
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	eb 41		 jmp	 SHORT $LN7@simple_lis
$LN3@simple_lis:
; Line 656
  00064	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00068	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_islist
  00072	85 c0		 test	 eax, eax
  00074	74 28		 je	 SHORT $LN2@simple_lis
; Line 657
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem2$[rsp]
  0007b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007f	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 658
  00084	48 8b 54 24 58	 mov	 rdx, QWORD PTR pItem$[rsp]
  00089	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0008e	e8 00 00 00 00	 call	 simple_list_isiteminsidelist
  00093	85 c0		 test	 eax, eax
  00095	74 07		 je	 SHORT $LN1@simple_lis
; Line 659
  00097	b8 01 00 00 00	 mov	 eax, 1
  0009c	eb 07		 jmp	 SHORT $LN7@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 662
  0009e	e9 75 ff ff ff	 jmp	 $LN5@simple_lis
$LN4@simple_lis:
; Line 663
  000a3	33 c0		 xor	 eax, eax
$LN7@simple_lis:
; Line 664
  000a5	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000a9	c3		 ret	 0
simple_list_deliteminsidelist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 8
simple_list_clear PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1083
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 1084
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  0000a	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
; Line 1085
  00011	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  00016	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; Line 1086
  0001e	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  00023	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0
; Line 1087
  0002a	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  0002f	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0
; Line 1088
  00036	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  0003b	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 1089
  00043	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  00048	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
; Line 1090
  00050	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  00055	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0
; Line 1091
  0005d	c3		 ret	 0
simple_list_clear ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pNewList$ = 8
list$ = 16
simple_list_refcopy PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1072
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 1073
  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00014	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00017	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 1074
  0001a	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  0001f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00024	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00028	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 1075
  0002c	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  00031	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00036	8b 49 10	 mov	 ecx, DWORD PTR [rcx+16]
  00039	89 48 10	 mov	 DWORD PTR [rax+16], ecx
; Line 1076
  0003c	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  00041	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00046	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  00049	89 48 14	 mov	 DWORD PTR [rax+20], ecx
; Line 1077
  0004c	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  00051	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00056	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0005a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 1078
  0005e	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  00063	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  00068	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0006c	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; Line 1079
  00070	48 8b 44 24 08	 mov	 rax, QWORD PTR pNewList$[rsp]
  00075	48 8b 4c 24 10	 mov	 rcx, QWORD PTR list$[rsp]
  0007a	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0007e	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
; Line 1080
  00082	c3		 ret	 0
simple_list_refcopy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list2$ = 40
pState$ = 64
list$ = 72
simple_list_genhashtable2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1056
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1060
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00018	74 1c		 je	 SHORT $LN4@simple_lis
; Line 1061
  0001a	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0001f	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00028	e8 00 00 00 00	 call	 simple_hashtable_delete_gc
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00032	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
$LN4@simple_lis:
; Line 1063
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_hashtable_new_gc
  00040	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; Line 1064
  00049	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00051	eb 0a		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
  00053	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00057	ff c0		 inc	 eax
  00059	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_lis:
  0005d	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00062	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00065	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00069	7f 43		 jg	 SHORT $LN1@simple_lis
; Line 1065
  0006b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0006f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00074	e8 00 00 00 00	 call	 simple_list_getlist
  00079	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 1066
  0007e	ba 01 00 00 00	 mov	 edx, 1
  00083	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00088	e8 00 00 00 00	 call	 simple_list_getitem
  0008d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00091	4c 8b 4c 24 28	 mov	 r9, QWORD PTR list2$[rsp]
  00096	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00099	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0009e	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  000a2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  000a7	e8 00 00 00 00	 call	 simple_hashtable_newpointer_gc
; Line 1067
  000ac	eb a5		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 1068
  000ae	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000b2	c3		 ret	 0
simple_list_genhashtable2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pState$ = 64
list$ = 72
simple_list_genhashtable_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1044
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1046
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00018	74 1c		 je	 SHORT $LN4@simple_lis
; Line 1047
  0001a	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0001f	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00028	e8 00 00 00 00	 call	 simple_hashtable_delete_gc
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00032	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
$LN4@simple_lis:
; Line 1049
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_hashtable_new_gc
  00040	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00045	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; Line 1050
  00049	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00051	eb 0a		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
  00053	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00057	ff c0		 inc	 eax
  00059	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_lis:
  0005d	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00062	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00065	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00069	7f 2f		 jg	 SHORT $LN1@simple_lis
; Line 1051
  0006b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0006f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00074	e8 00 00 00 00	 call	 simple_list_getitem
  00079	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007d	44 8b 4c 24 20	 mov	 r9d, DWORD PTR x$[rsp]
  00082	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00085	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0008a	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0008e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00093	e8 00 00 00 00	 call	 simple_hashtable_newnumber_gc
; Line 1052
  00098	eb b9		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 1053
  0009a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009e	c3		 ret	 0
simple_list_genhashtable_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
simple_list_deletearray_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1035
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1036
  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  00013	48 83 78 20 00	 cmp	 QWORD PTR [rax+32], 0
  00018	74 20		 je	 SHORT $LN1@simple_lis
; Line 1037
  0001a	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0001f	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00028	e8 00 00 00 00	 call	 simple_state_free
; Line 1038
  0002d	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  00032	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
$LN1@simple_lis:
; Line 1040
  0003a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003e	c3		 ret	 0
simple_list_deletearray_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pArray$ = 40
pState$ = 64
list$ = 72
simple_list_genarray_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1009
$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1012
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00017	75 05		 jne	 SHORT $LN6@simple_lis
; Line 1013
  00019	e9 ab 00 00 00	 jmp	 $LN7@simple_lis
$LN6@simple_lis:
; Line 1015
  0001e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00023	48 83 78 20 00	 cmp	 QWORD PTR [rax+32], 0
  00028	74 13		 je	 SHORT $LN5@simple_lis
; Line 1016
  0002a	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0002f	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00038	e8 00 00 00 00	 call	 simple_state_free
$LN5@simple_lis:
; Line 1023
  0003d	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00042	48 63 40 10	 movsxd	 rax, DWORD PTR [rax+16]
  00046	48 c1 e0 03	 shl	 rax, 3
  0004a	48 8b d0	 mov	 rdx, rax
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00052	e8 00 00 00 00	 call	 simple_state_malloc
  00057	48 89 44 24 28	 mov	 QWORD PTR pArray$[rsp], rax
; Line 1024
  0005c	48 83 7c 24 28
	00		 cmp	 QWORD PTR pArray$[rsp], 0
  00062	75 13		 jne	 SHORT $LN4@simple_lis
; Line 1025
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83223
  0006b	e8 00 00 00 00	 call	 printf
; Line 1026
  00070	33 c9		 xor	 ecx, ecx
  00072	e8 00 00 00 00	 call	 exit
$LN4@simple_lis:
; Line 1028
  00077	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0007f	eb 0a		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
  00081	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00085	ff c0		 inc	 eax
  00087	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_lis:
  0008b	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00090	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00093	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00097	7f 22		 jg	 SHORT $LN1@simple_lis
; Line 1029
  00099	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0009d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000a2	e8 00 00 00 00	 call	 simple_list_getitem
  000a7	8b 4c 24 20	 mov	 ecx, DWORD PTR x$[rsp]
  000ab	ff c9		 dec	 ecx
  000ad	48 63 c9	 movsxd	 rcx, ecx
  000b0	48 8b 54 24 28	 mov	 rdx, QWORD PTR pArray$[rsp]
  000b5	48 89 04 ca	 mov	 QWORD PTR [rdx+rcx*8], rax
; Line 1030
  000b9	eb c6		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 1031
  000bb	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  000c0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pArray$[rsp]
  000c5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN7@simple_lis:
$LN8@simple_lis:
; Line 1032
  000c9	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000cd	c3		 ret	 0
simple_list_genarray_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nPos$ = 32
list$ = 64
nIndex$ = 72
nColumn$ = 80
cAttribute$ = 88
simple_list_getstringcolumn PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 979
$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 982
  00017	83 7c 24 50 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  0001c	75 1f		 jne	 SHORT $LN7@simple_lis
; Line 983
  0001e	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_getitem
  0002c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00030	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00033	e9 ff 00 00 00	 jmp	 $LN8@simple_lis
; Line 985
  00038	e9 f3 00 00 00	 jmp	 $LN6@simple_lis
$LN7@simple_lis:
; Line 986
  0003d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83204
  00044	48 8b 4c 24 58	 mov	 rcx, QWORD PTR cAttribute$[rsp]
  00049	e8 00 00 00 00	 call	 strcmp
  0004e	85 c0		 test	 eax, eax
  00050	75 2b		 jne	 SHORT $LN5@simple_lis
; Line 987
  00052	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  00056	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005b	e8 00 00 00 00	 call	 simple_list_getlist
  00060	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 simple_list_getitem
  0006c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00070	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00073	e9 bf 00 00 00	 jmp	 $LN8@simple_lis
; Line 989
  00078	e9 b3 00 00 00	 jmp	 $LN4@simple_lis
$LN5@simple_lis:
; Line 990
  0007d	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  00081	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00086	e8 00 00 00 00	 call	 simple_list_getlist
  0008b	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 991
  00090	83 7c 24 50 01	 cmp	 DWORD PTR nColumn$[rsp], 1
  00095	7e 13		 jle	 SHORT $LN3@simple_lis
; Line 992
  00097	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000a0	e8 00 00 00 00	 call	 simple_list_getlist
  000a5	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
$LN3@simple_lis:
; Line 994
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000af	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000b4	85 c0		 test	 eax, eax
  000b6	74 78		 je	 SHORT $LN2@simple_lis
; Line 995
  000b8	ba 02 00 00 00	 mov	 edx, 2
  000bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_list_getlist
  000c7	41 b8 01 00 00
	00		 mov	 r8d, 1
  000cd	48 8b 54 24 58	 mov	 rdx, QWORD PTR cAttribute$[rsp]
  000d2	48 8b c8	 mov	 rcx, rax
  000d5	e8 00 00 00 00	 call	 simple_list_findstring
  000da	89 44 24 20	 mov	 DWORD PTR nPos$[rsp], eax
; Line 996
  000de	ba 02 00 00 00	 mov	 edx, 2
  000e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000e8	e8 00 00 00 00	 call	 simple_list_getlist
  000ed	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 997
  000f2	8b 54 24 20	 mov	 edx, DWORD PTR nPos$[rsp]
  000f6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000fb	e8 00 00 00 00	 call	 simple_list_getlist
  00100	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 998
  00105	ba 03 00 00 00	 mov	 edx, 3
  0010a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0010f	e8 00 00 00 00	 call	 simple_list_isstring
  00114	85 c0		 test	 eax, eax
  00116	74 18		 je	 SHORT $LN1@simple_lis
; Line 999
  00118	ba 03 00 00 00	 mov	 edx, 3
  0011d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00122	e8 00 00 00 00	 call	 simple_list_getitem
  00127	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0012b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012e	eb 07		 jmp	 SHORT $LN8@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
$LN4@simple_lis:
$LN6@simple_lis:
; Line 1004
  00130	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?nullstring@?1??simple_list_getstringcolumn@@9@9
$LN8@simple_lis:
; Line 1005
  00137	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0013b	c3		 ret	 0
simple_list_getstringcolumn ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nPos$ = 32
list$ = 64
nIndex$ = 72
nColumn$ = 80
cAttribute$ = 88
simple_list_getdoublecolumn PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 951
$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 953
  00017	83 7c 24 50 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  0001c	75 1d		 jne	 SHORT $LN7@simple_lis
; Line 954
  0001e	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_getitem
  0002c	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00031	e9 00 01 00 00	 jmp	 $LN8@simple_lis
; Line 956
  00036	e9 f8 00 00 00	 jmp	 $LN6@simple_lis
$LN7@simple_lis:
; Line 957
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83184
  00042	48 8b 4c 24 58	 mov	 rcx, QWORD PTR cAttribute$[rsp]
  00047	e8 00 00 00 00	 call	 strcmp
  0004c	85 c0		 test	 eax, eax
  0004e	75 29		 jne	 SHORT $LN5@simple_lis
; Line 958
  00050	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00059	e8 00 00 00 00	 call	 simple_list_getlist
  0005e	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 simple_list_getitem
  0006a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0006f	e9 c2 00 00 00	 jmp	 $LN8@simple_lis
; Line 960
  00074	e9 ba 00 00 00	 jmp	 $LN4@simple_lis
$LN5@simple_lis:
; Line 961
  00079	8b 54 24 48	 mov	 edx, DWORD PTR nIndex$[rsp]
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00082	e8 00 00 00 00	 call	 simple_list_getlist
  00087	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 962
  0008c	83 7c 24 50 01	 cmp	 DWORD PTR nColumn$[rsp], 1
  00091	7e 13		 jle	 SHORT $LN3@simple_lis
; Line 963
  00093	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0009c	e8 00 00 00 00	 call	 simple_list_getlist
  000a1	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
$LN3@simple_lis:
; Line 965
  000a6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000ab	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000b0	85 c0		 test	 eax, eax
  000b2	74 7f		 je	 SHORT $LN2@simple_lis
; Line 966
  000b4	ba 02 00 00 00	 mov	 edx, 2
  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000be	e8 00 00 00 00	 call	 simple_list_getlist
  000c3	41 b8 01 00 00
	00		 mov	 r8d, 1
  000c9	48 8b 54 24 58	 mov	 rdx, QWORD PTR cAttribute$[rsp]
  000ce	48 8b c8	 mov	 rcx, rax
  000d1	e8 00 00 00 00	 call	 simple_list_findstring
  000d6	89 44 24 20	 mov	 DWORD PTR nPos$[rsp], eax
; Line 967
  000da	ba 02 00 00 00	 mov	 edx, 2
  000df	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000e4	e8 00 00 00 00	 call	 simple_list_getlist
  000e9	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 968
  000ee	8b 54 24 20	 mov	 edx, DWORD PTR nPos$[rsp]
  000f2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000f7	e8 00 00 00 00	 call	 simple_list_getlist
  000fc	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 969
  00101	ba 03 00 00 00	 mov	 edx, 3
  00106	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0010b	e8 00 00 00 00	 call	 simple_list_getitem
  00110	8b 00		 mov	 eax, DWORD PTR [rax]
  00112	c1 e8 03	 shr	 eax, 3
  00115	83 e0 03	 and	 eax, 3
  00118	83 f8 02	 cmp	 eax, 2
  0011b	75 16		 jne	 SHORT $LN1@simple_lis
; Line 970
  0011d	ba 03 00 00 00	 mov	 edx, 3
  00122	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00127	e8 00 00 00 00	 call	 simple_list_getitem
  0012c	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00131	eb 03		 jmp	 SHORT $LN8@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
$LN4@simple_lis:
$LN6@simple_lis:
; Line 975
  00133	0f 57 c0	 xorps	 xmm0, xmm0
$LN8@simple_lis:
; Line 976
  00136	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0013a	c3		 ret	 0
simple_list_getdoublecolumn ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItems$ = 32
pItem$ = 40
list$ = 64
x$ = 72
y$ = 80
simple_list_swap PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 940
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 943
  00012	8b 54 24 48	 mov	 edx, DWORD PTR x$[rsp]
  00016	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0001b	e8 00 00 00 00	 call	 simple_list_getitem
  00020	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 944
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  0002a	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002e	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 945
  00033	8b 54 24 50	 mov	 edx, DWORD PTR y$[rsp]
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0003c	e8 00 00 00 00	 call	 simple_list_getitem
; Line 946
  00041	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00046	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0004a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  0004f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 947
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  0005a	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0005e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItem$[rsp]
  00063	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 948
  00066	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006a	c3		 ret	 0
simple_list_swap ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nMiddle$ = 32
nFirst$ = 36
nLast$ = 40
nRes$ = 44
list$ = 64
cFind$ = 72
nColumn$ = 80
cAttribute$ = 88
simple_list_binarysearchstr PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 919
$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 921
  00018	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR nFirst$[rsp], 1
; Line 922
  00020	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00025	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00028	89 44 24 28	 mov	 DWORD PTR nLast$[rsp], eax
$LN6@simple_lis:
; Line 923
  0002c	8b 44 24 28	 mov	 eax, DWORD PTR nLast$[rsp]
  00030	39 44 24 24	 cmp	 DWORD PTR nFirst$[rsp], eax
  00034	7f 6c		 jg	 SHORT $LN5@simple_lis
; Line 924
  00036	8b 44 24 28	 mov	 eax, DWORD PTR nLast$[rsp]
  0003a	8b 4c 24 24	 mov	 ecx, DWORD PTR nFirst$[rsp]
  0003e	03 c8		 add	 ecx, eax
  00040	8b c1		 mov	 eax, ecx
  00042	99		 cdq
  00043	2b c2		 sub	 eax, edx
  00045	d1 f8		 sar	 eax, 1
  00047	89 44 24 20	 mov	 DWORD PTR nMiddle$[rsp], eax
; Line 925
  0004b	4c 8b 4c 24 58	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00050	44 8b 44 24 50	 mov	 r8d, DWORD PTR nColumn$[rsp]
  00055	8b 54 24 20	 mov	 edx, DWORD PTR nMiddle$[rsp]
  00059	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005e	e8 00 00 00 00	 call	 simple_list_getstringcolumn
  00063	48 8b 54 24 48	 mov	 rdx, QWORD PTR cFind$[rsp]
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 strcmp
  00070	89 44 24 2c	 mov	 DWORD PTR nRes$[rsp], eax
; Line 926
  00074	83 7c 24 2c 00	 cmp	 DWORD PTR nRes$[rsp], 0
  00079	75 08		 jne	 SHORT $LN4@simple_lis
; Line 927
  0007b	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  0007f	eb 23		 jmp	 SHORT $LN7@simple_lis
  00081	eb 1d		 jmp	 SHORT $LN3@simple_lis
$LN4@simple_lis:
; Line 929
  00083	83 7c 24 2c 00	 cmp	 DWORD PTR nRes$[rsp], 0
  00088	7d 0c		 jge	 SHORT $LN2@simple_lis
; Line 930
  0008a	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  0008e	ff c0		 inc	 eax
  00090	89 44 24 24	 mov	 DWORD PTR nFirst$[rsp], eax
; Line 932
  00094	eb 0a		 jmp	 SHORT $LN1@simple_lis
$LN2@simple_lis:
; Line 933
  00096	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  0009a	ff c8		 dec	 eax
  0009c	89 44 24 28	 mov	 DWORD PTR nLast$[rsp], eax
$LN1@simple_lis:
$LN3@simple_lis:
; Line 935
  000a0	eb 8a		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
; Line 936
  000a2	33 c0		 xor	 eax, eax
$LN7@simple_lis:
; Line 937
  000a4	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000a8	c3		 ret	 0
simple_list_binarysearchstr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nMiddle$ = 32
nFirst$ = 36
nLast$ = 40
list$ = 64
nNum1$ = 72
nColumn$ = 80
cAttribute$ = 88
simple_list_binarysearchnum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 899
$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	f2 0f 11 4c 24
	10		 movsdx	 QWORD PTR [rsp+16], xmm1
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 901
  00019	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR nFirst$[rsp], 1
; Line 902
  00021	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00026	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00029	89 44 24 28	 mov	 DWORD PTR nLast$[rsp], eax
$LN6@simple_lis:
; Line 903
  0002d	8b 44 24 28	 mov	 eax, DWORD PTR nLast$[rsp]
  00031	39 44 24 24	 cmp	 DWORD PTR nFirst$[rsp], eax
  00035	7f 7e		 jg	 SHORT $LN5@simple_lis
; Line 904
  00037	8b 44 24 28	 mov	 eax, DWORD PTR nLast$[rsp]
  0003b	8b 4c 24 24	 mov	 ecx, DWORD PTR nFirst$[rsp]
  0003f	03 c8		 add	 ecx, eax
  00041	8b c1		 mov	 eax, ecx
  00043	99		 cdq
  00044	2b c2		 sub	 eax, edx
  00046	d1 f8		 sar	 eax, 1
  00048	89 44 24 20	 mov	 DWORD PTR nMiddle$[rsp], eax
; Line 905
  0004c	4c 8b 4c 24 58	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00051	44 8b 44 24 50	 mov	 r8d, DWORD PTR nColumn$[rsp]
  00056	8b 54 24 20	 mov	 edx, DWORD PTR nMiddle$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005f	e8 00 00 00 00	 call	 simple_list_getdoublecolumn
  00064	66 0f 2e 44 24
	48		 ucomisd xmm0, QWORD PTR nNum1$[rsp]
  0006a	7a 0a		 jp	 SHORT $LN4@simple_lis
  0006c	75 08		 jne	 SHORT $LN4@simple_lis
; Line 906
  0006e	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  00072	eb 43		 jmp	 SHORT $LN7@simple_lis
  00074	eb 3a		 jmp	 SHORT $LN3@simple_lis
$LN4@simple_lis:
; Line 908
  00076	4c 8b 4c 24 58	 mov	 r9, QWORD PTR cAttribute$[rsp]
  0007b	44 8b 44 24 50	 mov	 r8d, DWORD PTR nColumn$[rsp]
  00080	8b 54 24 20	 mov	 edx, DWORD PTR nMiddle$[rsp]
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00089	e8 00 00 00 00	 call	 simple_list_getdoublecolumn
  0008e	f2 0f 10 4c 24
	48		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00094	66 0f 2f c8	 comisd	 xmm1, xmm0
  00098	76 0c		 jbe	 SHORT $LN2@simple_lis
; Line 909
  0009a	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  0009e	ff c0		 inc	 eax
  000a0	89 44 24 24	 mov	 DWORD PTR nFirst$[rsp], eax
; Line 911
  000a4	eb 0a		 jmp	 SHORT $LN1@simple_lis
$LN2@simple_lis:
; Line 912
  000a6	8b 44 24 20	 mov	 eax, DWORD PTR nMiddle$[rsp]
  000aa	ff c8		 dec	 eax
  000ac	89 44 24 28	 mov	 DWORD PTR nLast$[rsp], eax
$LN1@simple_lis:
$LN3@simple_lis:
; Line 914
  000b0	e9 78 ff ff ff	 jmp	 $LN6@simple_lis
$LN5@simple_lis:
; Line 915
  000b5	33 c0		 xor	 eax, eax
$LN7@simple_lis:
; Line 916
  000b7	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000bb	c3		 ret	 0
simple_list_binarysearchnum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 48
x$ = 52
mid$ = 56
midvalue$ = 64
pState$ = 96
list$ = 104
left$ = 112
right$ = 120
nColumn$ = 128
cAttribute$ = 136
simple_list_sortstr_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 869
$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 872
  00018	8b 44 24 70	 mov	 eax, DWORD PTR left$[rsp]
  0001c	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 873
  00020	8b 44 24 78	 mov	 eax, DWORD PTR right$[rsp]
  00024	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
; Line 874
  00028	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  0002c	8b 4c 24 34	 mov	 ecx, DWORD PTR x$[rsp]
  00030	03 c8		 add	 ecx, eax
  00032	8b c1		 mov	 eax, ecx
  00034	99		 cdq
  00035	2b c2		 sub	 eax, edx
  00037	d1 f8		 sar	 eax, 1
  00039	89 44 24 38	 mov	 DWORD PTR mid$[rsp], eax
; Line 875
  0003d	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00045	44 8b 84 24 80
	00 00 00	 mov	 r8d, DWORD PTR nColumn$[rsp]
  0004d	8b 54 24 38	 mov	 edx, DWORD PTR mid$[rsp]
  00051	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  00056	e8 00 00 00 00	 call	 simple_list_getstringcolumn
  0005b	48 8b d0	 mov	 rdx, rax
  0005e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pState$[rsp]
  00063	e8 00 00 00 00	 call	 simple_string_new_gc
  00068	48 89 44 24 40	 mov	 QWORD PTR midvalue$[rsp], rax
$LN9@simple_lis:
; Line 876
  0006d	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  00071	39 44 24 34	 cmp	 DWORD PTR x$[rsp], eax
  00075	0f 8f b2 00 00
	00		 jg	 $LN8@simple_lis
$LN7@simple_lis:
; Line 877
  0007b	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00083	44 8b 84 24 80
	00 00 00	 mov	 r8d, DWORD PTR nColumn$[rsp]
  0008b	8b 54 24 34	 mov	 edx, DWORD PTR x$[rsp]
  0008f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  00094	e8 00 00 00 00	 call	 simple_list_getstringcolumn
  00099	48 8b 4c 24 40	 mov	 rcx, QWORD PTR midvalue$[rsp]
  0009e	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 strcmp
  000a9	85 c0		 test	 eax, eax
  000ab	7d 0c		 jge	 SHORT $LN6@simple_lis
; Line 878
  000ad	8b 44 24 34	 mov	 eax, DWORD PTR x$[rsp]
  000b1	ff c0		 inc	 eax
  000b3	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 879
  000b7	eb c2		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
$LN5@simple_lis:
; Line 880
  000b9	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  000c1	44 8b 84 24 80
	00 00 00	 mov	 r8d, DWORD PTR nColumn$[rsp]
  000c9	8b 54 24 30	 mov	 edx, DWORD PTR y$[rsp]
  000cd	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  000d2	e8 00 00 00 00	 call	 simple_list_getstringcolumn
  000d7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR midvalue$[rsp]
  000dc	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000df	48 8b c8	 mov	 rcx, rax
  000e2	e8 00 00 00 00	 call	 strcmp
  000e7	85 c0		 test	 eax, eax
  000e9	7e 0c		 jle	 SHORT $LN4@simple_lis
; Line 881
  000eb	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  000ef	ff c8		 dec	 eax
  000f1	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
; Line 882
  000f5	eb c2		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
; Line 883
  000f7	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  000fb	39 44 24 34	 cmp	 DWORD PTR x$[rsp], eax
  000ff	7f 27		 jg	 SHORT $LN3@simple_lis
; Line 884
  00101	44 8b 44 24 30	 mov	 r8d, DWORD PTR y$[rsp]
  00106	8b 54 24 34	 mov	 edx, DWORD PTR x$[rsp]
  0010a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  0010f	e8 00 00 00 00	 call	 simple_list_swap
; Line 885
  00114	8b 44 24 34	 mov	 eax, DWORD PTR x$[rsp]
  00118	ff c0		 inc	 eax
  0011a	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 886
  0011e	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  00122	ff c8		 dec	 eax
  00124	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
$LN3@simple_lis:
; Line 888
  00128	e9 40 ff ff ff	 jmp	 $LN9@simple_lis
$LN8@simple_lis:
; Line 889
  0012d	48 8b 54 24 40	 mov	 rdx, QWORD PTR midvalue$[rsp]
  00132	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pState$[rsp]
  00137	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 890
  0013c	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  00140	39 44 24 70	 cmp	 DWORD PTR left$[rsp], eax
  00144	7d 31		 jge	 SHORT $LN2@simple_lis
; Line 891
  00146	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR cAttribute$[rsp]
  0014e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00153	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR nColumn$[rsp]
  0015a	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0015e	44 8b 4c 24 30	 mov	 r9d, DWORD PTR y$[rsp]
  00163	44 8b 44 24 70	 mov	 r8d, DWORD PTR left$[rsp]
  00168	48 8b 54 24 68	 mov	 rdx, QWORD PTR list$[rsp]
  0016d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pState$[rsp]
  00172	e8 00 00 00 00	 call	 simple_list_sortstr_gc
$LN2@simple_lis:
; Line 893
  00177	8b 44 24 78	 mov	 eax, DWORD PTR right$[rsp]
  0017b	39 44 24 30	 cmp	 DWORD PTR y$[rsp], eax
  0017f	7d 31		 jge	 SHORT $LN1@simple_lis
; Line 894
  00181	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR cAttribute$[rsp]
  00189	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0018e	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR nColumn$[rsp]
  00195	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00199	44 8b 4c 24 78	 mov	 r9d, DWORD PTR right$[rsp]
  0019e	44 8b 44 24 34	 mov	 r8d, DWORD PTR x$[rsp]
  001a3	48 8b 54 24 68	 mov	 rdx, QWORD PTR list$[rsp]
  001a8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pState$[rsp]
  001ad	e8 00 00 00 00	 call	 simple_list_sortstr_gc
$LN1@simple_lis:
; Line 896
  001b2	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001b6	c3		 ret	 0
simple_list_sortstr_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 48
x$ = 52
mid$ = 56
midvalue$ = 64
list$ = 96
left$ = 104
right$ = 112
nColumn$ = 120
cAttribute$ = 128
simple_list_sortnum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 840
$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 843
  00017	8b 44 24 68	 mov	 eax, DWORD PTR left$[rsp]
  0001b	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 844
  0001f	8b 44 24 70	 mov	 eax, DWORD PTR right$[rsp]
  00023	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
; Line 845
  00027	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  0002b	8b 4c 24 34	 mov	 ecx, DWORD PTR x$[rsp]
  0002f	03 c8		 add	 ecx, eax
  00031	8b c1		 mov	 eax, ecx
  00033	99		 cdq
  00034	2b c2		 sub	 eax, edx
  00036	d1 f8		 sar	 eax, 1
  00038	89 44 24 38	 mov	 DWORD PTR mid$[rsp], eax
; Line 846
  0003c	4c 8b 8c 24 80
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00044	44 8b 44 24 78	 mov	 r8d, DWORD PTR nColumn$[rsp]
  00049	8b 54 24 38	 mov	 edx, DWORD PTR mid$[rsp]
  0004d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00052	e8 00 00 00 00	 call	 simple_list_getdoublecolumn
  00057	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR midvalue$[rsp], xmm0
$LN9@simple_lis:
; Line 847
  0005d	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  00061	39 44 24 34	 cmp	 DWORD PTR x$[rsp], eax
  00065	0f 8f 98 00 00
	00		 jg	 $LN8@simple_lis
$LN7@simple_lis:
; Line 848
  0006b	4c 8b 8c 24 80
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  00073	44 8b 44 24 78	 mov	 r8d, DWORD PTR nColumn$[rsp]
  00078	8b 54 24 34	 mov	 edx, DWORD PTR x$[rsp]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00081	e8 00 00 00 00	 call	 simple_list_getdoublecolumn
  00086	f2 0f 10 4c 24
	40		 movsdx	 xmm1, QWORD PTR midvalue$[rsp]
  0008c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00090	76 0c		 jbe	 SHORT $LN6@simple_lis
; Line 849
  00092	8b 44 24 34	 mov	 eax, DWORD PTR x$[rsp]
  00096	ff c0		 inc	 eax
  00098	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 850
  0009c	eb cd		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
$LN5@simple_lis:
; Line 851
  0009e	4c 8b 8c 24 80
	00 00 00	 mov	 r9, QWORD PTR cAttribute$[rsp]
  000a6	44 8b 44 24 78	 mov	 r8d, DWORD PTR nColumn$[rsp]
  000ab	8b 54 24 30	 mov	 edx, DWORD PTR y$[rsp]
  000af	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  000b4	e8 00 00 00 00	 call	 simple_list_getdoublecolumn
  000b9	66 0f 2f 44 24
	40		 comisd	 xmm0, QWORD PTR midvalue$[rsp]
  000bf	76 0c		 jbe	 SHORT $LN4@simple_lis
; Line 852
  000c1	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  000c5	ff c8		 dec	 eax
  000c7	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
; Line 853
  000cb	eb d1		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
; Line 854
  000cd	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  000d1	39 44 24 34	 cmp	 DWORD PTR x$[rsp], eax
  000d5	7f 27		 jg	 SHORT $LN3@simple_lis
; Line 855
  000d7	44 8b 44 24 30	 mov	 r8d, DWORD PTR y$[rsp]
  000dc	8b 54 24 34	 mov	 edx, DWORD PTR x$[rsp]
  000e0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  000e5	e8 00 00 00 00	 call	 simple_list_swap
; Line 856
  000ea	8b 44 24 34	 mov	 eax, DWORD PTR x$[rsp]
  000ee	ff c0		 inc	 eax
  000f0	89 44 24 34	 mov	 DWORD PTR x$[rsp], eax
; Line 857
  000f4	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  000f8	ff c8		 dec	 eax
  000fa	89 44 24 30	 mov	 DWORD PTR y$[rsp], eax
$LN3@simple_lis:
; Line 859
  000fe	e9 5a ff ff ff	 jmp	 $LN9@simple_lis
$LN8@simple_lis:
; Line 860
  00103	8b 44 24 30	 mov	 eax, DWORD PTR y$[rsp]
  00107	39 44 24 68	 cmp	 DWORD PTR left$[rsp], eax
  0010b	7d 25		 jge	 SHORT $LN2@simple_lis
; Line 861
  0010d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR cAttribute$[rsp]
  00115	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0011a	44 8b 4c 24 78	 mov	 r9d, DWORD PTR nColumn$[rsp]
  0011f	44 8b 44 24 30	 mov	 r8d, DWORD PTR y$[rsp]
  00124	8b 54 24 68	 mov	 edx, DWORD PTR left$[rsp]
  00128	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  0012d	e8 00 00 00 00	 call	 simple_list_sortnum
$LN2@simple_lis:
; Line 863
  00132	8b 44 24 70	 mov	 eax, DWORD PTR right$[rsp]
  00136	39 44 24 30	 cmp	 DWORD PTR y$[rsp], eax
  0013a	7d 25		 jge	 SHORT $LN1@simple_lis
; Line 864
  0013c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR cAttribute$[rsp]
  00144	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00149	44 8b 4c 24 78	 mov	 r9d, DWORD PTR nColumn$[rsp]
  0014e	44 8b 44 24 70	 mov	 r8d, DWORD PTR right$[rsp]
  00153	8b 54 24 34	 mov	 edx, DWORD PTR x$[rsp]
  00157	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  0015c	e8 00 00 00 00	 call	 simple_list_sortnum
$LN1@simple_lis:
; Line 866
  00161	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00165	c3		 ret	 0
simple_list_sortnum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nCount$ = 36
list2$ = 40
list3$ = 48
list$ = 80
pValue$ = 88
nColumn$ = 96
simple_list_findcpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 801
$LN18:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 805
  00013	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  00018	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0001b	89 44 24 24	 mov	 DWORD PTR nCount$[rsp], eax
; Line 807
  0001f	83 7c 24 24 00	 cmp	 DWORD PTR nCount$[rsp], 0
  00024	0f 8e 00 01 00
	00		 jle	 $LN15@simple_lis
; Line 808
  0002a	83 7c 24 60 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  0002f	75 74		 jne	 SHORT $LN14@simple_lis
; Line 809
  00031	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00039	eb 0a		 jmp	 SHORT $LN13@simple_lis
$LN12@simple_lis:
  0003b	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0003f	ff c0		 inc	 eax
  00041	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN13@simple_lis:
  00045	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  00049	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0004d	7f 51		 jg	 SHORT $LN11@simple_lis
; Line 810
  0004f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00053	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00058	e8 00 00 00 00	 call	 simple_list_islist
  0005d	85 c0		 test	 eax, eax
  0005f	74 3d		 je	 SHORT $LN10@simple_lis
; Line 811
  00061	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00065	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0006a	e8 00 00 00 00	 call	 simple_list_getlist
  0006f	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 812
  00074	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00079	e8 00 00 00 00	 call	 api_iscpointer_list
  0007e	85 c0		 test	 eax, eax
  00080	74 1c		 je	 SHORT $LN9@simple_lis
; Line 813
  00082	48 8b 54 24 58	 mov	 rdx, QWORD PTR pValue$[rsp]
  00087	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  0008c	e8 00 00 00 00	 call	 api_cpointer_cmp
  00091	85 c0		 test	 eax, eax
  00093	74 09		 je	 SHORT $LN8@simple_lis
; Line 814
  00095	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00099	e9 8e 00 00 00	 jmp	 $LN16@simple_lis
$LN8@simple_lis:
$LN9@simple_lis:
$LN10@simple_lis:
; Line 818
  0009e	eb 9b		 jmp	 SHORT $LN12@simple_lis
$LN11@simple_lis:
; Line 820
  000a0	e9 85 00 00 00	 jmp	 $LN7@simple_lis
$LN14@simple_lis:
; Line 821
  000a5	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  000ad	eb 0a		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
  000af	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000b3	ff c0		 inc	 eax
  000b5	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_lis:
  000b9	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  000bd	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000c1	7f 67		 jg	 SHORT $LN4@simple_lis
; Line 822
  000c3	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000c7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000cc	e8 00 00 00 00	 call	 simple_list_islist
  000d1	85 c0		 test	 eax, eax
  000d3	75 02		 jne	 SHORT $LN3@simple_lis
; Line 823
  000d5	eb d8		 jmp	 SHORT $LN5@simple_lis
$LN3@simple_lis:
; Line 825
  000d7	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000db	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000e0	e8 00 00 00 00	 call	 simple_list_getlist
  000e5	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 826
  000ea	8b 54 24 60	 mov	 edx, DWORD PTR nColumn$[rsp]
  000ee	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000f3	e8 00 00 00 00	 call	 simple_list_islist
  000f8	85 c0		 test	 eax, eax
  000fa	74 2c		 je	 SHORT $LN2@simple_lis
; Line 827
  000fc	8b 54 24 60	 mov	 edx, DWORD PTR nColumn$[rsp]
  00100	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00105	e8 00 00 00 00	 call	 simple_list_getlist
  0010a	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 828
  0010f	48 8b 54 24 58	 mov	 rdx, QWORD PTR pValue$[rsp]
  00114	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  00119	e8 00 00 00 00	 call	 api_cpointer_cmp
  0011e	85 c0		 test	 eax, eax
  00120	74 06		 je	 SHORT $LN1@simple_lis
; Line 829
  00122	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00126	eb 04		 jmp	 SHORT $LN16@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 832
  00128	eb 85		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
$LN7@simple_lis:
$LN15@simple_lis:
; Line 835
  0012a	33 c0		 xor	 eax, eax
$LN16@simple_lis:
; Line 836
  0012c	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00130	c3		 ret	 0
simple_list_findcpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nCount$ = 36
nPos$ = 40
list2$ = 48
list$ = 80
nType$ = 88
nNum1$ = 96
str$ = 104
nColumn$ = 112
cAttribute$ = 120
simple_list_findinlistofobjs PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 755
$LN17:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  0000b	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 759
  00018	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  0001d	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00020	89 44 24 24	 mov	 DWORD PTR nCount$[rsp], eax
; Line 760
  00024	48 8b 4c 24 78	 mov	 rcx, QWORD PTR cAttribute$[rsp]
  00029	e8 00 00 00 00	 call	 simple_string_lower
; Line 762
  0002e	83 7c 24 24 00	 cmp	 DWORD PTR nCount$[rsp], 0
  00033	0f 8e 4e 01 00
	00		 jle	 $LN14@simple_lis
  00039	83 7c 24 70 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  0003e	0f 8e 43 01 00
	00		 jle	 $LN14@simple_lis
; Line 763
  00044	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0004c	eb 0a		 jmp	 SHORT $LN13@simple_lis
$LN12@simple_lis:
  0004e	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00052	ff c0		 inc	 eax
  00054	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN13@simple_lis:
  00058	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  0005c	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00060	0f 8f 21 01 00
	00		 jg	 $LN11@simple_lis
; Line 764
  00066	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0006a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0006f	e8 00 00 00 00	 call	 simple_list_islist
  00074	85 c0		 test	 eax, eax
  00076	75 02		 jne	 SHORT $LN10@simple_lis
; Line 765
  00078	eb d4		 jmp	 SHORT $LN12@simple_lis
$LN10@simple_lis:
; Line 767
  0007a	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0007e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00083	e8 00 00 00 00	 call	 simple_list_getlist
  00088	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 768
  0008d	83 7c 24 70 01	 cmp	 DWORD PTR nColumn$[rsp], 1
  00092	7e 29		 jle	 SHORT $LN9@simple_lis
; Line 769
  00094	8b 54 24 70	 mov	 edx, DWORD PTR nColumn$[rsp]
  00098	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0009d	e8 00 00 00 00	 call	 simple_list_islist
  000a2	85 c0		 test	 eax, eax
  000a4	74 15		 je	 SHORT $LN8@simple_lis
; Line 770
  000a6	8b 54 24 70	 mov	 edx, DWORD PTR nColumn$[rsp]
  000aa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  000af	e8 00 00 00 00	 call	 simple_list_getlist
  000b4	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 772
  000b9	eb 02		 jmp	 SHORT $LN7@simple_lis
$LN8@simple_lis:
; Line 773
  000bb	eb 91		 jmp	 SHORT $LN12@simple_lis
$LN7@simple_lis:
$LN9@simple_lis:
; Line 776
  000bd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000c7	85 c0		 test	 eax, eax
  000c9	75 02		 jne	 SHORT $LN6@simple_lis
; Line 777
  000cb	eb 81		 jmp	 SHORT $LN12@simple_lis
$LN6@simple_lis:
; Line 779
  000cd	ba 02 00 00 00	 mov	 edx, 2
  000d2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  000d7	e8 00 00 00 00	 call	 simple_list_getlist
  000dc	41 b8 01 00 00
	00		 mov	 r8d, 1
  000e2	48 8b 54 24 78	 mov	 rdx, QWORD PTR cAttribute$[rsp]
  000e7	48 8b c8	 mov	 rcx, rax
  000ea	e8 00 00 00 00	 call	 simple_list_findstring
  000ef	89 44 24 28	 mov	 DWORD PTR nPos$[rsp], eax
; Line 780
  000f3	83 7c 24 28 00	 cmp	 DWORD PTR nPos$[rsp], 0
  000f8	75 0a		 jne	 SHORT $LN5@simple_lis
; Line 781
  000fa	b8 ff ff ff ff	 mov	 eax, -1
  000ff	e9 85 00 00 00	 jmp	 $LN15@simple_lis
$LN5@simple_lis:
; Line 783
  00104	ba 02 00 00 00	 mov	 edx, 2
  00109	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0010e	e8 00 00 00 00	 call	 simple_list_getlist
  00113	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 784
  00118	8b 54 24 28	 mov	 edx, DWORD PTR nPos$[rsp]
  0011c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00121	e8 00 00 00 00	 call	 simple_list_getlist
  00126	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 785
  0012b	83 7c 24 58 01	 cmp	 DWORD PTR nType$[rsp], 1
  00130	75 2c		 jne	 SHORT $LN4@simple_lis
; Line 786
  00132	ba 03 00 00 00	 mov	 edx, 3
  00137	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0013c	e8 00 00 00 00	 call	 simple_list_getitem
  00141	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00145	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00148	48 8b 4c 24 68	 mov	 rcx, QWORD PTR str$[rsp]
  0014d	e8 00 00 00 00	 call	 strcmp
  00152	85 c0		 test	 eax, eax
  00154	75 06		 jne	 SHORT $LN3@simple_lis
; Line 787
  00156	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0015a	eb 2d		 jmp	 SHORT $LN15@simple_lis
$LN3@simple_lis:
; Line 790
  0015c	eb 24		 jmp	 SHORT $LN2@simple_lis
$LN4@simple_lis:
; Line 791
  0015e	ba 03 00 00 00	 mov	 edx, 3
  00163	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00168	e8 00 00 00 00	 call	 simple_list_getitem
  0016d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00172	66 0f 2e 44 24
	60		 ucomisd xmm0, QWORD PTR nNum1$[rsp]
  00178	7a 08		 jp	 SHORT $LN1@simple_lis
  0017a	75 06		 jne	 SHORT $LN1@simple_lis
; Line 792
  0017c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00180	eb 07		 jmp	 SHORT $LN15@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 795
  00182	e9 c7 fe ff ff	 jmp	 $LN12@simple_lis
$LN11@simple_lis:
$LN14@simple_lis:
; Line 797
  00187	33 c0		 xor	 eax, eax
$LN15@simple_lis:
; Line 798
  00189	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0018d	c3		 ret	 0
simple_list_findinlistofobjs ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 64
pointer$ = 72
simple_list_findpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 742
$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 744
  0000e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00016	eb 0a		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
  00018	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001c	ff c0		 inc	 eax
  0001e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_lis:
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00027	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0002e	7f 33		 jg	 SHORT $LN3@simple_lis
; Line 745
  00030	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00034	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00039	e8 00 00 00 00	 call	 simple_list_ispointer
  0003e	85 c0		 test	 eax, eax
  00040	74 1f		 je	 SHORT $LN2@simple_lis
; Line 746
  00042	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0004b	e8 00 00 00 00	 call	 simple_list_getitem
  00050	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pointer$[rsp]
  00055	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00059	75 06		 jne	 SHORT $LN1@simple_lis
; Line 747
  0005b	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0005f	eb 04		 jmp	 SHORT $LN6@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 750
  00061	eb b5		 jmp	 SHORT $LN4@simple_lis
$LN3@simple_lis:
; Line 751
  00063	33 c0		 xor	 eax, eax
$LN6@simple_lis:
; Line 752
  00065	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00069	c3		 ret	 0
simple_list_findpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nCount$ = 36
list2$ = 40
list$ = 64
nNum1$ = 72
nColumn$ = 80
simple_list_finddouble PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 705
$LN18:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	f2 0f 11 4c 24
	10		 movsdx	 QWORD PTR [rsp+16], xmm1
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 709
  00014	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00019	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0001c	89 44 24 24	 mov	 DWORD PTR nCount$[rsp], eax
; Line 711
  00020	83 7c 24 24 00	 cmp	 DWORD PTR nCount$[rsp], 0
  00025	0f 8e 0a 01 00
	00		 jle	 $LN15@simple_lis
; Line 712
  0002b	83 7c 24 50 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  00030	75 66		 jne	 SHORT $LN14@simple_lis
; Line 713
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0003a	eb 0a		 jmp	 SHORT $LN13@simple_lis
$LN12@simple_lis:
  0003c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00040	ff c0		 inc	 eax
  00042	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN13@simple_lis:
  00046	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  0004a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0004e	7f 43		 jg	 SHORT $LN11@simple_lis
; Line 714
  00050	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00059	e8 00 00 00 00	 call	 simple_list_getitem
  0005e	8b 00		 mov	 eax, DWORD PTR [rax]
  00060	c1 e8 03	 shr	 eax, 3
  00063	83 e0 03	 and	 eax, 3
  00066	83 f8 02	 cmp	 eax, 2
  00069	75 26		 jne	 SHORT $LN10@simple_lis
; Line 715
  0006b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00074	e8 00 00 00 00	 call	 simple_list_getitem
  00079	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0007e	66 0f 2e 44 24
	48		 ucomisd xmm0, QWORD PTR nNum1$[rsp]
  00084	7a 0b		 jp	 SHORT $LN9@simple_lis
  00086	75 09		 jne	 SHORT $LN9@simple_lis
; Line 716
  00088	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0008c	e9 a6 00 00 00	 jmp	 $LN16@simple_lis
$LN9@simple_lis:
$LN10@simple_lis:
; Line 719
  00091	eb a9		 jmp	 SHORT $LN12@simple_lis
$LN11@simple_lis:
; Line 721
  00093	e9 9d 00 00 00	 jmp	 $LN8@simple_lis
$LN14@simple_lis:
; Line 722
  00098	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  000a0	eb 0a		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
  000a2	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000a6	ff c0		 inc	 eax
  000a8	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_lis:
  000ac	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  000b0	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000b4	7f 7f		 jg	 SHORT $LN5@simple_lis
; Line 723
  000b6	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000ba	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000bf	e8 00 00 00 00	 call	 simple_list_islist
  000c4	85 c0		 test	 eax, eax
  000c6	75 02		 jne	 SHORT $LN4@simple_lis
; Line 724
  000c8	eb d8		 jmp	 SHORT $LN6@simple_lis
$LN4@simple_lis:
; Line 726
  000ca	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000ce	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000d3	e8 00 00 00 00	 call	 simple_list_getlist
  000d8	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 727
  000dd	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  000e2	8b 4c 24 50	 mov	 ecx, DWORD PTR nColumn$[rsp]
  000e6	39 48 10	 cmp	 DWORD PTR [rax+16], ecx
  000e9	7d 07		 jge	 SHORT $LN3@simple_lis
; Line 728
  000eb	b8 ff ff ff ff	 mov	 eax, -1
  000f0	eb 45		 jmp	 SHORT $LN16@simple_lis
$LN3@simple_lis:
; Line 730
  000f2	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  000f6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000fb	e8 00 00 00 00	 call	 simple_list_getitem
  00100	8b 00		 mov	 eax, DWORD PTR [rax]
  00102	c1 e8 03	 shr	 eax, 3
  00105	83 e0 03	 and	 eax, 3
  00108	83 f8 02	 cmp	 eax, 2
  0010b	75 23		 jne	 SHORT $LN2@simple_lis
; Line 731
  0010d	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  00111	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00116	e8 00 00 00 00	 call	 simple_list_getitem
  0011b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00120	66 0f 2e 44 24
	48		 ucomisd xmm0, QWORD PTR nNum1$[rsp]
  00126	7a 08		 jp	 SHORT $LN1@simple_lis
  00128	75 06		 jne	 SHORT $LN1@simple_lis
; Line 732
  0012a	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0012e	eb 07		 jmp	 SHORT $LN16@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 735
  00130	e9 6d ff ff ff	 jmp	 $LN6@simple_lis
$LN5@simple_lis:
$LN8@simple_lis:
$LN15@simple_lis:
; Line 738
  00135	33 c0		 xor	 eax, eax
$LN16@simple_lis:
; Line 739
  00137	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0013b	c3		 ret	 0
simple_list_finddouble ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nCount$ = 36
list2$ = 40
list$ = 64
str$ = 72
nColumn$ = 80
simple_list_findstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 668
$LN18:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 672
  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
  00018	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0001b	89 44 24 24	 mov	 DWORD PTR nCount$[rsp], eax
; Line 674
  0001f	83 7c 24 24 00	 cmp	 DWORD PTR nCount$[rsp], 0
  00024	0f 8e 04 01 00
	00		 jle	 $LN15@simple_lis
; Line 675
  0002a	83 7c 24 50 00	 cmp	 DWORD PTR nColumn$[rsp], 0
  0002f	75 63		 jne	 SHORT $LN14@simple_lis
; Line 676
  00031	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00039	eb 0a		 jmp	 SHORT $LN13@simple_lis
$LN12@simple_lis:
  0003b	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0003f	ff c0		 inc	 eax
  00041	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN13@simple_lis:
  00045	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  00049	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0004d	7f 40		 jg	 SHORT $LN11@simple_lis
; Line 677
  0004f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00058	e8 00 00 00 00	 call	 simple_list_isstring
  0005d	85 c0		 test	 eax, eax
  0005f	74 2c		 je	 SHORT $LN10@simple_lis
; Line 678
  00061	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00065	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0006a	e8 00 00 00 00	 call	 simple_list_getitem
  0006f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00073	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00076	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0007b	e8 00 00 00 00	 call	 strcmp
  00080	85 c0		 test	 eax, eax
  00082	75 09		 jne	 SHORT $LN9@simple_lis
; Line 679
  00084	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00088	e9 a3 00 00 00	 jmp	 $LN16@simple_lis
$LN9@simple_lis:
$LN10@simple_lis:
; Line 682
  0008d	eb ac		 jmp	 SHORT $LN12@simple_lis
$LN11@simple_lis:
; Line 684
  0008f	e9 9a 00 00 00	 jmp	 $LN8@simple_lis
$LN14@simple_lis:
; Line 685
  00094	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0009c	eb 0a		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
  0009e	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000a2	ff c0		 inc	 eax
  000a4	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_lis:
  000a8	8b 44 24 24	 mov	 eax, DWORD PTR nCount$[rsp]
  000ac	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000b0	7f 7c		 jg	 SHORT $LN5@simple_lis
; Line 686
  000b2	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000bb	e8 00 00 00 00	 call	 simple_list_islist
  000c0	85 c0		 test	 eax, eax
  000c2	75 02		 jne	 SHORT $LN4@simple_lis
; Line 687
  000c4	eb d8		 jmp	 SHORT $LN6@simple_lis
$LN4@simple_lis:
; Line 689
  000c6	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000ca	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000cf	e8 00 00 00 00	 call	 simple_list_getlist
  000d4	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 690
  000d9	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  000de	8b 4c 24 50	 mov	 ecx, DWORD PTR nColumn$[rsp]
  000e2	39 48 10	 cmp	 DWORD PTR [rax+16], ecx
  000e5	7d 07		 jge	 SHORT $LN3@simple_lis
; Line 691
  000e7	b8 ff ff ff ff	 mov	 eax, -1
  000ec	eb 42		 jmp	 SHORT $LN16@simple_lis
$LN3@simple_lis:
; Line 693
  000ee	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  000f2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000f7	e8 00 00 00 00	 call	 simple_list_isstring
  000fc	85 c0		 test	 eax, eax
  000fe	74 29		 je	 SHORT $LN2@simple_lis
; Line 694
  00100	8b 54 24 50	 mov	 edx, DWORD PTR nColumn$[rsp]
  00104	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00109	e8 00 00 00 00	 call	 simple_list_getitem
  0010e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00112	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00115	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0011a	e8 00 00 00 00	 call	 strcmp
  0011f	85 c0		 test	 eax, eax
  00121	75 06		 jne	 SHORT $LN1@simple_lis
; Line 695
  00123	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00127	eb 07		 jmp	 SHORT $LN16@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 698
  00129	e9 70 ff ff ff	 jmp	 $LN6@simple_lis
$LN5@simple_lis:
$LN8@simple_lis:
$LN15@simple_lis:
; Line 701
  0012e	33 c0		 xor	 eax, eax
$LN16@simple_lis:
; Line 702
  00130	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00134	c3		 ret	 0
simple_list_findstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pItem2$ = 40
list2$ = 48
list$ = 80
pItem$ = 88
simple_list_isiteminsidelist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 625
$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 629
  0000e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00016	eb 0a		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
  00018	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001c	ff c0		 inc	 eax
  0001e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_lis:
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  00027	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0002e	7f 62		 jg	 SHORT $LN4@simple_lis
; Line 630
  00030	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00034	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00039	e8 00 00 00 00	 call	 simple_list_getitem
  0003e	48 89 44 24 28	 mov	 QWORD PTR pItem2$[rsp], rax
; Line 631
  00043	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem2$[rsp]
  00048	48 39 44 24 58	 cmp	 QWORD PTR pItem$[rsp], rax
  0004d	75 07		 jne	 SHORT $LN3@simple_lis
; Line 632
  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	eb 3e		 jmp	 SHORT $LN7@simple_lis
$LN3@simple_lis:
; Line 634
  00056	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0005a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0005f	e8 00 00 00 00	 call	 simple_list_islist
  00064	85 c0		 test	 eax, eax
  00066	74 28		 je	 SHORT $LN2@simple_lis
; Line 635
  00068	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem2$[rsp]
  0006d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00071	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 636
  00076	48 8b 54 24 58	 mov	 rdx, QWORD PTR pItem$[rsp]
  0007b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00080	e8 00 00 00 00	 call	 simple_list_isiteminsidelist
  00085	85 c0		 test	 eax, eax
  00087	74 07		 je	 SHORT $LN1@simple_lis
; Line 637
  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	eb 04		 jmp	 SHORT $LN7@simple_lis
$LN1@simple_lis:
$LN2@simple_lis:
; Line 640
  00090	eb 86		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
; Line 641
  00092	33 c0		 xor	 eax, eax
$LN7@simple_lis:
; Line 642
  00094	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00098	c3		 ret	 0
simple_list_isiteminsidelist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list2$ = 40
pState$ = 64
list$ = 72
nPos$ = 80
simple_list_insertlist_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 612
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 616
  00013	44 8b 44 24 50	 mov	 r8d, DWORD PTR nPos$[rsp]
  00018	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 617
  00027	8b 44 24 50	 mov	 eax, DWORD PTR nPos$[rsp]
  0002b	ff c0		 inc	 eax
  0002d	8b d0		 mov	 edx, eax
  0002f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00034	e8 00 00 00 00	 call	 simple_list_getitem
  00039	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 618
  0003e	41 b8 04 00 00
	00		 mov	 r8d, 4
  00044	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0004e	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 619
  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00058	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005c	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 620
  00061	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
; Line 621
  00066	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006a	c3		 ret	 0
simple_list_insertlist_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
nPos$ = 64
pBlock$ = 72
simple_list_insertblockpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 605
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 607
  00018	44 8b 44 24 40	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001d	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 608
  0002c	8b 44 24 40	 mov	 eax, DWORD PTR nPos$[rsp]
  00030	ff c0		 inc	 eax
  00032	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pBlock$[rsp]
  00037	44 8b c0	 mov	 r8d, eax
  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00044	e8 00 00 00 00	 call	 simple_list_setblockpointer_gc
; Line 609
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	c3		 ret	 0
simple_list_insertblockpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 64
list$ = 72
nPos$ = 80
str$ = 88
str_size$ = 96
simple_list_insertstring2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 598
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 600
  00018	44 8b 44 24 50	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001d	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 601
  0002c	8b 44 24 50	 mov	 eax, DWORD PTR nPos$[rsp]
  00030	ff c0		 inc	 eax
  00032	8b 4c 24 60	 mov	 ecx, DWORD PTR str_size$[rsp]
  00036	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0003a	4c 8b 4c 24 58	 mov	 r9, QWORD PTR str$[rsp]
  0003f	44 8b c0	 mov	 r8d, eax
  00042	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0004c	e8 00 00 00 00	 call	 simple_list_setstring2_gc
; Line 602
  00051	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00055	c3		 ret	 0
simple_list_insertstring2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
nPos$ = 64
str$ = 72
simple_list_insertstsimple_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 591
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 593
  00018	44 8b 44 24 40	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001d	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 594
  0002c	8b 44 24 40	 mov	 eax, DWORD PTR nPos$[rsp]
  00030	ff c0		 inc	 eax
  00032	4c 8b 4c 24 48	 mov	 r9, QWORD PTR str$[rsp]
  00037	44 8b c0	 mov	 r8d, eax
  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00044	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 595
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	c3		 ret	 0
simple_list_insertstsimple_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
nPos$ = 64
pValue$ = 72
simple_list_insertpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 584
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 586
  00018	44 8b 44 24 40	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001d	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 587
  0002c	8b 44 24 40	 mov	 eax, DWORD PTR nPos$[rsp]
  00030	ff c0		 inc	 eax
  00032	4c 8b 4c 24 48	 mov	 r9, QWORD PTR pValue$[rsp]
  00037	44 8b c0	 mov	 r8d, eax
  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00044	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 588
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	c3		 ret	 0
simple_list_insertpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
nPos$ = 64
x$ = 72
simple_list_insertdouble_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 577
$LN3:
  00000	f2 0f 11 5c 24
	20		 movsdx	 QWORD PTR [rsp+32], xmm3
  00006	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 579
  00019	44 8b 44 24 40	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001e	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00028	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 580
  0002d	8b 44 24 40	 mov	 eax, DWORD PTR nPos$[rsp]
  00031	ff c0		 inc	 eax
  00033	f2 0f 10 5c 24
	48		 movsdx	 xmm3, QWORD PTR x$[rsp]
  00039	44 8b c0	 mov	 r8d, eax
  0003c	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00046	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 581
  0004b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004f	c3		 ret	 0
simple_list_insertdouble_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
nPos$ = 64
x$ = 72
simple_list_insertint_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 570
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 572
  00018	44 8b 44 24 40	 mov	 r8d, DWORD PTR nPos$[rsp]
  0001d	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_insertitem_gc
; Line 573
  0002c	8b 44 24 40	 mov	 eax, DWORD PTR nPos$[rsp]
  00030	ff c0		 inc	 eax
  00032	44 8b 4c 24 48	 mov	 r9d, DWORD PTR x$[rsp]
  00037	44 8b c0	 mov	 r8d, eax
  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00044	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 574
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	c3		 ret	 0
simple_list_insertint_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItems$ = 32
pState$ = 64
list$ = 72
x$ = 80
simple_list_insertitem_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 540
$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 543
  00013	83 7c 24 50 00	 cmp	 DWORD PTR x$[rsp], 0
  00018	7c 0e		 jl	 SHORT $LN4@simple_lis
  0001a	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0001f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00022	39 44 24 50	 cmp	 DWORD PTR x$[rsp], eax
  00026	7e 07		 jle	 SHORT $LN5@simple_lis
$LN4@simple_lis:
; Line 544
  00028	e9 f6 00 00 00	 jmp	 $LN6@simple_lis
  0002d	eb 22		 jmp	 SHORT $LN3@simple_lis
$LN5@simple_lis:
; Line 546
  0002f	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00034	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00037	39 44 24 50	 cmp	 DWORD PTR x$[rsp], eax
  0003b	75 14		 jne	 SHORT $LN2@simple_lis
; Line 547
  0003d	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 548
  0004c	e9 d2 00 00 00	 jmp	 $LN6@simple_lis
$LN2@simple_lis:
$LN3@simple_lis:
; Line 550
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00056	e8 00 00 00 00	 call	 simple_items_new_gc
  0005b	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 552
  00060	83 7c 24 50 00	 cmp	 DWORD PTR x$[rsp], 0
  00065	75 50		 jne	 SHORT $LN1@simple_lis
; Line 553
  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  0006c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00071	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00074	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 554
  00078	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  0007d	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
; Line 555
  00085	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0008a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  00092	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 556
  00096	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0009b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  000a0	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 557
  000a3	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  000a8	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000ab	ff c0		 inc	 eax
  000ad	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000b2	89 41 10	 mov	 DWORD PTR [rcx+16], eax
; Line 558
  000b5	eb 6c		 jmp	 SHORT $LN6@simple_lis
$LN1@simple_lis:
; Line 560
  000b7	8b 54 24 50	 mov	 edx, DWORD PTR x$[rsp]
  000bb	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000c0	e8 00 00 00 00	 call	 simple_list_getitem
; Line 562
  000c5	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  000ca	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000ce	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  000d3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000d7	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; Line 563
  000db	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  000e0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000e4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  000e9	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 564
  000ed	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  000f2	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000f7	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  000fb	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 565
  000ff	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00104	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00108	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  0010d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 566
  00111	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00116	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00119	ff c0		 inc	 eax
  0011b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00120	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN6@simple_lis:
; Line 567
  00123	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00127	c3		 ret	 0
simple_list_insertitem_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItems$ = 32
pItemsNext$ = 40
pState$ = 64
list$ = 72
simple_list_deleteallitems_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 168
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 170
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00016	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 171
  0001b	48 83 7c 24 20
	00		 cmp	 QWORD PTR pItems$[rsp], 0
  00021	75 05		 jne	 SHORT $LN4@simple_lis
; Line 172
  00023	e9 b0 00 00 00	 jmp	 $LN5@simple_lis
$LN4@simple_lis:
; Line 174
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  0002d	48 89 44 24 28	 mov	 QWORD PTR pItemsNext$[rsp], rax
$LN3@simple_lis:
; Line 176
  00032	48 83 7c 24 28
	00		 cmp	 QWORD PTR pItemsNext$[rsp], 0
  00038	74 29		 je	 SHORT $LN2@simple_lis
; Line 177
  0003a	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  0003f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00043	48 89 44 24 28	 mov	 QWORD PTR pItemsNext$[rsp], rax
; Line 178
  00048	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItems$[rsp]
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00052	e8 00 00 00 00	 call	 simple_items_delete_gc
; Line 179
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR pItemsNext$[rsp]
  0005c	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 180
  00061	eb cf		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
; Line 181
  00063	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00068	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
; Line 182
  0006f	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00074	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; Line 183
  0007c	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00081	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 184
  00089	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0008e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0
; Line 185
  00095	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0009a	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0
; Line 187
  000a1	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  000a6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  000ab	e8 00 00 00 00	 call	 simple_list_deletearray_gc
; Line 189
  000b0	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  000b5	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  000ba	74 1c		 je	 SHORT $LN1@simple_lis
; Line 190
  000bc	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  000c1	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  000c5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  000ca	e8 00 00 00 00	 call	 simple_hashtable_delete_gc
  000cf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000d4	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
$LN1@simple_lis:
$LN5@simple_lis:
; Line 192
  000d8	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000dc	c3		 ret	 0
simple_list_deleteallitems_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_ispointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 374
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 375
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_gettype
  0001b	83 f8 03	 cmp	 eax, 3
  0001e	75 07		 jne	 SHORT $LN1@simple_lis
; Line 376
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 378
  00027	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 379
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_ispointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_islist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 366
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 367
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_gettype
  0001b	83 f8 04	 cmp	 eax, 4
  0001e	75 07		 jne	 SHORT $LN1@simple_lis
; Line 368
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 370
  00027	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 371
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_islist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_isstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 350
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 351
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_gettype
  0001b	83 f8 01	 cmp	 eax, 1
  0001e	75 07		 jne	 SHORT $LN1@simple_lis
; Line 352
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 354
  00027	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 355
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_isstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_isnumber PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 358
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 359
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_gettype
  0001b	83 f8 02	 cmp	 eax, 2
  0001e	75 07		 jne	 SHORT $LN1@simple_lis
; Line 360
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 362
  00027	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 363
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_isnumber ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
tv133 = 36
pNewList2$ = 40
pState$ = 64
pNewList$ = 72
list$ = 80
simple_list_copy_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 87
$LN16:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 96
  00013	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  00018	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0001c	75 05		 jne	 SHORT $LN13@simple_lis
; Line 97
  0001e	e9 83 01 00 00	 jmp	 $LN14@simple_lis
$LN13@simple_lis:
; Line 99
  00023	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0002b	eb 0a		 jmp	 SHORT $LN12@simple_lis
$LN11@simple_lis:
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00031	ff c0		 inc	 eax
  00033	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN12@simple_lis:
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR list$[rsp]
  0003c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003f	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00043	0f 8f 5d 01 00
	00		 jg	 $LN10@simple_lis
; Line 100
  00049	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0004d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00052	e8 00 00 00 00	 call	 simple_list_getitem
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	c1 e8 03	 shr	 eax, 3
  0005c	83 e0 03	 and	 eax, 3
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 26		 jne	 SHORT $LN9@simple_lis
; Line 101
  00064	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00068	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_getitem
  00072	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00076	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00080	e8 00 00 00 00	 call	 simple_list_addint_gc
  00085	e9 17 01 00 00	 jmp	 $LN8@simple_lis
$LN9@simple_lis:
; Line 103
  0008a	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0008e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00093	e8 00 00 00 00	 call	 simple_list_getitem
  00098	8b 00		 mov	 eax, DWORD PTR [rax]
  0009a	c1 e8 03	 shr	 eax, 3
  0009d	83 e0 03	 and	 eax, 3
  000a0	83 f8 02	 cmp	 eax, 2
  000a3	75 27		 jne	 SHORT $LN7@simple_lis
; Line 104
  000a5	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000ae	e8 00 00 00 00	 call	 simple_list_getitem
  000b3	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  000b8	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  000bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_list_adddouble_gc
  000c7	e9 d5 00 00 00	 jmp	 $LN6@simple_lis
$LN7@simple_lis:
; Line 106
  000cc	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000d0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000d5	e8 00 00 00 00	 call	 simple_list_isstring
  000da	85 c0		 test	 eax, eax
  000dc	74 48		 je	 SHORT $LN5@simple_lis
; Line 107
  000de	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000e2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  000e7	e8 00 00 00 00	 call	 simple_list_getitem
  000ec	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000f0	e8 00 00 00 00	 call	 simple_string_size
  000f5	89 44 24 24	 mov	 DWORD PTR tv133[rsp], eax
  000f9	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000fd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00102	e8 00 00 00 00	 call	 simple_list_getitem
  00107	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0010b	8b 4c 24 24	 mov	 ecx, DWORD PTR tv133[rsp]
  0010f	44 8b c9	 mov	 r9d, ecx
  00112	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00115	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  0011a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0011f	e8 00 00 00 00	 call	 simple_list_addstring2_gc
  00124	eb 7b		 jmp	 SHORT $LN4@simple_lis
$LN5@simple_lis:
; Line 109
  00126	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0012a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0012f	e8 00 00 00 00	 call	 simple_list_ispointer
  00134	85 c0		 test	 eax, eax
  00136	74 23		 je	 SHORT $LN3@simple_lis
; Line 110
  00138	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0013c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00141	e8 00 00 00 00	 call	 simple_list_getitem
  00146	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0014a	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  0014f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00154	e8 00 00 00 00	 call	 simple_list_addpointer_gc
  00159	eb 46		 jmp	 SHORT $LN2@simple_lis
$LN3@simple_lis:
; Line 112
  0015b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0015f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00164	e8 00 00 00 00	 call	 simple_list_islist
  00169	85 c0		 test	 eax, eax
  0016b	74 34		 je	 SHORT $LN1@simple_lis
; Line 113
  0016d	48 8b 54 24 48	 mov	 rdx, QWORD PTR pNewList$[rsp]
  00172	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00177	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0017c	48 89 44 24 28	 mov	 QWORD PTR pNewList2$[rsp], rax
; Line 114
  00181	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00185	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  0018a	e8 00 00 00 00	 call	 simple_list_getlist
  0018f	4c 8b c0	 mov	 r8, rax
  00192	48 8b 54 24 28	 mov	 rdx, QWORD PTR pNewList2$[rsp]
  00197	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0019c	e8 00 00 00 00	 call	 simple_list_copy_gc
$LN1@simple_lis:
$LN2@simple_lis:
$LN4@simple_lis:
$LN6@simple_lis:
$LN8@simple_lis:
; Line 116
  001a1	e9 87 fe ff ff	 jmp	 $LN11@simple_lis
$LN10@simple_lis:
$LN14@simple_lis:
; Line 117
  001a6	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001aa	c3		 ret	 0
simple_list_copy_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 8
pItems$ = 16
index$ = 24
simple_list_setactiveitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 290
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 292
  0000f	48 8b 44 24 08	 mov	 rax, QWORD PTR list$[rsp]
  00014	48 8b 4c 24 10	 mov	 rcx, QWORD PTR pItems$[rsp]
  00019	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 293
  0001d	8b 44 24 18	 mov	 eax, DWORD PTR index$[rsp]
  00021	ff c0		 inc	 eax
  00023	48 8b 4c 24 08	 mov	 rcx, QWORD PTR list$[rsp]
  00028	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 294
  0002b	c3		 ret	 0
simple_list_setactiveitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list2$ = 40
list$ = 64
index$ = 72
simple_list_getlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 493
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 497
  0000d	8b 54 24 48	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_getitem
  0001b	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 498
  00020	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00025	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00029	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 499
  0002e	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
; Line 500
  00033	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00037	c3		 ret	 0
simple_list_getlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
pState$ = 64
list$ = 72
index$ = 80
simple_list_setlist_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 485
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 488
  00013	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  00017	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0001c	e8 00 00 00 00	 call	 simple_list_getitem
  00021	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 489
  00026	41 b8 04 00 00
	00		 mov	 r8d, 4
  0002c	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00036	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 490
  0003b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003f	c3		 ret	 0
simple_list_setlist_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list2$ = 40
pState$ = 64
list$ = 72
simple_list_newlist_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 473
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 477
  0000e	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 478
  0001d	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00022	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00025	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0002a	e8 00 00 00 00	 call	 simple_list_getitem
  0002f	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 479
  00034	41 b8 04 00 00
	00		 mov	 r8d, 4
  0003a	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  0003f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00044	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 480
  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0004e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00052	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 481
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
; Line 482
  0005c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00060	c3		 ret	 0
simple_list_newlist_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 64
list$ = 72
str$ = 80
str_size$ = 88
simple_list_addstring2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 465
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 467
  00018	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 468
  00027	8b 44 24 58	 mov	 eax, DWORD PTR str_size$[rsp]
  0002b	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0002f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR str$[rsp]
  00034	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00039	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0003d	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	e8 00 00 00 00	 call	 simple_list_setstring2_gc
; Line 469
  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	c3		 ret	 0
simple_list_addstring2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
str$ = 64
simple_list_addstring_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 458
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 460
  00013	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 461
  00022	4c 8b 4c 24 40	 mov	 r9, QWORD PTR str$[rsp]
  00027	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0002c	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00030	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0003a	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 462
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
simple_list_addstring_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
string$ = 40
pState$ = 64
list$ = 72
index$ = 80
str$ = 88
str_size$ = 96
simple_list_setstring2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 447
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 451
  00018	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00021	e8 00 00 00 00	 call	 simple_list_getitem
  00026	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 452
  0002b	41 b8 01 00 00
	00		 mov	 r8d, 1
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 453
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 454
  0004e	44 8b 4c 24 60	 mov	 r9d, DWORD PTR str_size$[rsp]
  00053	4c 8b 44 24 58	 mov	 r8, QWORD PTR str$[rsp]
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  0005d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00062	e8 00 00 00 00	 call	 simple_string_set2_gc
; Line 455
  00067	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006b	c3		 ret	 0
simple_list_setstring2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
string$ = 40
pState$ = 64
list$ = 72
index$ = 80
str$ = 88
simple_list_setstsimple_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 436
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 440
  00018	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00021	e8 00 00 00 00	 call	 simple_list_getitem
  00026	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 441
  0002b	41 b8 01 00 00
	00		 mov	 r8d, 1
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 442
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00045	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00049	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 443
  0004e	4c 8b 44 24 58	 mov	 r8, QWORD PTR str$[rsp]
  00053	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0005d	e8 00 00 00 00	 call	 simple_string_set_gc
; Line 444
  00062	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00066	c3		 ret	 0
simple_list_setstsimple_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
x$ = 64
simple_list_adddouble_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 428
$LN3:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 430
  00014	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001e	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 431
  00023	f2 0f 10 5c 24
	40		 movsdx	 xmm3, QWORD PTR x$[rsp]
  00029	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0002e	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00032	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0003c	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 432
  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
simple_list_adddouble_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
pState$ = 64
list$ = 72
index$ = 80
number$ = 88
simple_list_setdouble_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 418
$LN3:
  00000	f2 0f 11 5c 24
	20		 movsdx	 QWORD PTR [rsp+32], xmm3
  00006	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 421
  00019	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_getitem
  00027	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 422
  0002c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00032	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003c	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 423
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00046	f2 0f 10 44 24
	58		 movsdx	 xmm0, QWORD PTR number$[rsp]
  0004c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
; Line 424
  00051	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00056	8b 00		 mov	 eax, DWORD PTR [rax]
  00058	83 e0 e7	 and	 eax, -25		; ffffffe7H
  0005b	83 c8 10	 or	 eax, 16
  0005e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItem$[rsp]
  00063	89 01		 mov	 DWORD PTR [rcx], eax
; Line 425
  00065	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00069	c3		 ret	 0
simple_list_setdouble_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
pointer$ = 64
simple_list_testblockpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 528
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 530
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 531
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82827
  0001a	e8 00 00 00 00	 call	 puts
; Line 532
  0001f	48 8b 44 24 20	 mov	 rax, QWORD PTR list$[rsp]
  00024	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00027	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82828
  0002e	e8 00 00 00 00	 call	 printf
; Line 533
  00033	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00037	c3		 ret	 0
simple_list_testblockpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
index$ = 56
simple_list_isblockpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 520
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 521
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_gettype
  0001b	83 f8 05	 cmp	 eax, 5
  0001e	75 07		 jne	 SHORT $LN1@simple_lis
; Line 522
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 524
  00027	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 525
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_list_isblockpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
pBlock$ = 64
simple_list_addblockpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 513
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 515
  00013	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 516
  00022	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pBlock$[rsp]
  00027	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0002c	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00030	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0003a	e8 00 00 00 00	 call	 simple_list_setblockpointer_gc
; Line 517
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
simple_list_addblockpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
pState$ = 64
list$ = 72
index$ = 80
pBlock$ = 88
simple_list_setblockpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 504
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 507
  00018	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00021	e8 00 00 00 00	 call	 simple_list_getitem
  00026	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 508
  0002b	41 b8 05 00 00
	00		 mov	 r8d, 5
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 509
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00045	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pBlock$[rsp]
  0004a	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 510
  0004e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00052	c3		 ret	 0
simple_list_setblockpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
pValue$ = 64
simple_list_addpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 410
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 412
  00013	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 413
  00022	4c 8b 4c 24 40	 mov	 r9, QWORD PTR pValue$[rsp]
  00027	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0002c	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00030	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0003a	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 414
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
simple_list_addpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
pState$ = 64
list$ = 72
index$ = 80
pValue$ = 88
simple_list_setpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 401
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 404
  00018	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00021	e8 00 00 00 00	 call	 simple_list_getitem
  00026	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 405
  0002b	41 b8 03 00 00
	00		 mov	 r8d, 3
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 406
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00045	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pValue$[rsp]
  0004a	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 407
  0004e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00052	c3		 ret	 0
simple_list_setpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
list$ = 56
x$ = 64
simple_list_addint_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 393
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 395
  00013	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_list_newitem_gc
; Line 396
  00022	44 8b 4c 24 40	 mov	 r9d, DWORD PTR x$[rsp]
  00027	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0002c	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00030	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0003a	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 397
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
simple_list_addint_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
pState$ = 64
list$ = 72
index$ = 80
number$ = 88
simple_list_setint_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 383
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 386
  00018	8b 54 24 50	 mov	 edx, DWORD PTR index$[rsp]
  0001c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00021	e8 00 00 00 00	 call	 simple_list_getitem
  00026	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 387
  0002b	41 b8 02 00 00
	00		 mov	 r8d, 2
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 388
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00045	8b 4c 24 58	 mov	 ecx, DWORD PTR number$[rsp]
  00049	89 48 08	 mov	 DWORD PTR [rax+8], ecx
; Line 389
  0004c	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00051	8b 00		 mov	 eax, DWORD PTR [rax]
  00053	83 e0 e7	 and	 eax, -25		; ffffffe7H
  00056	83 c8 08	 or	 eax, 8
  00059	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItem$[rsp]
  0005e	89 01		 mov	 DWORD PTR [rcx], eax
; Line 390
  00060	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00064	c3		 ret	 0
simple_list_setint_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list$ = 64
index$ = 72
simple_list_gettype PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 339
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 342
  0000d	8b 54 24 48	 mov	 edx, DWORD PTR index$[rsp]
  00011	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00016	e8 00 00 00 00	 call	 simple_list_getitem
  0001b	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 343
  00020	48 83 7c 24 20
	00		 cmp	 QWORD PTR pItem$[rsp], 0
  00026	74 0c		 je	 SHORT $LN1@simple_lis
; Line 344
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0002d	8b 00		 mov	 eax, DWORD PTR [rax]
  0002f	83 e0 07	 and	 eax, 7
  00032	eb 02		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 346
  00034	33 c0		 xor	 eax, eax
$LN2@simple_lis:
; Line 347
  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
simple_list_gettype ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
t$ = 36
nSize$ = 40
y$ = 48
list2$ = 56
cStr$ = 64
list$ = 96
simple_list_print PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 120
$LN24:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 127
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR list$[rsp]
  0000e	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00012	7d 05		 jge	 SHORT $LN21@simple_lis
; Line 128
  00014	e9 0e 02 00 00	 jmp	 $LN22@simple_lis
$LN21@simple_lis:
; Line 130
  00019	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00021	eb 0a		 jmp	 SHORT $LN20@simple_lis
$LN19@simple_lis:
  00023	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00027	ff c0		 inc	 eax
  00029	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN20@simple_lis:
  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR list$[rsp]
  00032	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00035	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00039	0f 8f e8 01 00
	00		 jg	 $LN18@simple_lis
; Line 131
  0003f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00043	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00048	e8 00 00 00 00	 call	 simple_list_isstring
  0004d	85 c0		 test	 eax, eax
  0004f	0f 84 82 00 00
	00		 je	 $LN17@simple_lis
; Line 132
  00055	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00059	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  0005e	e8 00 00 00 00	 call	 simple_list_getitem
  00063	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 89 44 24 40	 mov	 QWORD PTR cStr$[rsp], rax
; Line 133
  0006f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00073	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00078	e8 00 00 00 00	 call	 simple_list_getitem
  0007d	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00081	e8 00 00 00 00	 call	 simple_string_size
  00086	89 44 24 28	 mov	 DWORD PTR nSize$[rsp], eax
; Line 134
  0008a	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR t$[rsp], 0
  00092	eb 0a		 jmp	 SHORT $LN16@simple_lis
$LN15@simple_lis:
  00094	8b 44 24 24	 mov	 eax, DWORD PTR t$[rsp]
  00098	ff c0		 inc	 eax
  0009a	89 44 24 24	 mov	 DWORD PTR t$[rsp], eax
$LN16@simple_lis:
  0009e	8b 44 24 28	 mov	 eax, DWORD PTR nSize$[rsp]
  000a2	39 44 24 24	 cmp	 DWORD PTR t$[rsp], eax
  000a6	7d 1e		 jge	 SHORT $LN14@simple_lis
; Line 135
  000a8	48 63 44 24 24	 movsxd	 rax, DWORD PTR t$[rsp]
  000ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  000b2	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  000b6	8b d0		 mov	 edx, eax
  000b8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82512
  000bf	e8 00 00 00 00	 call	 printf
; Line 136
  000c4	eb ce		 jmp	 SHORT $LN15@simple_lis
$LN14@simple_lis:
; Line 137
  000c6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82513
  000cd	e8 00 00 00 00	 call	 printf
  000d2	e9 4b 01 00 00	 jmp	 $LN13@simple_lis
$LN17@simple_lis:
; Line 139
  000d7	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  000e0	e8 00 00 00 00	 call	 simple_list_isnumber
  000e5	85 c0		 test	 eax, eax
  000e7	0f 84 b8 00 00
	00		 je	 $LN12@simple_lis
; Line 140
  000ed	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000f1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  000f6	e8 00 00 00 00	 call	 simple_list_getitem
  000fb	8b 00		 mov	 eax, DWORD PTR [rax]
  000fd	c1 e8 03	 shr	 eax, 3
  00100	83 e0 03	 and	 eax, 3
  00103	83 f8 02	 cmp	 eax, 2
  00106	75 63		 jne	 SHORT $LN11@simple_lis
; Line 141
  00108	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0010c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00111	e8 00 00 00 00	 call	 simple_list_getitem
  00116	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0011b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR y$[rsp], xmm0
; Line 142
  00121	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR y$[rsp]
  00127	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0012b	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR y$[rsp]
  00131	66 0f 2e c8	 ucomisd xmm1, xmm0
  00135	7a 1b		 jp	 SHORT $LN10@simple_lis
  00137	75 19		 jne	 SHORT $LN10@simple_lis
; Line 143
  00139	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR y$[rsp]
  0013f	66 48 0f 7e ca	 movd	 rdx, xmm1
  00144	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82519
  0014b	e8 00 00 00 00	 call	 printf
; Line 144
  00150	eb 17		 jmp	 SHORT $LN9@simple_lis
$LN10@simple_lis:
; Line 145
  00152	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR y$[rsp]
  00158	66 48 0f 7e ca	 movd	 rdx, xmm1
  0015d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82521
  00164	e8 00 00 00 00	 call	 printf
$LN9@simple_lis:
; Line 146
  00169	eb 38		 jmp	 SHORT $LN8@simple_lis
$LN11@simple_lis:
; Line 148
  0016b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0016f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  00174	e8 00 00 00 00	 call	 simple_list_getitem
  00179	8b 00		 mov	 eax, DWORD PTR [rax]
  0017b	c1 e8 03	 shr	 eax, 3
  0017e	83 e0 03	 and	 eax, 3
  00181	83 f8 01	 cmp	 eax, 1
  00184	75 1d		 jne	 SHORT $LN7@simple_lis
; Line 149
  00186	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0018a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  0018f	e8 00 00 00 00	 call	 simple_list_getitem
  00194	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00197	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82524
  0019e	e8 00 00 00 00	 call	 printf
$LN7@simple_lis:
$LN8@simple_lis:
; Line 150
  001a3	eb 7d		 jmp	 SHORT $LN6@simple_lis
$LN12@simple_lis:
; Line 152
  001a5	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  001a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  001ae	e8 00 00 00 00	 call	 simple_list_islist
  001b3	85 c0		 test	 eax, eax
  001b5	74 3b		 je	 SHORT $LN5@simple_lis
; Line 153
  001b7	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  001bb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  001c0	e8 00 00 00 00	 call	 simple_list_getlist
  001c5	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 154
  001ca	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  001cf	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  001d4	85 c0		 test	 eax, eax
  001d6	74 0e		 je	 SHORT $LN4@simple_lis
; Line 155
  001d8	48 8b 54 24 38	 mov	 rdx, QWORD PTR list2$[rsp]
  001dd	33 c9		 xor	 ecx, ecx
  001df	e8 00 00 00 00	 call	 simple_vm_oop_printobj
; Line 157
  001e4	eb 0a		 jmp	 SHORT $LN3@simple_lis
$LN4@simple_lis:
; Line 158
  001e6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  001eb	e8 00 00 00 00	 call	 simple_list_print
$LN3@simple_lis:
; Line 159
  001f0	eb 30		 jmp	 SHORT $LN2@simple_lis
$LN5@simple_lis:
; Line 161
  001f2	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  001f6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  001fb	e8 00 00 00 00	 call	 simple_list_ispointer
  00200	85 c0		 test	 eax, eax
  00202	74 1e		 je	 SHORT $LN1@simple_lis
; Line 162
  00204	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00208	48 8b 4c 24 60	 mov	 rcx, QWORD PTR list$[rsp]
  0020d	e8 00 00 00 00	 call	 simple_list_getitem
  00212	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00216	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82532
  0021d	e8 00 00 00 00	 call	 printf
$LN1@simple_lis:
$LN2@simple_lis:
$LN6@simple_lis:
$LN13@simple_lis:
; Line 164
  00222	e9 fc fd ff ff	 jmp	 $LN19@simple_lis
$LN18@simple_lis:
$LN22@simple_lis:
; Line 165
  00227	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0022b	c3		 ret	 0
simple_list_print ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pItems$ = 40
pItemsPrev$ = 48
pState$ = 80
list$ = 88
index$ = 96
simple_list_deleteitem_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 297
$LN13:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 302
  00013	83 7c 24 60 00	 cmp	 DWORD PTR index$[rsp], 0
  00018	0f 8e 28 01 00
	00		 jle	 $LN10@simple_lis
  0001e	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00023	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00027	0f 8e 19 01 00
	00		 jle	 $LN10@simple_lis
  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00032	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00035	39 44 24 60	 cmp	 DWORD PTR index$[rsp], eax
  00039	0f 8f 07 01 00
	00		 jg	 $LN10@simple_lis
; Line 304
  0003f	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00044	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00047	39 44 24 60	 cmp	 DWORD PTR index$[rsp], eax
  0004b	75 1e		 jne	 SHORT $LN9@simple_lis
; Line 305
  0004d	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 89 44 24 28	 mov	 QWORD PTR pItems$[rsp], rax
; Line 306
  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  00060	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00064	48 89 44 24 30	 mov	 QWORD PTR pItemsPrev$[rsp], rax
; Line 309
  00069	eb 4e		 jmp	 SHORT $LN8@simple_lis
$LN9@simple_lis:
; Line 310
  0006b	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00070	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00073	48 89 44 24 28	 mov	 QWORD PTR pItems$[rsp], rax
; Line 311
  00078	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR pItemsPrev$[rsp], 0
; Line 312
  00081	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00089	eb 0a		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
  0008b	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0008f	ff c0		 inc	 eax
  00091	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_lis:
  00095	8b 44 24 60	 mov	 eax, DWORD PTR index$[rsp]
  00099	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0009d	7d 1a		 jge	 SHORT $LN5@simple_lis
; Line 313
  0009f	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  000a4	48 89 44 24 30	 mov	 QWORD PTR pItemsPrev$[rsp], rax
; Line 314
  000a9	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  000ae	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b2	48 89 44 24 28	 mov	 QWORD PTR pItems$[rsp], rax
; Line 315
  000b7	eb d2		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
$LN8@simple_lis:
; Line 318
  000b9	83 7c 24 60 01	 cmp	 DWORD PTR index$[rsp], 1
  000be	75 11		 jne	 SHORT $LN4@simple_lis
; Line 319
  000c0	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000c5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItems$[rsp]
  000ca	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000ce	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN4@simple_lis:
; Line 321
  000d1	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000d6	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000d9	39 44 24 60	 cmp	 DWORD PTR index$[rsp], eax
  000dd	75 0e		 jne	 SHORT $LN3@simple_lis
; Line 322
  000df	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000e4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItemsPrev$[rsp]
  000e9	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN3@simple_lis:
; Line 324
  000ed	48 83 7c 24 30
	00		 cmp	 QWORD PTR pItemsPrev$[rsp], 0
  000f3	74 12		 je	 SHORT $LN2@simple_lis
; Line 325
  000f5	48 8b 44 24 30	 mov	 rax, QWORD PTR pItemsPrev$[rsp]
  000fa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItems$[rsp]
  000ff	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00103	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN2@simple_lis:
; Line 327
  00107	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  0010c	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00111	74 12		 je	 SHORT $LN1@simple_lis
; Line 328
  00113	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  00118	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItemsPrev$[rsp]
  00121	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
$LN1@simple_lis:
; Line 330
  00125	48 8b 54 24 28	 mov	 rdx, QWORD PTR pItems$[rsp]
  0012a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  0012f	e8 00 00 00 00	 call	 simple_items_delete_gc
; Line 331
  00134	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00139	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0013c	ff c8		 dec	 eax
  0013e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR list$[rsp]
  00143	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN10@simple_lis:
; Line 334
  00146	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  0014b	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0
; Line 335
  00152	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00157	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 336
  0015f	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00163	c3		 ret	 0
simple_list_deleteitem_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItems$ = 32
pItemsNext$ = 40
pState$ = 64
list$ = 72
simple_list_delete_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 65
$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 67
  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00013	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00016	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 68
  0001b	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  00020	48 89 44 24 28	 mov	 QWORD PTR pItemsNext$[rsp], rax
$LN3@simple_lis:
; Line 70
  00025	48 83 7c 24 28
	00		 cmp	 QWORD PTR pItemsNext$[rsp], 0
  0002b	74 29		 je	 SHORT $LN2@simple_lis
; Line 71
  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  00032	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00036	48 89 44 24 28	 mov	 QWORD PTR pItemsNext$[rsp], rax
; Line 72
  0003b	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItems$[rsp]
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00045	e8 00 00 00 00	 call	 simple_items_delete_gc
; Line 73
  0004a	48 8b 44 24 28	 mov	 rax, QWORD PTR pItemsNext$[rsp]
  0004f	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 74
  00054	eb cf		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
; Line 76
  00056	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00060	e8 00 00 00 00	 call	 simple_list_deletearray_gc
; Line 78
  00065	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0006a	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  0006f	74 1c		 je	 SHORT $LN1@simple_lis
; Line 79
  00071	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00076	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0007a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0007f	e8 00 00 00 00	 call	 simple_hashtable_delete_gc
  00084	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00089	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
$LN1@simple_lis:
; Line 81
  0008d	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00097	e8 00 00 00 00	 call	 simple_state_free
; Line 82
  0009c	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR list$[rsp], 0
; Line 83
  000a5	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
; Line 84
  000aa	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000ae	c3		 ret	 0
simple_list_delete_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 0
pItems$ = 8
pItem$ = 16
list$ = 48
index$ = 56
simple_list_getitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 215
$LN29:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 219
  0000d	48 c7 44 24 10
	00 00 00 00	 mov	 QWORD PTR pItem$[rsp], 0
; Line 221
  00016	83 7c 24 38 00	 cmp	 DWORD PTR index$[rsp], 0
  0001b	0f 8e 01 03 00
	00		 jle	 $LN26@simple_lis
  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00026	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0002a	0f 8e f2 02 00
	00		 jle	 $LN26@simple_lis
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00035	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00038	39 44 24 38	 cmp	 DWORD PTR index$[rsp], eax
  0003c	0f 8f e0 02 00
	00		 jg	 $LN26@simple_lis
; Line 223
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00047	48 83 78 20 00	 cmp	 QWORD PTR [rax+32], 0
  0004c	74 1a		 je	 SHORT $LN25@simple_lis
; Line 224
  0004e	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  00052	ff c8		 dec	 eax
  00054	48 98		 cdqe
  00056	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0005b	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  0005f	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  00063	e9 bf 02 00 00	 jmp	 $LN27@simple_lis
$LN25@simple_lis:
; Line 227
  00068	83 7c 24 38 00	 cmp	 DWORD PTR index$[rsp], 0
  0006d	75 34		 jne	 SHORT $LN24@simple_lis
; Line 228
  0006f	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00079	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007c	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 229
  00080	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  00084	ff c0		 inc	 eax
  00086	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0008b	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 230
  0008e	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00093	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	e9 89 02 00 00	 jmp	 $LN27@simple_lis
  0009e	e9 16 02 00 00	 jmp	 $LN23@simple_lis
$LN24@simple_lis:
; Line 232
  000a3	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000a8	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000ab	39 44 24 38	 cmp	 DWORD PTR index$[rsp], eax
  000af	75 36		 jne	 SHORT $LN22@simple_lis
; Line 233
  000b1	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000bb	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000bf	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 234
  000c3	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  000c7	ff c0		 inc	 eax
  000c9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000ce	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 235
  000d1	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000d6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000da	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000dd	e9 45 02 00 00	 jmp	 $LN27@simple_lis
  000e2	e9 d2 01 00 00	 jmp	 $LN21@simple_lis
$LN22@simple_lis:
; Line 238
  000e7	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000ec	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  000ef	39 44 24 38	 cmp	 DWORD PTR index$[rsp], eax
  000f3	75 5a		 jne	 SHORT $LN20@simple_lis
  000f5	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000fa	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  000ff	74 4e		 je	 SHORT $LN20@simple_lis
; Line 239
  00101	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00106	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0010a	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0010f	74 39		 je	 SHORT $LN19@simple_lis
; Line 240
  00111	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00116	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0011a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0011f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00123	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; Line 241
  00127	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0012c	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  0012f	ff c0		 inc	 eax
  00131	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00136	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 242
  00139	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0013e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00142	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00145	e9 dd 01 00 00	 jmp	 $LN27@simple_lis
$LN19@simple_lis:
; Line 243
  0014a	e9 6a 01 00 00	 jmp	 $LN18@simple_lis
$LN20@simple_lis:
; Line 246
  0014f	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00154	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00157	ff c8		 dec	 eax
  00159	39 44 24 38	 cmp	 DWORD PTR index$[rsp], eax
  0015d	75 22		 jne	 SHORT $LN17@simple_lis
  0015f	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00164	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00169	74 16		 je	 SHORT $LN17@simple_lis
; Line 247
  0016b	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00170	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00174	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00177	e9 ab 01 00 00	 jmp	 $LN27@simple_lis
  0017c	e9 38 01 00 00	 jmp	 $LN16@simple_lis
$LN17@simple_lis:
; Line 250
  00181	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00186	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00189	39 44 24 38	 cmp	 DWORD PTR index$[rsp], eax
  0018d	0f 8e 8b 00 00
	00		 jle	 $LN15@simple_lis
  00193	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00198	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  0019d	74 7f		 je	 SHORT $LN15@simple_lis
; Line 251
  0019f	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  001a4	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001a8	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 252
  001ad	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  001b2	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  001b5	ff c8		 dec	 eax
  001b7	89 04 24	 mov	 DWORD PTR x$[rsp], eax
  001ba	eb 08		 jmp	 SHORT $LN14@simple_lis
$LN13@simple_lis:
  001bc	8b 04 24	 mov	 eax, DWORD PTR x$[rsp]
  001bf	ff c0		 inc	 eax
  001c1	89 04 24	 mov	 DWORD PTR x$[rsp], eax
$LN14@simple_lis:
  001c4	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  001c8	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  001cb	7f 42		 jg	 SHORT $LN12@simple_lis
; Line 253
  001cd	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  001d1	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  001d4	75 1c		 jne	 SHORT $LN11@simple_lis
; Line 254
  001d6	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  001da	ff c0		 inc	 eax
  001dc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  001e1	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 255
  001e4	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  001e9	48 8b 4c 24 08	 mov	 rcx, QWORD PTR pItems$[rsp]
  001ee	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
$LN11@simple_lis:
; Line 257
  001f2	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  001f7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001fa	48 89 44 24 10	 mov	 QWORD PTR pItem$[rsp], rax
; Line 258
  001ff	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  00204	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00208	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 259
  0020d	eb ad		 jmp	 SHORT $LN13@simple_lis
$LN12@simple_lis:
; Line 260
  0020f	48 8b 44 24 10	 mov	 rax, QWORD PTR pItem$[rsp]
  00214	e9 0e 01 00 00	 jmp	 $LN27@simple_lis
  00219	e9 9b 00 00 00	 jmp	 $LN10@simple_lis
$LN15@simple_lis:
; Line 263
  0021e	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00223	8b 4c 24 38	 mov	 ecx, DWORD PTR index$[rsp]
  00227	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  0022a	2b c1		 sub	 eax, ecx
  0022c	3b 44 24 38	 cmp	 eax, DWORD PTR index$[rsp]
  00230	0f 8d 83 00 00
	00		 jge	 $LN9@simple_lis
  00236	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0023b	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00240	74 77		 je	 SHORT $LN9@simple_lis
; Line 264
  00242	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00247	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0024b	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 265
  00250	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00255	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00258	ff c8		 dec	 eax
  0025a	89 04 24	 mov	 DWORD PTR x$[rsp], eax
  0025d	eb 08		 jmp	 SHORT $LN8@simple_lis
$LN7@simple_lis:
  0025f	8b 04 24	 mov	 eax, DWORD PTR x$[rsp]
  00262	ff c8		 dec	 eax
  00264	89 04 24	 mov	 DWORD PTR x$[rsp], eax
$LN8@simple_lis:
  00267	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  0026b	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  0026e	7c 42		 jl	 SHORT $LN6@simple_lis
; Line 266
  00270	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  00274	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  00277	75 1c		 jne	 SHORT $LN5@simple_lis
; Line 267
  00279	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  0027d	ff c0		 inc	 eax
  0027f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00284	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 268
  00287	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0028c	48 8b 4c 24 08	 mov	 rcx, QWORD PTR pItems$[rsp]
  00291	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
$LN5@simple_lis:
; Line 270
  00295	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  0029a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0029d	48 89 44 24 10	 mov	 QWORD PTR pItem$[rsp], rax
; Line 271
  002a2	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  002a7	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  002ab	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 272
  002b0	eb ad		 jmp	 SHORT $LN7@simple_lis
$LN6@simple_lis:
; Line 273
  002b2	48 8b 44 24 10	 mov	 rax, QWORD PTR pItem$[rsp]
  002b7	eb 6e		 jmp	 SHORT $LN27@simple_lis
$LN9@simple_lis:
$LN10@simple_lis:
$LN16@simple_lis:
$LN18@simple_lis:
$LN21@simple_lis:
$LN23@simple_lis:
; Line 276
  002b9	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  002be	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002c1	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 277
  002c6	c7 04 24 01 00
	00 00		 mov	 DWORD PTR x$[rsp], 1
  002cd	eb 08		 jmp	 SHORT $LN4@simple_lis
$LN3@simple_lis:
  002cf	8b 04 24	 mov	 eax, DWORD PTR x$[rsp]
  002d2	ff c0		 inc	 eax
  002d4	89 04 24	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_lis:
  002d7	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  002db	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  002de	7f 42		 jg	 SHORT $LN2@simple_lis
; Line 278
  002e0	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  002e4	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  002e7	75 1c		 jne	 SHORT $LN1@simple_lis
; Line 279
  002e9	8b 44 24 38	 mov	 eax, DWORD PTR index$[rsp]
  002ed	ff c0		 inc	 eax
  002ef	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  002f4	89 41 14	 mov	 DWORD PTR [rcx+20], eax
; Line 280
  002f7	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  002fc	48 8b 4c 24 08	 mov	 rcx, QWORD PTR pItems$[rsp]
  00301	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
$LN1@simple_lis:
; Line 282
  00305	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  0030a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0030d	48 89 44 24 10	 mov	 QWORD PTR pItem$[rsp], rax
; Line 283
  00312	48 8b 44 24 08	 mov	 rax, QWORD PTR pItems$[rsp]
  00317	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0031b	48 89 44 24 08	 mov	 QWORD PTR pItems$[rsp], rax
; Line 284
  00320	eb ad		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
$LN26@simple_lis:
; Line 286
  00322	48 8b 44 24 10	 mov	 rax, QWORD PTR pItem$[rsp]
$LN27@simple_lis:
; Line 287
  00327	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0032b	c3		 ret	 0
simple_list_getitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
pItem$ = 48
list2$ = 56
string$ = 64
mystr$ = 72
__$ArrayPad$ = 96
simple_list_test PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 1269
$LN21:
  00000	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00004	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000b	48 33 c4	 xor	 rax, rsp
  0000e	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 1275
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83498
  0001a	e8 00 00 00 00	 call	 printf
; Line 1276
  0001f	b9 0a 00 00 00	 mov	 ecx, 10
  00024	e8 00 00 00 00	 call	 simple_list_new
  00029	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1277
  0002e	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  00033	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83499
  0003d	e8 00 00 00 00	 call	 printf
; Line 1278
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83500
  00049	e8 00 00 00 00	 call	 printf
; Line 1279
  0004e	33 c9		 xor	 ecx, ecx
  00050	e8 00 00 00 00	 call	 simple_list_new
  00055	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 1280
  0005a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83501
  00061	e8 00 00 00 00	 call	 printf
; Line 1281
  00066	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0006e	eb 0a		 jmp	 SHORT $LN18@simple_lis
$LN17@simple_lis:
  00070	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00074	ff c0		 inc	 eax
  00076	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN18@simple_lis:
  0007a	83 7c 24 20 0f	 cmp	 DWORD PTR x$[rsp], 15
  0007f	7f 1c		 jg	 SHORT $LN16@simple_lis
; Line 1282
  00081	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83505
  0008c	e8 00 00 00 00	 call	 printf
; Line 1283
  00091	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00096	e8 00 00 00 00	 call	 simple_list_newitem
; Line 1284
  0009b	eb d3		 jmp	 SHORT $LN17@simple_lis
$LN16@simple_lis:
; Line 1285
  0009d	48 8b 44 24 38	 mov	 rax, QWORD PTR list2$[rsp]
  000a2	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000a5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83506
  000ac	e8 00 00 00 00	 call	 printf
; Line 1286
  000b1	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  000b9	eb 0a		 jmp	 SHORT $LN15@simple_lis
$LN14@simple_lis:
  000bb	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000bf	ff c0		 inc	 eax
  000c1	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN15@simple_lis:
  000c5	83 7c 24 20 0a	 cmp	 DWORD PTR x$[rsp], 10
  000ca	7f 61		 jg	 SHORT $LN13@simple_lis
; Line 1288
  000cc	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000d0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  000d5	e8 00 00 00 00	 call	 simple_list_getitem
  000da	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1289
  000df	ba 01 00 00 00	 mov	 edx, 1
  000e4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  000e9	e8 00 00 00 00	 call	 simple_item_settype
; Line 1290
  000ee	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000f3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000f7	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1291
  000fc	44 8b 44 24 20	 mov	 r8d, DWORD PTR x$[rsp]
  00101	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83510
  00108	48 8d 4c 24 48	 lea	 rcx, QWORD PTR mystr$[rsp]
  0010d	e8 00 00 00 00	 call	 sprintf
; Line 1292
  00112	48 8d 54 24 48	 lea	 rdx, QWORD PTR mystr$[rsp]
  00117	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  0011c	e8 00 00 00 00	 call	 simple_string_set
; Line 1293
  00121	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  00126	e8 00 00 00 00	 call	 simple_string_print
; Line 1294
  0012b	eb 8e		 jmp	 SHORT $LN14@simple_lis
$LN13@simple_lis:
; Line 1295
  0012d	c7 44 24 20 0b
	00 00 00	 mov	 DWORD PTR x$[rsp], 11
  00135	eb 0a		 jmp	 SHORT $LN12@simple_lis
$LN11@simple_lis:
  00137	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0013b	ff c0		 inc	 eax
  0013d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN12@simple_lis:
  00141	83 7c 24 20 0f	 cmp	 DWORD PTR x$[rsp], 15
  00146	7f 24		 jg	 SHORT $LN10@simple_lis
; Line 1297
  00148	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0014c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00151	e8 00 00 00 00	 call	 simple_list_getitem
  00156	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1298
  0015b	ba 02 00 00 00	 mov	 edx, 2
  00160	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  00165	e8 00 00 00 00	 call	 simple_item_settype
; Line 1299
  0016a	eb cb		 jmp	 SHORT $LN11@simple_lis
$LN10@simple_lis:
; Line 1301
  0016c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83514
  00173	e8 00 00 00 00	 call	 printf
; Line 1302
  00178	ba 05 00 00 00	 mov	 edx, 5
  0017d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00182	e8 00 00 00 00	 call	 simple_list_deleteitem
; Line 1303
  00187	ba 05 00 00 00	 mov	 edx, 5
  0018c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00191	e8 00 00 00 00	 call	 simple_list_getitem
  00196	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1304
  0019b	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  001a0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001a4	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1305
  001a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  001ae	e8 00 00 00 00	 call	 simple_string_print
; Line 1306
  001b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83515
  001ba	e8 00 00 00 00	 call	 printf
; Line 1308
  001bf	ba 01 00 00 00	 mov	 edx, 1
  001c4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  001c9	e8 00 00 00 00	 call	 simple_list_deleteitem
; Line 1309
  001ce	ba 01 00 00 00	 mov	 edx, 1
  001d3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  001d8	e8 00 00 00 00	 call	 simple_list_getitem
  001dd	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1310
  001e2	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  001e7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001eb	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1311
  001f0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  001f5	e8 00 00 00 00	 call	 simple_string_print
; Line 1312
  001fa	48 8b 44 24 38	 mov	 rax, QWORD PTR list2$[rsp]
  001ff	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00202	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83516
  00209	e8 00 00 00 00	 call	 printf
; Line 1314
  0020e	48 8b 44 24 38	 mov	 rax, QWORD PTR list2$[rsp]
  00213	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00216	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  0021b	e8 00 00 00 00	 call	 simple_list_deleteitem
; Line 1315
  00220	48 8b 44 24 38	 mov	 rax, QWORD PTR list2$[rsp]
  00225	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00228	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83517
  0022f	e8 00 00 00 00	 call	 printf
; Line 1317
  00234	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83518
  0023b	e8 00 00 00 00	 call	 printf
; Line 1318
  00240	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00245	e8 00 00 00 00	 call	 simple_list_delete
; Line 1319
  0024a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83519
  00251	e8 00 00 00 00	 call	 printf
; Line 1320
  00256	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  0025b	e8 00 00 00 00	 call	 simple_list_delete
; Line 1321
  00260	e8 00 00 00 00	 call	 getchar
; Line 1323
  00265	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83520
  0026c	e8 00 00 00 00	 call	 printf
; Line 1324
  00271	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  00276	e8 00 00 00 00	 call	 simple_list_new
  0027b	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1325
  00280	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83521
  00287	e8 00 00 00 00	 call	 printf
; Line 1326
  0028c	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00294	eb 0a		 jmp	 SHORT $LN9@simple_lis
$LN8@simple_lis:
  00296	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0029a	ff c0		 inc	 eax
  0029c	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN9@simple_lis:
  002a0	81 7c 24 20 40
	42 0f 00	 cmp	 DWORD PTR x$[rsp], 1000000 ; 000f4240H
  002a8	7f 17		 jg	 SHORT $LN7@simple_lis
; Line 1327
  002aa	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG83525
  002b1	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  002b5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  002ba	e8 00 00 00 00	 call	 simple_list_setstring
; Line 1328
  002bf	eb d5		 jmp	 SHORT $LN8@simple_lis
$LN7@simple_lis:
; Line 1329
  002c1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83526
  002c8	e8 00 00 00 00	 call	 printf
; Line 1330
  002cd	e8 00 00 00 00	 call	 getchar
; Line 1331
  002d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83527
  002d9	e8 00 00 00 00	 call	 printf
; Line 1332
  002de	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  002e3	e8 00 00 00 00	 call	 simple_list_delete
; Line 1333
  002e8	e8 00 00 00 00	 call	 getchar
; Line 1335
  002ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83528
  002f4	e8 00 00 00 00	 call	 printf
; Line 1336
  002f9	b9 05 00 00 00	 mov	 ecx, 5
  002fe	e8 00 00 00 00	 call	 simple_list_new
  00303	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1338
  00308	ba 01 00 00 00	 mov	 edx, 1
  0030d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00312	e8 00 00 00 00	 call	 simple_list_getitem
  00317	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1339
  0031c	ba 01 00 00 00	 mov	 edx, 1
  00321	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  00326	e8 00 00 00 00	 call	 simple_item_settype
; Line 1340
  0032b	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  00330	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00334	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1341
  00339	48 8d 54 24 48	 lea	 rdx, QWORD PTR mystr$[rsp]
  0033e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  00343	e8 00 00 00 00	 call	 simple_string_set
; Line 1342
  00348	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  0034d	e8 00 00 00 00	 call	 simple_string_print
; Line 1344
  00352	ba 02 00 00 00	 mov	 edx, 2
  00357	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0035c	e8 00 00 00 00	 call	 simple_list_getitem
  00361	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1345
  00366	ba 04 00 00 00	 mov	 edx, 4
  0036b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  00370	e8 00 00 00 00	 call	 simple_item_settype
; Line 1346
  00375	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  0037a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0037e	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 1347
  00383	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00388	e8 00 00 00 00	 call	 simple_list_newitem
; Line 1348
  0038d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00392	e8 00 00 00 00	 call	 simple_list_newitem
; Line 1350
  00397	ba 01 00 00 00	 mov	 edx, 1
  0039c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  003a1	e8 00 00 00 00	 call	 simple_list_getitem
  003a6	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1351
  003ab	ba 01 00 00 00	 mov	 edx, 1
  003b0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  003b5	e8 00 00 00 00	 call	 simple_item_settype
; Line 1352
  003ba	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  003bf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003c3	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1353
  003c8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83529
  003cf	48 8d 4c 24 48	 lea	 rcx, QWORD PTR mystr$[rsp]
  003d4	e8 00 00 00 00	 call	 sprintf
; Line 1354
  003d9	48 8d 54 24 48	 lea	 rdx, QWORD PTR mystr$[rsp]
  003de	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  003e3	e8 00 00 00 00	 call	 simple_string_set
; Line 1355
  003e8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  003ed	e8 00 00 00 00	 call	 simple_string_print
; Line 1357
  003f2	ba 02 00 00 00	 mov	 edx, 2
  003f7	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  003fc	e8 00 00 00 00	 call	 simple_list_getitem
  00401	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1358
  00406	ba 01 00 00 00	 mov	 edx, 1
  0040b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  00410	e8 00 00 00 00	 call	 simple_item_settype
; Line 1359
  00415	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  0041a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0041e	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1360
  00423	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83530
  0042a	48 8d 4c 24 48	 lea	 rcx, QWORD PTR mystr$[rsp]
  0042f	e8 00 00 00 00	 call	 sprintf
; Line 1361
  00434	48 8d 54 24 48	 lea	 rdx, QWORD PTR mystr$[rsp]
  00439	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  0043e	e8 00 00 00 00	 call	 simple_string_set
; Line 1362
  00443	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  00448	e8 00 00 00 00	 call	 simple_string_print
; Line 1364
  0044d	ba 03 00 00 00	 mov	 edx, 3
  00452	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00457	e8 00 00 00 00	 call	 simple_list_getitem
  0045c	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1365
  00461	ba 01 00 00 00	 mov	 edx, 1
  00466	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  0046b	e8 00 00 00 00	 call	 simple_item_settype
; Line 1366
  00470	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  00475	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00479	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 1367
  0047e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83531
  00485	48 8d 4c 24 48	 lea	 rcx, QWORD PTR mystr$[rsp]
  0048a	e8 00 00 00 00	 call	 sprintf
; Line 1368
  0048f	48 8d 54 24 48	 lea	 rdx, QWORD PTR mystr$[rsp]
  00494	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  00499	e8 00 00 00 00	 call	 simple_string_set
; Line 1369
  0049e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  004a3	e8 00 00 00 00	 call	 simple_string_print
; Line 1371
  004a8	ba 04 00 00 00	 mov	 edx, 4
  004ad	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  004b2	e8 00 00 00 00	 call	 simple_list_getitem
  004b7	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1372
  004bc	ba 02 00 00 00	 mov	 edx, 2
  004c1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  004c6	e8 00 00 00 00	 call	 simple_item_settype
; Line 1374
  004cb	ba 05 00 00 00	 mov	 edx, 5
  004d0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  004d5	e8 00 00 00 00	 call	 simple_list_getitem
  004da	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1375
  004df	ba 03 00 00 00	 mov	 edx, 3
  004e4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItem$[rsp]
  004e9	e8 00 00 00 00	 call	 simple_item_settype
; Line 1376
  004ee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83532
  004f5	e8 00 00 00 00	 call	 printf
; Line 1377
  004fa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  004ff	e8 00 00 00 00	 call	 simple_list_print
; Line 1379
  00504	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83533
  0050b	e8 00 00 00 00	 call	 printf
; Line 1380
  00510	33 c9		 xor	 ecx, ecx
  00512	e8 00 00 00 00	 call	 simple_list_new
  00517	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 1381
  0051c	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00521	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00526	e8 00 00 00 00	 call	 simple_list_copy
; Line 1382
  0052b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83534
  00532	e8 00 00 00 00	 call	 printf
; Line 1383
  00537	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  0053c	e8 00 00 00 00	 call	 simple_list_print
; Line 1384
  00541	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list2$[rsp]
  00546	e8 00 00 00 00	 call	 simple_list_delete
; Line 1385
  0054b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00550	e8 00 00 00 00	 call	 simple_list_delete
; Line 1387
  00555	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83535
  0055c	e8 00 00 00 00	 call	 printf
; Line 1388
  00561	b9 03 00 00 00	 mov	 ecx, 3
  00566	e8 00 00 00 00	 call	 simple_list_new
  0056b	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1389
  00570	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG83536
  00577	ba 01 00 00 00	 mov	 edx, 1
  0057c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00581	e8 00 00 00 00	 call	 simple_list_setstring
; Line 1390
  00586	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG83537
  0058d	ba 02 00 00 00	 mov	 edx, 2
  00592	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00597	e8 00 00 00 00	 call	 simple_list_setstring
; Line 1391
  0059c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG83538
  005a3	ba 03 00 00 00	 mov	 edx, 3
  005a8	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  005ad	e8 00 00 00 00	 call	 simple_list_setstring
; Line 1392
  005b2	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  005ba	eb 0a		 jmp	 SHORT $LN6@simple_lis
$LN5@simple_lis:
  005bc	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  005c0	ff c0		 inc	 eax
  005c2	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_lis:
  005c6	83 7c 24 20 03	 cmp	 DWORD PTR x$[rsp], 3
  005cb	7f 27		 jg	 SHORT $LN4@simple_lis
; Line 1393
  005cd	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  005d1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  005d6	e8 00 00 00 00	 call	 simple_list_getitem
  005db	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005df	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  005e2	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  005e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83542
  005ed	e8 00 00 00 00	 call	 printf
; Line 1394
  005f2	eb c8		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
; Line 1395
  005f4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  005f9	e8 00 00 00 00	 call	 simple_list_delete
; Line 1397
  005fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83543
  00605	e8 00 00 00 00	 call	 printf
; Line 1398
  0060a	33 c9		 xor	 ecx, ecx
  0060c	e8 00 00 00 00	 call	 simple_list_new
  00611	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1399
  00616	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83544
  0061d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00622	e8 00 00 00 00	 call	 simple_list_addstring
; Line 1400
  00627	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83545
  0062e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00633	e8 00 00 00 00	 call	 simple_list_addstring
; Line 1401
  00638	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83546
  0063f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00644	e8 00 00 00 00	 call	 simple_list_addstring
; Line 1402
  00649	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83547
  00650	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00655	e8 00 00 00 00	 call	 simple_list_addstring
; Line 1403
  0065a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83548
  00661	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00666	e8 00 00 00 00	 call	 simple_list_addstring
; Line 1404
  0066b	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00673	eb 0a		 jmp	 SHORT $LN3@simple_lis
$LN2@simple_lis:
  00675	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00679	ff c0		 inc	 eax
  0067b	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_lis:
  0067f	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  00684	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00687	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0068b	7f 27		 jg	 SHORT $LN1@simple_lis
; Line 1405
  0068d	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00691	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00696	e8 00 00 00 00	 call	 simple_list_getitem
  0069b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0069f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  006a2	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  006a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83552
  006ad	e8 00 00 00 00	 call	 printf
; Line 1406
  006b2	eb c1		 jmp	 SHORT $LN2@simple_lis
$LN1@simple_lis:
; Line 1408
  006b4	ba 01 00 00 00	 mov	 edx, 1
  006b9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  006be	e8 00 00 00 00	 call	 simple_list_getitem
  006c3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  006c7	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  006ca	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83553
  006d1	e8 00 00 00 00	 call	 printf
; Line 1409
  006d6	ba 05 00 00 00	 mov	 edx, 5
  006db	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  006e0	e8 00 00 00 00	 call	 simple_list_getitem
  006e5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  006e9	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  006ec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83554
  006f3	e8 00 00 00 00	 call	 printf
; Line 1410
  006f8	ba 04 00 00 00	 mov	 edx, 4
  006fd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00702	e8 00 00 00 00	 call	 simple_list_getitem
  00707	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0070b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0070e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83555
  00715	e8 00 00 00 00	 call	 printf
; Line 1411
  0071a	ba 03 00 00 00	 mov	 edx, 3
  0071f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00724	e8 00 00 00 00	 call	 simple_list_getitem
  00729	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0072d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00730	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83556
  00737	e8 00 00 00 00	 call	 printf
; Line 1412
  0073c	ba 03 00 00 00	 mov	 edx, 3
  00741	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00746	e8 00 00 00 00	 call	 simple_list_getitem
  0074b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0074f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00752	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83557
  00759	e8 00 00 00 00	 call	 printf
; Line 1413
  0075e	ba 02 00 00 00	 mov	 edx, 2
  00763	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00768	e8 00 00 00 00	 call	 simple_list_getitem
  0076d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00771	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00774	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83558
  0077b	e8 00 00 00 00	 call	 printf
; Line 1414
  00780	ba 03 00 00 00	 mov	 edx, 3
  00785	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0078a	e8 00 00 00 00	 call	 simple_list_getitem
  0078f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00793	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00796	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83559
  0079d	e8 00 00 00 00	 call	 printf
; Line 1415
  007a2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  007a7	e8 00 00 00 00	 call	 simple_list_delete
; Line 1417
  007ac	33 c9		 xor	 ecx, ecx
  007ae	e8 00 00 00 00	 call	 simple_list_new
  007b3	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1418
  007b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:simple_list_testblockpointer
  007bf	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  007c4	e8 00 00 00 00	 call	 simple_list_addblockpointer
; Line 1419
  007c9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG83560
  007d0	e8 00 00 00 00	 call	 puts
; Line 1420
  007d5	ba 01 00 00 00	 mov	 edx, 1
  007da	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  007df	e8 00 00 00 00	 call	 simple_list_getitem
  007e4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  007e9	ff 50 08	 call	 QWORD PTR [rax+8]
; Line 1421
  007ec	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  007f1	e8 00 00 00 00	 call	 simple_list_delete
; Line 1422
  007f6	e8 00 00 00 00	 call	 getchar
; Line 1423
  007fb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00800	48 33 cc	 xor	 rcx, rsp
  00803	e8 00 00 00 00	 call	 __security_check_cookie
  00808	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0080c	c3		 ret	 0
simple_list_test ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItems$ = 32
pState$ = 64
list$ = 72
simple_list_newitem_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 196
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 199
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00013	e8 00 00 00 00	 call	 simple_items_new_gc
  00018	48 89 44 24 20	 mov	 QWORD PTR pItems$[rsp], rax
; Line 200
  0001d	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00022	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00026	7e 34		 jle	 SHORT $LN2@simple_lis
; Line 201
  00028	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0002d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00031	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  00036	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 202
  0003a	48 8b 44 24 20	 mov	 rax, QWORD PTR pItems$[rsp]
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00044	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00048	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 203
  0004c	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00051	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  00056	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 204
  0005a	eb 1b		 jmp	 SHORT $LN1@simple_lis
$LN2@simple_lis:
; Line 205
  0005c	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  00066	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 206
  00069	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0006e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItems$[rsp]
  00073	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN1@simple_lis:
; Line 208
  00077	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0007c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0007f	ff c0		 inc	 eax
  00081	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00086	89 41 10	 mov	 DWORD PTR [rcx+16], eax
; Line 210
  00089	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0008e	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0
; Line 211
  00095	48 8b 44 24 48	 mov	 rax, QWORD PTR list$[rsp]
  0009a	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 212
  000a2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000a6	c3		 ret	 0
simple_list_newitem_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pItems$ = 40
pItemsLast$ = 48
pState$ = 80
list$ = 88
nSize$ = 96
simple_list_new2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 34
$LN9:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 37
  00013	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00018	8b 4c 24 60	 mov	 ecx, DWORD PTR nSize$[rsp]
  0001c	89 48 10	 mov	 DWORD PTR [rax+16], ecx
; Line 38
  0001f	83 7c 24 60 00	 cmp	 DWORD PTR nSize$[rsp], 0
  00024	0f 8e a6 00 00
	00		 jle	 $LN6@simple_lis
; Line 39
  0002a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  0002f	e8 00 00 00 00	 call	 simple_items_new_gc
  00034	48 89 44 24 28	 mov	 QWORD PTR pItems$[rsp], rax
; Line 40
  00039	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  0003e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItems$[rsp]
  00043	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 41
  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  0004b	48 89 44 24 30	 mov	 QWORD PTR pItemsLast$[rsp], rax
; Line 42
  00050	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR x$[rsp], 2
  00058	eb 0a		 jmp	 SHORT $LN5@simple_lis
$LN4@simple_lis:
  0005a	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0005e	ff c0		 inc	 eax
  00060	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_lis:
  00064	8b 44 24 60	 mov	 eax, DWORD PTR nSize$[rsp]
  00068	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0006c	7f 52		 jg	 SHORT $LN3@simple_lis
; Line 43
  0006e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  00073	e8 00 00 00 00	 call	 simple_items_new_gc
  00078	48 89 44 24 28	 mov	 QWORD PTR pItems$[rsp], rax
; Line 44
  0007d	48 83 7c 24 28
	00		 cmp	 QWORD PTR pItems$[rsp], 0
  00083	75 13		 jne	 SHORT $LN2@simple_lis
; Line 45
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82450
  0008c	e8 00 00 00 00	 call	 printf
; Line 46
  00091	33 c9		 xor	 ecx, ecx
  00093	e8 00 00 00 00	 call	 exit
$LN2@simple_lis:
; Line 48
  00098	48 8b 44 24 30	 mov	 rax, QWORD PTR pItemsLast$[rsp]
  0009d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItems$[rsp]
  000a2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 49
  000a6	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  000ab	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pItemsLast$[rsp]
  000b0	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 50
  000b4	48 8b 44 24 28	 mov	 rax, QWORD PTR pItems$[rsp]
  000b9	48 89 44 24 30	 mov	 QWORD PTR pItemsLast$[rsp], rax
; Line 51
  000be	eb 9a		 jmp	 SHORT $LN4@simple_lis
$LN3@simple_lis:
; Line 52
  000c0	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000c5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItems$[rsp]
  000ca	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 53
  000ce	eb 19		 jmp	 SHORT $LN1@simple_lis
$LN6@simple_lis:
; Line 54
  000d0	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000d5	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
; Line 55
  000dc	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000e1	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
$LN1@simple_lis:
; Line 57
  000e9	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000ee	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0
; Line 58
  000f5	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  000fa	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 59
  00102	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00107	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
; Line 60
  0010f	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00114	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0
; Line 61
  0011c	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
$LN8@simple_lis:
; Line 62
  00121	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00125	c3		 ret	 0
simple_list_new2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
pState$ = 64
nSize$ = 72
simple_list_new_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_list.c
; Line 23
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 25
  0000d	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  00012	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00017	e8 00 00 00 00	 call	 simple_state_malloc
  0001c	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 26
  00021	48 83 7c 24 20
	00		 cmp	 QWORD PTR list$[rsp], 0
  00027	75 13		 jne	 SHORT $LN1@simple_lis
; Line 27
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82433
  00030	e8 00 00 00 00	 call	 printf
; Line 28
  00035	33 c9		 xor	 ecx, ecx
  00037	e8 00 00 00 00	 call	 exit
$LN1@simple_lis:
; Line 30
  0003c	44 8b 44 24 48	 mov	 r8d, DWORD PTR nSize$[rsp]
  00041	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0004b	e8 00 00 00 00	 call	 simple_list_new2_gc
$LN3@simple_lis:
; Line 31
  00050	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00054	c3		 ret	 0
simple_list_new_gc ENDP
_TEXT	ENDS
END
