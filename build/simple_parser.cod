; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82442 DB	01H DUP (?)
$SG82542 DB	01H DUP (?)
$SG82549 DB	01H DUP (?)
$SG82551 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82446 DB	0aH, 'Total errors count : %d ', 0aH, 00H
	ORG $+5
$SG82457 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82543 DB	0aH, 'Line %d -> %s', 0aH, 00H
$SG82545 DB	0aH, 'Line %d -> Syntax error : Unexpected ''%s'' ', 0aH, 00H
	ORG $+3
$SG82546 DB	09H, 'in file %s ', 00H
	ORG $+3
$SG82552 DB	0aH, 'Line %d -> %s', 0aH, 00H
$SG82553 DB	09H, 'in file %s', 00H
_DATA	ENDS
PUBLIC	accept_token_token
PUBLIC	simple_parser_start
PUBLIC	simple_parser_new
PUBLIC	simple_parser_delete
PUBLIC	simple_parser_loadtoken
PUBLIC	simple_parser_nexttoken
PUBLIC	simple_parser_iskeyword
PUBLIC	simple_parser_isoperator
PUBLIC	simple_parser_isliteral
PUBLIC	simple_parser_isidentifier
PUBLIC	simple_parser_isnumber
PUBLIC	simple_parser_isendline
PUBLIC	simple_parser_settoken
PUBLIC	simple_parser_isanykeyword
PUBLIC	simple_parser_isoperator2
PUBLIC	parser_error
EXTRN	exit:PROC
EXTRN	atoi:PROC
EXTRN	printf:PROC
EXTRN	strcmp:PROC
EXTRN	file_real_name:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_new:PROC
EXTRN	simple_parser_class:PROC
EXTRN	simple_state_malloc:PROC
EXTRN	simple_state_free:PROC
EXTRN	SKIP_ERROR:DWORD
pdata	SEGMENT
$pdata$accept_token_token DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$accept_token_token
$pdata$simple_parser_start DD imagerel $LN10
	DD	imagerel $LN10+214
	DD	imagerel $unwind$simple_parser_start
$pdata$simple_parser_new DD imagerel $LN5
	DD	imagerel $LN5+455
	DD	imagerel $unwind$simple_parser_new
$pdata$simple_parser_delete DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$simple_parser_delete
$pdata$simple_parser_loadtoken DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$simple_parser_loadtoken
$pdata$simple_parser_nexttoken DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$simple_parser_nexttoken
$pdata$simple_parser_iskeyword DD imagerel $LN5
	DD	imagerel $LN5+60
	DD	imagerel $unwind$simple_parser_iskeyword
$pdata$simple_parser_isoperator DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$simple_parser_isoperator
$pdata$simple_parser_settoken DD imagerel $LN4
	DD	imagerel $LN4+70
	DD	imagerel $unwind$simple_parser_settoken
$pdata$parser_error DD imagerel $LN10
	DD	imagerel $LN10+390
	DD	imagerel $unwind$parser_error
pdata	ENDS
xdata	SEGMENT
$unwind$accept_token_token DD 010d01H
	DD	0420dH
$unwind$simple_parser_start DD 010e01H
	DD	0620eH
$unwind$simple_parser_new DD 010e01H
	DD	0620eH
$unwind$simple_parser_delete DD 010901H
	DD	04209H
$unwind$simple_parser_loadtoken DD 010901H
	DD	06209H
$unwind$simple_parser_nexttoken DD 010901H
	DD	04209H
$unwind$simple_parser_iskeyword DD 010d01H
	DD	0420dH
$unwind$simple_parser_isoperator DD 010e01H
	DD	0420eH
$unwind$simple_parser_settoken DD 010d01H
	DD	0420dH
$unwind$parser_error DD 010e01H
	DD	0620eH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
SimpleActiveFile$ = 32
parser$ = 64
cStr$ = 72
parser_error PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 223
$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 226
  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00013	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0001a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0001e	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00021	89 44 24 20	 mov	 DWORD PTR SimpleActiveFile$[rsp], eax
; Line 227
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0002a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0002f	8b 49 24	 mov	 ecx, DWORD PTR [rcx+36]
  00032	39 48 28	 cmp	 DWORD PTR [rax+40], ecx
  00035	0f 84 aa 00 00
	00		 je	 $LN7@parser_err
; Line 228
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00045	8b 49 24	 mov	 ecx, DWORD PTR [rcx+36]
  00048	89 48 28	 mov	 DWORD PTR [rax+40], ecx
; Line 229
  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82542
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr$[rsp]
  00057	e8 00 00 00 00	 call	 strcmp
  0005c	85 c0		 test	 eax, eax
  0005e	74 1b		 je	 SHORT $LN6@parser_err
; Line 230
  00060	4c 8b 44 24 48	 mov	 r8, QWORD PTR cStr$[rsp]
  00065	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0006a	8b 50 24	 mov	 edx, DWORD PTR [rax+36]
  0006d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82543
  00074	e8 00 00 00 00	 call	 printf
; Line 231
  00079	eb 1d		 jmp	 SHORT $LN5@parser_err
$LN6@parser_err:
; Line 232
  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00080	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  00084	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00089	8b 50 24	 mov	 edx, DWORD PTR [rax+36]
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82545
  00093	e8 00 00 00 00	 call	 printf
$LN5@parser_err:
; Line 234
  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0009d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  000a4	8b 54 24 20	 mov	 edx, DWORD PTR SimpleActiveFile$[rsp]
  000a8	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000ac	e8 00 00 00 00	 call	 simple_list_getitem
  000b1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b5	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000b8	e8 00 00 00 00	 call	 file_real_name
  000bd	48 8b d0	 mov	 rdx, rax
  000c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82546
  000c7	e8 00 00 00 00	 call	 printf
; Line 235
  000cc	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000d1	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000d4	ff c0		 inc	 eax
  000d6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000db	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
; Line 236
  000de	e9 9e 00 00 00	 jmp	 $LN8@parser_err
  000e3	eb 27		 jmp	 SHORT $LN4@parser_err
$LN7@parser_err:
; Line 237
  000e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82549
  000ec	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr$[rsp]
  000f1	e8 00 00 00 00	 call	 strcmp
  000f6	85 c0		 test	 eax, eax
  000f8	74 12		 je	 SHORT $LN3@parser_err
; Line 238
  000fa	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000ff	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  00102	ff c0		 inc	 eax
  00104	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00109	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
$LN3@parser_err:
$LN4@parser_err:
; Line 240
  0010c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82551
  00113	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr$[rsp]
  00118	e8 00 00 00 00	 call	 strcmp
  0011d	85 c0		 test	 eax, eax
  0011f	74 4d		 je	 SHORT $LN2@parser_err
; Line 241
  00121	4c 8b 44 24 48	 mov	 r8, QWORD PTR cStr$[rsp]
  00126	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0012b	8b 50 24	 mov	 edx, DWORD PTR [rax+36]
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82552
  00135	e8 00 00 00 00	 call	 printf
; Line 242
  0013a	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0013f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00146	8b 54 24 20	 mov	 edx, DWORD PTR SimpleActiveFile$[rsp]
  0014a	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0014e	e8 00 00 00 00	 call	 simple_list_getitem
  00153	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00157	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0015a	e8 00 00 00 00	 call	 file_real_name
  0015f	48 8b d0	 mov	 rdx, rax
  00162	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82553
  00169	e8 00 00 00 00	 call	 printf
$LN2@parser_err:
; Line 244
  0016e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR SKIP_ERROR, 0
  00175	75 0a		 jne	 SHORT $LN1@parser_err
  00177	b9 01 00 00 00	 mov	 ecx, 1
  0017c	e8 00 00 00 00	 call	 exit
$LN1@parser_err:
$LN8@parser_err:
$LN9@parser_err:
; Line 245
  00181	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00185	c3		 ret	 0
parser_error ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
nType$ = 16
simple_parser_isoperator2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 213
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 215
  00009	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000e	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  00012	83 f8 01	 cmp	 eax, 1
  00015	75 15		 jne	 SHORT $LN1@simple_par
  00017	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0001c	8b 4c 24 10	 mov	 ecx, DWORD PTR nType$[rsp]
  00020	39 48 20	 cmp	 DWORD PTR [rax+32], ecx
  00023	75 07		 jne	 SHORT $LN1@simple_par
; Line 216
  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 218
  0002c	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 219
  0002e	f3 c3		 fatret	 0
simple_parser_isoperator2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
simple_parser_isanykeyword PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 204
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 206
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000a	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  0000e	85 c0		 test	 eax, eax
  00010	75 07		 jne	 SHORT $LN1@simple_par
; Line 207
  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 209
  00019	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 210
  0001b	f3 c3		 fatret	 0
simple_parser_isanykeyword ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
x$ = 56
simple_parser_settoken PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 193
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 195
  0000d	83 7c 24 38 01	 cmp	 DWORD PTR x$[rsp], 1
  00012	7c 2b		 jl	 SHORT $LN1@simple_par
  00014	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00019	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  0001c	39 44 24 38	 cmp	 DWORD PTR x$[rsp], eax
  00020	7f 1d		 jg	 SHORT $LN1@simple_par
; Line 196
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00027	8b 4c 24 38	 mov	 ecx, DWORD PTR x$[rsp]
  0002b	89 48 08	 mov	 DWORD PTR [rax+8], ecx
; Line 197
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00033	e8 00 00 00 00	 call	 simple_parser_loadtoken
; Line 198
  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 200
  0003f	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 201
  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
simple_parser_settoken ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
simple_parser_isendline PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 184
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 186
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000a	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  0000e	83 f8 05	 cmp	 eax, 5
  00011	75 07		 jne	 SHORT $LN1@simple_par
; Line 187
  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 189
  0001a	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 190
  0001c	f3 c3		 fatret	 0
simple_parser_isendline ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
simple_parser_isnumber PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 166
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 168
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000a	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  0000e	83 f8 03	 cmp	 eax, 3
  00011	75 07		 jne	 SHORT $LN1@simple_par
; Line 169
  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 171
  0001a	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 172
  0001c	f3 c3		 fatret	 0
simple_parser_isnumber ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
simple_parser_isidentifier PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 175
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 177
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000a	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  0000e	83 f8 04	 cmp	 eax, 4
  00011	75 07		 jne	 SHORT $LN1@simple_par
; Line 178
  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 180
  0001a	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 181
  0001c	f3 c3		 fatret	 0
simple_parser_isidentifier ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 8
simple_parser_isliteral PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 157
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 159
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR parser$[rsp]
  0000a	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  0000e	83 f8 02	 cmp	 eax, 2
  00011	75 07		 jne	 SHORT $LN1@simple_par
; Line 160
  00013	b8 01 00 00 00	 mov	 eax, 1
  00018	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 162
  0001a	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 163
  0001c	f3 c3		 fatret	 0
simple_parser_isliteral ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
cStr$ = 56
simple_parser_isoperator PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 146
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 148
  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00013	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  00017	83 f8 01	 cmp	 eax, 1
  0001a	75 1e		 jne	 SHORT $LN2@simple_par
; Line 149
  0001c	48 8b 54 24 38	 mov	 rdx, QWORD PTR cStr$[rsp]
  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00026	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0002a	e8 00 00 00 00	 call	 strcmp
  0002f	85 c0		 test	 eax, eax
  00031	75 07		 jne	 SHORT $LN1@simple_par
; Line 150
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	eb 02		 jmp	 SHORT $LN3@simple_par
$LN1@simple_par:
$LN2@simple_par:
; Line 153
  0003a	33 c0		 xor	 eax, eax
$LN3@simple_par:
; Line 154
  0003c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00040	c3		 ret	 0
simple_parser_isoperator ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
x$ = 56
simple_parser_iskeyword PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 135
$LN5:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 137
  0000d	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00012	0f be 40 10	 movsx	 eax, BYTE PTR [rax+16]
  00016	85 c0		 test	 eax, eax
  00018	75 1b		 jne	 SHORT $LN2@simple_par
; Line 138
  0001a	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0001f	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00023	e8 00 00 00 00	 call	 atoi
  00028	3b 44 24 38	 cmp	 eax, DWORD PTR x$[rsp]
  0002c	75 07		 jne	 SHORT $LN1@simple_par
; Line 139
  0002e	b8 01 00 00 00	 mov	 eax, 1
  00033	eb 02		 jmp	 SHORT $LN3@simple_par
$LN1@simple_par:
$LN2@simple_par:
; Line 142
  00035	33 c0		 xor	 eax, eax
$LN3@simple_par:
; Line 143
  00037	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003b	c3		 ret	 0
simple_parser_iskeyword ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_nexttoken PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 124
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 126
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00013	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  00016	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00019	7d 23		 jge	 SHORT $LN1@simple_par
; Line 127
  0001b	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00020	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00023	ff c0		 inc	 eax
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0002a	89 41 08	 mov	 DWORD PTR [rcx+8], eax
; Line 128
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00032	e8 00 00 00 00	 call	 simple_parser_loadtoken
; Line 129
  00037	b8 01 00 00 00	 mov	 eax, 1
  0003c	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 131
  0003e	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 132
  00040	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00044	c3		 ret	 0
simple_parser_nexttoken ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
parser$ = 64
simple_parser_loadtoken PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 114
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 117
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0000e	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00011	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00016	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00019	e8 00 00 00 00	 call	 simple_list_getlist
  0001e	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 118
  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0002d	e8 00 00 00 00	 call	 simple_list_getitem
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00037	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0003b	88 41 10	 mov	 BYTE PTR [rcx+16], al
; Line 119
  0003e	ba 02 00 00 00	 mov	 edx, 2
  00043	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00048	e8 00 00 00 00	 call	 simple_list_getitem
  0004d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; Line 120
  0005d	ba 03 00 00 00	 mov	 edx, 3
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00067	e8 00 00 00 00	 call	 simple_list_getitem
  0006c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00071	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00074	89 41 20	 mov	 DWORD PTR [rcx+32], eax
; Line 121
  00077	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007b	c3		 ret	 0
simple_parser_loadtoken ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_delete PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 106
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 108
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR parser$[rsp]
  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00013	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0001a	e8 00 00 00 00	 call	 simple_state_free
; Line 109
  0001f	33 c0		 xor	 eax, eax
; Line 110
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
simple_parser_delete ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 32
pTokens$ = 64
sState$ = 72
simple_parser_new PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 64
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 66
  0000e	ba 88 00 00 00	 mov	 edx, 136		; 00000088H
  00013	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00018	e8 00 00 00 00	 call	 simple_state_malloc
  0001d	48 89 44 24 20	 mov	 QWORD PTR parser$[rsp], rax
; Line 67
  00022	48 83 7c 24 20
	00		 cmp	 QWORD PTR parser$[rsp], 0
  00028	75 13		 jne	 SHORT $LN2@simple_par
; Line 68
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82457
  00031	e8 00 00 00 00	 call	 printf
; Line 69
  00036	33 c9		 xor	 ecx, ecx
  00038	e8 00 00 00 00	 call	 exit
$LN2@simple_par:
; Line 72
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00042	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00047	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx
; Line 73
  0004e	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pTokens$[rsp]
  00058	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 74
  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00060	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
; Line 75
  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR parser$[rsp]
  00074	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00077	89 41 0c	 mov	 DWORD PTR [rcx+12], eax
; Line 76
  0007a	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0007f	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [rax+32], 0
; Line 77
  00086	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0008b	c7 40 24 01 00
	00 00		 mov	 DWORD PTR [rax+36], 1
; Line 78
  00092	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00097	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0
; Line 79
  0009e	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  000a3	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0
; Line 80
  000aa	48 8b 44 24 48	 mov	 rax, QWORD PTR sState$[rsp]
  000af	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  000b4	75 40		 jne	 SHORT $LN1@simple_par
; Line 81
  000b6	33 c9		 xor	 ecx, ecx
  000b8	e8 00 00 00 00	 call	 simple_list_new
  000bd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  000c2	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; Line 82
  000c6	33 c9		 xor	 ecx, ecx
  000c8	e8 00 00 00 00	 call	 simple_list_new
  000cd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  000d2	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; Line 83
  000d6	33 c9		 xor	 ecx, ecx
  000d8	e8 00 00 00 00	 call	 simple_list_new
  000dd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  000e2	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
; Line 84
  000e6	33 c9		 xor	 ecx, ecx
  000e8	e8 00 00 00 00	 call	 simple_list_new
  000ed	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  000f2	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
$LN1@simple_par:
; Line 86
  000f6	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  000fb	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00100	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00104	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; Line 87
  00108	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0010d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00112	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00116	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; Line 88
  0011a	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0011f	48 c7 40 38 00
	00 00 00	 mov	 QWORD PTR [rax+56], 0
; Line 89
  00127	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0012c	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 90
  00130	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00135	c6 40 41 00	 mov	 BYTE PTR [rax+65], 0
; Line 91
  00139	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0013e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00143	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  00147	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
; Line 92
  0014b	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00150	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sState$[rsp]
  00155	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00159	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
; Line 93
  0015d	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00162	c7 40 60 00 00
	00 00		 mov	 DWORD PTR [rax+96], 0
; Line 94
  00169	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0016e	c6 40 64 00	 mov	 BYTE PTR [rax+100], 0
; Line 95
  00172	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00177	c7 40 68 00 00
	00 00		 mov	 DWORD PTR [rax+104], 0
; Line 96
  0017e	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00183	c6 40 6c 00	 mov	 BYTE PTR [rax+108], 0
; Line 97
  00187	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  0018c	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [rax+112], 0
; Line 98
  00193	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  00198	c6 40 74 00	 mov	 BYTE PTR [rax+116], 0
; Line 99
  0019c	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  001a1	c6 40 75 00	 mov	 BYTE PTR [rax+117], 0
; Line 100
  001a5	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  001aa	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [rax+120], 0
; Line 101
  001b1	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
  001b6	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [rax+124], 0
; Line 102
  001bd	48 8b 44 24 20	 mov	 rax, QWORD PTR parser$[rsp]
$LN4@simple_par:
; Line 103
  001c2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001c6	c3		 ret	 0
simple_parser_new ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nResult$ = 32
SimpleActiveFile$ = 36
parser$ = 40
pTokens$ = 64
sState$ = 72
simple_parser_start PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 29
$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 32
  0000e	48 8b 54 24 48	 mov	 rdx, QWORD PTR sState$[rsp]
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pTokens$[rsp]
  00018	e8 00 00 00 00	 call	 simple_parser_new
  0001d	48 89 44 24 28	 mov	 QWORD PTR parser$[rsp], rax
; Line 35
  00022	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  00027	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN7@simple_par:
; Line 37
  0002c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  00031	e8 00 00 00 00	 call	 simple_parser_class
  00036	89 44 24 20	 mov	 DWORD PTR nResult$[rsp], eax
; Line 38
  0003a	83 7c 24 20 00	 cmp	 DWORD PTR nResult$[rsp], 0
  0003f	75 29		 jne	 SHORT $LN4@simple_par
; Line 39
  00041	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82442
  00048	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  0004d	e8 00 00 00 00	 call	 parser_error
; Line 41
  00052	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  00057	e8 00 00 00 00	 call	 simple_parser_isendline
  0005c	85 c0		 test	 eax, eax
  0005e	75 0a		 jne	 SHORT $LN3@simple_par
; Line 43
  00060	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  00065	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN3@simple_par:
$LN4@simple_par:
; Line 46
  0006a	48 8b 44 24 28	 mov	 rax, QWORD PTR parser$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  00074	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  00077	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  0007a	75 b0		 jne	 SHORT $LN7@simple_par
; Line 48
  0007c	48 8b 44 24 28	 mov	 rax, QWORD PTR parser$[rsp]
  00081	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00088	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0008f	89 44 24 24	 mov	 DWORD PTR SimpleActiveFile$[rsp], eax
; Line 49
  00093	48 8b 44 24 28	 mov	 rax, QWORD PTR parser$[rsp]
  00098	83 78 2c 00	 cmp	 DWORD PTR [rax+44], 0
  0009c	75 13		 jne	 SHORT $LN2@simple_par
; Line 53
  0009e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  000a3	e8 00 00 00 00	 call	 simple_parser_delete
; Line 54
  000a8	b8 01 00 00 00	 mov	 eax, 1
  000ad	eb 22		 jmp	 SHORT $LN8@simple_par
; Line 55
  000af	eb 14		 jmp	 SHORT $LN1@simple_par
$LN2@simple_par:
; Line 56
  000b1	48 8b 44 24 28	 mov	 rax, QWORD PTR parser$[rsp]
  000b6	8b 50 2c	 mov	 edx, DWORD PTR [rax+44]
  000b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82446
  000c0	e8 00 00 00 00	 call	 printf
$LN1@simple_par:
; Line 59
  000c5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR parser$[rsp]
  000ca	e8 00 00 00 00	 call	 simple_parser_delete
; Line 60
  000cf	33 c0		 xor	 eax, eax
$LN8@simple_par:
; Line 61
  000d1	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d5	c3		 ret	 0
simple_parser_start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
nType$ = 56
accept_token_token PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_parser.c
; Line 19
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 21
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR nType$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00016	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0001b	85 c0		 test	 eax, eax
  0001d	74 21		 je	 SHORT $LN1@accept_tok
; Line 22
  0001f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00024	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 23
  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0002e	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00031	ff c0		 inc	 eax
  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00038	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
; Line 24
  0003b	b8 01 00 00 00	 mov	 eax, 1
$LN1@accept_tok:
; Line 26
  00040	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00044	c3		 ret	 0
accept_token_token ENDP
_TEXT	ENDS
END
