; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82469 DB	01H DUP (?)
$SG82490 DB	01H DUP (?)
$SG82506 DB	01H DUP (?)
$SG82620 DB	01H DUP (?)
$SG82710 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82950 DB	'if isblock(simple_gettemp_var,''operator'')', 0aH, 'retu'
	DB	'rn simple_gettemp_var.operator(''', 00H
	ORG $+1
$SG82951 DB	''',simple_settemp_var)', 0aH, 'else', 0aH, 'raise(''Obje'
	DB	'ct does not support operator overloading'')', 0aH, 'ok', 0aH, 00H
	ORG $+3
$SG82442 DB	'simple_temp_object', 00H
	ORG $+1
$SG82464 DB	'self', 00H
	ORG $+3
$SG82648 DB	'%s', 0aH, 00H
$SG82472 DB	'RUNTIME ERROR 24 : Invalid class name, Class not found ', 00H
$SG82502 DB	'When creating class ', 00H
	ORG $+3
$SG82503 DB	' from class ', 00H
	ORG $+3
$SG82509 DB	'RUNTIME ERROR 24 : Invalid parent class name, class not '
	DB	'found', 00H
	ORG $+2
$SG82551 DB	'RUNTIME ERROR 24 : Object is required', 00H
	ORG $+2
$SG82504 DB	'RUNTIME ERROR 24 : The parent and child class cannot hav'
	DB	'e the same name ', 00H
	ORG $+3
$SG82653 DB	'%s', 0aH, 00H
$SG82556 DB	'RUNTIME ERROR 24 : The varible is not initialized', 00H
	ORG $+2
$SG82655 DB	'%f', 0aH, 00H
$SG82559 DB	'RUNTIME ERROR 24 : Object is required', 00H
	ORG $+2
$SG82565 DB	'RUNTIME ERROR 24 : Object is required', 00H
	ORG $+2
$SG82581 DB	'RUNTIME ERROR 24 : Invalid property name, property not f'
	DB	'ound', 00H
	ORG $+3
$SG82628 DB	'RUNTIME ERROR 24 : Invalid parent class name, class not '
	DB	'found', 00H
	ORG $+2
$SG82646 DB	'%s: ', 00H
	ORG $+3
$SG82659 DB	'Object...', 0aH, 00H
	ORG $+1
$SG82861 DB	'get', 00H
$SG82661 DB	'[This Attribute Contains A List]', 0aH, 00H
	ORG $+2
$SG82859 DB	'''() ok', 00H
	ORG $+5
$SG82675 DB	'RUNTIME ERROR 24 : Using braces to access unknown object'
	DB	' ', 00H
	ORG $+2
$SG82706 DB	'super', 00H
	ORG $+2
$SG82725 DB	'super', 00H
	ORG $+6
$SG82745 DB	'RUNTIME ERROR 24 : error, using ''Super'' without parent'
	DB	' class ', 00H
	ORG $+2
$SG82762 DB	'RUNTIME ERROR 24 : Invalid modules name, Modules not fou'
	DB	'nd! ', 00H
	ORG $+3
$SG82857 DB	'if isblock(simple_gettemp_var,''get', 00H
	ORG $+5
$SG82858 DB	''')', 0aH, 'return simple_gettemp_var.''get', 00H
	ORG $+6
$SG82889 DB	'if isblock(simple_gettemp_var,''set', 00H
	ORG $+5
$SG82890 DB	''')', 0aH, 'simple_gettemp_var.''set', 00H
	ORG $+13
$SG82891 DB	'''(simple_settemp_var)', 0aH, 'simple_tempflag_var = 0', 0aH
	DB	'else', 0aH, 'simple_tempflag_var = 1', 0aH, 'ok', 00H
_DATA	ENDS
PUBLIC	simple_vm_oop_newobj
PUBLIC	simple_vm_oop_property
PUBLIC	simple_vm_oop_isobject
PUBLIC	simple_vm_oop_getobj
PUBLIC	simple_vm_oop_loadmethod
PUBLIC	simple_vm_oop_aftercallmethod
PUBLIC	simple_vm_oop_setscope
PUBLIC	simple_vm_oop_printobj
PUBLIC	simple_vm_oop_parentinit
PUBLIC	simple_vm_oop_parentmethods
PUBLIC	simple_vm_oop_newclass
PUBLIC	simple_vm_oop_setbraceobj
PUBLIC	simple_vm_oop_bracestart
PUBLIC	simple_vm_oop_braceend
PUBLIC	simple_vm_oop_bracestack
PUBLIC	simple_vm_oop_newsuperobj
PUBLIC	simple_vm_oop_getsuperobj
PUBLIC	simple_vm_oop_loadsuperobjmethod
PUBLIC	simple_vm_oop_import
PUBLIC	simple_vm_oop_checkpointertoclassinmodules
PUBLIC	simple_vm_oop_import2
PUBLIC	simple_vm_oop_import3
PUBLIC	simple_vm_oop_visibleclassescount
PUBLIC	simple_vm_oop_visibleclassitem
PUBLIC	simple_vm_oop_pushclassmodules
PUBLIC	simple_vm_oop_popclassmodules
PUBLIC	simple_vm_oop_deletemodulessafter
PUBLIC	simple_vm_oop_callmethodinsideclass
PUBLIC	simple_vm_oop_setget
PUBLIC	simple_vm_oop_setproperty
PUBLIC	simple_vm_oop_operatoroverloading
PUBLIC	simple_vm_oop_objvarfromobjlist
PUBLIC	simple_vm_oop_objtypefromobjlist
PUBLIC	simple_vm_oop_objitemfromobjlist
PUBLIC	simple_vm_oop_callmethodfrombrace
PUBLIC	simple_vm_oop_isblock
PUBLIC	simple_vm_oop_updateselfpointer
PUBLIC	simple_vm_oop_movetobeforeobjstate
PUBLIC	simple_vm_oop_setthethisvariable
PUBLIC	simple_vm_oop_updateselfpointer2
PUBLIC	__real@3ff0000000000000
EXTRN	printf:PROC
EXTRN	strcmp:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_set_gc:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_item_settype_gc:PROC
EXTRN	simple_item_setint_gc:PROC
EXTRN	simple_item_new:PROC
EXTRN	simple_itemarray_setpointer:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_setpointer_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_setdouble_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_setstsimple_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_isnumber:PROC
EXTRN	simple_list_isstring:PROC
EXTRN	simple_list_islist:PROC
EXTRN	simple_list_ispointer:PROC
EXTRN	simple_list_deleteallitems_gc:PROC
EXTRN	simple_list_addpointer:PROC
EXTRN	simple_list_copy:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_exec:PROC
EXTRN	simple_vm_error2:PROC
EXTRN	simple_vm_assignment:PROC
EXTRN	simple_vm_numtostring:PROC
EXTRN	simple_vm_findvar:PROC
EXTRN	simple_vm_newvar:PROC
EXTRN	simple_vm_newvar2:PROC
EXTRN	simple_vm_loadblock:PROC
EXTRN	simple_vm_blockflag2:PROC
EXTRN	simple_vm_getglobalscope:PROC
EXTRN	simple_state_free:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_oop_newobj DD imagerel $LN22
	DD	imagerel $LN22+2437
	DD	imagerel $unwind$simple_vm_oop_newobj
$pdata$simple_vm_oop_property DD imagerel $LN8
	DD	imagerel $LN8+659
	DD	imagerel $unwind$simple_vm_oop_property
$pdata$simple_vm_oop_isobject DD imagerel $LN7
	DD	imagerel $LN7+92
	DD	imagerel $unwind$simple_vm_oop_isobject
$pdata$simple_vm_oop_getobj DD imagerel $LN10
	DD	imagerel $LN10+429
	DD	imagerel $unwind$simple_vm_oop_getobj
$pdata$simple_vm_oop_loadmethod DD imagerel $LN6
	DD	imagerel $LN6+437
	DD	imagerel $unwind$simple_vm_oop_loadmethod
$pdata$simple_vm_oop_aftercallmethod DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$simple_vm_oop_aftercallmethod
$pdata$simple_vm_oop_setscope DD imagerel $LN4
	DD	imagerel $LN4+745
	DD	imagerel $unwind$simple_vm_oop_setscope
$pdata$simple_vm_oop_printobj DD imagerel $LN15
	DD	imagerel $LN15+450
	DD	imagerel $unwind$simple_vm_oop_printobj
$pdata$simple_vm_oop_parentinit DD imagerel $LN17
	DD	imagerel $LN17+805
	DD	imagerel $unwind$simple_vm_oop_parentinit
$pdata$simple_vm_oop_parentmethods DD imagerel $LN13
	DD	imagerel $LN13+480
	DD	imagerel $unwind$simple_vm_oop_parentmethods
$pdata$simple_vm_oop_newclass DD imagerel $LN10
	DD	imagerel $LN10+430
	DD	imagerel $unwind$simple_vm_oop_newclass
$pdata$simple_vm_oop_setbraceobj DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$simple_vm_oop_setbraceobj
$pdata$simple_vm_oop_bracestart DD imagerel $LN4
	DD	imagerel $LN4+487
	DD	imagerel $unwind$simple_vm_oop_bracestart
$pdata$simple_vm_oop_braceend DD imagerel $LN6
	DD	imagerel $LN6+431
	DD	imagerel $unwind$simple_vm_oop_braceend
$pdata$simple_vm_oop_bracestack DD imagerel $LN5
	DD	imagerel $LN5+140
	DD	imagerel $unwind$simple_vm_oop_bracestack
$pdata$simple_vm_oop_newsuperobj DD imagerel $LN10
	DD	imagerel $LN10+459
	DD	imagerel $unwind$simple_vm_oop_newsuperobj
$pdata$simple_vm_oop_getsuperobj DD imagerel $LN6
	DD	imagerel $LN6+255
	DD	imagerel $unwind$simple_vm_oop_getsuperobj
$pdata$simple_vm_oop_loadsuperobjmethod DD imagerel $LN9
	DD	imagerel $LN9+437
	DD	imagerel $unwind$simple_vm_oop_loadsuperobjmethod
$pdata$simple_vm_oop_import DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$simple_vm_oop_import
$pdata$simple_vm_oop_checkpointertoclassinmodules DD imagerel $LN6
	DD	imagerel $LN6+122
	DD	imagerel $unwind$simple_vm_oop_checkpointertoclassinmodules
$pdata$simple_vm_oop_import2 DD imagerel $LN7
	DD	imagerel $LN7+228
	DD	imagerel $unwind$simple_vm_oop_import2
$pdata$simple_vm_oop_import3 DD imagerel $LN6
	DD	imagerel $LN6+217
	DD	imagerel $unwind$simple_vm_oop_import3
$pdata$simple_vm_oop_visibleclassescount DD imagerel $LN4
	DD	imagerel $LN4+127
	DD	imagerel $unwind$simple_vm_oop_visibleclassescount
$pdata$simple_vm_oop_visibleclassitem DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$simple_vm_oop_visibleclassitem
$pdata$simple_vm_oop_pushclassmodules DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$simple_vm_oop_pushclassmodules
$pdata$simple_vm_oop_popclassmodules DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$simple_vm_oop_popclassmodules
$pdata$simple_vm_oop_deletemodulessafter DD imagerel $LN7
	DD	imagerel $LN7+116
	DD	imagerel $unwind$simple_vm_oop_deletemodulessafter
$pdata$simple_vm_oop_callmethodinsideclass DD imagerel $LN19
	DD	imagerel $LN19+437
	DD	imagerel $unwind$simple_vm_oop_callmethodinsideclass
$pdata$simple_vm_oop_setget DD imagerel $LN11
	DD	imagerel $LN11+1150
	DD	imagerel $unwind$simple_vm_oop_setget
$pdata$simple_vm_oop_setproperty DD imagerel $LN20
	DD	imagerel $LN20+2538
	DD	imagerel $unwind$simple_vm_oop_setproperty
$pdata$simple_vm_oop_operatoroverloading DD imagerel $LN13
	DD	imagerel $LN13+811
	DD	imagerel $unwind$simple_vm_oop_operatoroverloading
$pdata$simple_vm_oop_objvarfromobjlist DD imagerel $LN6
	DD	imagerel $LN6+159
	DD	imagerel $unwind$simple_vm_oop_objvarfromobjlist
$pdata$simple_vm_oop_objtypefromobjlist DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$simple_vm_oop_objtypefromobjlist
$pdata$simple_vm_oop_objitemfromobjlist DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$simple_vm_oop_objitemfromobjlist
$pdata$simple_vm_oop_callmethodfrombrace DD imagerel $LN9
	DD	imagerel $LN9+586
	DD	imagerel $unwind$simple_vm_oop_callmethodfrombrace
$pdata$simple_vm_oop_isblock DD imagerel $LN9
	DD	imagerel $LN9+222
	DD	imagerel $unwind$simple_vm_oop_isblock
$pdata$simple_vm_oop_updateselfpointer DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$simple_vm_oop_updateselfpointer
$pdata$simple_vm_oop_movetobeforeobjstate DD imagerel $LN4
	DD	imagerel $LN4+164
	DD	imagerel $unwind$simple_vm_oop_movetobeforeobjstate
$pdata$simple_vm_oop_setthethisvariable DD imagerel $LN6
	DD	imagerel $LN6+384
	DD	imagerel $unwind$simple_vm_oop_setthethisvariable
$pdata$simple_vm_oop_updateselfpointer2 DD imagerel $LN8
	DD	imagerel $LN8+383
	DD	imagerel $unwind$simple_vm_oop_updateselfpointer2
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_oop_newobj DD 020c01H
	DD	013010cH
$unwind$simple_vm_oop_property DD 010901H
	DD	06209H
$unwind$simple_vm_oop_isobject DD 010901H
	DD	04209H
$unwind$simple_vm_oop_getobj DD 010901H
	DD	06209H
$unwind$simple_vm_oop_loadmethod DD 010901H
	DD	0a209H
$unwind$simple_vm_oop_aftercallmethod DD 010901H
	DD	04209H
$unwind$simple_vm_oop_setscope DD 010901H
	DD	06209H
$unwind$simple_vm_oop_printobj DD 022319H
	DD	0190111H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$simple_vm_oop_parentinit DD 010e01H
	DD	0c20eH
$unwind$simple_vm_oop_parentmethods DD 010e01H
	DD	0a20eH
$unwind$simple_vm_oop_newclass DD 010901H
	DD	08209H
$unwind$simple_vm_oop_setbraceobj DD 010e01H
	DD	0420eH
$unwind$simple_vm_oop_bracestart DD 010901H
	DD	06209H
$unwind$simple_vm_oop_braceend DD 010901H
	DD	06209H
$unwind$simple_vm_oop_bracestack DD 010901H
	DD	04209H
$unwind$simple_vm_oop_newsuperobj DD 011301H
	DD	0c213H
$unwind$simple_vm_oop_getsuperobj DD 010901H
	DD	06209H
$unwind$simple_vm_oop_loadsuperobjmethod DD 010e01H
	DD	0a20eH
$unwind$simple_vm_oop_import DD 010901H
	DD	04209H
$unwind$simple_vm_oop_checkpointertoclassinmodules DD 010e01H
	DD	0420eH
$unwind$simple_vm_oop_import2 DD 010e01H
	DD	0820eH
$unwind$simple_vm_oop_import3 DD 010e01H
	DD	0820eH
$unwind$simple_vm_oop_visibleclassescount DD 010901H
	DD	06209H
$unwind$simple_vm_oop_visibleclassitem DD 010d01H
	DD	0620dH
$unwind$simple_vm_oop_pushclassmodules DD 010e01H
	DD	0620eH
$unwind$simple_vm_oop_popclassmodules DD 010901H
	DD	04209H
$unwind$simple_vm_oop_deletemodulessafter DD 010d01H
	DD	0620dH
$unwind$simple_vm_oop_callmethodinsideclass DD 010901H
	DD	08209H
$unwind$simple_vm_oop_setget DD 010e01H
	DD	0a20eH
$unwind$simple_vm_oop_setproperty DD 010901H
	DD	0e209H
$unwind$simple_vm_oop_operatoroverloading DD 011801H
	DD	08218H
$unwind$simple_vm_oop_objvarfromobjlist DD 010901H
	DD	06209H
$unwind$simple_vm_oop_objtypefromobjlist DD 010901H
	DD	06209H
$unwind$simple_vm_oop_objitemfromobjlist DD 010901H
	DD	06209H
$unwind$simple_vm_oop_callmethodfrombrace DD 010901H
	DD	08209H
$unwind$simple_vm_oop_isblock DD 011301H
	DD	08213H
$unwind$simple_vm_oop_updateselfpointer DD 011801H
	DD	06218H
$unwind$simple_vm_oop_movetobeforeobjstate DD 010901H
	DD	06209H
$unwind$simple_vm_oop_setthethisvariable DD 010901H
	DD	06209H
$unwind$simple_vm_oop_updateselfpointer2 DD 010e01H
	DD	0820eH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
lFound$ = 36
pItem$ = 40
pRecord$ = 48
vm$ = 80
list$ = 88
simple_vm_oop_updateselfpointer2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1241
$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1256
  0000e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR lFound$[rsp], 0
; Line 1257
  00016	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0001e	eb 0a		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
  00020	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00024	ff c0		 inc	 eax
  00026	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_vm_:
  0002a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	48 8b 80 d0 19
	00 00		 mov	 rax, QWORD PTR [rax+6608]
  00036	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00039	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0003d	7f 59		 jg	 SHORT $LN3@simple_vm_
; Line 1258
  0003f	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00043	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00048	48 8b 88 d0 19
	00 00		 mov	 rcx, QWORD PTR [rax+6608]
  0004f	e8 00 00 00 00	 call	 simple_list_getlist
  00054	48 89 44 24 30	 mov	 QWORD PTR pRecord$[rsp], rax
; Line 1259
  00059	ba 01 00 00 00	 mov	 edx, 1
  0005e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pRecord$[rsp]
  00063	e8 00 00 00 00	 call	 simple_list_getitem
  00068	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0006d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0006f	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00072	75 22		 jne	 SHORT $LN2@simple_vm_
; Line 1260
  00074	ba 02 00 00 00	 mov	 edx, 2
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pRecord$[rsp]
  0007e	e8 00 00 00 00	 call	 simple_list_getitem
  00083	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00087	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1261
  0008c	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR lFound$[rsp], 1
; Line 1262
  00094	eb 02		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
; Line 1264
  00096	eb 88		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
; Line 1265
  00098	83 7c 24 24 00	 cmp	 DWORD PTR lFound$[rsp], 0
  0009d	0f 85 af 00 00
	00		 jne	 $LN1@simple_vm_
; Line 1266
  000a3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a8	48 8b 90 d0 19
	00 00		 mov	 rdx, QWORD PTR [rax+6608]
  000af	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000bb	e8 00 00 00 00	 call	 simple_list_newlist_gc
  000c0	48 89 44 24 30	 mov	 QWORD PTR pRecord$[rsp], rax
; Line 1267
  000c5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  000cd	48 8b 54 24 30	 mov	 rdx, QWORD PTR pRecord$[rsp]
  000d2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000de	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 1268
  000e3	33 c9		 xor	 ecx, ecx
  000e5	e8 00 00 00 00	 call	 simple_item_new
  000ea	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1269
  000ef	4c 8b 44 24 28	 mov	 r8, QWORD PTR pItem$[rsp]
  000f4	48 8b 54 24 30	 mov	 rdx, QWORD PTR pRecord$[rsp]
  000f9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fe	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00105	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 1270
  0010a	41 b8 04 00 00
	00		 mov	 r8d, 4
  00110	48 8b 54 24 28	 mov	 rdx, QWORD PTR pItem$[rsp]
  00115	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0011a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00121	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 1271
  00126	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  0012b	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0012f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00134	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0013b	e8 00 00 00 00	 call	 simple_state_free
; Line 1272
  00140	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  00145	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00148	ff c0		 inc	 eax
  0014a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pItem$[rsp]
  0014f	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN1@simple_vm_:
; Line 1275
  00152	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  00157	48 8b 4c 24 58	 mov	 rcx, QWORD PTR list$[rsp]
  0015c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 1277
  00160	4c 8b 4c 24 28	 mov	 r9, QWORD PTR pItem$[rsp]
  00165	41 b8 02 00 00
	00		 mov	 r8d, 2
  0016b	48 8b 54 24 58	 mov	 rdx, QWORD PTR list$[rsp]
  00170	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00175	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
; Line 1278
  0017a	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0017e	c3		 ret	 0
simple_vm_oop_updateselfpointer2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
pThis$ = 40
vm$ = 64
simple_vm_oop_setthethisvariable PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1217
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1219
  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  00013	ba 0c 00 00 00	 mov	 edx, 12
  00018	48 8b c8	 mov	 rcx, rax
  0001b	e8 00 00 00 00	 call	 simple_list_getlist
  00020	48 89 44 24 28	 mov	 QWORD PTR pThis$[rsp], rax
; Line 1220
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002a	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00031	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00035	7c 0e		 jl	 SHORT $LN2@simple_vm_
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003c	e8 00 00 00 00	 call	 simple_vm_oop_callmethodinsideclass
  00041	85 c0		 test	 eax, eax
  00043	75 43		 jne	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
; Line 1221
  00045	45 33 c9	 xor	 r9d, r9d
  00048	41 b8 03 00 00
	00		 mov	 r8d, 3
  0004e	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00058	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0005f	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1222
  00064	45 33 c9	 xor	 r9d, r9d
  00067	41 b8 04 00 00
	00		 mov	 r8d, 4
  0006d	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00077	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007e	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1223
  00083	e9 f3 00 00 00	 jmp	 $LN4@simple_vm_
$LN3@simple_vm_:
; Line 1225
  00088	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00094	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00097	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0009c	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  000a3	e8 00 00 00 00	 call	 simple_list_getlist
  000a8	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1227
  000ad	ba 01 00 00 00	 mov	 edx, 1
  000b2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000b7	e8 00 00 00 00	 call	 simple_list_getlist
  000bc	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1228
  000c1	48 83 7c 24 20
	00		 cmp	 QWORD PTR list$[rsp], 0
  000c7	75 40		 jne	 SHORT $LN1@simple_vm_
; Line 1229
  000c9	45 33 c9	 xor	 r9d, r9d
  000cc	41 b8 03 00 00
	00		 mov	 r8d, 3
  000d2	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  000d7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000dc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000e3	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1230
  000e8	45 33 c9	 xor	 r9d, r9d
  000eb	41 b8 04 00 00
	00		 mov	 r8d, 4
  000f1	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  000f6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000fb	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00102	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1231
  00107	eb 72		 jmp	 SHORT $LN4@simple_vm_
$LN1@simple_vm_:
; Line 1234
  00109	ba 01 00 00 00	 mov	 edx, 1
  0010e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00113	e8 00 00 00 00	 call	 simple_list_getlist
  00118	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1236
  0011d	ba 03 00 00 00	 mov	 edx, 3
  00122	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00127	e8 00 00 00 00	 call	 simple_list_getitem
  0012c	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  00130	41 b8 03 00 00
	00		 mov	 r8d, 3
  00136	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  0013b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00140	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00147	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1237
  0014c	ba 04 00 00 00	 mov	 edx, 4
  00151	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00156	e8 00 00 00 00	 call	 simple_list_getitem
  0015b	44 8b 48 08	 mov	 r9d, DWORD PTR [rax+8]
  0015f	41 b8 04 00 00
	00		 mov	 r8d, 4
  00165	48 8b 54 24 28	 mov	 rdx, QWORD PTR pThis$[rsp]
  0016a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0016f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00176	e8 00 00 00 00	 call	 simple_list_setint_gc
$LN4@simple_vm_:
; Line 1238
  0017b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017f	c3		 ret	 0
simple_vm_oop_setthethisvariable ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
list$ = 40
vm$ = 64
simple_vm_oop_movetobeforeobjstate PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 451
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 453
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	83 b8 fc 18 00
	00 01		 cmp	 DWORD PTR [rax+6396], 1
  00015	75 05		 jne	 SHORT $LN1@simple_vm_
; Line 455
  00017	e9 83 00 00 00	 jmp	 $LN2@simple_vm_
$LN1@simple_vm_:
; Line 458
  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00021	48 8b 90 60 19
	00 00		 mov	 rdx, QWORD PTR [rax+6496]
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00034	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00039	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 459
  0003e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00043	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0004a	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00052	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00059	e8 00 00 00 00	 call	 simple_list_getlist
  0005e	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 460
  00063	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  00068	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_copy
; Line 461
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00077	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0007e	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00082	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00087	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00093	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0009a	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN2@simple_vm_:
; Line 462
  0009f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000a3	c3		 ret	 0
simple_vm_oop_movetobeforeobjstate ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
pObj$ = 72
nType$ = 80
pContainer$ = 88
simple_vm_oop_updateselfpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1204
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1207
  00018	ba 02 00 00 00	 mov	 edx, 2
  0001d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pObj$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_getlist
  00027	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1209
  0002c	ba 01 00 00 00	 mov	 edx, 1
  00031	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00036	e8 00 00 00 00	 call	 simple_list_getlist
  0003b	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1211
  00040	4c 8b 4c 24 58	 mov	 r9, QWORD PTR pContainer$[rsp]
  00045	41 b8 03 00 00
	00		 mov	 r8d, 3
  0004b	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00055	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0005c	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1213
  00061	44 8b 4c 24 50	 mov	 r9d, DWORD PTR nType$[rsp]
  00066	41 b8 04 00 00
	00		 mov	 r8d, 4
  0006c	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00076	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007d	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1214
  00082	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00086	c3		 ret	 0
simple_vm_oop_updateselfpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list2$ = 40
list3$ = 48
vm$ = 80
list$ = 88
cStr$ = 96
simple_vm_oop_isblock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1179
$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1183
  00013	ba 01 00 00 00	 mov	 edx, 1
  00018	48 8b 4c 24 58	 mov	 rcx, QWORD PTR list$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_list_getitem
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 58	 mov	 QWORD PTR list$[rsp], rax
; Line 1185
  0002b	ba 04 00 00 00	 mov	 edx, 4
  00030	48 8b 4c 24 58	 mov	 rcx, QWORD PTR list$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_getlist
  0003a	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 1187
  0003f	48 8b 54 24 58	 mov	 rdx, QWORD PTR list$[rsp]
  00044	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00049	e8 00 00 00 00	 call	 simple_vm_oop_parentmethods
; Line 1189
  0004e	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  00053	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00057	7e 7e		 jle	 SHORT $LN6@simple_vm_
; Line 1190
  00059	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00061	eb 0a		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
  00063	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00067	ff c0		 inc	 eax
  00069	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_vm_:
  0006d	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  00072	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00075	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00079	7f 5c		 jg	 SHORT $LN3@simple_vm_
; Line 1191
  0007b	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0007f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00084	e8 00 00 00 00	 call	 simple_list_getlist
  00089	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 1192
  0008e	ba 01 00 00 00	 mov	 edx, 1
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  00098	e8 00 00 00 00	 call	 simple_list_getitem
  0009d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a1	48 8b 54 24 60	 mov	 rdx, QWORD PTR cStr$[rsp]
  000a6	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000a9	e8 00 00 00 00	 call	 strcmp
  000ae	85 c0		 test	 eax, eax
  000b0	75 23		 jne	 SHORT $LN2@simple_vm_
; Line 1193
  000b2	ba 04 00 00 00	 mov	 edx, 4
  000b7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  000bc	e8 00 00 00 00	 call	 simple_list_getitem
  000c1	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000c5	74 07		 je	 SHORT $LN1@simple_vm_
; Line 1194
  000c7	b8 02 00 00 00	 mov	 eax, 2
  000cc	eb 0b		 jmp	 SHORT $LN7@simple_vm_
$LN1@simple_vm_:
; Line 1196
  000ce	b8 01 00 00 00	 mov	 eax, 1
  000d3	eb 04		 jmp	 SHORT $LN7@simple_vm_
$LN2@simple_vm_:
; Line 1198
  000d5	eb 8c		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
$LN6@simple_vm_:
; Line 1200
  000d7	33 c0		 xor	 eax, eax
$LN7@simple_vm_:
; Line 1201
  000d9	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000dd	c3		 ret	 0
simple_vm_oop_isblock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
list$ = 40
cStr$ = 48
vm$ = 80
simple_vm_oop_callmethodfrombrace PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1142
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1150
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00011	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00018	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001d	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00024	48 8d 84 01 30
	ff ff ff	 lea	 rax, QWORD PTR [rcx+rax-208]
  0002c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00031	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 1151
  00038	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00044	b9 08 00 00 00	 mov	 ecx, 8
  00049	48 6b c9 00	 imul	 rcx, 0
  0004d	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00051	83 78 08 51	 cmp	 DWORD PTR [rax+8], 81	; 00000051H
  00055	74 23		 je	 SHORT $LN5@simple_vm_
  00057	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0005c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00063	b9 08 00 00 00	 mov	 ecx, 8
  00068	48 6b c9 00	 imul	 rcx, 0
  0006c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00070	83 78 08 52	 cmp	 DWORD PTR [rax+8], 82	; 00000052H
  00074	0f 85 9c 01 00
	00		 jne	 $LN6@simple_vm_
$LN5@simple_vm_:
; Line 1152
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00086	b9 08 00 00 00	 mov	 ecx, 8
  0008b	48 6b c9 00	 imul	 rcx, 0
  0008f	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00093	c7 40 08 52 00
	00 00		 mov	 DWORD PTR [rax+8], 82	; 00000052H
; Line 1153
  0009a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0009f	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000a6	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ae	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  000b5	e8 00 00 00 00	 call	 simple_list_getlist
  000ba	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1155
  000bf	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c4	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000cb	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  000cf	0f 8e cd 00 00
	00		 jle	 $LN4@simple_vm_
  000d5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000da	0f be 80 b9 19
	00 00		 movsx	 eax, BYTE PTR [rax+6585]
  000e1	85 c0		 test	 eax, eax
  000e3	0f 84 b9 00 00
	00		 je	 $LN4@simple_vm_
; Line 1156
  000e9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ee	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  000f5	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  000f9	7e 7e		 jle	 SHORT $LN3@simple_vm_
; Line 1157
  000fb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00100	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00107	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0010a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010f	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00116	e8 00 00 00 00	 call	 simple_list_getlist
  0011b	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 1158
  00120	ba 02 00 00 00	 mov	 edx, 2
  00125	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  0012a	e8 00 00 00 00	 call	 simple_list_getitem
  0012f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00133	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00136	48 89 44 24 30	 mov	 QWORD PTR cStr$[rsp], rax
; Line 1159
  0013b	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr$[rsp]
  00140	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cStr$[rsp]
  00145	e8 00 00 00 00	 call	 strcmp
  0014a	85 c0		 test	 eax, eax
  0014c	74 29		 je	 SHORT $LN2@simple_vm_
; Line 1160
  0014e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00153	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0015a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0015d	ff c8		 dec	 eax
  0015f	8b d0		 mov	 edx, eax
  00161	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00166	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  0016d	e8 00 00 00 00	 call	 simple_list_getlist
  00172	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
$LN2@simple_vm_:
; Line 1163
  00177	eb 29		 jmp	 SHORT $LN1@simple_vm_
$LN3@simple_vm_:
; Line 1164
  00179	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017e	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00185	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00188	ff c8		 dec	 eax
  0018a	8b d0		 mov	 edx, eax
  0018c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00191	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00198	e8 00 00 00 00	 call	 simple_list_getlist
  0019d	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
$LN1@simple_vm_:
$LN4@simple_vm_:
; Line 1167
  001a2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a7	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  001ae	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ba	e8 00 00 00 00	 call	 simple_list_newlist_gc
  001bf	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 1168
  001c4	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  001c9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  001ce	e8 00 00 00 00	 call	 simple_list_copy
; Line 1170
  001d3	41 b8 01 00 00
	00		 mov	 r8d, 1
  001d9	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  001de	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001e3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ea	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 1172
  001ef	ba 03 00 00 00	 mov	 edx, 3
  001f4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  001f9	e8 00 00 00 00	 call	 simple_list_getitem
  001fe	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00202	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1173
  00207	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
$LN6@simple_vm_:
; Line 1175
  00216	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0021b	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  0021e	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00225	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022a	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00231	48 8d 84 01 60
	fe ff ff	 lea	 rax, QWORD PTR [rcx+rax-416]
  00239	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0023e	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 1176
  00245	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00249	c3		 ret	 0
simple_vm_oop_callmethodfrombrace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list$ = 64
simple_vm_oop_objitemfromobjlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1076
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1079
  00009	ba 02 00 00 00	 mov	 edx, 2
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00013	e8 00 00 00 00	 call	 simple_list_getlist
  00018	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1081
  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_getlist
  0002c	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1083
  00031	ba 03 00 00 00	 mov	 edx, 3
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_getitem
  00040	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00044	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1084
  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
; Line 1085
  0004e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00052	c3		 ret	 0
simple_vm_oop_objitemfromobjlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
list$ = 64
simple_vm_oop_objtypefromobjlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1064
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1067
  00009	ba 02 00 00 00	 mov	 edx, 2
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00013	e8 00 00 00 00	 call	 simple_list_getlist
  00018	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1069
  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_getlist
  0002c	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1071
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_getitem
  00040	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00043	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 1072
  00047	8b 44 24 20	 mov	 eax, DWORD PTR nType$[rsp]
; Line 1073
  0004b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004f	c3		 ret	 0
simple_vm_oop_objtypefromobjlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
pItem$ = 40
list$ = 64
simple_vm_oop_objvarfromobjlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1044
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1048
  00009	ba 02 00 00 00	 mov	 edx, 2
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00013	e8 00 00 00 00	 call	 simple_list_getlist
  00018	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1050
  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00027	e8 00 00 00 00	 call	 simple_list_getlist
  0002c	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1052
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_getitem
  00040	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00043	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 1053
  00047	83 7c 24 20 01	 cmp	 DWORD PTR nType$[rsp], 1
  0004c	75 1a		 jne	 SHORT $LN3@simple_vm_
; Line 1054
  0004e	ba 03 00 00 00	 mov	 edx, 3
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00058	e8 00 00 00 00	 call	 simple_list_getitem
  0005d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00061	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
  00066	eb 2d		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 1056
  00068	83 7c 24 20 02	 cmp	 DWORD PTR nType$[rsp], 2
  0006d	75 26		 jne	 SHORT $LN1@simple_vm_
; Line 1057
  0006f	ba 03 00 00 00	 mov	 edx, 3
  00074	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00079	e8 00 00 00 00	 call	 simple_list_getitem
  0007e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00082	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1058
  00087	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  0008c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00090	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 1060
  00095	48 8b 44 24 40	 mov	 rax, QWORD PTR list$[rsp]
; Line 1061
  0009a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009e	c3		 ret	 0
simple_vm_oop_objvarfromobjlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nObjType$ = 32
list2$ = 40
string$ = 48
pItem$ = 56
vm$ = 80
pObj$ = 88
string_one$ = 96
nType$ = 104
cStr2$ = 112
nNum1$ = 120
pointer$ = 128
nPointerType$ = 136
simple_vm_oop_operatoroverloading PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 1088
$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1093
  00018	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pObj$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_vm_oop_objtypefromobjlist
  00022	89 44 24 20	 mov	 DWORD PTR nObjType$[rsp], eax
; Line 1095
  00026	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002b	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  00030	ba 05 00 00 00	 mov	 edx, 5
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 simple_list_getlist
  0003d	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 1096
  00042	83 7c 24 20 01	 cmp	 DWORD PTR nObjType$[rsp], 1
  00047	75 32		 jne	 SHORT $LN10@simple_vm_
; Line 1097
  00049	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pObj$[rsp]
  0004e	e8 00 00 00 00	 call	 simple_vm_oop_objvarfromobjlist
  00053	48 89 44 24 58	 mov	 QWORD PTR pObj$[rsp], rax
; Line 1098
  00058	4c 8b 4c 24 58	 mov	 r9, QWORD PTR pObj$[rsp]
  0005d	41 b8 03 00 00
	00		 mov	 r8d, 3
  00063	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00074	e8 00 00 00 00	 call	 simple_list_setpointer_gc
  00079	eb 37		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 1100
  0007b	83 7c 24 20 02	 cmp	 DWORD PTR nObjType$[rsp], 2
  00080	75 30		 jne	 SHORT $LN8@simple_vm_
; Line 1101
  00082	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pObj$[rsp]
  00087	e8 00 00 00 00	 call	 simple_vm_oop_objitemfromobjlist
  0008c	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1102
  00091	4c 8b 4c 24 38	 mov	 r9, QWORD PTR pItem$[rsp]
  00096	41 b8 03 00 00
	00		 mov	 r8d, 3
  0009c	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  000a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ad	e8 00 00 00 00	 call	 simple_list_setpointer_gc
$LN8@simple_vm_:
$LN9@simple_vm_:
; Line 1104
  000b2	44 8b 4c 24 20	 mov	 r9d, DWORD PTR nObjType$[rsp]
  000b7	41 b8 04 00 00
	00		 mov	 r8d, 4
  000bd	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  000c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ce	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1106
  000d3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d8	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  000dd	ba 07 00 00 00	 mov	 edx, 7
  000e2	48 8b c8	 mov	 rcx, rax
  000e5	e8 00 00 00 00	 call	 simple_list_getlist
  000ea	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 1107
  000ef	83 7c 24 68 01	 cmp	 DWORD PTR nType$[rsp], 1
  000f4	75 48		 jne	 SHORT $LN7@simple_vm_
; Line 1108
  000f6	41 b9 01 00 00
	00		 mov	 r9d, 1
  000fc	41 b8 02 00 00
	00		 mov	 r8d, 2
  00102	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00107	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00113	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1109
  00118	4c 8b 4c 24 70	 mov	 r9, QWORD PTR cStr2$[rsp]
  0011d	41 b8 03 00 00
	00		 mov	 r8d, 3
  00123	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00128	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00134	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
  00139	e9 be 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 1111
  0013e	83 7c 24 68 02	 cmp	 DWORD PTR nType$[rsp], 2
  00143	75 46		 jne	 SHORT $LN5@simple_vm_
; Line 1112
  00145	41 b9 02 00 00
	00		 mov	 r9d, 2
  0014b	41 b8 02 00 00
	00		 mov	 r8d, 2
  00151	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00156	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00162	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1113
  00167	f2 0f 10 5c 24
	78		 movsdx	 xmm3, QWORD PTR nNum1$[rsp]
  0016d	41 b8 03 00 00
	00		 mov	 r8d, 3
  00173	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00184	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00189	eb 71		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 1115
  0018b	83 7c 24 68 03	 cmp	 DWORD PTR nType$[rsp], 3
  00190	75 6a		 jne	 SHORT $LN3@simple_vm_
; Line 1116
  00192	41 b9 04 00 00
	00		 mov	 r9d, 4
  00198	41 b8 02 00 00
	00		 mov	 r8d, 2
  0019e	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001a3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001af	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1117
  001b4	4c 8b 8c 24 80
	00 00 00	 mov	 r9, QWORD PTR pointer$[rsp]
  001bc	41 b8 03 00 00
	00		 mov	 r8d, 3
  001c2	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001c7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001cc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001d3	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 1118
  001d8	44 8b 8c 24 88
	00 00 00	 mov	 r9d, DWORD PTR nPointerType$[rsp]
  001e0	41 b8 04 00 00
	00		 mov	 r8d, 4
  001e6	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001eb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001f7	e8 00 00 00 00	 call	 simple_list_setint_gc
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 1120
  001fc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00201	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00208	b9 08 00 00 00	 mov	 ecx, 8
  0020d	48 6b c9 01	 imul	 rcx, 1
  00211	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00215	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00219	0f 85 d3 00 00
	00		 jne	 $LN2@simple_vm_
; Line 1122
  0021f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82950
  00226	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0022b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00232	e8 00 00 00 00	 call	 simple_string_new_gc
  00237	48 89 44 24 30	 mov	 QWORD PTR string$[rsp], rax
; Line 1123
  0023c	4c 8b 44 24 60	 mov	 r8, QWORD PTR string_one$[rsp]
  00241	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00246	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0024b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00252	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 1124
  00257	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82951
  0025e	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00263	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00268	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0026f	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 1126
  00274	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00279	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00280	b9 08 00 00 00	 mov	 ecx, 8
  00285	48 6b c9 01	 imul	 rcx, 1
  00289	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0028d	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1127
  00292	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00297	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 1128
  0029e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a3	c6 80 ba 19 00
	00 01		 mov	 BYTE PTR [rax+6586], 1
; Line 1129
  002aa	48 8b 44 24 30	 mov	 rax, QWORD PTR string$[rsp]
  002af	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002b2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b7	e8 00 00 00 00	 call	 simple_vm_exec
; Line 1131
  002bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c1	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  002c4	48 8b 54 24 38	 mov	 rdx, QWORD PTR pItem$[rsp]
  002c9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002ce	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002d5	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 1133
  002da	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  002df	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002e4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002eb	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 1135
  002f0	eb 34		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1136
  002f2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f7	8b 10		 mov	 edx, DWORD PTR [rax]
  002f9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002fe	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 1137
  00303	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00308	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0030f	b9 08 00 00 00	 mov	 ecx, 8
  00314	48 6b c9 01	 imul	 rcx, 1
  00318	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0031c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00321	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00324	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@simple_vm_:
; Line 1139
  00326	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0032a	c3		 ret	 0
simple_vm_oop_operatoroverloading ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
list2$ = 40
string$ = 48
pItem2$ = 56
tv428 = 64
pItem$ = 72
tv447 = 80
tv388 = 88
tv465 = 96
vm$ = 128
simple_vm_oop_setproperty PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 941
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; Line 946
  00009	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00011	48 8b 80 28 19
	00 00		 mov	 rax, QWORD PTR [rax+6440]
  00018	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  0001c	7d 12		 jge	 SHORT $LN17@simple_vm_
; Line 948
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00026	e8 00 00 00 00	 call	 simple_vm_assignment
; Line 949
  0002b	e9 b5 09 00 00	 jmp	 $LN18@simple_vm_
$LN17@simple_vm_:
; Line 951
  00030	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00038	48 8b 80 28 19
	00 00		 mov	 rax, QWORD PTR [rax+6440]
  0003f	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00042	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0004a	48 8b 88 28 19
	00 00		 mov	 rcx, QWORD PTR [rax+6440]
  00051	e8 00 00 00 00	 call	 simple_list_getlist
  00056	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 953
  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR list$[rsp]
  00060	83 78 10 04	 cmp	 DWORD PTR [rax+16], 4
  00064	75 2b		 jne	 SHORT $LN16@simple_vm_
; Line 954
  00066	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0006e	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00075	44 8b c0	 mov	 r8d, eax
  00078	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0007d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00085	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0008c	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN16@simple_vm_:
; Line 957
  00091	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00099	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000a0	b9 08 00 00 00	 mov	 ecx, 8
  000a5	48 6b c9 01	 imul	 rcx, 1
  000a9	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000ad	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000b1	0f 85 e7 05 00
	00		 jne	 $LN15@simple_vm_
; Line 958
  000b7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000bf	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000c6	b9 08 00 00 00	 mov	 ecx, 8
  000cb	48 6b c9 01	 imul	 rcx, 1
  000cf	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000d3	48 89 44 24 38	 mov	 QWORD PTR pItem2$[rsp], rax
; Line 960
  000d8	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e0	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  000e5	ba 05 00 00 00	 mov	 edx, 5
  000ea	48 8b c8	 mov	 rcx, rax
  000ed	e8 00 00 00 00	 call	 simple_list_getlist
  000f2	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 961
  000f7	ba 01 00 00 00	 mov	 edx, 1
  000fc	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00101	e8 00 00 00 00	 call	 simple_list_getitem
  00106	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0010a	41 b8 03 00 00
	00		 mov	 r8d, 3
  00110	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00115	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0011d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00124	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 962
  00129	ba 02 00 00 00	 mov	 edx, 2
  0012e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00133	e8 00 00 00 00	 call	 simple_list_getitem
  00138	44 8b 48 08	 mov	 r9d, DWORD PTR [rax+8]
  0013c	41 b8 04 00 00
	00		 mov	 r8d, 4
  00142	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00147	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0014f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00156	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 964
  0015b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00163	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  00168	ba 07 00 00 00	 mov	 edx, 7
  0016d	48 8b c8	 mov	 rcx, rax
  00170	e8 00 00 00 00	 call	 simple_list_getlist
  00175	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 965
  0017a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00182	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00189	48 6b c0 18	 imul	 rax, 24
  0018d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00195	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00199	83 e0 07	 and	 eax, 7
  0019c	83 f8 02	 cmp	 eax, 2
  0019f	0f 85 a4 00 00
	00		 jne	 $LN14@simple_vm_
; Line 966
  001a5	41 b9 02 00 00
	00		 mov	 r9d, 2
  001ab	41 b8 02 00 00
	00		 mov	 r8d, 2
  001b1	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001b6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001be	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001c5	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 967
  001ca	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d9	48 6b c0 18	 imul	 rax, 24
  001dd	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001e5	f2 0f 10 5c 01
	38		 movsdx	 xmm3, QWORD PTR [rcx+rax+56]
  001eb	41 b8 03 00 00
	00		 mov	 r8d, 3
  001f1	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001f6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001fe	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00205	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 968
  0020a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00212	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00219	48 6b c0 18	 imul	 rax, 24
  0021d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00225	f2 0f 10 54 01
	38		 movsdx	 xmm2, QWORD PTR [rcx+rax+56]
  0022b	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00230	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00238	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0023f	e8 00 00 00 00	 call	 simple_list_adddouble_gc
  00244	e9 23 02 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 970
  00249	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00251	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00258	48 6b c0 18	 imul	 rax, 24
  0025c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00264	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00268	83 e0 07	 and	 eax, 7
  0026b	83 f8 01	 cmp	 eax, 1
  0026e	0f 85 a8 00 00
	00		 jne	 $LN12@simple_vm_
; Line 971
  00274	41 b9 01 00 00
	00		 mov	 r9d, 1
  0027a	41 b8 02 00 00
	00		 mov	 r8d, 2
  00280	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00285	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00294	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 972
  00299	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002a1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002a8	48 6b c0 18	 imul	 rax, 24
  002ac	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002b4	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002b9	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  002bc	41 b8 03 00 00
	00		 mov	 r8d, 3
  002c2	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  002c7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002cf	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002d6	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 973
  002db	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002e3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ea	48 6b c0 18	 imul	 rax, 24
  002ee	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002f6	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002fb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002fe	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00303	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0030b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00312	e8 00 00 00 00	 call	 simple_list_addstring_gc
  00317	e9 50 01 00 00	 jmp	 $LN11@simple_vm_
$LN12@simple_vm_:
; Line 975
  0031c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00324	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032b	48 6b c0 18	 imul	 rax, 24
  0032f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	0f 85 25 01 00
	00		 jne	 $LN10@simple_vm_
; Line 976
  00347	41 b9 04 00 00
	00		 mov	 r9d, 4
  0034d	41 b8 02 00 00
	00		 mov	 r8d, 2
  00353	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00358	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00360	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00367	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 977
  0036c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00374	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0037b	48 6b c0 18	 imul	 rax, 24
  0037f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00387	4c 8b 4c 01 38	 mov	 r9, QWORD PTR [rcx+rax+56]
  0038c	41 b8 03 00 00
	00		 mov	 r8d, 3
  00392	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00397	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0039f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003a6	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 978
  003ab	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003b3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003ba	48 6b c0 18	 imul	 rax, 24
  003be	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003ca	c1 e8 05	 shr	 eax, 5
  003cd	83 e0 03	 and	 eax, 3
  003d0	44 8b c8	 mov	 r9d, eax
  003d3	41 b8 04 00 00
	00		 mov	 r8d, 4
  003d9	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  003de	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003e6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003ed	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 979
  003f2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00401	48 6b c0 18	 imul	 rax, 24
  00405	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0040d	4c 8b 44 01 38	 mov	 r8, QWORD PTR [rcx+rax+56]
  00412	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00417	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0041f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00426	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 980
  0042b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00433	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0043a	48 6b c0 18	 imul	 rax, 24
  0043e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00446	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0044a	c1 e8 05	 shr	 eax, 5
  0044d	83 e0 03	 and	 eax, 3
  00450	44 8b c0	 mov	 r8d, eax
  00453	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00458	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00460	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00467	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 983
  0046c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00474	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  00479	ba 08 00 00 00	 mov	 edx, 8
  0047e	48 8b c8	 mov	 rcx, rax
  00481	e8 00 00 00 00	 call	 simple_list_getlist
  00486	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 984
  0048b	0f 57 db	 xorps	 xmm3, xmm3
  0048e	41 b8 03 00 00
	00		 mov	 r8d, 3
  00494	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00499	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004a1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004a8	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 986
  004ad	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004b5	8b 00		 mov	 eax, DWORD PTR [rax]
  004b7	ff c8		 dec	 eax
  004b9	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004c1	89 01		 mov	 DWORD PTR [rcx], eax
; Line 987
  004c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004cb	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  004d2	b9 08 00 00 00	 mov	 ecx, 8
  004d7	48 6b c9 02	 imul	 rcx, 2
  004db	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  004df	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  004e3	0f 85 51 01 00
	00		 jne	 $LN9@simple_vm_
; Line 989
  004e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82889
  004f0	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004f8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004ff	e8 00 00 00 00	 call	 simple_string_new_gc
  00504	48 89 44 24 30	 mov	 QWORD PTR string$[rsp], rax
; Line 990
  00509	ba 03 00 00 00	 mov	 edx, 3
  0050e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00513	e8 00 00 00 00	 call	 simple_list_getitem
  00518	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0051c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0051f	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00524	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0052c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00533	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 991
  00538	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82890
  0053f	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00544	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0054c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00553	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 992
  00558	ba 03 00 00 00	 mov	 edx, 3
  0055d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00562	e8 00 00 00 00	 call	 simple_list_getitem
  00567	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0056b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0056e	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00573	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0057b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00582	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 993
  00587	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82891
  0058e	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00593	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0059b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005a2	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 995
  005a7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005af	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  005b6	b9 08 00 00 00	 mov	 ecx, 8
  005bb	48 6b c9 02	 imul	 rcx, 2
  005bf	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  005c3	48 89 44 24 48	 mov	 QWORD PTR pItem$[rsp], rax
; Line 996
  005c8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005d0	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 997
  005d7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005df	c6 80 ba 19 00
	00 01		 mov	 BYTE PTR [rax+6586], 1
; Line 998
  005e6	48 8b 44 24 30	 mov	 rax, QWORD PTR string$[rsp]
  005eb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  005ee	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  005f6	e8 00 00 00 00	 call	 simple_vm_exec
; Line 1000
  005fb	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00603	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00606	48 8b 54 24 48	 mov	 rdx, QWORD PTR pItem$[rsp]
  0060b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00613	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0061a	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 1002
  0061f	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00624	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0062c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00633	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 1004
  00638	eb 40		 jmp	 SHORT $LN8@simple_vm_
$LN9@simple_vm_:
; Line 1005
  0063a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00642	8b 10		 mov	 edx, DWORD PTR [rax]
  00644	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0064c	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 1006
  00651	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00659	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00660	b9 08 00 00 00	 mov	 ecx, 8
  00665	48 6b c9 02	 imul	 rcx, 2
  00669	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0066d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00675	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00678	89 01		 mov	 DWORD PTR [rcx], eax
$LN8@simple_vm_:
; Line 1009
  0067a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00680	48 8b 54 24 38	 mov	 rdx, QWORD PTR pItem2$[rsp]
  00685	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0068d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00694	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 1012
  00699	e9 47 03 00 00	 jmp	 $LN7@simple_vm_
$LN15@simple_vm_:
; Line 1014
  0069e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006a6	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  006ad	b9 08 00 00 00	 mov	 ecx, 8
  006b2	48 6b c9 01	 imul	 rcx, 1
  006b6	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  006ba	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
; Line 1016
  006c1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  006c9	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  006ce	ba 08 00 00 00	 mov	 edx, 8
  006d3	48 8b c8	 mov	 rcx, rax
  006d6	e8 00 00 00 00	 call	 simple_list_getlist
  006db	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 1017
  006e0	ba 03 00 00 00	 mov	 edx, 3
  006e5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  006ea	e8 00 00 00 00	 call	 simple_list_getitem
  006ef	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  006f4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  006fc	0f 8a ad 02 00
	00		 jp	 $LN6@simple_vm_
  00702	0f 85 a7 02 00
	00		 jne	 $LN6@simple_vm_
; Line 1022
  00708	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00710	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00717	fe c0		 inc	 al
  00719	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00721	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00727	ba 04 00 00 00	 mov	 edx, 4
  0072c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00731	e8 00 00 00 00	 call	 simple_list_getitem
  00736	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0073e	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00745	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  0074d	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00751	48 89 54 24 58	 mov	 QWORD PTR tv388[rsp], rdx
  00756	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0075a	8b d1		 mov	 edx, ecx
  0075c	48 8b 44 24 58	 mov	 rax, QWORD PTR tv388[rsp]
  00761	48 8b c8	 mov	 rcx, rax
  00764	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 1023
  00769	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00771	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00778	48 6b c0 18	 imul	 rax, 24
  0077c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00784	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00788	83 e0 9f	 and	 eax, -97		; ffffff9fH
  0078b	83 c8 20	 or	 eax, 32			; 00000020H
  0078e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00796	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0079d	48 6b c9 18	 imul	 rcx, 24
  007a1	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  007a9	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 1025
  007ad	ba 05 00 00 00	 mov	 edx, 5
  007b2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  007b7	e8 00 00 00 00	 call	 simple_list_getitem
  007bc	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  007c4	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  007c8	88 81 49 19 00
	00		 mov	 BYTE PTR [rcx+6473], al
; Line 1027
  007ce	ba 06 00 00 00	 mov	 edx, 6
  007d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  007d8	e8 00 00 00 00	 call	 simple_list_getitem
  007dd	8b 00		 mov	 eax, DWORD PTR [rax]
  007df	c1 e8 03	 shr	 eax, 3
  007e2	83 e0 03	 and	 eax, 3
  007e5	83 f8 02	 cmp	 eax, 2
  007e8	75 67		 jne	 SHORT $LN5@simple_vm_
; Line 1028
  007ea	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007f2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  007f9	fe c0		 inc	 al
  007fb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00803	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00809	ba 06 00 00 00	 mov	 edx, 6
  0080e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00813	e8 00 00 00 00	 call	 simple_list_getitem
  00818	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00820	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00827	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  0082f	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00833	48 89 54 24 40	 mov	 QWORD PTR tv428[rsp], rdx
  00838	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  0083d	8b d1		 mov	 edx, ecx
  0083f	48 8b 44 24 40	 mov	 rax, QWORD PTR tv428[rsp]
  00844	48 8b c8	 mov	 rcx, rax
  00847	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0084c	e9 51 01 00 00	 jmp	 $LN4@simple_vm_
$LN5@simple_vm_:
; Line 1030
  00851	ba 06 00 00 00	 mov	 edx, 6
  00856	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0085b	e8 00 00 00 00	 call	 simple_list_isstring
  00860	85 c0		 test	 eax, eax
  00862	74 69		 je	 SHORT $LN3@simple_vm_
; Line 1031
  00864	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0086c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00873	fe c0		 inc	 al
  00875	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0087d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00883	ba 06 00 00 00	 mov	 edx, 6
  00888	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0088d	e8 00 00 00 00	 call	 simple_list_getitem
  00892	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00896	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0089e	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  008a5	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  008ad	48 83 c2 30	 add	 rdx, 48			; 00000030H
  008b1	48 89 54 24 50	 mov	 QWORD PTR tv447[rsp], rdx
  008b6	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  008b9	8b d1		 mov	 edx, ecx
  008bb	48 8b 44 24 50	 mov	 rax, QWORD PTR tv447[rsp]
  008c0	48 8b c8	 mov	 rcx, rax
  008c3	e8 00 00 00 00	 call	 simple_itemarray_setstring
  008c8	e9 d5 00 00 00	 jmp	 $LN2@simple_vm_
$LN3@simple_vm_:
; Line 1033
  008cd	ba 06 00 00 00	 mov	 edx, 6
  008d2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  008d7	e8 00 00 00 00	 call	 simple_list_ispointer
  008dc	85 c0		 test	 eax, eax
  008de	0f 84 be 00 00
	00		 je	 $LN1@simple_vm_
; Line 1034
  008e4	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  008ec	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  008f3	fe c0		 inc	 al
  008f5	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  008fd	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00903	ba 06 00 00 00	 mov	 edx, 6
  00908	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0090d	e8 00 00 00 00	 call	 simple_list_getitem
  00912	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0091a	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00921	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00929	48 83 c2 30	 add	 rdx, 48			; 00000030H
  0092d	48 89 54 24 60	 mov	 QWORD PTR tv465[rsp], rdx
  00932	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00936	8b d1		 mov	 edx, ecx
  00938	48 8b 44 24 60	 mov	 rax, QWORD PTR tv465[rsp]
  0093d	48 8b c8	 mov	 rcx, rax
  00940	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 1035
  00945	ba 07 00 00 00	 mov	 edx, 7
  0094a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0094f	e8 00 00 00 00	 call	 simple_list_getitem
  00954	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0095c	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00963	48 6b c9 18	 imul	 rcx, 24
  00967	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0096a	83 e0 03	 and	 eax, 3
  0096d	c1 e0 05	 shl	 eax, 5
  00970	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00978	8b 4c 0a 30	 mov	 ecx, DWORD PTR [rdx+rcx+48]
  0097c	83 e1 9f	 and	 ecx, -97		; ffffff9fH
  0097f	0b c8		 or	 ecx, eax
  00981	8b c1		 mov	 eax, ecx
  00983	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0098b	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00992	48 6b c9 18	 imul	 rcx, 24
  00996	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  0099e	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
; Line 1037
  009a2	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  009aa	e8 00 00 00 00	 call	 simple_vm_assignment
$LN6@simple_vm_:
; Line 1039
  009af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  009b7	48 8b 80 28 19
	00 00		 mov	 rax, QWORD PTR [rax+6440]
  009be	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  009c2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  009ca	48 8b 90 28 19
	00 00		 mov	 rdx, QWORD PTR [rax+6440]
  009d1	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  009d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  009e0	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN7@simple_vm_:
$LN18@simple_vm_:
; Line 1041
  009e5	48 83 c4 78	 add	 rsp, 120		; 00000078H
  009e9	c3		 ret	 0
simple_vm_oop_setproperty ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
string$ = 40
list2$ = 48
pString2$ = 56
pItem2$ = 64
pItem$ = 72
vm$ = 96
var$ = 104
simple_vm_oop_setget PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 870
$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 875
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82857
  00015	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_string_new_gc
  00026	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 876
  0002b	ba 01 00 00 00	 mov	 edx, 1
  00030	48 8b 4c 24 68	 mov	 rcx, QWORD PTR var$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_getitem
  0003a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0003e	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00041	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  00046	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0004b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00052	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 877
  00057	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82858
  0005e	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  00063	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00068	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0006f	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 878
  00074	ba 01 00 00 00	 mov	 edx, 1
  00079	48 8b 4c 24 68	 mov	 rcx, QWORD PTR var$[rsp]
  0007e	e8 00 00 00 00	 call	 simple_list_getitem
  00083	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00087	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0008a	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  0008f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00094	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0009b	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 879
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82859
  000a7	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  000ac	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000b1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000b8	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 881
  000bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  000c7	ba 05 00 00 00	 mov	 edx, 5
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 simple_list_getlist
  000d4	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 882
  000d9	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000de	4c 8b 88 18 19
	00 00		 mov	 r9, QWORD PTR [rax+6424]
  000e5	41 b8 03 00 00
	00		 mov	 r8d, 3
  000eb	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000f0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000f5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000fc	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 883
  00101	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00106	0f be 80 20 19
	00 00		 movsx	 eax, BYTE PTR [rax+6432]
  0010d	44 8b c8	 mov	 r9d, eax
  00110	41 b8 04 00 00
	00		 mov	 r8d, 4
  00116	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0011b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00120	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00127	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 885
  0012c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00131	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00134	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  0013b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00140	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00147	48 8d 84 01 30
	ff ff ff	 lea	 rax, QWORD PTR [rcx+rax-208]
  0014f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00154	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 886
  0015b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00160	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00167	b9 08 00 00 00	 mov	 ecx, 8
  0016c	48 6b c9 00	 imul	 rcx, 0
  00170	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00174	83 78 08 55	 cmp	 DWORD PTR [rax+8], 85	; 00000055H
  00178	0f 84 e9 01 00
	00		 je	 $LN8@simple_vm_
; Line 887
  0017e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00183	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00186	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  0018d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00192	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00199	48 8d 84 01 60
	fe ff ff	 lea	 rax, QWORD PTR [rcx+rax-416]
  001a1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001a6	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 892
  001ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82861
  001b4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001b9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001c0	e8 00 00 00 00	 call	 simple_string_new_gc
  001c5	48 89 44 24 38	 mov	 QWORD PTR pString2$[rsp], rax
; Line 893
  001ca	ba 01 00 00 00	 mov	 edx, 1
  001cf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR var$[rsp]
  001d4	e8 00 00 00 00	 call	 simple_list_getitem
  001d9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001dd	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001e0	48 8b 54 24 38	 mov	 rdx, QWORD PTR pString2$[rsp]
  001e5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001ea	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001f1	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 895
  001f6	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR list2$[rsp], 0
; Line 896
  001ff	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00204	0f be 80 20 19
	00 00		 movsx	 eax, BYTE PTR [rax+6432]
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	75 1d		 jne	 SHORT $LN7@simple_vm_
; Line 897
  00210	ba 03 00 00 00	 mov	 edx, 3
  00215	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0021a	48 8b 88 18 19
	00 00		 mov	 rcx, QWORD PTR [rax+6424]
  00221	e8 00 00 00 00	 call	 simple_list_getlist
  00226	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
  0022b	eb 30		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 899
  0022d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00232	0f be 80 20 19
	00 00		 movsx	 eax, BYTE PTR [rax+6432]
  00239	83 f8 02	 cmp	 eax, 2
  0023c	75 1f		 jne	 SHORT $LN5@simple_vm_
; Line 900
  0023e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00243	48 8b 80 18 19
	00 00		 mov	 rax, QWORD PTR [rax+6424]
  0024a	48 89 44 24 40	 mov	 QWORD PTR pItem2$[rsp], rax
; Line 901
  0024f	48 8b 44 24 40	 mov	 rax, QWORD PTR pItem2$[rsp]
  00254	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00258	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
$LN5@simple_vm_:
$LN6@simple_vm_:
; Line 903
  0025d	48 8b 44 24 38	 mov	 rax, QWORD PTR pString2$[rsp]
  00262	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00265	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  0026a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0026f	e8 00 00 00 00	 call	 simple_vm_oop_isblock
  00274	85 c0		 test	 eax, eax
  00276	74 19		 je	 SHORT $LN4@simple_vm_
; Line 904
  00278	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0027d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00284	fe c8		 dec	 al
  00286	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0028b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
$LN4@simple_vm_:
; Line 906
  00291	48 8b 54 24 38	 mov	 rdx, QWORD PTR pString2$[rsp]
  00296	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0029b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002a2	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 907
  002a7	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002ac	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  002b3	b9 08 00 00 00	 mov	 ecx, 8
  002b8	48 6b c9 02	 imul	 rcx, 2
  002bc	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  002c0	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  002c4	75 68		 jne	 SHORT $LN3@simple_vm_
; Line 908
  002c6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002cb	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  002d2	b9 08 00 00 00	 mov	 ecx, 8
  002d7	48 6b c9 02	 imul	 rcx, 2
  002db	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  002df	48 89 44 24 48	 mov	 QWORD PTR pItem$[rsp], rax
; Line 909
  002e4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002e9	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 910
  002f0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002f5	c6 80 ba 19 00
	00 01		 mov	 BYTE PTR [rax+6586], 1
; Line 911
  002fc	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  00301	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00304	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00309	e8 00 00 00 00	 call	 simple_vm_exec
; Line 913
  0030e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00313	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  00316	48 8b 54 24 48	 mov	 rdx, QWORD PTR pItem$[rsp]
  0031b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00320	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00327	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 915
  0032c	eb 34		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 916
  0032e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00333	8b 10		 mov	 edx, DWORD PTR [rax]
  00335	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0033a	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 917
  0033f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00344	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0034b	b9 08 00 00 00	 mov	 ecx, 8
  00350	48 6b c9 02	 imul	 rcx, 2
  00354	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00358	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0035d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00360	89 01		 mov	 DWORD PTR [rcx], eax
$LN2@simple_vm_:
; Line 920
  00362	e9 fc 00 00 00	 jmp	 $LN1@simple_vm_
$LN8@simple_vm_:
; Line 921
  00367	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0036c	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  0036f	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00376	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00382	48 8d 84 01 60
	fe ff ff	 lea	 rax, QWORD PTR [rcx+rax-416]
  0038a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0038f	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 926
  00396	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0039b	48 8b 90 28 19
	00 00		 mov	 rdx, QWORD PTR [rax+6440]
  003a2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003a7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003ae	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 927
  003b3	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b8	48 8b 90 28 19
	00 00		 mov	 rdx, QWORD PTR [rax+6440]
  003bf	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003c4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003cb	e8 00 00 00 00	 call	 simple_list_newlist_gc
  003d0	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 929
  003d5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003da	4c 8b 80 18 19
	00 00		 mov	 r8, QWORD PTR [rax+6424]
  003e1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  003e6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003eb	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003f2	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 930
  003f7	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003fc	0f be 80 20 19
	00 00		 movsx	 eax, BYTE PTR [rax+6432]
  00403	44 8b c0	 mov	 r8d, eax
  00406	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0040b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00410	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00417	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 932
  0041c	ba 01 00 00 00	 mov	 edx, 1
  00421	48 8b 4c 24 68	 mov	 rcx, QWORD PTR var$[rsp]
  00426	e8 00 00 00 00	 call	 simple_list_getitem
  0042b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0042f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00432	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00437	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0043c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00443	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 934
  00448	4c 8b 44 24 68	 mov	 r8, QWORD PTR var$[rsp]
  0044d	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00452	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00457	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0045e	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN1@simple_vm_:
; Line 937
  00463	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  00468	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0046d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00474	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 938
  00479	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0047d	c3		 ret	 0
simple_vm_oop_setget ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
list2$ = 48
vm$ = 80
simple_vm_oop_callmethodinsideclass PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 812
$LN19:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 825
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00015	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00019	7e 6d		 jle	 SHORT $LN16@simple_vm_
; Line 826
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00027	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002a	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  0002e	eb 0a		 jmp	 SHORT $LN15@simple_vm_
$LN14@simple_vm_:
  00030	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00034	ff c8		 dec	 eax
  00036	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN15@simple_vm_:
  0003a	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  0003f	7c 47		 jl	 SHORT $LN13@simple_vm_
; Line 827
  00041	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00045	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0004a	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00051	e8 00 00 00 00	 call	 simple_list_getlist
  00056	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 829
  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  00060	83 78 10 0a	 cmp	 DWORD PTR [rax+16], 10
  00064	7c 20		 jl	 SHORT $LN12@simple_vm_
; Line 830
  00066	ba 08 00 00 00	 mov	 edx, 8
  0006b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00070	e8 00 00 00 00	 call	 simple_list_getitem
  00075	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00079	75 09		 jne	 SHORT $LN11@simple_vm_
; Line 831
  0007b	33 c0		 xor	 eax, eax
  0007d	e9 2e 01 00 00	 jmp	 $LN17@simple_vm_
; Line 833
  00082	eb 02		 jmp	 SHORT $LN10@simple_vm_
$LN11@simple_vm_:
; Line 834
  00084	eb 02		 jmp	 SHORT $LN13@simple_vm_
$LN10@simple_vm_:
$LN12@simple_vm_:
; Line 837
  00086	eb a8		 jmp	 SHORT $LN14@simple_vm_
$LN13@simple_vm_:
$LN16@simple_vm_:
; Line 844
  00088	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00094	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00098	7c 4a		 jl	 SHORT $LN9@simple_vm_
; Line 845
  0009a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0009f	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000a6	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ae	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  000b5	e8 00 00 00 00	 call	 simple_list_getlist
  000ba	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 846
  000bf	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  000c4	83 78 10 04	 cmp	 DWORD PTR [rax+16], 4
  000c8	75 1a		 jne	 SHORT $LN8@simple_vm_
  000ca	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000cf	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  000d6	85 c0		 test	 eax, eax
  000d8	75 0a		 jne	 SHORT $LN8@simple_vm_
; Line 847
  000da	b8 01 00 00 00	 mov	 eax, 1
  000df	e9 cc 00 00 00	 jmp	 $LN17@simple_vm_
$LN8@simple_vm_:
$LN9@simple_vm_:
; Line 851
  000e4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e9	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000f0	83 78 10 02	 cmp	 DWORD PTR [rax+16], 2
  000f4	0f 8c b4 00 00
	00		 jl	 $LN7@simple_vm_
; Line 852
  000fa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ff	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00106	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00109	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010e	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00115	e8 00 00 00 00	 call	 simple_list_getlist
  0011a	ba 03 00 00 00	 mov	 edx, 3
  0011f	48 8b c8	 mov	 rcx, rax
  00122	e8 00 00 00 00	 call	 simple_list_getitem
  00127	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0012b	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 853
  00130	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00135	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0013c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0013f	ff c8		 dec	 eax
  00141	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  00145	eb 0a		 jmp	 SHORT $LN6@simple_vm_
$LN5@simple_vm_:
  00147	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0014b	ff c8		 dec	 eax
  0014d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_vm_:
  00151	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  00156	7c 56		 jl	 SHORT $LN4@simple_vm_
; Line 854
  00158	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0015c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00161	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00168	e8 00 00 00 00	 call	 simple_list_getlist
  0016d	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 855
  00172	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  00177	83 78 10 04	 cmp	 DWORD PTR [rax+16], 4
  0017b	75 2f		 jne	 SHORT $LN3@simple_vm_
; Line 856
  0017d	ba 03 00 00 00	 mov	 edx, 3
  00182	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00187	e8 00 00 00 00	 call	 simple_list_getitem
  0018c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00190	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 857
  00195	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  0019a	48 39 44 24 28	 cmp	 QWORD PTR list$[rsp], rax
  0019f	75 09		 jne	 SHORT $LN2@simple_vm_
; Line 858
  001a1	b8 01 00 00 00	 mov	 eax, 1
  001a6	eb 08		 jmp	 SHORT $LN17@simple_vm_
; Line 860
  001a8	eb 02		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 861
  001aa	eb 02		 jmp	 SHORT $LN4@simple_vm_
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 864
  001ac	eb 99		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
$LN7@simple_vm_:
; Line 866
  001ae	33 c0		 xor	 eax, eax
$LN17@simple_vm_:
; Line 867
  001b0	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001b4	c3		 ret	 0
simple_vm_oop_callmethodinsideclass ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
t$ = 32
vm$ = 64
x$ = 72
simple_vm_oop_deletemodulessafter PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 802
$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 804
  0000d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00012	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00019	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0001c	39 44 24 48	 cmp	 DWORD PTR x$[rsp], eax
  00020	7f 4d		 jg	 SHORT $LN4@simple_vm_
; Line 805
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00027	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  0002e	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00031	89 44 24 20	 mov	 DWORD PTR t$[rsp], eax
  00035	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  00037	8b 44 24 20	 mov	 eax, DWORD PTR t$[rsp]
  0003b	ff c8		 dec	 eax
  0003d	89 44 24 20	 mov	 DWORD PTR t$[rsp], eax
$LN3@simple_vm_:
  00041	8b 44 24 48	 mov	 eax, DWORD PTR x$[rsp]
  00045	39 44 24 20	 cmp	 DWORD PTR t$[rsp], eax
  00049	7e 24		 jle	 SHORT $LN1@simple_vm_
; Line 806
  0004b	44 8b 44 24 20	 mov	 r8d, DWORD PTR t$[rsp]
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00055	48 8b 90 08 19
	00 00		 mov	 rdx, QWORD PTR [rax+6408]
  0005c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00061	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00068	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 807
  0006d	eb c8		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
$LN4@simple_vm_:
; Line 809
  0006f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00073	c3		 ret	 0
simple_vm_oop_deletemodulessafter ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_oop_popclassmodules PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 795
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 796
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00015	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00019	7e 2d		 jle	 SHORT $LN1@simple_vm_
; Line 797
  0001b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00020	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00027	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 90 08 19
	00 00		 mov	 rdx, QWORD PTR [rax+6408]
  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00043	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN1@simple_vm_:
; Line 799
  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	c3		 ret	 0
simple_vm_oop_popclassmodules ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
vm$ = 64
list$ = 72
simple_vm_oop_pushclassmodules PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 786
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 788
  0000e	ba 06 00 00 00	 mov	 edx, 6
  00013	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_getlist
  0001d	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 789
  00022	48 83 7c 24 20
	00		 cmp	 QWORD PTR list2$[rsp], 0
  00028	74 22		 je	 SHORT $LN1@simple_vm_
; Line 790
  0002a	4c 8b 44 24 20	 mov	 r8, QWORD PTR list2$[rsp]
  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00034	48 8b 90 08 19
	00 00		 mov	 rdx, QWORD PTR [rax+6408]
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00040	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00047	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN1@simple_vm_:
; Line 792
  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	c3		 ret	 0
simple_vm_oop_pushclassmodules ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
x$ = 72
simple_vm_oop_visibleclassitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 774
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 776
  0000d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00012	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00016	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00019	39 44 24 48	 cmp	 DWORD PTR x$[rsp], eax
  0001d	7f 14		 jg	 SHORT $LN1@simple_vm_
; Line 777
  0001f	8b 54 24 48	 mov	 edx, DWORD PTR x$[rsp]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00028	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0002c	e8 00 00 00 00	 call	 simple_list_getlist
  00031	eb 67		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 779
  00033	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00038	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  0003f	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00047	48 8b 88 08 19
	00 00		 mov	 rcx, QWORD PTR [rax+6408]
  0004e	e8 00 00 00 00	 call	 simple_list_getitem
  00053	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00057	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 780
  0005c	ba 02 00 00 00	 mov	 edx, 2
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00066	e8 00 00 00 00	 call	 simple_list_getlist
  0006b	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 781
  00070	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00075	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00079	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0007c	8b 4c 24 48	 mov	 ecx, DWORD PTR x$[rsp]
  00080	2b c8		 sub	 ecx, eax
  00082	8b c1		 mov	 eax, ecx
  00084	8b d0		 mov	 edx, eax
  00086	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0008b	e8 00 00 00 00	 call	 simple_list_getlist
  00090	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 782
  00095	48 8b 44 24 20	 mov	 rax, QWORD PTR list$[rsp]
$LN2@simple_vm_:
; Line 783
  0009a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009e	c3		 ret	 0
simple_vm_oop_visibleclassitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_oop_visibleclassescount PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 763
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 765
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00015	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00019	7e 53		 jle	 SHORT $LN1@simple_vm_
; Line 766
  0001b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00020	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00027	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	48 8b 88 08 19
	00 00		 mov	 rcx, QWORD PTR [rax+6408]
  00036	e8 00 00 00 00	 call	 simple_list_getitem
  0003b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0003f	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 767
  00044	ba 02 00 00 00	 mov	 edx, 2
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0004e	e8 00 00 00 00	 call	 simple_list_getlist
  00053	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 768
  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00061	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00064	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00069	03 41 10	 add	 eax, DWORD PTR [rcx+16]
  0006c	eb 0c		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 770
  0006e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00073	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00077	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
$LN2@simple_vm_:
; Line 771
  0007a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007e	c3		 ret	 0
simple_vm_oop_visibleclassescount ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list3$ = 40
list2$ = 48
vm$ = 80
list$ = 88
simple_vm_oop_import3 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 736
$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 740
  0000e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00016	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  00018	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001c	ff c0		 inc	 eax
  0001e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_vm_:
  00022	48 8b 44 24 58	 mov	 rax, QWORD PTR list$[rsp]
  00027	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002a	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0002e	0f 8f a0 00 00
	00		 jg	 $LN1@simple_vm_
; Line 741
  00034	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00038	48 8b 4c 24 58	 mov	 rcx, QWORD PTR list$[rsp]
  0003d	e8 00 00 00 00	 call	 simple_list_getlist
  00042	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 742
  00047	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0004c	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00050	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00055	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0005c	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00061	48 89 44 24 28	 mov	 QWORD PTR list3$[rsp], rax
; Line 743
  00066	ba 01 00 00 00	 mov	 edx, 1
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00070	e8 00 00 00 00	 call	 simple_list_getitem
  00075	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00079	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007c	48 8b 54 24 28	 mov	 rdx, QWORD PTR list3$[rsp]
  00081	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00086	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0008d	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 744
  00092	4c 8b 44 24 30	 mov	 r8, QWORD PTR list2$[rsp]
  00097	48 8b 54 24 28	 mov	 rdx, QWORD PTR list3$[rsp]
  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a8	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 745
  000ad	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b2	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  000b9	48 8b 54 24 28	 mov	 rdx, QWORD PTR list3$[rsp]
  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ca	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 746
  000cf	e9 44 ff ff ff	 jmp	 $LN2@simple_vm_
$LN1@simple_vm_:
; Line 747
  000d4	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d8	c3		 ret	 0
simple_vm_oop_import3 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
cModules2$ = 48
list2$ = 56
vm$ = 80
cModules$ = 88
simple_vm_oop_import2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 715
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 719
  0000e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00016	eb 0a		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
  00018	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001c	ff c0		 inc	 eax
  0001e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_vm_:
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00027	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0002b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002e	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00032	0f 8f 91 00 00
	00		 jg	 $LN2@simple_vm_
; Line 720
  00038	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0003c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00041	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00045	e8 00 00 00 00	 call	 simple_list_getlist
  0004a	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 721
  0004f	ba 01 00 00 00	 mov	 edx, 1
  00054	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00059	e8 00 00 00 00	 call	 simple_list_getitem
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 89 44 24 30	 mov	 QWORD PTR cModules2$[rsp], rax
; Line 722
  0006a	48 8b 54 24 30	 mov	 rdx, QWORD PTR cModules2$[rsp]
  0006f	48 8b 4c 24 58	 mov	 rcx, QWORD PTR cModules$[rsp]
  00074	e8 00 00 00 00	 call	 strcmp
  00079	85 c0		 test	 eax, eax
  0007b	75 47		 jne	 SHORT $LN1@simple_vm_
; Line 724
  0007d	ba 02 00 00 00	 mov	 edx, 2
  00082	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00087	e8 00 00 00 00	 call	 simple_list_getlist
  0008c	48 89 44 24 38	 mov	 QWORD PTR list2$[rsp], rax
; Line 725
  00091	48 8b 54 24 38	 mov	 rdx, QWORD PTR list2$[rsp]
  00096	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_vm_oop_import3
; Line 727
  000a0	4c 8b 44 24 58	 mov	 r8, QWORD PTR cModules$[rsp]
  000a5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000aa	48 8b 90 d8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6616]
  000b1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000bd	e8 00 00 00 00	 call	 simple_string_set_gc
; Line 728
  000c2	eb 1b		 jmp	 SHORT $LN5@simple_vm_
$LN1@simple_vm_:
; Line 730
  000c4	e9 4f ff ff ff	 jmp	 $LN3@simple_vm_
$LN2@simple_vm_:
; Line 732
  000c9	4c 8b 44 24 58	 mov	 r8, QWORD PTR cModules$[rsp]
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82762
  000d5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000da	e8 00 00 00 00	 call	 simple_vm_error2
$LN5@simple_vm_:
; Line 733
  000df	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000e3	c3		 ret	 0
simple_vm_oop_import2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
list$ = 56
simple_vm_oop_checkpointertoclassinmodules PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 750
$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 751
  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  00013	83 78 10 03	 cmp	 DWORD PTR [rax+16], 3
  00017	75 57		 jne	 SHORT $LN3@simple_vm_
; Line 752
  00019	ba 03 00 00 00	 mov	 edx, 3
  0001e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00023	e8 00 00 00 00	 call	 simple_list_getitem
  00028	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002d	74 2c		 je	 SHORT $LN2@simple_vm_
; Line 753
  0002f	ba 03 00 00 00	 mov	 edx, 3
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00039	e8 00 00 00 00	 call	 simple_list_getitem
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	48 8b 91 60 18
	00 00		 mov	 rdx, QWORD PTR [rcx+6240]
  0004a	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0004e	e8 00 00 00 00	 call	 strcmp
  00053	85 c0		 test	 eax, eax
  00055	74 04		 je	 SHORT $LN1@simple_vm_
; Line 754
  00057	33 c0		 xor	 eax, eax
  00059	eb 1a		 jmp	 SHORT $LN4@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 757
  0005b	ba 02 00 00 00	 mov	 edx, 2
  00060	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00065	e8 00 00 00 00	 call	 simple_list_getitem
  0006a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0006e	eb 05		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
; Line 759
  00070	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
$LN4@simple_vm_:
; Line 760
  00075	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00079	c3		 ret	 0
simple_vm_oop_checkpointertoclassinmodules ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_oop_import PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 710
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 711
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_oop_import2
; Line 712
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	c3		 ret	 0
simple_vm_oop_import ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
pMethods$ = 48
pState$ = 56
pClass$ = 64
var$ = 72
vm$ = 96
pSuper$ = 104
simple_vm_oop_loadsuperobjmethod PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 677
$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 680
  0000e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00013	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0001a	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0001d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00022	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00029	e8 00 00 00 00	 call	 simple_list_getlist
  0002e	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 681
  00033	ba 01 00 00 00	 mov	 edx, 1
  00038	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0003d	e8 00 00 00 00	 call	 simple_list_getlist
  00042	48 89 44 24 38	 mov	 QWORD PTR pState$[rsp], rax
; Line 682
  00047	ba 02 00 00 00	 mov	 edx, 2
  0004c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00051	e8 00 00 00 00	 call	 simple_list_getlist
  00056	48 89 44 24 30	 mov	 QWORD PTR pMethods$[rsp], rax
; Line 683
  0005b	ba 03 00 00 00	 mov	 edx, 3
  00060	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00065	e8 00 00 00 00	 call	 simple_list_getlist
  0006a	48 89 44 24 40	 mov	 QWORD PTR pClass$[rsp], rax
; Line 684
  0006f	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00077	eb 0a		 jmp	 SHORT $LN6@simple_vm_
$LN5@simple_vm_:
  00079	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0007d	ff c0		 inc	 eax
  0007f	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_vm_:
  00083	48 8b 44 24 68	 mov	 rax, QWORD PTR pSuper$[rsp]
  00088	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0008b	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0008f	7f 60		 jg	 SHORT $LN4@simple_vm_
; Line 685
  00091	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00095	48 8b 4c 24 68	 mov	 rcx, QWORD PTR pSuper$[rsp]
  0009a	e8 00 00 00 00	 call	 simple_list_getitem
  0009f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pMethods$[rsp]
  000a4	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  000a8	75 45		 jne	 SHORT $LN3@simple_vm_
; Line 686
  000aa	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000ae	ff c0		 inc	 eax
  000b0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR pSuper$[rsp]
  000b5	3b 41 10	 cmp	 eax, DWORD PTR [rcx+16]
  000b8	7f 1f		 jg	 SHORT $LN2@simple_vm_
; Line 687
  000ba	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000be	ff c0		 inc	 eax
  000c0	8b d0		 mov	 edx, eax
  000c2	48 8b 4c 24 68	 mov	 rcx, QWORD PTR pSuper$[rsp]
  000c7	e8 00 00 00 00	 call	 simple_list_getitem
  000cc	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000d0	48 89 44 24 30	 mov	 QWORD PTR pMethods$[rsp], rax
; Line 688
  000d5	eb 1a		 jmp	 SHORT $LN4@simple_vm_
; Line 690
  000d7	eb 16		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 691
  000d9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82745
  000e0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000e5	e8 00 00 00 00	 call	 simple_vm_error
; Line 692
  000ea	e9 c1 00 00 00	 jmp	 $LN7@simple_vm_
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 695
  000ef	eb 88		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
; Line 696
  000f1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000f6	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  000fd	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00102	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00109	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0010e	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 697
  00113	4c 8b 44 24 38	 mov	 r8, QWORD PTR pState$[rsp]
  00118	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0011d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00122	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00129	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 698
  0012e	4c 8b 44 24 30	 mov	 r8, QWORD PTR pMethods$[rsp]
  00133	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00138	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0013d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00144	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 699
  00149	4c 8b 44 24 40	 mov	 r8, QWORD PTR pClass$[rsp]
  0014e	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00153	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00158	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0015f	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 701
  00164	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00169	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0016d	48 89 44 24 48	 mov	 QWORD PTR var$[rsp], rax
; Line 702
  00172	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00177	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pMethods$[rsp]
  0017c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 703
  00180	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00185	c6 80 c8 18 00
	00 01		 mov	 BYTE PTR [rax+6344], 1
; Line 704
  0018c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00191	e8 00 00 00 00	 call	 simple_vm_loadblock
; Line 705
  00196	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0019b	c6 80 c8 18 00
	00 00		 mov	 BYTE PTR [rax+6344], 0
; Line 706
  001a2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR var$[rsp]
  001ac	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
$LN7@simple_vm_:
; Line 707
  001b0	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001b4	c3		 ret	 0
simple_vm_oop_loadsuperobjmethod ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
vm$ = 64
simple_vm_oop_getsuperobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 661
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 663
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 03	 cmp	 eax, 3
  00028	0f 85 ca 00 00
	00		 jne	 $LN3@simple_vm_
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00033	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0003a	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0003e	0f 84 b4 00 00
	00		 je	 $LN3@simple_vm_
; Line 664
  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00049	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00050	48 6b c0 18	 imul	 rax, 24
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00059	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0005d	c1 e8 05	 shr	 eax, 5
  00060	83 e0 03	 and	 eax, 3
  00063	83 f8 01	 cmp	 eax, 1
  00066	0f 85 8c 00 00
	00		 jne	 $LN2@simple_vm_
; Line 665
  0006c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00071	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00078	48 6b c0 18	 imul	 rax, 24
  0007c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00081	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00086	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 666
  0008b	ba 03 00 00 00	 mov	 edx, 3
  00090	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00095	e8 00 00 00 00	 call	 simple_list_islist
  0009a	85 c0		 test	 eax, eax
  0009c	74 5a		 je	 SHORT $LN1@simple_vm_
  0009e	ba 01 00 00 00	 mov	 edx, 1
  000a3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000a8	e8 00 00 00 00	 call	 simple_list_getitem
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82725
  000b8	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000bb	e8 00 00 00 00	 call	 strcmp
  000c0	85 c0		 test	 eax, eax
  000c2	75 34		 jne	 SHORT $LN1@simple_vm_
; Line 667
  000c4	ba 03 00 00 00	 mov	 edx, 3
  000c9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000ce	e8 00 00 00 00	 call	 simple_list_getlist
  000d3	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 668
  000d8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000dd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e4	fe c8		 dec	 al
  000e6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 669
  000f1	48 8b 44 24 20	 mov	 rax, QWORD PTR var$[rsp]
  000f6	eb 02		 jmp	 SHORT $LN4@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 673
  000f8	33 c0		 xor	 eax, eax
$LN4@simple_vm_:
; Line 674
  000fa	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000fe	c3		 ret	 0
simple_vm_oop_getsuperobj ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
pSuper$ = 48
cParentClassName$ = 56
pMethods$ = 64
pSuper2$ = 72
cClassName$ = 80
vm$ = 112
pState$ = 120
pClass$ = 128
simple_vm_oop_newsuperobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 631
$LN10:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 68	 sub	 rsp, 104		; 00000068H
; Line 635
  00013	4c 8b 44 24 78	 mov	 r8, QWORD PTR pState$[rsp]
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82706
  0001f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  00024	e8 00 00 00 00	 call	 simple_vm_newvar2
  00029	48 89 44 24 30	 mov	 QWORD PTR pSuper$[rsp], rax
; Line 636
  0002e	41 b9 03 00 00
	00		 mov	 r9d, 3
  00034	41 b8 02 00 00
	00		 mov	 r8d, 2
  0003a	48 8b 54 24 30	 mov	 rdx, QWORD PTR pSuper$[rsp]
  0003f	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00044	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0004b	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 637
  00050	41 b8 03 00 00
	00		 mov	 r8d, 3
  00056	48 8b 54 24 30	 mov	 rdx, QWORD PTR pSuper$[rsp]
  0005b	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00060	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00067	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 638
  0006c	ba 03 00 00 00	 mov	 edx, 3
  00071	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pSuper$[rsp]
  00076	e8 00 00 00 00	 call	 simple_list_getlist
  0007b	48 89 44 24 48	 mov	 QWORD PTR pSuper2$[rsp], rax
; Line 639
  00080	ba 04 00 00 00	 mov	 edx, 4
  00085	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pClass$[rsp]
  0008d	e8 00 00 00 00	 call	 simple_list_getlist
  00092	48 89 44 24 40	 mov	 QWORD PTR pMethods$[rsp], rax
; Line 640
  00097	4c 8b 44 24 40	 mov	 r8, QWORD PTR pMethods$[rsp]
  0009c	48 8b 54 24 48	 mov	 rdx, QWORD PTR pSuper2$[rsp]
  000a1	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  000a6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ad	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 641
  000b2	ba 03 00 00 00	 mov	 edx, 3
  000b7	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR pClass$[rsp]
  000bf	e8 00 00 00 00	 call	 simple_list_getitem
  000c4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cb	48 89 44 24 38	 mov	 QWORD PTR cParentClassName$[rsp], rax
$LN7@simple_vm_:
; Line 642
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82710
  000d7	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cParentClassName$[rsp]
  000dc	e8 00 00 00 00	 call	 strcmp
  000e1	85 c0		 test	 eax, eax
  000e3	0f 84 dd 00 00
	00		 je	 $LN6@simple_vm_
; Line 643
  000e9	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  000f1	eb 0a		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
  000f3	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000f7	ff c0		 inc	 eax
  000f9	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN5@simple_vm_:
  000fd	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  00102	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassescount
  00107	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0010b	0f 8f b0 00 00
	00		 jg	 $LN3@simple_vm_
; Line 644
  00111	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00115	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  0011a	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassitem
  0011f	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 645
  00124	ba 01 00 00 00	 mov	 edx, 1
  00129	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0012e	e8 00 00 00 00	 call	 simple_list_getitem
  00133	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00137	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0013a	48 89 44 24 50	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 646
  0013f	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00144	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  00149	e8 00 00 00 00	 call	 simple_vm_oop_checkpointertoclassinmodules
  0014e	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 647
  00153	48 83 7c 24 28
	00		 cmp	 QWORD PTR list$[rsp], 0
  00159	75 02		 jne	 SHORT $LN2@simple_vm_
; Line 648
  0015b	eb 96		 jmp	 SHORT $LN4@simple_vm_
$LN2@simple_vm_:
; Line 650
  0015d	48 8b 54 24 38	 mov	 rdx, QWORD PTR cParentClassName$[rsp]
  00162	48 8b 4c 24 50	 mov	 rcx, QWORD PTR cClassName$[rsp]
  00167	e8 00 00 00 00	 call	 strcmp
  0016c	85 c0		 test	 eax, eax
  0016e	75 4c		 jne	 SHORT $LN1@simple_vm_
; Line 651
  00170	ba 03 00 00 00	 mov	 edx, 3
  00175	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0017a	e8 00 00 00 00	 call	 simple_list_getitem
  0017f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00183	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00186	48 89 44 24 38	 mov	 QWORD PTR cParentClassName$[rsp], rax
; Line 652
  0018b	ba 04 00 00 00	 mov	 edx, 4
  00190	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00195	e8 00 00 00 00	 call	 simple_list_getlist
  0019a	48 89 44 24 40	 mov	 QWORD PTR pMethods$[rsp], rax
; Line 653
  0019f	4c 8b 44 24 40	 mov	 r8, QWORD PTR pMethods$[rsp]
  001a4	48 8b 54 24 48	 mov	 rdx, QWORD PTR pSuper2$[rsp]
  001a9	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001ae	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001b5	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 654
  001ba	eb 05		 jmp	 SHORT $LN3@simple_vm_
$LN1@simple_vm_:
; Line 656
  001bc	e9 32 ff ff ff	 jmp	 $LN4@simple_vm_
$LN3@simple_vm_:
; Line 657
  001c1	e9 0a ff ff ff	 jmp	 $LN7@simple_vm_
$LN6@simple_vm_:
; Line 658
  001c6	48 83 c4 68	 add	 rsp, 104		; 00000068H
  001ca	c3		 ret	 0
simple_vm_oop_newsuperobj ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_oop_bracestack PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 617
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 618
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 e0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6368]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	ba 02 00 00 00	 mov	 edx, 2
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 simple_list_getitem
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0003b	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0003f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 619
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0004a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	39 81 90 18 00
	00		 cmp	 DWORD PTR [rcx+6288], eax
  0005c	7e 29		 jle	 SHORT $LN2@simple_vm_
; Line 624
  0005e	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00063	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  0006a	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0006e	7e 17		 jle	 SHORT $LN1@simple_vm_
; Line 625
  00070	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00075	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0007a	0f b6 89 90 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6288]
  00081	88 88 30 18 00
	00		 mov	 BYTE PTR [rax+6192], cl
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 628
  00087	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008b	c3		 ret	 0
simple_vm_oop_bracestack ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_oop_braceend PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 593
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 596
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 e0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6368]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 597
  0002e	ba 03 00 00 00	 mov	 edx, 3
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00038	e8 00 00 00 00	 call	 simple_list_getitem
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00042	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00045	89 81 6c 18 00
	00		 mov	 DWORD PTR [rcx+6252], eax
; Line 598
  0004b	ba 04 00 00 00	 mov	 edx, 4
  00050	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00055	e8 00 00 00 00	 call	 simple_list_getitem
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0005f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00063	48 39 81 70 18
	00 00		 cmp	 QWORD PTR [rcx+6256], rax
  0006a	74 48		 je	 SHORT $LN3@simple_vm_
; Line 599
  0006c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00071	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0007d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00084	e8 00 00 00 00	 call	 simple_list_delete_gc
  00089	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0008e	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 600
  00095	ba 04 00 00 00	 mov	 edx, 4
  0009a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0009f	e8 00 00 00 00	 call	 simple_list_getitem
  000a4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ad	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
$LN3@simple_vm_:
; Line 603
  000b4	ba 02 00 00 00	 mov	 edx, 2
  000b9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000be	e8 00 00 00 00	 call	 simple_list_getitem
  000c3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000c8	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  000cc	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 604
  000d2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  000de	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	48 8b 90 e0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6368]
  000ee	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000fa	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 605
  000ff	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00104	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0010b	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0010f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00114	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  0011b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00120	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00127	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 606
  0012c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00131	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  00138	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0013c	7e 60		 jle	 SHORT $LN2@simple_vm_
; Line 607
  0013e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00143	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  0014a	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0014d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00152	48 8b 88 e0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6368]
  00159	e8 00 00 00 00	 call	 simple_list_getlist
  0015e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00163	48 89 81 d8 18
	00 00		 mov	 QWORD PTR [rcx+6360], rax
; Line 608
  0016a	ba 01 00 00 00	 mov	 edx, 1
  0016f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00174	48 8b 88 d8 18
	00 00		 mov	 rcx, QWORD PTR [rax+6360]
  0017b	e8 00 00 00 00	 call	 simple_list_getitem
  00180	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00185	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00189	48 89 81 d8 18
	00 00		 mov	 QWORD PTR [rcx+6360], rax
; Line 609
  00190	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00195	c6 80 00 19 00
	00 01		 mov	 BYTE PTR [rax+6400], 1
; Line 611
  0019c	eb 0c		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 612
  0019e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001a3	c6 80 00 19 00
	00 00		 mov	 BYTE PTR [rax+6400], 0
$LN1@simple_vm_:
; Line 614
  001aa	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001ae	c3		 ret	 0
simple_vm_oop_braceend ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
pClass$ = 40
vm$ = 64
simple_vm_oop_bracestart PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 561
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 564
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 83 b8 d8 18
	00 00 00	 cmp	 QWORD PTR [rax+6360], 0
  00016	75 16		 jne	 SHORT $LN1@simple_vm_
; Line 565
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82675
  0001f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00024	e8 00 00 00 00	 call	 simple_vm_error
; Line 566
  00029	e9 b4 01 00 00	 jmp	 $LN2@simple_vm_
$LN1@simple_vm_:
; Line 569
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00033	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00046	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0004b	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 571
  00050	ba 02 00 00 00	 mov	 edx, 2
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005a	48 8b 88 d8 18
	00 00		 mov	 rcx, QWORD PTR [rax+6360]
  00061	e8 00 00 00 00	 call	 simple_list_getlist
  00066	4c 8b c0	 mov	 r8, rax
  00069	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0006e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00073	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007a	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 573
  0007f	ba 01 00 00 00	 mov	 edx, 1
  00084	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00089	48 8b 88 d8 18
	00 00		 mov	 rcx, QWORD PTR [rax+6360]
  00090	e8 00 00 00 00	 call	 simple_list_getitem
  00095	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00099	48 89 44 24 28	 mov	 QWORD PTR pClass$[rsp], rax
; Line 574
  0009e	ba 04 00 00 00	 mov	 edx, 4
  000a3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pClass$[rsp]
  000a8	e8 00 00 00 00	 call	 simple_list_getlist
  000ad	4c 8b c0	 mov	 r8, rax
  000b0	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000b5	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ba	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000c1	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 576
  000c6	4c 8b 44 24 28	 mov	 r8, QWORD PTR pClass$[rsp]
  000cb	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000d0	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000d5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000dc	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 578
  000e1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e6	48 8b 90 e0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6368]
  000ed	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000f9	e8 00 00 00 00	 call	 simple_list_newlist_gc
  000fe	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 579
  00103	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00108	48 8b 90 d8 18
	00 00		 mov	 rdx, QWORD PTR [rax+6360]
  0010f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00114	e8 00 00 00 00	 call	 simple_list_addpointer
; Line 580
  00119	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0011e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00125	44 8b c0	 mov	 r8d, eax
  00128	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0012d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00132	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00139	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 582
  0013e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00143	44 8b 80 6c 18
	00 00		 mov	 r8d, DWORD PTR [rax+6252]
  0014a	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0014f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00154	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0015b	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 583
  00160	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00165	4c 8b 80 70 18
	00 00		 mov	 r8, QWORD PTR [rax+6256]
  0016c	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00171	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00176	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0017d	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 584
  00182	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00187	c7 80 6c 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6252], 0
; Line 585
  00191	33 d2		 xor	 edx, edx
  00193	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00198	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0019f	e8 00 00 00 00	 call	 simple_list_new_gc
  001a4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001a9	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 587
  001b0	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001b5	48 8b 90 d8 18
	00 00		 mov	 rdx, QWORD PTR [rax+6360]
  001bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001c1	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer2
; Line 588
  001c6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001cb	48 c7 80 d8 18
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6360], 0
; Line 589
  001d6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001db	c6 80 00 19 00
	00 01		 mov	 BYTE PTR [rax+6400], 1
$LN2@simple_vm_:
; Line 590
  001e2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001e6	c3		 ret	 0
simple_vm_oop_bracestart ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
list$ = 56
simple_vm_oop_setbraceobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 553
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 555
  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00013	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00018	85 c0		 test	 eax, eax
  0001a	74 11		 je	 SHORT $LN1@simple_vm_
; Line 556
  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00021	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00026	48 89 88 d8 18
	00 00		 mov	 QWORD PTR [rax+6360], rcx
$LN1@simple_vm_:
; Line 558
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	c3		 ret	 0
simple_vm_oop_setbraceobj ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pClass$ = 40
list$ = 48
tv162 = 56
vm$ = 80
simple_vm_oop_newclass PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 222
$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 225
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 02	 imul	 rcx, 2
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 28	 mov	 QWORD PTR pClass$[rsp], rax
; Line 227
  0002b	48 83 7c 24 28
	00		 cmp	 QWORD PTR pClass$[rsp], 0
  00031	0f 85 f0 00 00
	00		 jne	 $LN7@simple_vm_
; Line 228
  00037	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0003f	eb 0a		 jmp	 SHORT $LN6@simple_vm_
$LN5@simple_vm_:
  00041	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00045	ff c0		 inc	 eax
  00047	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_vm_:
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00050	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00057	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0005e	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00062	0f 8f bf 00 00
	00		 jg	 $LN4@simple_vm_
; Line 229
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00074	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00078	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  0007c	e8 00 00 00 00	 call	 simple_list_getlist
  00081	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 230
  00086	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00092	b9 08 00 00 00	 mov	 ecx, 8
  00097	48 6b c9 01	 imul	 rcx, 1
  0009b	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0009f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a3	48 89 44 24 38	 mov	 QWORD PTR tv162[rsp], rax
  000a8	ba 01 00 00 00	 mov	 edx, 1
  000ad	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000b2	e8 00 00 00 00	 call	 simple_list_getitem
  000b7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000bb	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv162[rsp]
  000c0	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c3	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000c6	e8 00 00 00 00	 call	 strcmp
  000cb	85 c0		 test	 eax, eax
  000cd	75 53		 jne	 SHORT $LN3@simple_vm_
; Line 231
  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000d4	83 78 10 03	 cmp	 DWORD PTR [rax+16], 3
  000d8	75 1a		 jne	 SHORT $LN2@simple_vm_
; Line 233
  000da	ba 02 00 00 00	 mov	 edx, 2
  000df	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000e4	e8 00 00 00 00	 call	 simple_list_getitem
  000e9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ed	48 89 44 24 28	 mov	 QWORD PTR pClass$[rsp], rax
; Line 235
  000f2	eb 0a		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 236
  000f4	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  000f9	48 89 44 24 28	 mov	 QWORD PTR pClass$[rsp], rax
$LN1@simple_vm_:
; Line 238
  000fe	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00103	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0010a	b9 08 00 00 00	 mov	 ecx, 8
  0010f	48 6b c9 02	 imul	 rcx, 2
  00113	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00117	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pClass$[rsp]
  0011c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 239
  00120	eb 05		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
; Line 241
  00122	e9 1a ff ff ff	 jmp	 $LN5@simple_vm_
$LN4@simple_vm_:
$LN7@simple_vm_:
; Line 243
  00127	48 8b 54 24 28	 mov	 rdx, QWORD PTR pClass$[rsp]
  0012c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00131	e8 00 00 00 00	 call	 simple_vm_oop_checkpointertoclassinmodules
  00136	48 89 44 24 28	 mov	 QWORD PTR pClass$[rsp], rax
; Line 245
  0013b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00140	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00147	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0014a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0014f	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  00156	e8 00 00 00 00	 call	 simple_list_getlist
  0015b	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 246
  00160	ba 04 00 00 00	 mov	 edx, 4
  00165	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pClass$[rsp]
  0016a	e8 00 00 00 00	 call	 simple_list_getlist
  0016f	4c 8b c8	 mov	 r9, rax
  00172	41 b8 02 00 00
	00		 mov	 r8d, 2
  00178	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0017d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00182	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00189	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 248
  0018e	48 8b 54 24 28	 mov	 rdx, QWORD PTR pClass$[rsp]
  00193	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00198	e8 00 00 00 00	 call	 simple_vm_oop_parentmethods
; Line 250
  0019d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a2	c6 80 10 19 00
	00 00		 mov	 BYTE PTR [rax+6416], 0
; Line 251
  001a9	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001ad	c3		 ret	 0
simple_vm_oop_newclass ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nFound$ = 36
nMark$ = 40
list4$ = 48
cClassName$ = 56
cClassName2$ = 64
list3$ = 72
vm$ = 96
list$ = 104
simple_vm_oop_parentmethods PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 465
$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 469
  0000e	ba 04 00 00 00	 mov	 edx, 4
  00013	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_getlist
  0001d	48 89 44 24 48	 mov	 QWORD PTR list3$[rsp], rax
; Line 470
  00022	ba 05 00 00 00	 mov	 edx, 5
  00027	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  0002c	e8 00 00 00 00	 call	 simple_list_getitem
  00031	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00035	0f 85 a0 01 00
	00		 jne	 $LN10@simple_vm_
; Line 471
  0003b	41 b9 01 00 00
	00		 mov	 r9d, 1
  00041	41 b8 05 00 00
	00		 mov	 r8d, 5
  00047	48 8b 54 24 68	 mov	 rdx, QWORD PTR list$[rsp]
  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00051	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00058	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 472
  0005d	ba 03 00 00 00	 mov	 edx, 3
  00062	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  00067	e8 00 00 00 00	 call	 simple_list_getitem
  0006c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00070	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00073	48 89 44 24 38	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 474
  00078	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0007d	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00084	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00087	89 44 24 28	 mov	 DWORD PTR nMark$[rsp], eax
$LN9@simple_vm_:
; Line 475
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82620
  00092	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cClassName$[rsp]
  00097	e8 00 00 00 00	 call	 strcmp
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 29 01 00
	00		 je	 $LN8@simple_vm_
; Line 477
  000a4	48 8b 54 24 68	 mov	 rdx, QWORD PTR list$[rsp]
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ae	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
; Line 478
  000b3	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR nFound$[rsp], 0
; Line 479
  000bb	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  000c3	eb 0a		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
  000c5	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000c9	ff c0		 inc	 eax
  000cb	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_vm_:
  000cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000d4	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassescount
  000d9	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000dd	0f 8f b4 00 00
	00		 jg	 $LN5@simple_vm_
; Line 480
  000e3	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000e7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ec	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassitem
  000f1	48 89 44 24 30	 mov	 QWORD PTR list4$[rsp], rax
; Line 481
  000f6	ba 01 00 00 00	 mov	 edx, 1
  000fb	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list4$[rsp]
  00100	e8 00 00 00 00	 call	 simple_list_getitem
  00105	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00109	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010c	48 89 44 24 40	 mov	 QWORD PTR cClassName2$[rsp], rax
; Line 483
  00111	48 8b 54 24 30	 mov	 rdx, QWORD PTR list4$[rsp]
  00116	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0011b	e8 00 00 00 00	 call	 simple_vm_oop_checkpointertoclassinmodules
  00120	48 89 44 24 30	 mov	 QWORD PTR list4$[rsp], rax
; Line 484
  00125	48 83 7c 24 30
	00		 cmp	 QWORD PTR list4$[rsp], 0
  0012b	75 02		 jne	 SHORT $LN4@simple_vm_
; Line 485
  0012d	eb 96		 jmp	 SHORT $LN6@simple_vm_
$LN4@simple_vm_:
; Line 487
  0012f	48 8b 54 24 40	 mov	 rdx, QWORD PTR cClassName2$[rsp]
  00134	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cClassName$[rsp]
  00139	e8 00 00 00 00	 call	 strcmp
  0013e	85 c0		 test	 eax, eax
  00140	75 50		 jne	 SHORT $LN3@simple_vm_
; Line 489
  00142	48 8b 54 24 30	 mov	 rdx, QWORD PTR list4$[rsp]
  00147	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0014c	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
; Line 490
  00151	ba 04 00 00 00	 mov	 edx, 4
  00156	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list4$[rsp]
  0015b	e8 00 00 00 00	 call	 simple_list_getlist
  00160	48 8b d0	 mov	 rdx, rax
  00163	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list3$[rsp]
  00168	e8 00 00 00 00	 call	 simple_list_copy
; Line 491
  0016d	ba 03 00 00 00	 mov	 edx, 3
  00172	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list4$[rsp]
  00177	e8 00 00 00 00	 call	 simple_list_getitem
  0017c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00180	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00183	48 89 44 24 38	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 492
  00188	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR nFound$[rsp], 1
; Line 493
  00190	eb 05		 jmp	 SHORT $LN5@simple_vm_
$LN3@simple_vm_:
; Line 495
  00192	e9 2e ff ff ff	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
; Line 496
  00197	83 7c 24 24 00	 cmp	 DWORD PTR nFound$[rsp], 0
  0019c	75 13		 jne	 SHORT $LN2@simple_vm_
; Line 497
  0019e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82628
  001a5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001aa	e8 00 00 00 00	 call	 simple_vm_error
; Line 498
  001af	eb 1c		 jmp	 SHORT $LN8@simple_vm_
$LN2@simple_vm_:
; Line 501
  001b1	ba 05 00 00 00	 mov	 edx, 5
  001b6	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list$[rsp]
  001bb	e8 00 00 00 00	 call	 simple_list_getitem
  001c0	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  001c4	75 02		 jne	 SHORT $LN1@simple_vm_
; Line 502
  001c6	eb 05		 jmp	 SHORT $LN8@simple_vm_
$LN1@simple_vm_:
; Line 504
  001c8	e9 be fe ff ff	 jmp	 $LN9@simple_vm_
$LN8@simple_vm_:
; Line 506
  001cd	8b 54 24 28	 mov	 edx, DWORD PTR nMark$[rsp]
  001d1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001d6	e8 00 00 00 00	 call	 simple_vm_oop_deletemodulessafter
$LN10@simple_vm_:
; Line 508
  001db	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001df	c3		 ret	 0
simple_vm_oop_parentmethods ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
x$ = 40
x2$ = 44
cClassName$ = 48
pClassesList$ = 56
string$ = 64
nFound$ = 72
nMark$ = 76
cClassName2$ = 80
vm$ = 112
list$ = 120
simple_vm_oop_parentinit PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 157
$LN17:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 68	 sub	 rsp, 104		; 00000068H
; Line 163
  0000e	ba 03 00 00 00	 mov	 edx, 3
  00013	48 8b 4c 24 78	 mov	 rcx, QWORD PTR list$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_getitem
  0001d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00021	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00024	48 89 44 24 30	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 165
  00029	33 d2		 xor	 edx, edx
  0002b	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00037	e8 00 00 00 00	 call	 simple_list_new_gc
  0003c	48 89 44 24 38	 mov	 QWORD PTR pClassesList$[rsp], rax
; Line 166
  00041	4c 8b 44 24 78	 mov	 r8, QWORD PTR list$[rsp]
  00046	48 8b 54 24 38	 mov	 rdx, QWORD PTR pClassesList$[rsp]
  0004b	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00050	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00057	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN14@simple_vm_:
; Line 167
  0005c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82490
  00063	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cClassName$[rsp]
  00068	e8 00 00 00 00	 call	 strcmp
  0006d	85 c0		 test	 eax, eax
  0006f	0f 84 95 02 00
	00		 je	 $LN13@simple_vm_
; Line 169
  00075	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0007a	48 8b 80 08 19
	00 00		 mov	 rax, QWORD PTR [rax+6408]
  00081	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00084	89 44 24 4c	 mov	 DWORD PTR nMark$[rsp], eax
; Line 170
  00088	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR nFound$[rsp], 0
; Line 171
  00090	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00098	eb 0a		 jmp	 SHORT $LN12@simple_vm_
$LN11@simple_vm_:
  0009a	8b 44 24 28	 mov	 eax, DWORD PTR x$[rsp]
  0009e	ff c0		 inc	 eax
  000a0	89 44 24 28	 mov	 DWORD PTR x$[rsp], eax
$LN12@simple_vm_:
  000a4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  000a9	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassescount
  000ae	39 44 24 28	 cmp	 DWORD PTR x$[rsp], eax
  000b2	0f 8f 16 02 00
	00		 jg	 $LN10@simple_vm_
; Line 172
  000b8	8b 54 24 28	 mov	 edx, DWORD PTR x$[rsp]
  000bc	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassitem
  000c6	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 173
  000cb	ba 01 00 00 00	 mov	 edx, 1
  000d0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  000d5	e8 00 00 00 00	 call	 simple_list_getitem
  000da	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000de	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e1	48 89 44 24 50	 mov	 QWORD PTR cClassName2$[rsp], rax
; Line 174
  000e6	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  000eb	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  000f0	e8 00 00 00 00	 call	 simple_vm_oop_checkpointertoclassinmodules
  000f5	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 175
  000fa	48 83 7c 24 20
	00		 cmp	 QWORD PTR list2$[rsp], 0
  00100	75 02		 jne	 SHORT $LN9@simple_vm_
; Line 176
  00102	eb 96		 jmp	 SHORT $LN11@simple_vm_
$LN9@simple_vm_:
; Line 178
  00104	48 8b 54 24 50	 mov	 rdx, QWORD PTR cClassName2$[rsp]
  00109	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cClassName$[rsp]
  0010e	e8 00 00 00 00	 call	 strcmp
  00113	85 c0		 test	 eax, eax
  00115	0f 85 ae 01 00
	00		 jne	 $LN8@simple_vm_
; Line 180
  0011b	c7 44 24 2c 01
	00 00 00	 mov	 DWORD PTR x2$[rsp], 1
  00123	eb 0a		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
  00125	8b 44 24 2c	 mov	 eax, DWORD PTR x2$[rsp]
  00129	ff c0		 inc	 eax
  0012b	89 44 24 2c	 mov	 DWORD PTR x2$[rsp], eax
$LN7@simple_vm_:
  0012f	48 8b 44 24 38	 mov	 rax, QWORD PTR pClassesList$[rsp]
  00134	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00137	39 44 24 2c	 cmp	 DWORD PTR x2$[rsp], eax
  0013b	0f 8f ed 00 00
	00		 jg	 $LN5@simple_vm_
; Line 181
  00141	8b 54 24 2c	 mov	 edx, DWORD PTR x2$[rsp]
  00145	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pClassesList$[rsp]
  0014a	e8 00 00 00 00	 call	 simple_list_getitem
  0014f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  00154	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00158	0f 85 cb 00 00
	00		 jne	 $LN4@simple_vm_
; Line 182
  0015e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82502
  00165	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0016a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00171	e8 00 00 00 00	 call	 simple_string_new_gc
  00176	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 183
  0017b	ba 01 00 00 00	 mov	 edx, 1
  00180	48 8b 4c 24 78	 mov	 rcx, QWORD PTR list$[rsp]
  00185	e8 00 00 00 00	 call	 simple_list_getitem
  0018a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0018e	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00191	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  00196	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0019b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a2	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 184
  001a7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82503
  001ae	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  001b3	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001b8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001bf	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 185
  001c4	4c 8b 44 24 30	 mov	 r8, QWORD PTR cClassName$[rsp]
  001c9	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  001ce	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001d3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001da	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 186
  001df	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  001e4	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82504
  001ee	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  001f3	e8 00 00 00 00	 call	 simple_vm_error2
; Line 187
  001f8	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  001fd	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00202	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00209	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 189
  0020e	48 8b 54 24 38	 mov	 rdx, QWORD PTR pClassesList$[rsp]
  00213	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00218	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0021f	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 190
  00224	e9 f7 00 00 00	 jmp	 $LN15@simple_vm_
$LN4@simple_vm_:
; Line 192
  00229	e9 f7 fe ff ff	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
; Line 193
  0022e	4c 8b 44 24 20	 mov	 r8, QWORD PTR list2$[rsp]
  00233	48 8b 54 24 38	 mov	 rdx, QWORD PTR pClassesList$[rsp]
  00238	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0023d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00244	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 195
  00249	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  0024e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  00253	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
; Line 196
  00258	ba 03 00 00 00	 mov	 edx, 3
  0025d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  00262	e8 00 00 00 00	 call	 simple_list_getitem
  00267	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0026b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0026e	48 89 44 24 30	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 197
  00273	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82506
  0027a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cClassName$[rsp]
  0027f	e8 00 00 00 00	 call	 strcmp
  00284	85 c0		 test	 eax, eax
  00286	74 1e		 je	 SHORT $LN3@simple_vm_
; Line 199
  00288	ba 02 00 00 00	 mov	 edx, 2
  0028d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  00292	e8 00 00 00 00	 call	 simple_list_getitem
  00297	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  0029a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  0029f	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 201
  002a4	eb 19		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 202
  002a6	ba 02 00 00 00	 mov	 edx, 2
  002ab	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  002b0	e8 00 00 00 00	 call	 simple_list_getitem
  002b5	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  002ba	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  002bd	89 01		 mov	 DWORD PTR [rcx], eax
$LN2@simple_vm_:
; Line 204
  002bf	c7 44 24 48 01
	00 00 00	 mov	 DWORD PTR nFound$[rsp], 1
; Line 205
  002c7	eb 05		 jmp	 SHORT $LN10@simple_vm_
$LN8@simple_vm_:
; Line 207
  002c9	e9 cc fd ff ff	 jmp	 $LN11@simple_vm_
$LN10@simple_vm_:
; Line 208
  002ce	83 7c 24 48 00	 cmp	 DWORD PTR nFound$[rsp], 0
  002d3	75 18		 jne	 SHORT $LN1@simple_vm_
; Line 210
  002d5	4c 8b 44 24 30	 mov	 r8, QWORD PTR cClassName$[rsp]
  002da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82509
  002e1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  002e6	e8 00 00 00 00	 call	 simple_vm_error2
; Line 211
  002eb	eb 1d		 jmp	 SHORT $LN13@simple_vm_
$LN1@simple_vm_:
; Line 214
  002ed	8b 54 24 4c	 mov	 edx, DWORD PTR nMark$[rsp]
  002f1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  002f6	e8 00 00 00 00	 call	 simple_vm_oop_deletemodulessafter
; Line 215
  002fb	48 8b 44 24 20	 mov	 rax, QWORD PTR list2$[rsp]
  00300	48 89 44 24 78	 mov	 QWORD PTR list$[rsp], rax
; Line 216
  00305	e9 52 fd ff ff	 jmp	 $LN14@simple_vm_
$LN13@simple_vm_:
; Line 218
  0030a	48 8b 54 24 38	 mov	 rdx, QWORD PTR pClassesList$[rsp]
  0030f	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00314	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0031b	e8 00 00 00 00	 call	 simple_list_delete_gc
$LN15@simple_vm_:
; Line 219
  00320	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00324	c3		 ret	 0
simple_vm_oop_parentinit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list2$ = 40
list3$ = 48
cStr$ = 64
__$ArrayPad$ = 176
vm$ = 208
list$ = 216
simple_vm_oop_printobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 520
$LN15:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00011	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00018	48 33 c4	 xor	 rax, rsp
  0001b	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 524
  00023	ba 02 00 00 00	 mov	 edx, 2
  00028	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  00030	e8 00 00 00 00	 call	 simple_list_getlist
  00035	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR list$[rsp], rax
; Line 525
  0003d	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR x$[rsp], 3
  00045	eb 0a		 jmp	 SHORT $LN12@simple_vm_
$LN11@simple_vm_:
  00047	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0004b	ff c0		 inc	 eax
  0004d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN12@simple_vm_:
  00051	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR list$[rsp]
  00059	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0005c	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00060	0f 8f 44 01 00
	00		 jg	 $LN10@simple_vm_
; Line 526
  00066	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0006a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  00072	e8 00 00 00 00	 call	 simple_list_getlist
  00077	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 527
  0007c	ba 01 00 00 00	 mov	 edx, 1
  00081	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00086	e8 00 00 00 00	 call	 simple_list_getitem
  0008b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00092	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82646
  00099	e8 00 00 00 00	 call	 printf
; Line 528
  0009e	ba 03 00 00 00	 mov	 edx, 3
  000a3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000a8	e8 00 00 00 00	 call	 simple_list_isstring
  000ad	85 c0		 test	 eax, eax
  000af	74 27		 je	 SHORT $LN9@simple_vm_
; Line 529
  000b1	ba 03 00 00 00	 mov	 edx, 3
  000b6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000bb	e8 00 00 00 00	 call	 simple_list_getitem
  000c0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000c7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82648
  000ce	e8 00 00 00 00	 call	 printf
  000d3	e9 cd 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 531
  000d8	ba 03 00 00 00	 mov	 edx, 3
  000dd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000e2	e8 00 00 00 00	 call	 simple_list_isnumber
  000e7	85 c0		 test	 eax, eax
  000e9	74 6b		 je	 SHORT $LN7@simple_vm_
; Line 532
  000eb	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR vm$[rsp], 0
  000f4	74 39		 je	 SHORT $LN6@simple_vm_
; Line 533
  000f6	ba 03 00 00 00	 mov	 edx, 3
  000fb	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00100	e8 00 00 00 00	 call	 simple_list_getitem
  00105	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr$[rsp]
  0010a	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0010f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_numtostring
; Line 534
  0011c	48 8d 54 24 40	 lea	 rdx, QWORD PTR cStr$[rsp]
  00121	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82653
  00128	e8 00 00 00 00	 call	 printf
; Line 536
  0012d	eb 25		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 537
  0012f	ba 03 00 00 00	 mov	 edx, 3
  00134	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00139	e8 00 00 00 00	 call	 simple_list_getitem
  0013e	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  00143	66 48 0f 7e ca	 movd	 rdx, xmm1
  00148	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82655
  0014f	e8 00 00 00 00	 call	 printf
$LN5@simple_vm_:
; Line 538
  00154	eb 4f		 jmp	 SHORT $LN4@simple_vm_
$LN7@simple_vm_:
; Line 540
  00156	ba 03 00 00 00	 mov	 edx, 3
  0015b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00160	e8 00 00 00 00	 call	 simple_list_islist
  00165	85 c0		 test	 eax, eax
  00167	74 3c		 je	 SHORT $LN3@simple_vm_
; Line 541
  00169	ba 03 00 00 00	 mov	 edx, 3
  0016e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00173	e8 00 00 00 00	 call	 simple_list_getlist
  00178	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 542
  0017d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  00182	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00187	85 c0		 test	 eax, eax
  00189	74 0e		 je	 SHORT $LN2@simple_vm_
; Line 543
  0018b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82659
  00192	e8 00 00 00 00	 call	 printf
; Line 545
  00197	eb 0c		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 546
  00199	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82661
  001a0	e8 00 00 00 00	 call	 printf
$LN1@simple_vm_:
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN8@simple_vm_:
; Line 549
  001a5	e9 9d fe ff ff	 jmp	 $LN11@simple_vm_
$LN10@simple_vm_:
; Line 550
  001aa	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  001c1	c3		 ret	 0
simple_vm_oop_printobj ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
tv182 = 40
vm$ = 64
simple_vm_oop_setscope PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 254
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 257
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 c0 18
	00 00		 mov	 rax, QWORD PTR [rax+6336]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 c0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6336]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 262
  0002e	ba 04 00 00 00	 mov	 edx, 4
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00038	e8 00 00 00 00	 call	 simple_list_getitem
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00042	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00046	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 264
  0004c	ba 05 00 00 00	 mov	 edx, 5
  00051	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00056	e8 00 00 00 00	 call	 simple_list_getitem
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00060	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00063	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 266
  00069	ba 06 00 00 00	 mov	 edx, 6
  0006e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00073	e8 00 00 00 00	 call	 simple_list_getitem
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00081	88 81 10 19 00
	00		 mov	 BYTE PTR [rcx+6416], al
; Line 268
  00087	ba 07 00 00 00	 mov	 edx, 7
  0008c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00091	e8 00 00 00 00	 call	 simple_list_getitem
  00096	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0009f	88 81 00 19 00
	00		 mov	 BYTE PTR [rcx+6400], al
; Line 269
  000a5	ba 08 00 00 00	 mov	 edx, 8
  000aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000af	e8 00 00 00 00	 call	 simple_list_getitem
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000b9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000bd	48 89 81 d8 18
	00 00		 mov	 QWORD PTR [rcx+6360], rax
; Line 271
  000c4	ba 09 00 00 00	 mov	 edx, 9
  000c9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000ce	e8 00 00 00 00	 call	 simple_list_getitem
  000d3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d8	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  000dc	88 81 b9 19 00
	00		 mov	 BYTE PTR [rcx+6585], al
; Line 273
  000e2	ba 0a 00 00 00	 mov	 edx, 10
  000e7	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000ec	e8 00 00 00 00	 call	 simple_list_getitem
  000f1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f6	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000f9	89 81 68 18 00
	00		 mov	 DWORD PTR [rcx+6248], eax
; Line 275
  000ff	ba 0b 00 00 00	 mov	 edx, 11
  00104	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00109	e8 00 00 00 00	 call	 simple_list_getitem
  0010e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00113	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00116	89 81 90 18 00
	00		 mov	 DWORD PTR [rcx+6288], eax
; Line 277
  0011c	ba 0c 00 00 00	 mov	 edx, 12
  00121	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00126	e8 00 00 00 00	 call	 simple_list_getitem
  0012b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00130	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00134	48 89 81 30 19
	00 00		 mov	 QWORD PTR [rcx+6448], rax
; Line 279
  0013b	ba 01 00 00 00	 mov	 edx, 1
  00140	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00145	e8 00 00 00 00	 call	 simple_list_getitem
  0014a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0014f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00153	48 89 81 40 18
	00 00		 mov	 QWORD PTR [rcx+6208], rax
; Line 281
  0015a	ba 02 00 00 00	 mov	 edx, 2
  0015f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00164	e8 00 00 00 00	 call	 simple_list_getitem
  00169	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0016e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00171	89 81 6c 18 00
	00		 mov	 DWORD PTR [rcx+6252], eax
; Line 282
  00177	ba 03 00 00 00	 mov	 edx, 3
  0017c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00181	e8 00 00 00 00	 call	 simple_list_getitem
  00186	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0018b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0018f	48 39 81 70 18
	00 00		 cmp	 QWORD PTR [rcx+6256], rax
  00196	74 48		 je	 SHORT $LN1@simple_vm_
; Line 283
  00198	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0019d	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  001a4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001a9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001b0	e8 00 00 00 00	 call	 simple_list_delete_gc
  001b5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001ba	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 284
  001c1	ba 03 00 00 00	 mov	 edx, 3
  001c6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  001cb	e8 00 00 00 00	 call	 simple_list_getitem
  001d0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001d5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001d9	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
$LN1@simple_vm_:
; Line 287
  001e0	ba 0d 00 00 00	 mov	 edx, 13
  001e5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  001ea	e8 00 00 00 00	 call	 simple_list_getitem
  001ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001f4	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001fb	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00200	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00204	48 89 54 24 28	 mov	 QWORD PTR tv182[rsp], rdx
  00209	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0020d	8b d1		 mov	 edx, ecx
  0020f	48 8b 44 24 28	 mov	 rax, QWORD PTR tv182[rsp]
  00214	48 8b c8	 mov	 rcx, rax
  00217	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 288
  0021c	ba 0e 00 00 00	 mov	 edx, 14
  00221	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00226	e8 00 00 00 00	 call	 simple_list_getitem
  0022b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00230	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00237	48 6b c9 18	 imul	 rcx, 24
  0023b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0023e	83 e0 03	 and	 eax, 3
  00241	c1 e0 05	 shl	 eax, 5
  00244	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00249	8b 4c 0a 30	 mov	 ecx, DWORD PTR [rdx+rcx+48]
  0024d	83 e1 9f	 and	 ecx, -97		; ffffff9fH
  00250	0b c8		 or	 ecx, eax
  00252	8b c1		 mov	 eax, ecx
  00254	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00260	48 6b c9 18	 imul	 rcx, 24
  00264	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00269	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 290
  0026d	ba 0f 00 00 00	 mov	 edx, 15
  00272	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00277	e8 00 00 00 00	 call	 simple_list_getitem
  0027c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00281	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00284	89 81 18 1a 00
	00		 mov	 DWORD PTR [rcx+6680], eax
; Line 292
  0028a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0028f	e8 00 00 00 00	 call	 simple_vm_oop_aftercallmethod
; Line 293
  00294	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00299	48 8b 80 c0 18
	00 00		 mov	 rax, QWORD PTR [rax+6336]
  002a0	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  002a4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002a9	48 8b 90 c0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6336]
  002b0	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002b5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002bc	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 295
  002c1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002c6	0f b6 80 01 19
	00 00		 movzx	 eax, BYTE PTR [rax+6401]
  002cd	fe c8		 dec	 al
  002cf	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002d4	88 81 01 19 00
	00		 mov	 BYTE PTR [rcx+6401], al
; Line 297
  002da	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002df	e8 00 00 00 00	 call	 simple_vm_oop_popclassmodules
; Line 298
  002e4	48 83 c4 38	 add	 rsp, 56			; 00000038H
  002e8	c3		 ret	 0
simple_vm_oop_setscope ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_oop_aftercallmethod PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 511
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 512
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00015	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00019	74 2d		 je	 SHORT $LN1@simple_vm_
; Line 513
  0001b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00020	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00027	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00043	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN1@simple_vm_:
; Line 516
  00048	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0004d	e8 00 00 00 00	 call	 simple_vm_oop_popclassmodules
; Line 517
  00052	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00056	c3		 ret	 0
simple_vm_oop_aftercallmethod ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
lResult$ = 32
var$ = 40
list2$ = 48
list$ = 56
pSuper$ = 64
list3$ = 72
vm$ = 96
simple_vm_oop_loadmethod PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 403
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 407
  00009	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_vm_oop_getsuperobj
  00013	48 89 44 24 40	 mov	 QWORD PTR pSuper$[rsp], rax
; Line 408
  00018	48 83 7c 24 40
	00		 cmp	 QWORD PTR pSuper$[rsp], 0
  0001e	74 1e		 je	 SHORT $LN3@simple_vm_
; Line 409
  00020	48 8b 54 24 40	 mov	 rdx, QWORD PTR pSuper$[rsp]
  00025	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0002a	e8 00 00 00 00	 call	 simple_vm_oop_loadsuperobjmethod
; Line 411
  0002f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00034	e8 00 00 00 00	 call	 simple_vm_oop_movetobeforeobjstate
; Line 412
  00039	e9 72 01 00 00	 jmp	 $LN4@simple_vm_
$LN3@simple_vm_:
; Line 415
  0003e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	e8 00 00 00 00	 call	 simple_vm_oop_getobj
  00048	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 416
  0004d	48 83 7c 24 28
	00		 cmp	 QWORD PTR var$[rsp], 0
  00053	75 05		 jne	 SHORT $LN2@simple_vm_
; Line 417
  00055	e9 56 01 00 00	 jmp	 $LN4@simple_vm_
$LN2@simple_vm_:
; Line 420
  0005a	48 8b 54 24 28	 mov	 rdx, QWORD PTR var$[rsp]
  0005f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00064	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer2
; Line 422
  00069	ba 01 00 00 00	 mov	 edx, 1
  0006e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00073	e8 00 00 00 00	 call	 simple_list_getitem
  00078	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007c	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
; Line 424
  00081	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0008b	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
; Line 426
  00090	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00095	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  0009c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000a1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a8	e8 00 00 00 00	 call	 simple_list_newlist_gc
  000ad	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 427
  000b2	ba 02 00 00 00	 mov	 edx, 2
  000b7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000bc	e8 00 00 00 00	 call	 simple_list_getlist
  000c1	4c 8b c0	 mov	 r8, rax
  000c4	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  000c9	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ce	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000d5	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 429
  000da	ba 04 00 00 00	 mov	 edx, 4
  000df	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  000e4	e8 00 00 00 00	 call	 simple_list_getlist
  000e9	48 89 44 24 48	 mov	 QWORD PTR list3$[rsp], rax
; Line 430
  000ee	4c 8b 44 24 48	 mov	 r8, QWORD PTR list3$[rsp]
  000f3	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  000f8	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000fd	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00104	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 432
  00109	4c 8b 44 24 38	 mov	 r8, QWORD PTR list$[rsp]
  0010e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  00113	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00118	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0011f	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 434
  00124	41 b8 01 00 00
	00		 mov	 r8d, 1
  0012a	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  0012f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00134	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0013b	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 436
  00140	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00145	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0014a	e8 00 00 00 00	 call	 simple_vm_oop_parentmethods
; Line 438
  0014f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00154	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00158	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 439
  0015d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00162	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list3$[rsp]
  00167	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 440
  0016b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00170	c6 80 c8 18 00
	00 01		 mov	 BYTE PTR [rax+6344], 1
; Line 441
  00177	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0017c	e8 00 00 00 00	 call	 simple_vm_loadblock
  00181	89 44 24 20	 mov	 DWORD PTR lResult$[rsp], eax
; Line 442
  00185	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0018a	c6 80 c8 18 00
	00 00		 mov	 BYTE PTR [rax+6344], 0
; Line 443
  00191	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00196	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0019b	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 445
  0019f	83 7c 24 20 00	 cmp	 DWORD PTR lResult$[rsp], 0
  001a4	74 0a		 je	 SHORT $LN1@simple_vm_
; Line 446
  001a6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001ab	e8 00 00 00 00	 call	 simple_vm_oop_movetobeforeobjstate
$LN1@simple_vm_:
$LN4@simple_vm_:
; Line 448
  001b0	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001b4	c3		 ret	 0
simple_vm_oop_loadmethod ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
pItem$ = 40
vm$ = 64
simple_vm_oop_getobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 318
$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 321
  00009	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR var$[rsp], 0
; Line 323
  00012	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00017	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0001e	48 6b c0 18	 imul	 rax, 24
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0002b	83 e0 07	 and	 eax, 7
  0002e	83 f8 03	 cmp	 eax, 3
  00031	74 18		 je	 SHORT $LN7@simple_vm_
; Line 324
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82551
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	e8 00 00 00 00	 call	 simple_vm_error
; Line 325
  00044	33 c0		 xor	 eax, eax
  00046	e9 5d 01 00 00	 jmp	 $LN8@simple_vm_
$LN7@simple_vm_:
; Line 327
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00050	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00057	48 6b c0 18	 imul	 rax, 24
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00060	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00064	c1 e8 05	 shr	 eax, 5
  00067	83 e0 03	 and	 eax, 3
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	0f 85 a3 00 00
	00		 jne	 $LN6@simple_vm_
; Line 328
  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00078	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007f	48 6b c0 18	 imul	 rax, 24
  00083	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00088	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0008d	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 329
  00092	ba 02 00 00 00	 mov	 edx, 2
  00097	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0009c	e8 00 00 00 00	 call	 simple_list_getitem
  000a1	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000a5	75 2e		 jne	 SHORT $LN5@simple_vm_
; Line 330
  000a7	ba 01 00 00 00	 mov	 edx, 1
  000ac	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000b1	e8 00 00 00 00	 call	 simple_list_getitem
  000b6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ba	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82556
  000c4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000c9	e8 00 00 00 00	 call	 simple_vm_error2
; Line 331
  000ce	33 c0		 xor	 eax, eax
  000d0	e9 d3 00 00 00	 jmp	 $LN8@simple_vm_
$LN5@simple_vm_:
; Line 333
  000d5	ba 03 00 00 00	 mov	 edx, 3
  000da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000df	e8 00 00 00 00	 call	 simple_list_islist
  000e4	85 c0		 test	 eax, eax
  000e6	75 18		 jne	 SHORT $LN4@simple_vm_
; Line 334
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82559
  000ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f4	e8 00 00 00 00	 call	 simple_vm_error
; Line 335
  000f9	33 c0		 xor	 eax, eax
  000fb	e9 a8 00 00 00	 jmp	 $LN8@simple_vm_
$LN4@simple_vm_:
; Line 337
  00100	ba 03 00 00 00	 mov	 edx, 3
  00105	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0010a	e8 00 00 00 00	 call	 simple_list_getlist
  0010f	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
  00114	eb 51		 jmp	 SHORT $LN3@simple_vm_
$LN6@simple_vm_:
; Line 339
  00116	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0011b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00122	48 6b c0 18	 imul	 rax, 24
  00126	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0012b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012f	c1 e8 05	 shr	 eax, 5
  00132	83 e0 03	 and	 eax, 3
  00135	83 f8 02	 cmp	 eax, 2
  00138	75 2d		 jne	 SHORT $LN2@simple_vm_
; Line 340
  0013a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0013f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00146	48 6b c0 18	 imul	 rax, 24
  0014a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0014f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00154	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 341
  00159	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  0015e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00162	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 343
  00167	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0016c	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00171	85 c0		 test	 eax, eax
  00173	75 15		 jne	 SHORT $LN1@simple_vm_
; Line 344
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82565
  0017c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00181	e8 00 00 00 00	 call	 simple_vm_error
; Line 345
  00186	33 c0		 xor	 eax, eax
  00188	eb 1e		 jmp	 SHORT $LN8@simple_vm_
$LN1@simple_vm_:
; Line 347
  0018a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0018f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00196	fe c8		 dec	 al
  00198	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 348
  001a3	48 8b 44 24 20	 mov	 rax, QWORD PTR var$[rsp]
$LN8@simple_vm_:
; Line 349
  001a8	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001ac	c3		 ret	 0
simple_vm_oop_getobj ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
simple_vm_oop_isobject PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 301
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 302
  00009	48 83 7c 24 30
	00		 cmp	 QWORD PTR list$[rsp], 0
  0000f	75 04		 jne	 SHORT $LN4@simple_vm_
; Line 303
  00011	33 c0		 xor	 eax, eax
  00013	eb 42		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
; Line 305
  00015	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0001a	83 78 10 02	 cmp	 DWORD PTR [rax+16], 2
  0001e	74 04		 je	 SHORT $LN3@simple_vm_
; Line 306
  00020	33 c0		 xor	 eax, eax
  00022	eb 33		 jmp	 SHORT $LN5@simple_vm_
$LN3@simple_vm_:
; Line 308
  00024	ba 01 00 00 00	 mov	 edx, 1
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_list_ispointer
  00033	85 c0		 test	 eax, eax
  00035	75 04		 jne	 SHORT $LN2@simple_vm_
; Line 309
  00037	33 c0		 xor	 eax, eax
  00039	eb 1c		 jmp	 SHORT $LN5@simple_vm_
$LN2@simple_vm_:
; Line 311
  0003b	ba 02 00 00 00	 mov	 edx, 2
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00045	e8 00 00 00 00	 call	 simple_list_islist
  0004a	85 c0		 test	 eax, eax
  0004c	75 04		 jne	 SHORT $LN1@simple_vm_
; Line 312
  0004e	33 c0		 xor	 eax, eax
  00050	eb 05		 jmp	 SHORT $LN5@simple_vm_
$LN1@simple_vm_:
; Line 314
  00052	b8 01 00 00 00	 mov	 eax, 1
$LN5@simple_vm_:
; Line 315
  00057	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005b	c3		 ret	 0
simple_vm_oop_isobject ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pScope$ = 32
var$ = 40
vm$ = 64
simple_vm_oop_property PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 352
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 355
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 03	 cmp	 eax, 3
  00028	75 50		 jne	 SHORT $LN5@simple_vm_
; Line 356
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00044	48 8b 44 02 38	 mov	 rax, QWORD PTR [rdx+rax+56]
  00049	48 89 81 18 19
	00 00		 mov	 QWORD PTR [rcx+6424], rax
; Line 357
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00055	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005c	48 6b c0 18	 imul	 rax, 24
  00060	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00065	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00069	c1 e8 05	 shr	 eax, 5
  0006c	83 e0 03	 and	 eax, 3
  0006f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 20 19 00
	00		 mov	 BYTE PTR [rcx+6432], al
$LN5@simple_vm_:
; Line 360
  0007a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0007f	e8 00 00 00 00	 call	 simple_vm_oop_getobj
  00084	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 361
  00089	48 83 7c 24 28
	00		 cmp	 QWORD PTR var$[rsp], 0
  0008f	75 05		 jne	 SHORT $LN4@simple_vm_
; Line 362
  00091	e9 f8 01 00 00	 jmp	 $LN6@simple_vm_
$LN4@simple_vm_:
; Line 365
  00096	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0009b	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  000a2	48 89 44 24 20	 mov	 QWORD PTR pScope$[rsp], rax
; Line 366
  000a7	ba 02 00 00 00	 mov	 edx, 2
  000ac	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000b1	e8 00 00 00 00	 call	 simple_list_getlist
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000bb	48 89 81 40 18
	00 00		 mov	 QWORD PTR [rcx+6208], rax
; Line 367
  000c2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c7	c6 80 11 19 00
	00 01		 mov	 BYTE PTR [rax+6417], 1
; Line 368
  000ce	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000d3	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000da	b9 08 00 00 00	 mov	 ecx, 8
  000df	48 6b c9 01	 imul	 rcx, 1
  000e3	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000e7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000eb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f3	e8 00 00 00 00	 call	 simple_vm_findvar
  000f8	85 c0		 test	 eax, eax
  000fa	0f 85 61 01 00
	00		 jne	 $LN3@simple_vm_
; Line 370
  00100	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00105	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  0010c	85 c0		 test	 eax, eax
  0010e	0f 84 df 00 00
	00		 je	 $LN2@simple_vm_
; Line 371
  00114	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00119	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00120	b9 08 00 00 00	 mov	 ecx, 8
  00125	48 6b c9 01	 imul	 rcx, 1
  00129	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0012d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00131	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00134	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00139	e8 00 00 00 00	 call	 simple_vm_newvar
; Line 373
  0013e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00143	0f be 80 10 19
	00 00		 movsx	 eax, BYTE PTR [rax+6416]
  0014a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0014f	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00156	48 6b c9 18	 imul	 rcx, 24
  0015a	44 8b c8	 mov	 r9d, eax
  0015d	41 b8 05 00 00
	00		 mov	 r8d, 5
  00163	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00168	48 8b 54 08 38	 mov	 rdx, QWORD PTR [rax+rcx+56]
  0016d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00172	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00179	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 374
  0017e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00183	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0018a	fe c8		 dec	 al
  0018c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00191	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 375
  00197	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  001a3	b9 08 00 00 00	 mov	 ecx, 8
  001a8	48 6b c9 01	 imul	 rcx, 1
  001ac	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  001b0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001b4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001bc	e8 00 00 00 00	 call	 simple_vm_findvar
; Line 376
  001c1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001c6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pScope$[rsp]
  001cb	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 377
  001d2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001d7	c6 80 11 19 00
	00 00		 mov	 BYTE PTR [rax+6417], 0
; Line 378
  001de	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001e3	48 c7 80 18 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6424], 0
; Line 379
  001ee	e9 9b 00 00 00	 jmp	 $LN6@simple_vm_
$LN2@simple_vm_:
; Line 381
  001f3	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001f8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pScope$[rsp]
  001fd	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 382
  00204	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00209	c6 80 11 19 00
	00 00		 mov	 BYTE PTR [rax+6417], 0
; Line 383
  00210	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00215	48 c7 80 18 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6424], 0
; Line 384
  00220	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00225	83 b8 fc 18 00
	00 00		 cmp	 DWORD PTR [rax+6396], 0
  0022c	75 31		 jne	 SHORT $LN1@simple_vm_
; Line 393
  0022e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00233	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0023a	b9 08 00 00 00	 mov	 ecx, 8
  0023f	48 6b c9 01	 imul	 rcx, 1
  00243	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00247	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0024b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0024e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82581
  00255	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0025a	e8 00 00 00 00	 call	 simple_vm_error2
$LN1@simple_vm_:
; Line 395
  0025f	eb 2d		 jmp	 SHORT $LN6@simple_vm_
$LN3@simple_vm_:
; Line 397
  00261	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00266	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pScope$[rsp]
  0026b	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 398
  00272	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00277	c6 80 11 19 00
	00 00		 mov	 BYTE PTR [rax+6417], 0
; Line 399
  0027e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00283	48 c7 80 18 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6424], 0
$LN6@simple_vm_:
; Line 400
  0028e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00292	c3		 ret	 0
simple_vm_oop_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list4$ = 32
list$ = 40
var$ = 48
nType$ = 56
x$ = 60
list2$ = 64
nCont$ = 72
nLimit$ = 76
nClassPC$ = 80
pSelf$ = 88
pItem$ = 96
list3$ = 104
list5$ = 112
cClassName$ = 120
cClassName2$ = 128
cTempName$ = 136
vm$ = 160
simple_vm_oop_newobj PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmoop.c
; Line 21
$LN22:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 98 00
	00 00		 sub	 rsp, 152		; 00000098H
; Line 26
  0000c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG82442
  00013	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR cTempName$[rsp], rax
; Line 27
  0001b	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR list2$[rsp], 0
; Line 28
  00024	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR var$[rsp], 0
; Line 29
  0002d	48 c7 44 24 60
	00 00 00 00	 mov	 QWORD PTR pItem$[rsp], 0
; Line 30
  00036	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0003e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00045	b9 08 00 00 00	 mov	 ecx, 8
  0004a	48 6b c9 01	 imul	 rcx, 1
  0004e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00052	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 89 44 24 78	 mov	 QWORD PTR cClassName$[rsp], rax
; Line 31
  0005e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00066	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassescount
  0006b	89 44 24 4c	 mov	 DWORD PTR nLimit$[rsp], eax
; Line 32
  0006f	83 7c 24 4c 00	 cmp	 DWORD PTR nLimit$[rsp], 0
  00074	0f 8e ea 08 00
	00		 jle	 $LN19@simple_vm_
; Line 33
  0007a	c7 44 24 3c 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00082	eb 0a		 jmp	 SHORT $LN18@simple_vm_
$LN17@simple_vm_:
  00084	8b 44 24 3c	 mov	 eax, DWORD PTR x$[rsp]
  00088	ff c0		 inc	 eax
  0008a	89 44 24 3c	 mov	 DWORD PTR x$[rsp], eax
$LN18@simple_vm_:
  0008e	8b 44 24 4c	 mov	 eax, DWORD PTR nLimit$[rsp]
  00092	39 44 24 3c	 cmp	 DWORD PTR x$[rsp], eax
  00096	0f 8f c8 08 00
	00		 jg	 $LN16@simple_vm_
; Line 34
  0009c	8b 54 24 3c	 mov	 edx, DWORD PTR x$[rsp]
  000a0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000a8	e8 00 00 00 00	 call	 simple_vm_oop_visibleclassitem
  000ad	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 35
  000b2	ba 01 00 00 00	 mov	 edx, 1
  000b7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000bc	e8 00 00 00 00	 call	 simple_list_getitem
  000c1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c8	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR cClassName2$[rsp], rax
; Line 36
  000d0	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000d5	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000dd	e8 00 00 00 00	 call	 simple_vm_oop_checkpointertoclassinmodules
  000e2	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 37
  000e7	48 83 7c 24 28
	00		 cmp	 QWORD PTR list$[rsp], 0
  000ed	75 02		 jne	 SHORT $LN15@simple_vm_
; Line 38
  000ef	eb 93		 jmp	 SHORT $LN17@simple_vm_
$LN15@simple_vm_:
; Line 40
  000f1	ba 02 00 00 00	 mov	 edx, 2
  000f6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000fb	e8 00 00 00 00	 call	 simple_list_getitem
  00100	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00103	89 44 24 50	 mov	 DWORD PTR nClassPC$[rsp], eax
; Line 41
  00107	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR cClassName2$[rsp]
  0010f	48 8b 4c 24 78	 mov	 rcx, QWORD PTR cClassName$[rsp]
  00114	e8 00 00 00 00	 call	 strcmp
  00119	85 c0		 test	 eax, eax
  0011b	0f 85 3e 08 00
	00		 jne	 $LN14@simple_vm_
; Line 43
  00121	c7 44 24 48 01
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 1
; Line 44
  00129	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00131	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00138	48 6b c0 18	 imul	 rax, 24
  0013c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00148	83 e0 07	 and	 eax, 7
  0014b	83 f8 03	 cmp	 eax, 3
  0014e	75 39		 jne	 SHORT $LN13@simple_vm_
; Line 45
  00150	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0016b	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00173	48 8b 44 02 38	 mov	 rax, QWORD PTR [rdx+rax+56]
  00178	48 39 81 30 19
	00 00		 cmp	 QWORD PTR [rcx+6448], rax
  0017f	75 08		 jne	 SHORT $LN12@simple_vm_
; Line 46
  00181	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 0
$LN12@simple_vm_:
$LN13@simple_vm_:
; Line 49
  00189	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00191	83 b8 94 18 00
	00 00		 cmp	 DWORD PTR [rax+6292], 0
  00198	7e 08		 jle	 SHORT $LN11@simple_vm_
; Line 50
  0019a	c7 44 24 48 01
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 1
$LN11@simple_vm_:
; Line 52
  001a2	83 7c 24 48 01	 cmp	 DWORD PTR nCont$[rsp], 1
  001a7	0f 85 c0 00 00
	00		 jne	 $LN10@simple_vm_
; Line 53
  001ad	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR cTempName$[rsp]
  001b5	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001bd	e8 00 00 00 00	 call	 simple_vm_newvar
; Line 54
  001c2	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001ca	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d1	48 6b c0 18	 imul	 rax, 24
  001d5	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001dd	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001e2	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 55
  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001ef	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001f6	48 6b c0 18	 imul	 rax, 24
  001fa	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00202	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00206	c1 e8 05	 shr	 eax, 5
  00209	83 e0 03	 and	 eax, 3
  0020c	89 44 24 38	 mov	 DWORD PTR nType$[rsp], eax
; Line 56
  00210	41 b9 03 00 00
	00		 mov	 r9d, 3
  00216	41 b8 02 00 00
	00		 mov	 r8d, 2
  0021c	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00221	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00229	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00230	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 57
  00235	41 b8 03 00 00
	00		 mov	 r8d, 3
  0023b	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  00240	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00248	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0024f	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 58
  00254	ba 03 00 00 00	 mov	 edx, 3
  00259	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0025e	e8 00 00 00 00	 call	 simple_list_getlist
  00263	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
; Line 60
  00268	e9 5f 01 00 00	 jmp	 $LN9@simple_vm_
$LN10@simple_vm_:
; Line 62
  0026d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00275	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0027c	48 6b c0 18	 imul	 rax, 24
  00280	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00288	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0028c	c1 e8 05	 shr	 eax, 5
  0028f	83 e0 03	 and	 eax, 3
  00292	83 f8 01	 cmp	 eax, 1
  00295	0f 85 82 00 00
	00		 jne	 $LN8@simple_vm_
; Line 63
  0029b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002a3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002aa	48 6b c0 18	 imul	 rax, 24
  002ae	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002bb	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 64
  002c0	41 b9 03 00 00
	00		 mov	 r9d, 3
  002c6	41 b8 02 00 00
	00		 mov	 r8d, 2
  002cc	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  002d1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e0	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 65
  002e5	41 b8 03 00 00
	00		 mov	 r8d, 3
  002eb	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  002f0	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002f8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002ff	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 66
  00304	ba 03 00 00 00	 mov	 edx, 3
  00309	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  0030e	e8 00 00 00 00	 call	 simple_list_getlist
  00313	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
  00318	e9 86 00 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 68
  0031d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00325	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032c	48 6b c0 18	 imul	 rax, 24
  00330	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00338	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033c	c1 e8 05	 shr	 eax, 5
  0033f	83 e0 03	 and	 eax, 3
  00342	83 f8 02	 cmp	 eax, 2
  00345	75 5c		 jne	 SHORT $LN6@simple_vm_
; Line 69
  00347	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0034f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00356	48 6b c0 18	 imul	 rax, 24
  0035a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00362	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00367	48 89 44 24 60	 mov	 QWORD PTR pItem$[rsp], rax
; Line 70
  0036c	41 b8 04 00 00
	00		 mov	 r8d, 4
  00372	48 8b 54 24 60	 mov	 rdx, QWORD PTR pItem$[rsp]
  00377	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0037f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00386	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 71
  0038b	48 8b 44 24 60	 mov	 rax, QWORD PTR pItem$[rsp]
  00390	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00394	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 72
  00399	48 8b 44 24 30	 mov	 rax, QWORD PTR var$[rsp]
  0039e	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
$LN6@simple_vm_:
$LN7@simple_vm_:
; Line 74
  003a3	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003ab	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003b2	48 6b c0 18	 imul	 rax, 24
  003b6	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003be	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003c2	c1 e8 05	 shr	 eax, 5
  003c5	83 e0 03	 and	 eax, 3
  003c8	89 44 24 38	 mov	 DWORD PTR nType$[rsp], eax
$LN9@simple_vm_:
; Line 76
  003cc	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  003d1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003e0	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 78
  003e5	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  003ea	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003f2	e8 00 00 00 00	 call	 simple_vm_oop_pushclassmodules
; Line 80
  003f7	4c 8b 44 24 28	 mov	 r8, QWORD PTR list$[rsp]
  003fc	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  00401	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00409	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00410	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 82
  00415	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  0041a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00422	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00429	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0042e	48 89 44 24 68	 mov	 QWORD PTR list3$[rsp], rax
; Line 84
  00433	4c 8b 44 24 68	 mov	 r8, QWORD PTR list3$[rsp]
  00438	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82464
  0043f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00447	e8 00 00 00 00	 call	 simple_vm_newvar2
  0044c	48 89 44 24 58	 mov	 QWORD PTR pSelf$[rsp], rax
; Line 85
  00451	41 b9 04 00 00
	00		 mov	 r9d, 4
  00457	41 b8 02 00 00
	00		 mov	 r8d, 2
  0045d	48 8b 54 24 58	 mov	 rdx, QWORD PTR pSelf$[rsp]
  00462	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0046a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00471	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 86
  00476	83 7c 24 38 01	 cmp	 DWORD PTR nType$[rsp], 1
  0047b	75 26		 jne	 SHORT $LN5@simple_vm_
; Line 87
  0047d	4c 8b 4c 24 30	 mov	 r9, QWORD PTR var$[rsp]
  00482	41 b8 03 00 00
	00		 mov	 r8d, 3
  00488	48 8b 54 24 58	 mov	 rdx, QWORD PTR pSelf$[rsp]
  0048d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00495	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0049c	e8 00 00 00 00	 call	 simple_list_setpointer_gc
  004a1	eb 2b		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 89
  004a3	83 7c 24 38 02	 cmp	 DWORD PTR nType$[rsp], 2
  004a8	75 24		 jne	 SHORT $LN3@simple_vm_
; Line 90
  004aa	4c 8b 4c 24 60	 mov	 r9, QWORD PTR pItem$[rsp]
  004af	41 b8 03 00 00
	00		 mov	 r8d, 3
  004b5	48 8b 54 24 58	 mov	 rdx, QWORD PTR pSelf$[rsp]
  004ba	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004c2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004c9	e8 00 00 00 00	 call	 simple_list_setpointer_gc
$LN3@simple_vm_:
$LN4@simple_vm_:
; Line 92
  004ce	44 8b 4c 24 38	 mov	 r9d, DWORD PTR nType$[rsp]
  004d3	41 b8 04 00 00
	00		 mov	 r8d, 4
  004d9	48 8b 54 24 58	 mov	 rdx, QWORD PTR pSelf$[rsp]
  004de	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004e6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004ed	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 94
  004f2	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004fa	8b 10		 mov	 edx, DWORD PTR [rax]
  004fc	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00504	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 96
  00509	ba 03 00 00 00	 mov	 edx, 3
  0050e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00513	e8 00 00 00 00	 call	 simple_list_getitem
  00518	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0051c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82469
  00523	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00526	e8 00 00 00 00	 call	 strcmp
  0052b	85 c0		 test	 eax, eax
  0052d	74 25		 je	 SHORT $LN2@simple_vm_
; Line 97
  0052f	8b 54 24 50	 mov	 edx, DWORD PTR nClassPC$[rsp]
  00533	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0053b	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 98
  00540	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00545	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0054d	e8 00 00 00 00	 call	 simple_vm_oop_parentinit
; Line 100
  00552	eb 0e		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 101
  00554	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0055c	8b 4c 24 50	 mov	 ecx, DWORD PTR nClassPC$[rsp]
  00560	89 08		 mov	 DWORD PTR [rax], ecx
$LN1@simple_vm_:
; Line 104
  00562	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0056a	48 8b 90 c0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6336]
  00571	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00579	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00580	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00585	48 89 44 24 20	 mov	 QWORD PTR list4$[rsp], rax
; Line 105
  0058a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00592	4c 8b 80 40 18
	00 00		 mov	 r8, QWORD PTR [rax+6208]
  00599	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  0059e	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005a6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005ad	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 107
  005b2	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005ba	44 8b 80 6c 18
	00 00		 mov	 r8d, DWORD PTR [rax+6252]
  005c1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  005c6	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005ce	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005d5	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 108
  005da	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005e2	4c 8b 80 70 18
	00 00		 mov	 r8, QWORD PTR [rax+6256]
  005e9	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  005ee	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005f6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005fd	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 109
  00602	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0060a	c7 80 6c 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6252], 0
; Line 110
  00614	33 d2		 xor	 edx, edx
  00616	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0061e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00625	e8 00 00 00 00	 call	 simple_list_new_gc
  0062a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00632	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 112
  00639	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00641	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00648	44 8b c0	 mov	 r8d, eax
  0064b	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00650	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00658	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0065f	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 114
  00664	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0066c	44 8b 80 94 18
	00 00		 mov	 r8d, DWORD PTR [rax+6292]
  00673	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00678	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00680	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00687	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 115
  0068c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00694	c7 80 94 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6292], 0
; Line 117
  0069e	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006a6	0f be 80 10 19
	00 00		 movsx	 eax, BYTE PTR [rax+6416]
  006ad	44 8b c0	 mov	 r8d, eax
  006b0	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  006b5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006bd	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006c4	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 119
  006c9	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006d1	0f be 80 00 19
	00 00		 movsx	 eax, BYTE PTR [rax+6400]
  006d8	44 8b c0	 mov	 r8d, eax
  006db	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  006e0	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006e8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006ef	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 120
  006f4	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  006fc	c6 80 00 19 00
	00 00		 mov	 BYTE PTR [rax+6400], 0
; Line 121
  00703	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0070b	4c 8b 80 d8 18
	00 00		 mov	 r8, QWORD PTR [rax+6360]
  00712	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00717	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0071f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00726	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 123
  0072b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00733	0f be 80 b9 19
	00 00		 movsx	 eax, BYTE PTR [rax+6585]
  0073a	44 8b c0	 mov	 r8d, eax
  0073d	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00742	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0074a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00751	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 124
  00756	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0075e	c6 80 b9 19 00
	00 00		 mov	 BYTE PTR [rax+6585], 0
; Line 126
  00765	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0076d	44 8b 80 68 18
	00 00		 mov	 r8d, DWORD PTR [rax+6248]
  00774	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00779	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00781	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00788	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 128
  0078d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00795	44 8b 80 90 18
	00 00		 mov	 r8d, DWORD PTR [rax+6288]
  0079c	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  007a1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007a9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  007b0	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 130
  007b5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007bd	4c 8b 80 30 19
	00 00		 mov	 r8, QWORD PTR [rax+6448]
  007c4	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  007c9	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007d1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  007d8	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 132
  007dd	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  007e5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  007ec	48 6b c0 18	 imul	 rax, 24
  007f0	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  007f8	4c 8b 44 01 38	 mov	 r8, QWORD PTR [rcx+rax+56]
  007fd	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00802	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0080a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00811	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 133
  00816	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0081e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00825	48 6b c0 18	 imul	 rax, 24
  00829	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00831	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00835	c1 e8 05	 shr	 eax, 5
  00838	83 e0 03	 and	 eax, 3
  0083b	44 8b c0	 mov	 r8d, eax
  0083e	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  00843	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0084b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00852	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 135
  00857	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0085f	44 8b 80 18 1a
	00 00		 mov	 r8d, DWORD PTR [rax+6680]
  00866	48 8b 54 24 20	 mov	 rdx, QWORD PTR list4$[rsp]
  0086b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00873	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0087a	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 137
  0087f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00887	48 8b 4c 24 68	 mov	 rcx, QWORD PTR list3$[rsp]
  0088c	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 139
  00893	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0089b	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  008a2	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  008aa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  008b1	e8 00 00 00 00	 call	 simple_list_newlist_gc
  008b6	48 89 44 24 70	 mov	 QWORD PTR list5$[rsp], rax
; Line 140
  008bb	4c 8b 44 24 68	 mov	 r8, QWORD PTR list3$[rsp]
  008c0	48 8b 54 24 70	 mov	 rdx, QWORD PTR list5$[rsp]
  008c5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  008cd	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  008d4	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 141
  008d9	45 33 c0	 xor	 r8d, r8d
  008dc	48 8b 54 24 70	 mov	 rdx, QWORD PTR list5$[rsp]
  008e1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  008e9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  008f0	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 142
  008f5	4c 8b 44 24 28	 mov	 r8, QWORD PTR list$[rsp]
  008fa	48 8b 54 24 70	 mov	 rdx, QWORD PTR list5$[rsp]
  008ff	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00907	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0090e	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 144
  00913	4c 8b 44 24 28	 mov	 r8, QWORD PTR list$[rsp]
  00918	48 8b 54 24 68	 mov	 rdx, QWORD PTR list3$[rsp]
  0091d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00925	e8 00 00 00 00	 call	 simple_vm_oop_newsuperobj
; Line 146
  0092a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00932	0f b6 80 01 19
	00 00		 movzx	 eax, BYTE PTR [rax+6401]
  00939	fe c0		 inc	 al
  0093b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00943	88 81 01 19 00
	00		 mov	 BYTE PTR [rcx+6401], al
; Line 148
  00949	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00951	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list2$[rsp]
  00956	48 89 88 d8 18
	00 00		 mov	 QWORD PTR [rax+6360], rcx
; Line 149
  0095d	eb 1e		 jmp	 SHORT $LN20@simple_vm_
$LN14@simple_vm_:
; Line 151
  0095f	e9 20 f7 ff ff	 jmp	 $LN17@simple_vm_
$LN16@simple_vm_:
$LN19@simple_vm_:
; Line 153
  00964	4c 8b 44 24 78	 mov	 r8, QWORD PTR cClassName$[rsp]
  00969	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82472
  00970	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00978	e8 00 00 00 00	 call	 simple_vm_error2
$LN20@simple_vm_:
; Line 154
  0097d	48 81 c4 98 00
	00 00		 add	 rsp, 152		; 00000098H
  00984	c3		 ret	 0
simple_vm_oop_newobj ENDP
_TEXT	ENDS
END
