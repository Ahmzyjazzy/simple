; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82673 DB	01H DUP (?)
$SG82921 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82955 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82974 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82982 DB	'Bad parameter type!', 00H
$SG82438 DB	'add', 00H
$SG82991 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG83002 DB	'Bad parameter type!', 00H
$SG82603 DB	'int', 00H
$SG82437 DB	'lengthOf', 00H
	ORG $+3
$SG82439 DB	'char', 00H
	ORG $+3
$SG82443 DB	'isList', 00H
	ORG $+5
$SG82440 DB	'getSimpleVersion', 00H
	ORG $+7
$SG82441 DB	'isString', 00H
	ORG $+7
$SG82442 DB	'isNumber', 00H
	ORG $+7
$SG82444 DB	'getType', 00H
$SG82445 DB	'isNull', 00H
	ORG $+1
$SG82446 DB	'isObject', 00H
	ORG $+7
$SG82447 DB	'executeCode', 00H
	ORG $+4
$SG82448 DB	'display', 00H
$SG82449 DB	'read', 00H
	ORG $+3
$SG82489 DB	'simple_sys_temp', 00H
$SG82544 DB	'Error in parameter, NULL pointer!', 00H
	ORG $+6
$SG82547 DB	'Bad parameter type!', 00H
	ORG $+4
$SG82551 DB	'NULLPOINTER', 00H
	ORG $+4
$SG82554 DB	'Error in parameter, NULL pointer!', 00H
	ORG $+6
$SG82557 DB	'Error in parameter, not pointer!', 00H
	ORG $+7
$SG82595 DB	'RUNTIME ERROR 5 : A variable is required', 00H
	ORG $+3
$SG82600 DB	'double', 00H
	ORG $+5
$SG82618 DB	'RUNTIME ERROR 5 : A variable is required', 00H
	ORG $+7
$SG82681 DB	'NULLPOINTER', 00H
	ORG $+4
$SG82714 DB	'Error in parameter, NULL pointer!', 00H
	ORG $+6
$SG82717 DB	'Bad parameter type!', 00H
	ORG $+4
$SG82721 DB	'NULLPOINTER', 00H
	ORG $+4
$SG82724 DB	'Error in parameter, NULL pointer!', 00H
	ORG $+6
$SG82727 DB	'Error in parameter, not pointer!', 00H
	ORG $+7
$SG82747 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82766 DB	'lengthOf', 00H
	ORG $+7
$SG82769 DB	'Bad parameter type!', 00H
	ORG $+4
$SG82780 DB	'Bad parameters count, the block expect two parameters', 00H
	ORG $+2
$SG82807 DB	'Bad parameter type!', 00H
$SG82814 DB	'0.3.35', 00H
	ORG $+5
$SG82821 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82837 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82853 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82871 DB	'Bad parameters count, the block expect one parameter', 00H
	ORG $+3
$SG82877 DB	'STRING', 00H
	ORG $+1
$SG82884 DB	'NUMBER', 00H
	ORG $+1
$SG82896 DB	'OBJECT', 00H
	ORG $+1
$SG82903 DB	'LIST', 00H
	ORG $+3
$SG82908 DB	'UNKNOWN', 00H
$SG82916 DB	'Bad parameters count, the block expect one parameter', 00H
_DATA	ENDS
PUBLIC	register_block_t
PUBLIC	loadcblocks
PUBLIC	api_get_list
PUBLIC	api_is_list
PUBLIC	api_ret_list
PUBLIC	api_new_list
PUBLIC	api_ret_cpointer
PUBLIC	api_get_cpointer
PUBLIC	api_set_cpointer_null
PUBLIC	api_var_ptr
PUBLIC	api_int_value
PUBLIC	list_add_cpointer
PUBLIC	api_iscpointer_list
PUBLIC	api_is_cpointer
PUBLIC	api_is_object
PUBLIC	api_cpointer_cmp
PUBLIC	api_is_pointer
PUBLIC	api_get_cpointer2pointer
PUBLIC	list_add_cpointer_gc
PUBLIC	simple_vmlib_len
PUBLIC	simple_vmlib_add
PUBLIC	simple_vmlib_version
PUBLIC	simple_vmlib_isstring
PUBLIC	simple_vmlib_isnumber
PUBLIC	simple_vmlib_islist
PUBLIC	simple_vmlib_type
PUBLIC	simple_vmlib_isnull
PUBLIC	simple_vmlib_isobject
PUBLIC	simple_vmlib_exec
PUBLIC	simple_vmlib_char
PUBLIC	__real@3ff0000000000000
EXTRN	__report_rangecheckfailure:PROC
EXTRN	strcmp:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_itemarray_setpointer:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_setpointer_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_addblockpointer_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_addstring2_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_isnumber:PROC
EXTRN	simple_list_isstring:PROC
EXTRN	simple_list_ispointer:PROC
EXTRN	simple_list_addint:PROC
EXTRN	simple_list_addpointer:PROC
EXTRN	simple_list_addstring:PROC
EXTRN	simple_list_newlist:PROC
EXTRN	simple_list_copy:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_exec:PROC
EXTRN	simple_vm_expr_npoo:PROC
EXTRN	simple_vm_addlisttolist:PROC
EXTRN	simple_vm_findvar:PROC
EXTRN	simple_vm_newvar2:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_gc_newitemreference:PROC
EXTRN	display_string:PROC
EXTRN	read_string:PROC
EXTRN	simple_vm_dll_loadblocks:PROC
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$register_block_t DD imagerel $LN4
	DD	imagerel $LN4+121
	DD	imagerel $unwind$register_block_t
$pdata$loadcblocks DD imagerel $LN3
	DD	imagerel $LN3+336
	DD	imagerel $unwind$loadcblocks
$pdata$api_get_list DD imagerel $LN7
	DD	imagerel $LN7+213
	DD	imagerel $unwind$api_get_list
$pdata$api_is_list DD imagerel $LN6
	DD	imagerel $LN6+100
	DD	imagerel $unwind$api_is_list
$pdata$api_ret_list DD imagerel $LN3
	DD	imagerel $LN3+308
	DD	imagerel $unwind$api_ret_list
$pdata$api_new_list DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$api_new_list
$pdata$api_ret_cpointer DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$api_ret_cpointer
$pdata$api_get_cpointer DD imagerel $LN17
	DD	imagerel $LN17+530
	DD	imagerel $unwind$api_get_cpointer
$pdata$api_set_cpointer_null DD imagerel $LN9
	DD	imagerel $LN9+266
	DD	imagerel $unwind$api_set_cpointer_null
$pdata$api_var_ptr DD imagerel $LN10
	DD	imagerel $LN10+398
	DD	imagerel $unwind$api_var_ptr
$pdata$api_int_value DD imagerel $LN5
	DD	imagerel $LN5+184
	DD	imagerel $unwind$api_int_value
$pdata$list_add_cpointer DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$list_add_cpointer
$pdata$api_iscpointer_list DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$api_iscpointer_list
$pdata$api_is_cpointer DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$api_is_cpointer
$pdata$api_is_object DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$api_is_object
$pdata$api_cpointer_cmp DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$api_cpointer_cmp
$pdata$api_is_pointer DD imagerel $LN7
	DD	imagerel $LN7+407
	DD	imagerel $unwind$api_is_pointer
$pdata$api_get_cpointer2pointer DD imagerel $LN17
	DD	imagerel $LN17+550
	DD	imagerel $unwind$api_get_cpointer2pointer
$pdata$list_add_cpointer_gc DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$list_add_cpointer_gc
$pdata$simple_vmlib_len DD imagerel $LN10
	DD	imagerel $LN10+602
	DD	imagerel $unwind$simple_vmlib_len
$pdata$simple_vmlib_add DD imagerel $LN11
	DD	imagerel $LN11+718
	DD	imagerel $unwind$simple_vmlib_add
$pdata$simple_vmlib_version DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$simple_vmlib_version
$pdata$simple_vmlib_isstring DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$simple_vmlib_isstring
$pdata$simple_vmlib_isnumber DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$simple_vmlib_isnumber
$pdata$simple_vmlib_islist DD imagerel $LN6
	DD	imagerel $LN6+215
	DD	imagerel $unwind$simple_vmlib_islist
$pdata$simple_vmlib_type DD imagerel $LN14
	DD	imagerel $LN14+615
	DD	imagerel $unwind$simple_vmlib_type
$pdata$simple_vmlib_isnull DD imagerel $LN16
	DD	imagerel $LN16+762
	DD	imagerel $unwind$simple_vmlib_isnull
$pdata$simple_vmlib_isobject DD imagerel $LN6
	DD	imagerel $LN6+216
	DD	imagerel $unwind$simple_vmlib_isobject
$pdata$simple_vmlib_exec DD imagerel $LN7
	DD	imagerel $LN7+208
	DD	imagerel $unwind$simple_vmlib_exec
$pdata$simple_vmlib_char DD imagerel $LN8
	DD	imagerel $LN8+272
	DD	imagerel $unwind$simple_vmlib_char
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$register_block_t DD 011301H
	DD	06213H
$unwind$loadcblocks DD 010901H
	DD	04209H
$unwind$api_get_list DD 010d01H
	DD	0820dH
$unwind$api_is_list DD 010d01H
	DD	0620dH
$unwind$api_ret_list DD 010e01H
	DD	0820eH
$unwind$api_new_list DD 010901H
	DD	06209H
$unwind$api_ret_cpointer DD 011301H
	DD	06213H
$unwind$api_get_cpointer DD 011201H
	DD	08212H
$unwind$api_set_cpointer_null DD 010d01H
	DD	0820dH
$unwind$api_var_ptr DD 011301H
	DD	08213H
$unwind$api_int_value DD 010e01H
	DD	0820eH
$unwind$list_add_cpointer DD 011301H
	DD	06213H
$unwind$api_iscpointer_list DD 010901H
	DD	04209H
$unwind$api_is_cpointer DD 010d01H
	DD	0420dH
$unwind$api_is_object DD 010d01H
	DD	0420dH
$unwind$api_cpointer_cmp DD 010e01H
	DD	0620eH
$unwind$api_is_pointer DD 010d01H
	DD	0820dH
$unwind$api_get_cpointer2pointer DD 011201H
	DD	0a212H
$unwind$list_add_cpointer_gc DD 011801H
	DD	06218H
$unwind$simple_vmlib_len DD 010901H
	DD	06209H
$unwind$simple_vmlib_add DD 010901H
	DD	0a209H
$unwind$simple_vmlib_version DD 010901H
	DD	04209H
$unwind$simple_vmlib_isstring DD 010901H
	DD	04209H
$unwind$simple_vmlib_isnumber DD 010901H
	DD	04209H
$unwind$simple_vmlib_islist DD 010901H
	DD	04209H
$unwind$simple_vmlib_type DD 010901H
	DD	06209H
$unwind$simple_vmlib_isnull DD 010901H
	DD	06209H
$unwind$simple_vmlib_isobject DD 010901H
	DD	04209H
$unwind$simple_vmlib_exec DD 010901H
	DD	06209H
$unwind$simple_vmlib_char DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr$ = 32
x$ = 36
$T1 = 40
pointer$ = 64
simple_vmlib_char PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 600
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 603
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN3@simple_vml
; Line 604
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82991
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 605
  00028	e9 de 00 00 00	 jmp	 $LN4@simple_vml
$LN3@simple_vml:
; Line 607
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isnumber
  00050	85 c0		 test	 eax, eax
  00052	0f 84 a2 00 00
	00		 je	 $LN2@simple_vml
; Line 608
  00058	ba 01 00 00 00	 mov	 edx, 1
  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00062	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00069	e8 00 00 00 00	 call	 simple_list_getlist
  0006e	ba 03 00 00 00	 mov	 edx, 3
  00073	48 8b c8	 mov	 rcx, rax
  00076	e8 00 00 00 00	 call	 simple_list_getitem
  0007b	f2 0f 2c 40 08	 cvttsd2si eax, QWORD PTR [rax+8]
  00080	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 609
  00084	b8 01 00 00 00	 mov	 eax, 1
  00089	48 6b c0 00	 imul	 rax, 0
  0008d	0f b6 4c 24 24	 movzx	 ecx, BYTE PTR x$[rsp]
  00092	88 4c 04 20	 mov	 BYTE PTR cStr$[rsp+rax], cl
; Line 610
  00096	48 c7 44 24 28
	01 00 00 00	 mov	 QWORD PTR $T1[rsp], 1
  0009f	48 83 7c 24 28
	02		 cmp	 QWORD PTR $T1[rsp], 2
  000a5	73 02		 jae	 SHORT $LN6@simple_vml
  000a7	eb 05		 jmp	 SHORT $LN7@simple_vml
$LN6@simple_vml:
  000a9	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN7@simple_vml:
  000ae	48 8b 44 24 28	 mov	 rax, QWORD PTR $T1[rsp]
  000b3	c6 44 04 20 00	 mov	 BYTE PTR cStr$[rsp+rax], 0
; Line 611
  000b8	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000bd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c4	fe c0		 inc	 al
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000cb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000d1	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000d6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000e2	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000e6	41 b9 01 00 00
	00		 mov	 r9d, 1
  000ec	4c 8d 44 24 20	 lea	 r8, QWORD PTR cStr$[rsp]
  000f1	8b d0		 mov	 edx, eax
  000f3	e8 00 00 00 00	 call	 simple_itemarray_setstring2
; Line 612
  000f8	eb 11		 jmp	 SHORT $LN1@simple_vml
$LN2@simple_vml:
; Line 613
  000fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83002
  00101	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00106	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vml:
$LN4@simple_vml:
$LN5@simple_vml:
; Line 615
  0010b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0010f	c3		 ret	 0
simple_vmlib_char ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 32
cStr$ = 40
pointer$ = 64
simple_vmlib_exec PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 576
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 579
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN4@simple_vml
; Line 580
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82974
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 581
  00028	e9 9e 00 00 00	 jmp	 $LN5@simple_vml
$LN4@simple_vml:
; Line 583
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isstring
  00050	85 c0		 test	 eax, eax
  00052	74 66		 je	 SHORT $LN3@simple_vml
; Line 584
  00054	ba 01 00 00 00	 mov	 edx, 1
  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0005e	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00065	e8 00 00 00 00	 call	 simple_list_getlist
  0006a	ba 03 00 00 00	 mov	 edx, 3
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 simple_list_getitem
  00077	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007e	48 89 44 24 28	 mov	 QWORD PTR cStr$[rsp], rax
; Line 585
  00083	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00088	48 89 44 24 20	 mov	 QWORD PTR vm$[rsp], rax
; Line 586
  0008d	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00092	c6 80 80 19 00
	00 01		 mov	 BYTE PTR [rax+6528], 1
; Line 587
  00099	48 8b 54 24 28	 mov	 rdx, QWORD PTR cStr$[rsp]
  0009e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  000a3	e8 00 00 00 00	 call	 simple_vm_exec
  000a8	85 c0		 test	 eax, eax
  000aa	75 0c		 jne	 SHORT $LN2@simple_vml
; Line 588
  000ac	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  000b1	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
$LN2@simple_vml:
; Line 594
  000b8	eb 11		 jmp	 SHORT $LN1@simple_vml
$LN3@simple_vml:
; Line 595
  000ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82982
  000c1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000c6	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vml:
$LN5@simple_vml:
; Line 597
  000cb	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000cf	c3		 ret	 0
simple_vmlib_exec ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
simple_vmlib_isobject PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 559
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 560
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN3@simple_vml
; Line 561
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82955
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 562
  00028	e9 a6 00 00 00	 jmp	 $LN4@simple_vml
$LN3@simple_vml:
; Line 564
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00037	e8 00 00 00 00	 call	 api_is_list
  0003c	85 c0		 test	 eax, eax
  0003e	74 5b		 je	 SHORT $LN2@simple_vml
; Line 565
  00040	ba 01 00 00 00	 mov	 edx, 1
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0004a	e8 00 00 00 00	 call	 api_get_list
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00057	83 f8 01	 cmp	 eax, 1
  0005a	75 3f		 jne	 SHORT $LN1@simple_vml
; Line 566
  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00061	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00068	fe c0		 inc	 al
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0006f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0007a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00081	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00086	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0008a	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00092	8b d0		 mov	 edx, eax
  00094	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 567
  00099	eb 38		 jmp	 SHORT $LN4@simple_vml
$LN1@simple_vml:
$LN2@simple_vml:
; Line 570
  0009b	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	fe c0		 inc	 al
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000ae	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000b4	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  000b9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000c5	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c9	0f 57 d2	 xorps	 xmm2, xmm2
  000cc	8b d0		 mov	 edx, eax
  000ce	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN4@simple_vml:
; Line 571
  000d3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000d7	c3		 ret	 0
simple_vmlib_isobject ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr$ = 32
pointer$ = 64
simple_vmlib_isnull PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 530
$LN16:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 532
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN13@simple_vml
; Line 533
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82916
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 534
  00028	e9 c8 02 00 00	 jmp	 $LN14@simple_vml
$LN13@simple_vml:
; Line 536
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isstring
  00050	85 c0		 test	 eax, eax
  00052	0f 84 e9 01 00
	00		 je	 $LN12@simple_vml
; Line 537
  00058	ba 01 00 00 00	 mov	 edx, 1
  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00062	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00069	e8 00 00 00 00	 call	 simple_list_getlist
  0006e	ba 03 00 00 00	 mov	 edx, 3
  00073	48 8b c8	 mov	 rcx, rax
  00076	e8 00 00 00 00	 call	 simple_list_getitem
  0007b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82921
  00086	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00089	e8 00 00 00 00	 call	 strcmp
  0008e	85 c0		 test	 eax, eax
  00090	75 47		 jne	 SHORT $LN11@simple_vml
; Line 538
  00092	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00097	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009e	fe c0		 inc	 al
  000a0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000a5	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000ab	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000bc	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c0	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 539
  000cf	e9 21 02 00 00	 jmp	 $LN14@simple_vml
  000d4	e9 66 01 00 00	 jmp	 $LN10@simple_vml
$LN11@simple_vml:
; Line 541
  000d9	ba 01 00 00 00	 mov	 edx, 1
  000de	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000e3	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  000ea	e8 00 00 00 00	 call	 simple_list_getlist
  000ef	ba 03 00 00 00	 mov	 edx, 3
  000f4	48 8b c8	 mov	 rcx, rax
  000f7	e8 00 00 00 00	 call	 simple_list_getitem
  000fc	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00100	e8 00 00 00 00	 call	 simple_string_size
  00105	83 f8 04	 cmp	 eax, 4
  00108	0f 85 31 01 00
	00		 jne	 $LN9@simple_vml
; Line 542
  0010e	ba 01 00 00 00	 mov	 edx, 1
  00113	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00118	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0011f	e8 00 00 00 00	 call	 simple_list_getlist
  00124	ba 03 00 00 00	 mov	 edx, 3
  00129	48 8b c8	 mov	 rcx, rax
  0012c	e8 00 00 00 00	 call	 simple_list_getitem
  00131	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00135	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00138	48 89 44 24 20	 mov	 QWORD PTR cStr$[rsp], rax
; Line 543
  0013d	b8 01 00 00 00	 mov	 eax, 1
  00142	48 6b c0 00	 imul	 rax, 0
  00146	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  0014b	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  0014f	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  00152	74 1b		 je	 SHORT $LN7@simple_vml
  00154	b8 01 00 00 00	 mov	 eax, 1
  00159	48 6b c0 00	 imul	 rax, 0
  0015d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  00162	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00166	83 f8 4e	 cmp	 eax, 78			; 0000004eH
  00169	0f 85 d0 00 00
	00		 jne	 $LN8@simple_vml
$LN7@simple_vml:
  0016f	b8 01 00 00 00	 mov	 eax, 1
  00174	48 6b c0 01	 imul	 rax, 1
  00178	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  0017d	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00181	83 f8 75	 cmp	 eax, 117		; 00000075H
  00184	74 1b		 je	 SHORT $LN6@simple_vml
  00186	b8 01 00 00 00	 mov	 eax, 1
  0018b	48 6b c0 01	 imul	 rax, 1
  0018f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  00194	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00198	83 f8 55	 cmp	 eax, 85			; 00000055H
  0019b	0f 85 9e 00 00
	00		 jne	 $LN8@simple_vml
$LN6@simple_vml:
  001a1	b8 01 00 00 00	 mov	 eax, 1
  001a6	48 6b c0 02	 imul	 rax, 2
  001aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  001af	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  001b3	83 f8 6c	 cmp	 eax, 108		; 0000006cH
  001b6	74 17		 je	 SHORT $LN5@simple_vml
  001b8	b8 01 00 00 00	 mov	 eax, 1
  001bd	48 6b c0 02	 imul	 rax, 2
  001c1	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  001c6	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  001ca	83 f8 4c	 cmp	 eax, 76			; 0000004cH
  001cd	75 70		 jne	 SHORT $LN8@simple_vml
$LN5@simple_vml:
  001cf	b8 01 00 00 00	 mov	 eax, 1
  001d4	48 6b c0 03	 imul	 rax, 3
  001d8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  001dd	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  001e1	83 f8 6c	 cmp	 eax, 108		; 0000006cH
  001e4	74 17		 je	 SHORT $LN4@simple_vml
  001e6	b8 01 00 00 00	 mov	 eax, 1
  001eb	48 6b c0 03	 imul	 rax, 3
  001ef	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr$[rsp]
  001f4	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  001f8	83 f8 4c	 cmp	 eax, 76			; 0000004cH
  001fb	75 42		 jne	 SHORT $LN8@simple_vml
$LN4@simple_vml:
; Line 544
  001fd	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00202	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00209	fe c0		 inc	 al
  0020b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00210	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00216	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0021b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00222	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00227	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0022b	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00233	8b d0		 mov	 edx, eax
  00235	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 545
  0023a	e9 b6 00 00 00	 jmp	 $LN14@simple_vml
$LN8@simple_vml:
$LN9@simple_vml:
$LN10@simple_vml:
; Line 547
  0023f	eb 7c		 jmp	 SHORT $LN3@simple_vml
$LN12@simple_vml:
; Line 549
  00241	ba 01 00 00 00	 mov	 edx, 1
  00246	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0024b	e8 00 00 00 00	 call	 api_is_pointer
  00250	85 c0		 test	 eax, eax
  00252	74 69		 je	 SHORT $LN2@simple_vml
; Line 550
  00254	ba 01 00 00 00	 mov	 edx, 1
  00259	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0025e	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00265	e8 00 00 00 00	 call	 simple_list_getlist
  0026a	ba 03 00 00 00	 mov	 edx, 3
  0026f	48 8b c8	 mov	 rcx, rax
  00272	e8 00 00 00 00	 call	 simple_list_getitem
  00277	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0027c	75 3f		 jne	 SHORT $LN1@simple_vml
; Line 551
  0027e	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00283	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0028a	fe c0		 inc	 al
  0028c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00291	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00297	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0029c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002a3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  002a8	48 83 c1 30	 add	 rcx, 48			; 00000030H
  002ac	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  002b4	8b d0		 mov	 edx, eax
  002b6	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 552
  002bb	eb 38		 jmp	 SHORT $LN14@simple_vml
$LN1@simple_vml:
$LN2@simple_vml:
$LN3@simple_vml:
; Line 555
  002bd	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  002c2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002c9	fe c0		 inc	 al
  002cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  002d0	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  002d6	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  002db	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  002e7	48 83 c1 30	 add	 rcx, 48			; 00000030H
  002eb	0f 57 d2	 xorps	 xmm2, xmm2
  002ee	8b d0		 mov	 edx, eax
  002f0	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN14@simple_vml:
; Line 556
  002f5	48 83 c4 38	 add	 rsp, 56			; 00000038H
  002f9	c3		 ret	 0
simple_vmlib_isnull ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
tv156 = 40
pointer$ = 64
simple_vmlib_type PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 502
$LN14:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 504
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN11@simple_vml
; Line 505
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82871
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 506
  00028	e9 35 02 00 00	 jmp	 $LN12@simple_vml
$LN11@simple_vml:
; Line 509
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isstring
  00050	85 c0		 test	 eax, eax
  00052	74 41		 je	 SHORT $LN10@simple_vml
; Line 510
  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00059	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00060	fe c0		 inc	 al
  00062	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00067	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0006d	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00072	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00079	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0007e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00082	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82877
  00089	8b d0		 mov	 edx, eax
  0008b	e8 00 00 00 00	 call	 simple_itemarray_setstring
  00090	e9 cd 01 00 00	 jmp	 $LN9@simple_vml
$LN10@simple_vml:
; Line 512
  00095	ba 01 00 00 00	 mov	 edx, 1
  0009a	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0009f	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  000a6	e8 00 00 00 00	 call	 simple_list_getlist
  000ab	ba 03 00 00 00	 mov	 edx, 3
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 simple_list_isnumber
  000b8	85 c0		 test	 eax, eax
  000ba	74 41		 je	 SHORT $LN8@simple_vml
; Line 513
  000bc	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c8	fe c0		 inc	 al
  000ca	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000cf	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000d5	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000da	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000e6	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000ea	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82884
  000f1	8b d0		 mov	 edx, eax
  000f3	e8 00 00 00 00	 call	 simple_itemarray_setstring
  000f8	e9 65 01 00 00	 jmp	 $LN7@simple_vml
$LN8@simple_vml:
; Line 515
  000fd	ba 01 00 00 00	 mov	 edx, 1
  00102	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00107	e8 00 00 00 00	 call	 api_is_cpointer
  0010c	85 c0		 test	 eax, eax
  0010e	74 71		 je	 SHORT $LN6@simple_vml
; Line 516
  00110	ba 01 00 00 00	 mov	 edx, 1
  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0011a	e8 00 00 00 00	 call	 api_get_list
  0011f	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 517
  00124	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00129	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00130	fe c0		 inc	 al
  00132	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00137	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0013d	ba 02 00 00 00	 mov	 edx, 2
  00142	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00147	e8 00 00 00 00	 call	 simple_list_getitem
  0014c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00150	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00155	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0015c	48 8b 54 24 40	 mov	 rdx, QWORD PTR pointer$[rsp]
  00161	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00165	48 89 54 24 28	 mov	 QWORD PTR tv156[rsp], rdx
  0016a	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0016d	8b d1		 mov	 edx, ecx
  0016f	48 8b 44 24 28	 mov	 rax, QWORD PTR tv156[rsp]
  00174	48 8b c8	 mov	 rcx, rax
  00177	e8 00 00 00 00	 call	 simple_itemarray_setstring
  0017c	e9 e1 00 00 00	 jmp	 $LN5@simple_vml
$LN6@simple_vml:
; Line 519
  00181	ba 01 00 00 00	 mov	 edx, 1
  00186	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0018b	e8 00 00 00 00	 call	 api_is_object
  00190	85 c0		 test	 eax, eax
  00192	74 41		 je	 SHORT $LN4@simple_vml
; Line 520
  00194	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00199	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a0	fe c0		 inc	 al
  001a2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  001a7	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  001ad	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  001be	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001c2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82896
  001c9	8b d0		 mov	 edx, eax
  001cb	e8 00 00 00 00	 call	 simple_itemarray_setstring
  001d0	e9 8d 00 00 00	 jmp	 $LN3@simple_vml
$LN4@simple_vml:
; Line 522
  001d5	ba 01 00 00 00	 mov	 edx, 1
  001da	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  001df	e8 00 00 00 00	 call	 api_is_list
  001e4	85 c0		 test	 eax, eax
  001e6	74 3e		 je	 SHORT $LN2@simple_vml
; Line 523
  001e8	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  001ed	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001f4	fe c0		 inc	 al
  001f6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  001fb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00201	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00206	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0020d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00212	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00216	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82903
  0021d	8b d0		 mov	 edx, eax
  0021f	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 524
  00224	eb 3c		 jmp	 SHORT $LN1@simple_vml
$LN2@simple_vml:
; Line 525
  00226	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0022b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00232	fe c0		 inc	 al
  00234	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00239	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0023f	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00244	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0024b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00250	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00254	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82908
  0025b	8b d0		 mov	 edx, eax
  0025d	e8 00 00 00 00	 call	 simple_itemarray_setstring
$LN1@simple_vml:
$LN3@simple_vml:
$LN5@simple_vml:
$LN7@simple_vml:
$LN9@simple_vml:
$LN12@simple_vml:
; Line 527
  00262	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00266	c3		 ret	 0
simple_vmlib_type ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
simple_vmlib_islist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 487
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 488
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN3@simple_vml
; Line 489
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82853
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 490
  00028	e9 a5 00 00 00	 jmp	 $LN4@simple_vml
$LN3@simple_vml:
; Line 492
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00037	e8 00 00 00 00	 call	 api_is_list
  0003c	85 c0		 test	 eax, eax
  0003e	74 5a		 je	 SHORT $LN2@simple_vml
; Line 493
  00040	ba 01 00 00 00	 mov	 edx, 1
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0004a	e8 00 00 00 00	 call	 api_get_list
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00057	85 c0		 test	 eax, eax
  00059	75 3f		 jne	 SHORT $LN1@simple_vml
; Line 494
  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00060	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00067	fe c0		 inc	 al
  00069	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0006e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00079	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00080	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00085	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00089	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00091	8b d0		 mov	 edx, eax
  00093	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 495
  00098	eb 38		 jmp	 SHORT $LN4@simple_vml
$LN1@simple_vml:
$LN2@simple_vml:
; Line 498
  0009a	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0009f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a6	fe c0		 inc	 al
  000a8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000ad	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000b3	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  000b8	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bf	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000c4	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c8	0f 57 d2	 xorps	 xmm2, xmm2
  000cb	8b d0		 mov	 edx, eax
  000cd	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN4@simple_vml:
; Line 499
  000d2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000d6	c3		 ret	 0
simple_vmlib_islist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
simple_vmlib_isnumber PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 474
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 475
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN3@simple_vml
; Line 476
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82837
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 477
  00028	e9 9e 00 00 00	 jmp	 $LN4@simple_vml
$LN3@simple_vml:
; Line 479
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isnumber
  00050	85 c0		 test	 eax, eax
  00052	74 3f		 je	 SHORT $LN2@simple_vml
; Line 480
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00059	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00060	fe c0		 inc	 al
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00067	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00072	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0007e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00082	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0008a	8b d0		 mov	 edx, eax
  0008c	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 481
  00091	eb 38		 jmp	 SHORT $LN1@simple_vml
$LN2@simple_vml:
; Line 482
  00093	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00098	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009f	fe c0		 inc	 al
  000a1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000a6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  000b1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000bd	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c1	0f 57 d2	 xorps	 xmm2, xmm2
  000c4	8b d0		 mov	 edx, eax
  000c6	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vml:
$LN4@simple_vml:
; Line 484
  000cb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cf	c3		 ret	 0
simple_vmlib_isnumber ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
simple_vmlib_isstring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 461
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 462
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  00015	74 16		 je	 SHORT $LN3@simple_vml
; Line 463
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82821
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00023	e8 00 00 00 00	 call	 simple_vm_error
; Line 464
  00028	e9 9e 00 00 00	 jmp	 $LN4@simple_vml
$LN3@simple_vml:
; Line 466
  0002d	ba 01 00 00 00	 mov	 edx, 1
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00037	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0003e	e8 00 00 00 00	 call	 simple_list_getlist
  00043	ba 03 00 00 00	 mov	 edx, 3
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 simple_list_isstring
  00050	85 c0		 test	 eax, eax
  00052	74 3f		 je	 SHORT $LN2@simple_vml
; Line 467
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00059	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00060	fe c0		 inc	 al
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00067	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00072	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0007e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00082	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0008a	8b d0		 mov	 edx, eax
  0008c	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 468
  00091	eb 38		 jmp	 SHORT $LN1@simple_vml
$LN2@simple_vml:
; Line 469
  00093	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00098	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009f	fe c0		 inc	 al
  000a1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000a6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  000b1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  000bd	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c1	0f 57 d2	 xorps	 xmm2, xmm2
  000c4	8b d0		 mov	 edx, eax
  000c6	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vml:
$LN4@simple_vml:
; Line 471
  000cb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cf	c3		 ret	 0
simple_vmlib_isstring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
simple_vmlib_version PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 454
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 455
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	fe c0		 inc	 al
  00017	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  0001c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR pointer$[rsp]
  00027	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00033	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82814
  0003e	8b d0		 mov	 edx, eax
  00040	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 456
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	c3		 ret	 0
simple_vmlib_version ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv83 = 32
tv143 = 36
list$ = 40
vm$ = 48
tv167 = 56
list2$ = 64
pointer$ = 96
simple_vmlib_add PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 426
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 429
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	48 89 44 24 30	 mov	 QWORD PTR vm$[rsp], rax
; Line 430
  00013	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00018	83 b8 88 19 00
	00 02		 cmp	 DWORD PTR [rax+6536], 2
  0001f	74 16		 je	 SHORT $LN8@simple_vml
; Line 431
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82780
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  0002d	e8 00 00 00 00	 call	 simple_vm_error
; Line 432
  00032	e9 92 02 00 00	 jmp	 $LN9@simple_vml
$LN8@simple_vml:
; Line 434
  00037	ba 01 00 00 00	 mov	 edx, 1
  0003c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00041	e8 00 00 00 00	 call	 api_is_list
  00046	85 c0		 test	 eax, eax
  00048	0f 84 6a 02 00
	00		 je	 $LN7@simple_vml
; Line 435
  0004e	ba 01 00 00 00	 mov	 edx, 1
  00053	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00058	e8 00 00 00 00	 call	 api_get_list
  0005d	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 436
  00062	ba 02 00 00 00	 mov	 edx, 2
  00067	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  0006c	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00073	e8 00 00 00 00	 call	 simple_list_getlist
  00078	ba 03 00 00 00	 mov	 edx, 3
  0007d	48 8b c8	 mov	 rcx, rax
  00080	e8 00 00 00 00	 call	 simple_list_isstring
  00085	85 c0		 test	 eax, eax
  00087	0f 84 20 01 00
	00		 je	 $LN6@simple_vml
; Line 437
  0008d	ba 02 00 00 00	 mov	 edx, 2
  00092	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00097	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0009e	e8 00 00 00 00	 call	 simple_list_getlist
  000a3	ba 03 00 00 00	 mov	 edx, 3
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 simple_list_getitem
  000b0	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000b4	e8 00 00 00 00	 call	 simple_string_size
  000b9	89 44 24 20	 mov	 DWORD PTR tv83[rsp], eax
  000bd	ba 02 00 00 00	 mov	 edx, 2
  000c2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  000c7	48 8b 89 40 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6208]
  000ce	e8 00 00 00 00	 call	 simple_list_getlist
  000d3	ba 03 00 00 00	 mov	 edx, 3
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 simple_list_getitem
  000e0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000e4	8b 4c 24 20	 mov	 ecx, DWORD PTR tv83[rsp]
  000e8	44 8b c9	 mov	 r9d, ecx
  000eb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000ee	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000f3	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000f8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ff	e8 00 00 00 00	 call	 simple_list_addstring2_gc
; Line 438
  00104	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00109	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00110	fe c0		 inc	 al
  00112	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00117	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0011d	ba 02 00 00 00	 mov	 edx, 2
  00122	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00127	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0012e	e8 00 00 00 00	 call	 simple_list_getlist
  00133	ba 03 00 00 00	 mov	 edx, 3
  00138	48 8b c8	 mov	 rcx, rax
  0013b	e8 00 00 00 00	 call	 simple_list_getitem
  00140	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00144	e8 00 00 00 00	 call	 simple_string_size
  00149	89 44 24 24	 mov	 DWORD PTR tv143[rsp], eax
  0014d	ba 02 00 00 00	 mov	 edx, 2
  00152	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00157	48 8b 89 40 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6208]
  0015e	e8 00 00 00 00	 call	 simple_list_getlist
  00163	ba 03 00 00 00	 mov	 edx, 3
  00168	48 8b c8	 mov	 rcx, rax
  0016b	e8 00 00 00 00	 call	 simple_list_getitem
  00170	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00174	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00179	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00180	48 8b 54 24 60	 mov	 rdx, QWORD PTR pointer$[rsp]
  00185	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00189	48 89 54 24 38	 mov	 QWORD PTR tv167[rsp], rdx
  0018e	44 8b 44 24 24	 mov	 r8d, DWORD PTR tv143[rsp]
  00193	45 8b c8	 mov	 r9d, r8d
  00196	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00199	8b d1		 mov	 edx, ecx
  0019b	48 8b 44 24 38	 mov	 rax, QWORD PTR tv167[rsp]
  001a0	48 8b c8	 mov	 rcx, rax
  001a3	e8 00 00 00 00	 call	 simple_itemarray_setstring2
  001a8	e9 09 01 00 00	 jmp	 $LN5@simple_vml
$LN6@simple_vml:
; Line 440
  001ad	ba 02 00 00 00	 mov	 edx, 2
  001b2	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  001b7	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  001be	e8 00 00 00 00	 call	 simple_list_getlist
  001c3	ba 03 00 00 00	 mov	 edx, 3
  001c8	48 8b c8	 mov	 rcx, rax
  001cb	e8 00 00 00 00	 call	 simple_list_isnumber
  001d0	85 c0		 test	 eax, eax
  001d2	0f 84 a3 00 00
	00		 je	 $LN4@simple_vml
; Line 441
  001d8	ba 02 00 00 00	 mov	 edx, 2
  001dd	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  001e2	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  001e9	e8 00 00 00 00	 call	 simple_list_getlist
  001ee	ba 03 00 00 00	 mov	 edx, 3
  001f3	48 8b c8	 mov	 rcx, rax
  001f6	e8 00 00 00 00	 call	 simple_list_getitem
  001fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00200	0f 28 d0	 movaps	 xmm2, xmm0
  00203	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00208	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0020d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00214	e8 00 00 00 00	 call	 simple_list_adddouble_gc
; Line 442
  00219	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  0021e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00225	fe c0		 inc	 al
  00227	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  0022c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00232	ba 02 00 00 00	 mov	 edx, 2
  00237	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  0023c	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00243	e8 00 00 00 00	 call	 simple_list_getlist
  00248	ba 03 00 00 00	 mov	 edx, 3
  0024d	48 8b c8	 mov	 rcx, rax
  00250	e8 00 00 00 00	 call	 simple_list_getitem
  00255	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0025a	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  0025f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00266	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  0026b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0026f	0f 28 d0	 movaps	 xmm2, xmm0
  00272	8b d0		 mov	 edx, eax
  00274	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00279	eb 3b		 jmp	 SHORT $LN3@simple_vml
$LN4@simple_vml:
; Line 444
  0027b	ba 02 00 00 00	 mov	 edx, 2
  00280	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00285	e8 00 00 00 00	 call	 api_is_list
  0028a	85 c0		 test	 eax, eax
  0028c	74 28		 je	 SHORT $LN2@simple_vml
; Line 445
  0028e	ba 02 00 00 00	 mov	 edx, 2
  00293	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00298	e8 00 00 00 00	 call	 api_get_list
  0029d	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
; Line 446
  002a2	4c 8b 44 24 28	 mov	 r8, QWORD PTR list$[rsp]
  002a7	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  002ac	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  002b1	e8 00 00 00 00	 call	 simple_vm_addlisttolist
$LN2@simple_vml:
$LN3@simple_vml:
$LN5@simple_vml:
; Line 448
  002b6	eb 11		 jmp	 SHORT $LN1@simple_vml
$LN7@simple_vml:
; Line 449
  002b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82807
  002bf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  002c4	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vml:
$LN9@simple_vml:
; Line 451
  002c9	48 83 c4 58	 add	 rsp, 88			; 00000058H
  002cd	c3		 ret	 0
simple_vmlib_add ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 32
tv172 = 40
pointer$ = 64
simple_vmlib_len PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 400
$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 402
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR vm$[rsp], rax
; Line 403
  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00018	83 b8 88 19 00
	00 01		 cmp	 DWORD PTR [rax+6536], 1
  0001f	74 16		 je	 SHORT $LN7@simple_vml
; Line 404
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82747
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0002d	e8 00 00 00 00	 call	 simple_vm_error
; Line 405
  00032	e9 1e 02 00 00	 jmp	 $LN8@simple_vml
$LN7@simple_vml:
; Line 407
  00037	ba 01 00 00 00	 mov	 edx, 1
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00041	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00048	e8 00 00 00 00	 call	 simple_list_getlist
  0004d	ba 03 00 00 00	 mov	 edx, 3
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 simple_list_isstring
  0005a	85 c0		 test	 eax, eax
  0005c	74 6f		 je	 SHORT $LN6@simple_vml
; Line 408
  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00063	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006a	fe c0		 inc	 al
  0006c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00071	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00077	ba 01 00 00 00	 mov	 edx, 1
  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00081	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00088	e8 00 00 00 00	 call	 simple_list_getlist
  0008d	ba 03 00 00 00	 mov	 edx, 3
  00092	48 8b c8	 mov	 rcx, rax
  00095	e8 00 00 00 00	 call	 simple_list_getitem
  0009a	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0009e	e8 00 00 00 00	 call	 simple_string_size
  000a3	ff c8		 dec	 eax
  000a5	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000a9	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  000ae	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000ba	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000be	0f 28 d0	 movaps	 xmm2, xmm0
  000c1	8b d0		 mov	 edx, eax
  000c3	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000c8	e9 88 01 00 00	 jmp	 $LN5@simple_vml
$LN6@simple_vml:
; Line 410
  000cd	ba 01 00 00 00	 mov	 edx, 1
  000d2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000d7	e8 00 00 00 00	 call	 api_is_list
  000dc	85 c0		 test	 eax, eax
  000de	0f 84 60 01 00
	00		 je	 $LN4@simple_vml
; Line 411
  000e4	ba 01 00 00 00	 mov	 edx, 1
  000e9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  000ee	e8 00 00 00 00	 call	 api_get_list
  000f3	48 8b c8	 mov	 rcx, rax
  000f6	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000fb	85 c0		 test	 eax, eax
  000fd	75 55		 jne	 SHORT $LN3@simple_vml
; Line 412
  000ff	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00104	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0010b	fe c0		 inc	 al
  0010d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00112	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00118	ba 01 00 00 00	 mov	 edx, 1
  0011d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00122	e8 00 00 00 00	 call	 api_get_list
  00127	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0012a	ff c8		 dec	 eax
  0012c	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00130	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00135	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0013c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00141	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00145	0f 28 d0	 movaps	 xmm2, xmm0
  00148	8b d0		 mov	 edx, eax
  0014a	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 414
  0014f	e9 ee 00 00 00	 jmp	 $LN2@simple_vml
$LN3@simple_vml:
; Line 415
  00154	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00159	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00160	fe c0		 inc	 al
  00162	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00167	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0016d	ba 01 00 00 00	 mov	 edx, 1
  00172	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00177	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0017e	e8 00 00 00 00	 call	 simple_list_getlist
  00183	ba 03 00 00 00	 mov	 edx, 3
  00188	48 8b c8	 mov	 rcx, rax
  0018b	e8 00 00 00 00	 call	 simple_list_getitem
  00190	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00195	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0019c	48 8b 54 24 20	 mov	 rdx, QWORD PTR vm$[rsp]
  001a1	48 83 c2 30	 add	 rdx, 48			; 00000030H
  001a5	48 89 54 24 28	 mov	 QWORD PTR tv172[rsp], rdx
  001aa	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  001ae	8b d1		 mov	 edx, ecx
  001b0	48 8b 44 24 28	 mov	 rax, QWORD PTR tv172[rsp]
  001b5	48 8b c8	 mov	 rcx, rax
  001b8	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 416
  001bd	ba 01 00 00 00	 mov	 edx, 1
  001c2	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  001c7	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  001ce	e8 00 00 00 00	 call	 simple_list_getlist
  001d3	ba 04 00 00 00	 mov	 edx, 4
  001d8	48 8b c8	 mov	 rcx, rax
  001db	e8 00 00 00 00	 call	 simple_list_getitem
  001e0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  001e5	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001ec	48 6b c9 18	 imul	 rcx, 24
  001f0	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001f3	83 e0 03	 and	 eax, 3
  001f6	c1 e0 05	 shl	 eax, 5
  001f9	48 8b 54 24 20	 mov	 rdx, QWORD PTR vm$[rsp]
  001fe	8b 4c 0a 30	 mov	 ecx, DWORD PTR [rdx+rcx+48]
  00202	83 e1 9f	 and	 ecx, -97		; ffffff9fH
  00205	0b c8		 or	 ecx, eax
  00207	8b c1		 mov	 eax, ecx
  00209	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  0020e	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00215	48 6b c9 18	 imul	 rcx, 24
  00219	48 8b 54 24 20	 mov	 rdx, QWORD PTR vm$[rsp]
  0021e	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 417
  00222	0f 57 d2	 xorps	 xmm2, xmm2
  00225	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82766
  0022c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00231	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 418
  00236	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  0023b	c6 80 8c 19 00
	00 01		 mov	 BYTE PTR [rax+6540], 1
$LN2@simple_vml:
; Line 420
  00242	eb 11		 jmp	 SHORT $LN1@simple_vml
$LN4@simple_vml:
; Line 421
  00244	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82769
  0024b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00250	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vml:
$LN5@simple_vml:
$LN8@simple_vml:
; Line 423
  00255	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00259	c3		 ret	 0
simple_vmlib_len ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
pState$ = 64
list$ = 72
pGeneral$ = 80
cType$ = 88
list_add_cpointer_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 383
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 386
  00018	48 8b 54 24 48	 mov	 rdx, QWORD PTR list$[rsp]
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00027	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 388
  0002c	4c 8b 44 24 50	 mov	 r8, QWORD PTR pGeneral$[rsp]
  00031	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 390
  00040	4c 8b 44 24 58	 mov	 r8, QWORD PTR cType$[rsp]
  00045	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0004f	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 392
  00054	41 b8 02 00 00
	00		 mov	 r8d, 2
  0005a	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  0005f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00064	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 393
  00069	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006d	c3		 ret	 0
list_add_cpointer_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 32
list$ = 40
list2$ = 48
pItem$ = 56
tv144 = 64
pointer$ = 96
x$ = 104
cType$ = 112
api_get_cpointer2pointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 336
$LN17:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 340
  00012	8b 54 24 68	 mov	 edx, DWORD PTR x$[rsp]
  00016	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  0001b	e8 00 00 00 00	 call	 api_is_list
  00020	85 c0		 test	 eax, eax
  00022	0f 84 e6 01 00
	00		 je	 $LN14@api_get_cp
; Line 341
  00028	8b 54 24 68	 mov	 edx, DWORD PTR x$[rsp]
  0002c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00031	e8 00 00 00 00	 call	 api_get_list
  00036	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 342
  0003b	ba 01 00 00 00	 mov	 edx, 1
  00040	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00045	e8 00 00 00 00	 call	 simple_list_ispointer
  0004a	85 c0		 test	 eax, eax
  0004c	0f 84 bc 01 00
	00		 je	 $LN13@api_get_cp
; Line 343
  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_list_getitem
  00061	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00066	0f 84 63 01 00
	00		 je	 $LN12@api_get_cp
; Line 344
  0006c	ba 02 00 00 00	 mov	 edx, 2
  00071	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00076	e8 00 00 00 00	 call	 simple_list_getitem
  0007b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007f	48 8b 54 24 70	 mov	 rdx, QWORD PTR cType$[rsp]
  00084	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00087	e8 00 00 00 00	 call	 strcmp
  0008c	85 c0		 test	 eax, eax
  0008e	74 15		 je	 SHORT $LN10@api_get_cp
  00090	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00095	0f be 80 b8 19
	00 00		 movsx	 eax, BYTE PTR [rax+6584]
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	0f 85 13 01 00
	00		 jne	 $LN11@api_get_cp
$LN10@api_get_cp:
; Line 349
  000a5	ba 03 00 00 00	 mov	 edx, 3
  000aa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000af	e8 00 00 00 00	 call	 simple_list_getitem
  000b4	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000b8	74 15		 je	 SHORT $LN8@api_get_cp
  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000c4	e8 00 00 00 00	 call	 simple_list_getitem
  000c9	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  000cd	75 22		 jne	 SHORT $LN9@api_get_cp
$LN8@api_get_cp:
; Line 350
  000cf	ba 01 00 00 00	 mov	 edx, 1
  000d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000d9	e8 00 00 00 00	 call	 simple_list_getitem
  000de	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 351
  000e3	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  000e8	48 83 c0 08	 add	 rax, 8
  000ec	e9 30 01 00 00	 jmp	 $LN15@api_get_cp
$LN9@api_get_cp:
; Line 353
  000f1	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  000f6	48 8b 80 38 19
	00 00		 mov	 rax, QWORD PTR [rax+6456]
  000fd	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 354
  00102	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  00107	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0010b	7e 77		 jle	 SHORT $LN7@api_get_cp
; Line 355
  0010d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR y$[rsp], 1
  00115	eb 0a		 jmp	 SHORT $LN6@api_get_cp
$LN5@api_get_cp:
  00117	8b 44 24 20	 mov	 eax, DWORD PTR y$[rsp]
  0011b	ff c0		 inc	 eax
  0011d	89 44 24 20	 mov	 DWORD PTR y$[rsp], eax
$LN6@api_get_cp:
  00121	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  00126	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00129	39 44 24 20	 cmp	 DWORD PTR y$[rsp], eax
  0012d	7f 55		 jg	 SHORT $LN4@api_get_cp
; Line 356
  0012f	ba 01 00 00 00	 mov	 edx, 1
  00134	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00139	e8 00 00 00 00	 call	 simple_list_getitem
  0013e	48 89 44 24 40	 mov	 QWORD PTR tv144[rsp], rax
  00143	8b 54 24 20	 mov	 edx, DWORD PTR y$[rsp]
  00147	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0014c	e8 00 00 00 00	 call	 simple_list_getitem
  00151	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00155	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv144[rsp]
  0015a	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  0015e	75 22		 jne	 SHORT $LN3@api_get_cp
; Line 357
  00160	ba 01 00 00 00	 mov	 edx, 1
  00165	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0016a	e8 00 00 00 00	 call	 simple_list_getitem
  0016f	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 358
  00174	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00179	48 83 c0 08	 add	 rax, 8
  0017d	e9 9f 00 00 00	 jmp	 $LN15@api_get_cp
$LN3@api_get_cp:
; Line 360
  00182	eb 93		 jmp	 SHORT $LN5@api_get_cp
$LN4@api_get_cp:
$LN7@api_get_cp:
; Line 362
  00184	45 33 c9	 xor	 r9d, r9d
  00187	41 b8 01 00 00
	00		 mov	 r8d, 1
  0018d	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00192	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  00197	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0019e	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 363
  001a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82714
  001aa	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  001af	e8 00 00 00 00	 call	 simple_vm_error
; Line 364
  001b4	33 c0		 xor	 eax, eax
  001b6	eb 69		 jmp	 SHORT $LN15@api_get_cp
$LN11@api_get_cp:
; Line 366
  001b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82717
  001bf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  001c4	e8 00 00 00 00	 call	 simple_vm_error
; Line 367
  001c9	33 c0		 xor	 eax, eax
  001cb	eb 54		 jmp	 SHORT $LN15@api_get_cp
; Line 369
  001cd	eb 2a		 jmp	 SHORT $LN2@api_get_cp
$LN12@api_get_cp:
; Line 370
  001cf	ba 02 00 00 00	 mov	 edx, 2
  001d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  001d9	e8 00 00 00 00	 call	 simple_list_getitem
  001de	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82721
  001e9	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001ec	e8 00 00 00 00	 call	 strcmp
  001f1	85 c0		 test	 eax, eax
  001f3	75 04		 jne	 SHORT $LN1@api_get_cp
; Line 371
  001f5	33 c0		 xor	 eax, eax
  001f7	eb 28		 jmp	 SHORT $LN15@api_get_cp
$LN1@api_get_cp:
$LN2@api_get_cp:
; Line 374
  001f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82724
  00200	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  00205	e8 00 00 00 00	 call	 simple_vm_error
; Line 375
  0020a	33 c0		 xor	 eax, eax
  0020c	eb 13		 jmp	 SHORT $LN15@api_get_cp
$LN13@api_get_cp:
$LN14@api_get_cp:
; Line 378
  0020e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82727
  00215	48 8b 4c 24 60	 mov	 rcx, QWORD PTR pointer$[rsp]
  0021a	e8 00 00 00 00	 call	 simple_vm_error
; Line 379
  0021f	33 c0		 xor	 eax, eax
$LN15@api_get_cp:
; Line 380
  00221	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00225	c3		 ret	 0
api_get_cpointer2pointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
list2$ = 40
vm$ = 48
pItem$ = 56
pointer$ = 80
x$ = 88
api_is_pointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 303
$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 307
  0000d	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00012	48 89 44 24 30	 mov	 QWORD PTR vm$[rsp], rax
; Line 308
  00017	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00020	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00027	e8 00 00 00 00	 call	 simple_list_getlist
  0002c	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 309
  00031	ba 03 00 00 00	 mov	 edx, 3
  00036	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_ispointer
  00040	85 c0		 test	 eax, eax
  00042	74 0f		 je	 SHORT $LN4@api_is_poi
; Line 310
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	e9 44 01 00 00	 jmp	 $LN5@api_is_poi
  0004e	e9 3d 01 00 00	 jmp	 $LN3@api_is_poi
$LN4@api_is_poi:
; Line 312
  00053	ba 03 00 00 00	 mov	 edx, 3
  00058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0005d	e8 00 00 00 00	 call	 simple_list_isstring
  00062	85 c0		 test	 eax, eax
  00064	0f 84 26 01 00
	00		 je	 $LN2@api_is_poi
; Line 314
  0006a	ba 03 00 00 00	 mov	 edx, 3
  0006f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00074	e8 00 00 00 00	 call	 simple_list_getitem
  00079	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82673
  00084	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00087	e8 00 00 00 00	 call	 strcmp
  0008c	85 c0		 test	 eax, eax
  0008e	0f 85 fc 00 00
	00		 jne	 $LN1@api_is_poi
; Line 316
  00094	41 b9 04 00 00
	00		 mov	 r9d, 4
  0009a	41 b8 02 00 00
	00		 mov	 r8d, 2
  000a0	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000a5	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000aa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000b1	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 317
  000b6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  000bb	e8 00 00 00 00	 call	 api_new_list
  000c0	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 318
  000c5	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  000d1	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000d4	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  000e0	e8 00 00 00 00	 call	 simple_list_getitem
  000e5	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 320
  000ea	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pItem$[rsp]
  000ef	e8 00 00 00 00	 call	 simple_vm_gc_newitemreference
; Line 321
  000f4	4c 8b 4c 24 38	 mov	 r9, QWORD PTR pItem$[rsp]
  000f9	41 b8 03 00 00
	00		 mov	 r8d, 3
  000ff	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00104	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00109	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00110	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 322
  00115	41 b9 02 00 00
	00		 mov	 r9d, 2
  0011b	41 b8 04 00 00
	00		 mov	 r8d, 4
  00121	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00126	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0012b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00132	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 324
  00137	45 33 c0	 xor	 r8d, r8d
  0013a	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0013f	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00144	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0014b	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 326
  00150	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82681
  00157	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0015c	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00161	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00168	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 328
  0016d	41 b8 02 00 00
	00		 mov	 r8d, 2
  00173	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0017d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00184	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 329
  00189	b8 01 00 00 00	 mov	 eax, 1
  0018e	eb 02		 jmp	 SHORT $LN5@api_is_poi
$LN1@api_is_poi:
$LN2@api_is_poi:
$LN3@api_is_poi:
; Line 332
  00190	33 c0		 xor	 eax, eax
$LN5@api_is_poi:
; Line 333
  00192	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00196	c3		 ret	 0
api_is_pointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = 32
list$ = 64
list2$ = 72
api_cpointer_cmp PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 293
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 294
  0000e	ba 01 00 00 00	 mov	 edx, 1
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_getitem
  0001d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00022	ba 01 00 00 00	 mov	 edx, 1
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list2$[rsp]
  0002c	e8 00 00 00 00	 call	 simple_list_getitem
  00031	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  0003a	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  0003e	75 09		 jne	 SHORT $LN2@api_cpoint
; Line 295
  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	eb 04		 jmp	 SHORT $LN3@api_cpoint
; Line 297
  00047	eb 02		 jmp	 SHORT $LN1@api_cpoint
$LN2@api_cpoint:
; Line 298
  00049	33 c0		 xor	 eax, eax
$LN1@api_cpoint:
$LN3@api_cpoint:
; Line 300
  0004b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004f	c3		 ret	 0
api_cpointer_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
x$ = 56
api_is_object PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 285
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 286
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR x$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00016	e8 00 00 00 00	 call	 api_is_list
  0001b	85 c0		 test	 eax, eax
  0001d	74 18		 je	 SHORT $LN1@api_is_obj
; Line 287
  0001f	8b 54 24 38	 mov	 edx, DWORD PTR x$[rsp]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00028	e8 00 00 00 00	 call	 api_get_list
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00035	eb 02		 jmp	 SHORT $LN2@api_is_obj
$LN1@api_is_obj:
; Line 289
  00037	33 c0		 xor	 eax, eax
$LN2@api_is_obj:
; Line 290
  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
api_is_object ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pointer$ = 48
x$ = 56
api_is_cpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 277
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 278
  0000d	8b 54 24 38	 mov	 edx, DWORD PTR x$[rsp]
  00011	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00016	e8 00 00 00 00	 call	 api_is_list
  0001b	85 c0		 test	 eax, eax
  0001d	74 18		 je	 SHORT $LN1@api_is_cpo
; Line 279
  0001f	8b 54 24 38	 mov	 edx, DWORD PTR x$[rsp]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pointer$[rsp]
  00028	e8 00 00 00 00	 call	 api_get_list
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 api_iscpointer_list
  00035	eb 02		 jmp	 SHORT $LN2@api_is_cpo
$LN1@api_is_cpo:
; Line 281
  00037	33 c0		 xor	 eax, eax
$LN2@api_is_cpo:
; Line 282
  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
api_is_cpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 48
api_iscpointer_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 266
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 267
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0000e	83 78 10 03	 cmp	 DWORD PTR [rax+16], 3
  00012	74 04		 je	 SHORT $LN2@api_iscpoi
; Line 268
  00014	33 c0		 xor	 eax, eax
  00016	eb 42		 jmp	 SHORT $LN3@api_iscpoi
$LN2@api_iscpoi:
; Line 270
  00018	ba 01 00 00 00	 mov	 edx, 1
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00022	e8 00 00 00 00	 call	 simple_list_ispointer
  00027	85 c0		 test	 eax, eax
  00029	74 2d		 je	 SHORT $LN1@api_iscpoi
  0002b	ba 02 00 00 00	 mov	 edx, 2
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_isstring
  0003a	85 c0		 test	 eax, eax
  0003c	74 1a		 je	 SHORT $LN1@api_iscpoi
  0003e	ba 03 00 00 00	 mov	 edx, 3
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00048	e8 00 00 00 00	 call	 simple_list_isnumber
  0004d	85 c0		 test	 eax, eax
  0004f	74 07		 je	 SHORT $LN1@api_iscpoi
; Line 271
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	eb 02		 jmp	 SHORT $LN3@api_iscpoi
$LN1@api_iscpoi:
; Line 273
  00058	33 c0		 xor	 eax, eax
$LN3@api_iscpoi:
; Line 274
  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005e	c3		 ret	 0
api_iscpointer_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
list$ = 64
pGeneral$ = 72
cType$ = 80
list_add_cpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 253
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 256
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00018	e8 00 00 00 00	 call	 simple_list_newlist
  0001d	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 258
  00022	48 8b 54 24 48	 mov	 rdx, QWORD PTR pGeneral$[rsp]
  00027	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  0002c	e8 00 00 00 00	 call	 simple_list_addpointer
; Line 260
  00031	48 8b 54 24 50	 mov	 rdx, QWORD PTR cType$[rsp]
  00036	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_list_addstring
; Line 262
  00040	ba 02 00 00 00	 mov	 edx, 2
  00045	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  0004a	e8 00 00 00 00	 call	 simple_list_addint
; Line 263
  0004f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00053	c3		 ret	 0
list_add_cpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 32
list$ = 40
pItem$ = 48
pointer$ = 80
cStr$ = 88
api_int_value PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 229
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 239
  0000e	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR vm$[rsp], rax
; Line 240
  00018	48 8b 54 24 58	 mov	 rdx, QWORD PTR cStr$[rsp]
  0001d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00022	e8 00 00 00 00	 call	 simple_vm_findvar
  00027	85 c0		 test	 eax, eax
  00029	75 13		 jne	 SHORT $LN2@api_int_va
; Line 241
  0002b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82618
  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  00037	e8 00 00 00 00	 call	 simple_vm_error
; Line 242
  0003c	eb 75		 jmp	 SHORT $LN3@api_int_va
$LN2@api_int_va:
; Line 244
  0003e	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00043	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004a	48 6b c0 18	 imul	 rax, 24
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00053	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00058	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 245
  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00062	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00069	fe c8		 dec	 al
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00070	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 246
  00076	ba 02 00 00 00	 mov	 edx, 2
  0007b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00080	e8 00 00 00 00	 call	 simple_list_getitem
  00085	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00089	75 28		 jne	 SHORT $LN1@api_int_va
; Line 247
  0008b	ba 03 00 00 00	 mov	 edx, 3
  00090	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00095	e8 00 00 00 00	 call	 simple_list_getitem
  0009a	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 248
  0009f	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000a4	f2 0f 2a 40 08	 cvtsi2sd xmm0, DWORD PTR [rax+8]
  000a9	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000ae	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
$LN1@api_int_va:
$LN3@api_int_va:
; Line 250
  000b3	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000b7	c3		 ret	 0
api_int_value ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 32
list$ = 40
pItem$ = 48
pActiveMem$ = 56
pointer$ = 80
cStr$ = 88
cStr2$ = 96
api_var_ptr PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 189
$LN10:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 198
  00013	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00018	48 89 44 24 20	 mov	 QWORD PTR vm$[rsp], rax
; Line 200
  0001d	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00022	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  00029	48 89 44 24 38	 mov	 QWORD PTR pActiveMem$[rsp], rax
; Line 201
  0002e	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00033	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  0003a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003d	ff c8		 dec	 eax
  0003f	8b d0		 mov	 edx, eax
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00046	48 8b 88 38 18
	00 00		 mov	 rcx, QWORD PTR [rax+6200]
  0004d	e8 00 00 00 00	 call	 simple_list_getlist
  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00057	48 89 81 40 18
	00 00		 mov	 QWORD PTR [rcx+6208], rax
; Line 202
  0005e	48 8b 54 24 58	 mov	 rdx, QWORD PTR cStr$[rsp]
  00063	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  00068	e8 00 00 00 00	 call	 simple_vm_findvar
  0006d	85 c0		 test	 eax, eax
  0006f	75 29		 jne	 SHORT $LN7@api_var_pt
; Line 204
  00071	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  00076	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pActiveMem$[rsp]
  0007b	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 205
  00082	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82595
  00089	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  0008e	e8 00 00 00 00	 call	 simple_vm_error
; Line 206
  00093	33 c0		 xor	 eax, eax
  00095	e9 ef 00 00 00	 jmp	 $LN8@api_var_pt
$LN7@api_var_pt:
; Line 209
  0009a	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  0009f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pActiveMem$[rsp]
  000a4	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 210
  000ab	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  000b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b7	48 6b c0 18	 imul	 rax, 24
  000bb	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  000c0	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000c5	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 211
  000ca	48 8b 44 24 20	 mov	 rax, QWORD PTR vm$[rsp]
  000cf	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000d6	fe c8		 dec	 al
  000d8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR vm$[rsp]
  000dd	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 212
  000e3	ba 02 00 00 00	 mov	 edx, 2
  000e8	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000ed	e8 00 00 00 00	 call	 simple_list_getitem
  000f2	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  000f6	75 58		 jne	 SHORT $LN6@api_var_pt
; Line 213
  000f8	ba 03 00 00 00	 mov	 edx, 3
  000fd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00102	e8 00 00 00 00	 call	 simple_list_getitem
  00107	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 214
  0010c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82600
  00113	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr2$[rsp]
  00118	e8 00 00 00 00	 call	 strcmp
  0011d	85 c0		 test	 eax, eax
  0011f	75 0d		 jne	 SHORT $LN5@api_var_pt
; Line 215
  00121	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  00126	48 83 c0 08	 add	 rax, 8
  0012a	eb 5d		 jmp	 SHORT $LN8@api_var_pt
  0012c	eb 20		 jmp	 SHORT $LN4@api_var_pt
$LN5@api_var_pt:
; Line 217
  0012e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82603
  00135	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr2$[rsp]
  0013a	e8 00 00 00 00	 call	 strcmp
  0013f	85 c0		 test	 eax, eax
  00141	75 0b		 jne	 SHORT $LN3@api_var_pt
; Line 218
  00143	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  00148	48 83 c0 08	 add	 rax, 8
  0014c	eb 3b		 jmp	 SHORT $LN8@api_var_pt
$LN3@api_var_pt:
$LN4@api_var_pt:
; Line 219
  0014e	eb 37		 jmp	 SHORT $LN2@api_var_pt
$LN6@api_var_pt:
; Line 221
  00150	ba 02 00 00 00	 mov	 edx, 2
  00155	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0015a	e8 00 00 00 00	 call	 simple_list_getitem
  0015f	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  00163	75 22		 jne	 SHORT $LN1@api_var_pt
; Line 222
  00165	ba 03 00 00 00	 mov	 edx, 3
  0016a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0016f	e8 00 00 00 00	 call	 simple_list_getitem
  00174	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 223
  00179	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  0017e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00182	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00185	eb 02		 jmp	 SHORT $LN8@api_var_pt
$LN1@api_var_pt:
$LN2@api_var_pt:
; Line 225
  00187	33 c0		 xor	 eax, eax
$LN8@api_var_pt:
; Line 226
  00189	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0018d	c3		 ret	 0
api_var_ptr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 32
list2$ = 40
list$ = 48
tv83 = 56
pointer$ = 80
x$ = 88
api_set_cpointer_null PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 168
$LN9:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 171
  0000d	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00011	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  00016	e8 00 00 00 00	 call	 api_get_list
  0001b	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 173
  00020	ba 03 00 00 00	 mov	 edx, 3
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0002a	e8 00 00 00 00	 call	 simple_list_getitem
  0002f	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00033	75 24		 jne	 SHORT $LN6@api_set_cp
; Line 174
  00035	45 33 c9	 xor	 r9d, r9d
  00038	41 b8 01 00 00
	00		 mov	 r8d, 1
  0003e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00043	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00048	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0004f	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 175
  00054	e9 ac 00 00 00	 jmp	 $LN7@api_set_cp
$LN6@api_set_cp:
; Line 177
  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0005e	48 8b 80 38 19
	00 00		 mov	 rax, QWORD PTR [rax+6456]
  00065	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 178
  0006a	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  0006f	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00073	0f 8e 8c 00 00
	00		 jle	 $LN5@api_set_cp
; Line 179
  00079	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  0007e	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00081	89 44 24 20	 mov	 DWORD PTR y$[rsp], eax
  00085	eb 0a		 jmp	 SHORT $LN4@api_set_cp
$LN3@api_set_cp:
  00087	8b 44 24 20	 mov	 eax, DWORD PTR y$[rsp]
  0008b	ff c8		 dec	 eax
  0008d	89 44 24 20	 mov	 DWORD PTR y$[rsp], eax
$LN4@api_set_cp:
  00091	83 7c 24 20 01	 cmp	 DWORD PTR y$[rsp], 1
  00096	7c 6d		 jl	 SHORT $LN2@api_set_cp
; Line 180
  00098	ba 01 00 00 00	 mov	 edx, 1
  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000a2	e8 00 00 00 00	 call	 simple_list_getitem
  000a7	48 89 44 24 38	 mov	 QWORD PTR tv83[rsp], rax
  000ac	8b 54 24 20	 mov	 edx, DWORD PTR y$[rsp]
  000b0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  000b5	e8 00 00 00 00	 call	 simple_list_getitem
  000ba	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000be	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv83[rsp]
  000c3	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  000c7	75 3a		 jne	 SHORT $LN1@api_set_cp
; Line 181
  000c9	44 8b 44 24 20	 mov	 r8d, DWORD PTR y$[rsp]
  000ce	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  000d3	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000d8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000df	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 182
  000e4	45 33 c9	 xor	 r9d, r9d
  000e7	41 b8 01 00 00
	00		 mov	 r8d, 1
  000ed	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  000f2	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000f7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000fe	e8 00 00 00 00	 call	 simple_list_setpointer_gc
$LN1@api_set_cp:
; Line 184
  00103	eb 82		 jmp	 SHORT $LN3@api_set_cp
$LN2@api_set_cp:
$LN5@api_set_cp:
$LN7@api_set_cp:
; Line 186
  00105	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00109	c3		 ret	 0
api_set_cpointer_null ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 32
list$ = 40
list2$ = 48
tv144 = 56
pointer$ = 80
x$ = 88
cType$ = 96
api_get_cpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 124
$LN17:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 127
  00012	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00016	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  0001b	e8 00 00 00 00	 call	 api_is_list
  00020	85 c0		 test	 eax, eax
  00022	0f 84 d2 01 00
	00		 je	 $LN14@api_get_cp
; Line 128
  00028	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  0002c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  00031	e8 00 00 00 00	 call	 api_get_list
  00036	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 129
  0003b	ba 01 00 00 00	 mov	 edx, 1
  00040	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00045	e8 00 00 00 00	 call	 simple_list_ispointer
  0004a	85 c0		 test	 eax, eax
  0004c	0f 84 a8 01 00
	00		 je	 $LN13@api_get_cp
; Line 130
  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_list_getitem
  00061	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00066	0f 84 4f 01 00
	00		 je	 $LN12@api_get_cp
; Line 131
  0006c	ba 02 00 00 00	 mov	 edx, 2
  00071	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00076	e8 00 00 00 00	 call	 simple_list_getitem
  0007b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007f	48 8b 54 24 60	 mov	 rdx, QWORD PTR cType$[rsp]
  00084	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00087	e8 00 00 00 00	 call	 strcmp
  0008c	85 c0		 test	 eax, eax
  0008e	74 15		 je	 SHORT $LN10@api_get_cp
  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00095	0f be 80 b8 19
	00 00		 movsx	 eax, BYTE PTR [rax+6584]
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	0f 85 ff 00 00
	00		 jne	 $LN11@api_get_cp
$LN10@api_get_cp:
; Line 136
  000a5	ba 03 00 00 00	 mov	 edx, 3
  000aa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000af	e8 00 00 00 00	 call	 simple_list_getitem
  000b4	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000b8	74 15		 je	 SHORT $LN8@api_get_cp
  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000c4	e8 00 00 00 00	 call	 simple_list_getitem
  000c9	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  000cd	75 18		 jne	 SHORT $LN9@api_get_cp
$LN8@api_get_cp:
; Line 137
  000cf	ba 01 00 00 00	 mov	 edx, 1
  000d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000d9	e8 00 00 00 00	 call	 simple_list_getitem
  000de	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000e2	e9 26 01 00 00	 jmp	 $LN15@api_get_cp
$LN9@api_get_cp:
; Line 139
  000e7	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000ec	48 8b 80 38 19
	00 00		 mov	 rax, QWORD PTR [rax+6456]
  000f3	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 140
  000f8	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  000fd	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00101	7e 6d		 jle	 SHORT $LN7@api_get_cp
; Line 141
  00103	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR y$[rsp], 1
  0010b	eb 0a		 jmp	 SHORT $LN6@api_get_cp
$LN5@api_get_cp:
  0010d	8b 44 24 20	 mov	 eax, DWORD PTR y$[rsp]
  00111	ff c0		 inc	 eax
  00113	89 44 24 20	 mov	 DWORD PTR y$[rsp], eax
$LN6@api_get_cp:
  00117	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  0011c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0011f	39 44 24 20	 cmp	 DWORD PTR y$[rsp], eax
  00123	7f 4b		 jg	 SHORT $LN4@api_get_cp
; Line 142
  00125	ba 01 00 00 00	 mov	 edx, 1
  0012a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0012f	e8 00 00 00 00	 call	 simple_list_getitem
  00134	48 89 44 24 38	 mov	 QWORD PTR tv144[rsp], rax
  00139	8b 54 24 20	 mov	 edx, DWORD PTR y$[rsp]
  0013d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00142	e8 00 00 00 00	 call	 simple_list_getitem
  00147	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0014b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv144[rsp]
  00150	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  00154	75 18		 jne	 SHORT $LN3@api_get_cp
; Line 143
  00156	ba 01 00 00 00	 mov	 edx, 1
  0015b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00160	e8 00 00 00 00	 call	 simple_list_getitem
  00165	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00169	e9 9f 00 00 00	 jmp	 $LN15@api_get_cp
$LN3@api_get_cp:
; Line 145
  0016e	eb 9d		 jmp	 SHORT $LN5@api_get_cp
$LN4@api_get_cp:
$LN7@api_get_cp:
; Line 147
  00170	45 33 c9	 xor	 r9d, r9d
  00173	41 b8 01 00 00
	00		 mov	 r8d, 1
  00179	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0017e	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00183	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0018a	e8 00 00 00 00	 call	 simple_list_setpointer_gc
; Line 148
  0018f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82544
  00196	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  0019b	e8 00 00 00 00	 call	 simple_vm_error
; Line 149
  001a0	33 c0		 xor	 eax, eax
  001a2	eb 69		 jmp	 SHORT $LN15@api_get_cp
$LN11@api_get_cp:
; Line 151
  001a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82547
  001ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  001b0	e8 00 00 00 00	 call	 simple_vm_error
; Line 152
  001b5	33 c0		 xor	 eax, eax
  001b7	eb 54		 jmp	 SHORT $LN15@api_get_cp
; Line 154
  001b9	eb 2a		 jmp	 SHORT $LN2@api_get_cp
$LN12@api_get_cp:
; Line 155
  001bb	ba 02 00 00 00	 mov	 edx, 2
  001c0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  001c5	e8 00 00 00 00	 call	 simple_list_getitem
  001ca	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82551
  001d5	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001d8	e8 00 00 00 00	 call	 strcmp
  001dd	85 c0		 test	 eax, eax
  001df	75 04		 jne	 SHORT $LN1@api_get_cp
; Line 156
  001e1	33 c0		 xor	 eax, eax
  001e3	eb 28		 jmp	 SHORT $LN15@api_get_cp
$LN1@api_get_cp:
$LN2@api_get_cp:
; Line 159
  001e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82554
  001ec	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  001f1	e8 00 00 00 00	 call	 simple_vm_error
; Line 160
  001f6	33 c0		 xor	 eax, eax
  001f8	eb 13		 jmp	 SHORT $LN15@api_get_cp
$LN13@api_get_cp:
$LN14@api_get_cp:
; Line 163
  001fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82557
  00201	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  00206	e8 00 00 00 00	 call	 simple_vm_error
; Line 164
  0020b	33 c0		 xor	 eax, eax
$LN15@api_get_cp:
; Line 165
  0020d	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00211	c3		 ret	 0
api_get_cpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
pointer$ = 64
pGeneral$ = 72
cType$ = 80
api_ret_cpointer PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 110
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 113
  00013	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00018	e8 00 00 00 00	 call	 api_new_list
  0001d	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 115
  00022	4c 8b 44 24 48	 mov	 r8, QWORD PTR pGeneral$[rsp]
  00027	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00031	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00038	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 117
  0003d	4c 8b 44 24 50	 mov	 r8, QWORD PTR cType$[rsp]
  00042	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  0004c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00053	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 119
  00058	41 b8 02 00 00
	00		 mov	 r8d, 2
  0005e	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00068	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0006f	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 120
  00074	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00079	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  0007e	e8 00 00 00 00	 call	 api_ret_list
; Line 121
  00083	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00087	c3		 ret	 0
api_ret_cpointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
api_new_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 103
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 105
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 90 40 18
	00 00		 mov	 rdx, QWORD PTR [rax+6208]
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00026	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 106
  0002b	48 8b 44 24 20	 mov	 rax, QWORD PTR list$[rsp]
; Line 107
  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
api_new_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list3$ = 32
vm$ = 40
list2$ = 48
pointer$ = 80
list$ = 88
api_ret_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 87
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 90
  0000e	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00013	48 89 44 24 28	 mov	 QWORD PTR vm$[rsp], rax
; Line 91
  00018	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  00024	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00027	ff c8		 dec	 eax
  00029	8b d0		 mov	 edx, eax
  0002b	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 88 38 18
	00 00		 mov	 rcx, QWORD PTR [rax+6200]
  00037	e8 00 00 00 00	 call	 simple_list_getlist
  0003c	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 92
  00041	4c 8b 44 24 30	 mov	 r8, QWORD PTR list2$[rsp]
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82489
  0004d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00052	e8 00 00 00 00	 call	 simple_vm_newvar2
  00057	48 89 44 24 20	 mov	 QWORD PTR list3$[rsp], rax
; Line 93
  0005c	41 b9 03 00 00
	00		 mov	 r9d, 3
  00062	41 b8 02 00 00
	00		 mov	 r8d, 2
  00068	48 8b 54 24 20	 mov	 rdx, QWORD PTR list3$[rsp]
  0006d	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  00072	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00079	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 94
  0007e	41 b8 03 00 00
	00		 mov	 r8d, 3
  00084	48 8b 54 24 20	 mov	 rdx, QWORD PTR list3$[rsp]
  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0008e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00095	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 95
  0009a	ba 03 00 00 00	 mov	 edx, 3
  0009f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list3$[rsp]
  000a4	e8 00 00 00 00	 call	 simple_list_getlist
  000a9	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 97
  000ae	48 8b 54 24 58	 mov	 rdx, QWORD PTR list$[rsp]
  000b3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  000b8	e8 00 00 00 00	 call	 simple_list_copy
; Line 98
  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000c2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c9	fe c0		 inc	 al
  000cb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  000d0	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000d6	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000db	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  000e7	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000eb	4c 8b 44 24 20	 mov	 r8, QWORD PTR list3$[rsp]
  000f0	8b d0		 mov	 edx, eax
  000f2	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 99
  000f7	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000fc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00103	48 6b c0 18	 imul	 rax, 24
  00107	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  0010c	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00110	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00113	83 c8 20	 or	 eax, 32			; 00000020H
  00116	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  0011b	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00122	48 6b c9 18	 imul	 rcx, 24
  00126	48 8b 54 24 50	 mov	 rdx, QWORD PTR pointer$[rsp]
  0012b	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 100
  0012f	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00133	c3		 ret	 0
api_ret_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
pointer$ = 64
x$ = 72
api_is_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 56
$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 58
  0000d	8b 54 24 48	 mov	 edx, DWORD PTR x$[rsp]
  00011	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00016	e8 00 00 00 00	 call	 api_is_pointer
  0001b	85 c0		 test	 eax, eax
  0001d	74 3e		 je	 SHORT $LN3@api_is_lis
; Line 59
  0001f	8b 54 24 48	 mov	 edx, DWORD PTR x$[rsp]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR pointer$[rsp]
  00028	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  0002f	e8 00 00 00 00	 call	 simple_list_getlist
  00034	ba 04 00 00 00	 mov	 edx, 4
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 simple_list_getitem
  00041	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00044	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 60
  00048	83 7c 24 20 01	 cmp	 DWORD PTR nType$[rsp], 1
  0004d	74 07		 je	 SHORT $LN1@api_is_lis
  0004f	83 7c 24 20 02	 cmp	 DWORD PTR nType$[rsp], 2
  00054	75 07		 jne	 SHORT $LN2@api_is_lis
$LN1@api_is_lis:
; Line 61
  00056	b8 01 00 00 00	 mov	 eax, 1
  0005b	eb 02		 jmp	 SHORT $LN4@api_is_lis
$LN2@api_is_lis:
$LN3@api_is_lis:
; Line 64
  0005d	33 c0		 xor	 eax, eax
$LN4@api_is_lis:
; Line 65
  0005f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00063	c3		 ret	 0
api_is_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
list$ = 40
pItem$ = 48
pointer$ = 80
x$ = 88
api_get_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 68
$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 72
  0000d	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00011	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pointer$[rsp]
  00016	e8 00 00 00 00	 call	 api_is_pointer
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 ab 00 00
	00		 je	 $LN4@api_get_li
; Line 73
  00023	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00027	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0002c	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00033	e8 00 00 00 00	 call	 simple_list_getlist
  00038	ba 04 00 00 00	 mov	 edx, 4
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 simple_list_getitem
  00045	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00048	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 74
  0004c	83 7c 24 20 01	 cmp	 DWORD PTR nType$[rsp], 1
  00051	75 3e		 jne	 SHORT $LN3@api_get_li
; Line 75
  00053	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00057	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  0005c	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  00063	e8 00 00 00 00	 call	 simple_list_getlist
  00068	ba 03 00 00 00	 mov	 edx, 3
  0006d	48 8b c8	 mov	 rcx, rax
  00070	e8 00 00 00 00	 call	 simple_list_getitem
  00075	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00079	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 76
  0007e	ba 03 00 00 00	 mov	 edx, 3
  00083	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00088	e8 00 00 00 00	 call	 simple_list_getlist
  0008d	eb 41		 jmp	 SHORT $LN5@api_get_li
  0008f	eb 3d		 jmp	 SHORT $LN2@api_get_li
$LN3@api_get_li:
; Line 78
  00091	83 7c 24 20 02	 cmp	 DWORD PTR nType$[rsp], 2
  00096	75 36		 jne	 SHORT $LN1@api_get_li
; Line 79
  00098	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR pointer$[rsp]
  000a1	48 8b 88 40 18
	00 00		 mov	 rcx, QWORD PTR [rax+6208]
  000a8	e8 00 00 00 00	 call	 simple_list_getlist
  000ad	ba 03 00 00 00	 mov	 edx, 3
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 simple_list_getitem
  000ba	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000be	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 80
  000c3	48 8b 44 24 30	 mov	 rax, QWORD PTR pItem$[rsp]
  000c8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cc	eb 02		 jmp	 SHORT $LN5@api_get_li
$LN1@api_get_li:
$LN2@api_get_li:
$LN4@api_get_li:
; Line 83
  000ce	33 c0		 xor	 eax, eax
$LN5@api_get_li:
; Line 84
  000d0	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d4	c3		 ret	 0
api_get_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
sState$ = 48
loadcblocks PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 30
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 32
  00009	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_len
  00010	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82437
  00017	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0001c	e8 00 00 00 00	 call	 register_block_t
; Line 33
  00021	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_add
  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82438
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00034	e8 00 00 00 00	 call	 register_block_t
; Line 34
  00039	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_char
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82439
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0004c	e8 00 00 00 00	 call	 register_block_t
; Line 35
  00051	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_version
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82440
  0005f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00064	e8 00 00 00 00	 call	 register_block_t
; Line 37
  00069	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_isstring
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82441
  00077	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0007c	e8 00 00 00 00	 call	 register_block_t
; Line 38
  00081	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_isnumber
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82442
  0008f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00094	e8 00 00 00 00	 call	 register_block_t
; Line 39
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_islist
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82443
  000a7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  000ac	e8 00 00 00 00	 call	 register_block_t
; Line 40
  000b1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_type
  000b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82444
  000bf	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  000c4	e8 00 00 00 00	 call	 register_block_t
; Line 41
  000c9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_isnull
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82445
  000d7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  000dc	e8 00 00 00 00	 call	 register_block_t
; Line 42
  000e1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_isobject
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82446
  000ef	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  000f4	e8 00 00 00 00	 call	 register_block_t
; Line 44
  000f9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:simple_vmlib_exec
  00100	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82447
  00107	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0010c	e8 00 00 00 00	 call	 register_block_t
; Line 46
  00111	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00116	e8 00 00 00 00	 call	 simple_vm_dll_loadblocks
; Line 51
  0011b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:display_string
  00122	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82448
  00129	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0012e	e8 00 00 00 00	 call	 register_block_t
; Line 52
  00133	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:read_string
  0013a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82449
  00141	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00146	e8 00 00 00 00	 call	 register_block_t
; Line 53
  0014b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014f	c3		 ret	 0
loadcblocks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
sState$ = 64
cStr$ = 72
pBlock$ = 80
register_block_t PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_api.c
; Line 19
$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 21
  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00018	48 83 78 30 00	 cmp	 QWORD PTR [rax+48], 0
  0001d	75 15		 jne	 SHORT $LN1@register_b
; Line 22
  0001f	33 d2		 xor	 edx, edx
  00021	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00026	e8 00 00 00 00	 call	 simple_list_new_gc
  0002b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00030	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
$LN1@register_b:
; Line 24
  00034	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00039	48 8b 50 30	 mov	 rdx, QWORD PTR [rax+48]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00042	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00047	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 25
  0004c	4c 8b 44 24 48	 mov	 r8, QWORD PTR cStr$[rsp]
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00056	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  0005b	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 26
  00060	4c 8b 44 24 50	 mov	 r8, QWORD PTR pBlock$[rsp]
  00065	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  0006f	e8 00 00 00 00	 call	 simple_list_addblockpointer_gc
; Line 27
  00074	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00078	c3		 ret	 0
register_block_t ENDP
_TEXT	ENDS
END
