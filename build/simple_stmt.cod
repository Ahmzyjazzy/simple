; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82449 DB	01H DUP (?)
$SG82453 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82438 DB	'COMPILER ERROR 20 : Class is already defined', 00H
	ORG $+3
$SG82443 DB	'COMPILER ERROR 18 : The parent class name is identical t'
	DB	'o class name', 00H
	ORG $+3
$SG82455 DB	'.', 00H
	ORG $+6
$SG82445 DB	'Rule : Statement  --> ''Class'' Identifier ''From'' [Mod'
	DB	'ulesName''.'']Identifier', 00H
	ORG $+5
$SG82447 DB	'COMPILER ERROR 7 : You need to provide a valid parent cl'
	DB	'ass name', 00H
	ORG $+3
$SG82524 DB	'?', 00H
	ORG $+2
$SG82451 DB	'Rule : Statement  --> ''Class'' Identifier ', 00H
	ORG $+2
$SG82533 DB	'?', 00H
	ORG $+2
$SG82459 DB	'COMPILER ERROR 1 : Invalid class name', 00H
	ORG $+2
$SG82467 DB	'COMPILER ERROR 16 : The block is already defined ', 00H
	ORG $+2
$SG82534 DB	0aH, 00H
	ORG $+2
$SG82476 DB	'Rule : Statement  --> ''block'' Identifier ([ParaList])', 00H
	ORG $+2
$SG82478 DB	'COMPILER ERROR 3 : Invalid block name', 00H
	ORG $+2
$SG82481 DB	'Rule : Statement  --> ''Modules'' Identifier{''.''identi'
	DB	'fier}', 00H
	ORG $+2
$SG82841 DB	'.', 00H
	ORG $+2
$SG82491 DB	'Rule : Statement  --> ''Private''', 00H
$SG82493 DB	'COMPILER ERROR 9 : Specified class is not defined', 00H
	ORG $+6
$SG82521 DB	'Rule : Statement  --> ''call'' Literal', 00H
	ORG $+3
$SG82527 DB	'Rule : Statement  --> ''Import'' Identifier{''.''identif'
	DB	'ier}', 00H
	ORG $+7
$SG82529 DB	'display', 00H
$SG82531 DB	'Rule : Statement  --> ''See'' Expr', 00H
	ORG $+7
$SG82536 DB	'Rule : Statement  --> ''?'' Expr', 00H
	ORG $+1
$SG82542 DB	'read', 00H
	ORG $+3
$SG82541 DB	'Rule : Statement  --> ''read'' Identifier|ListItem|Objec'
	DB	't.Attribute', 00H
	ORG $+6
$SG82544 DB	'COMPILER ERROR 10 : Invalid variable name', 00H
	ORG $+6
$SG82564 DB	'Rule : Next --> ''next''', 00H
	ORG $+1
$SG82555 DB	'Rule : Statement  --> ''for'' Identifier ''='' Expr to E'
	DB	'xpr [''step'' Expr]', 00H
	ORG $+2
$SG82583 DB	'Rule : Next --> ''Next''', 00H
	ORG $+1
$SG82566 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82569 DB	'n_sys_var_%d', 00H
	ORG $+3
$SG82570 DB	'lengthOf', 00H
	ORG $+7
$SG82575 DB	'Rule : Statement  --> ''for'' Identifier ''in'' Expr  ['''
	DB	'step'' Expr]', 00H
$SG82585 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82589 DB	'Rule : Statement  --> ''if'' Expr {Statement} { else if '
	DB	'} [Else] Ok', 00H
	ORG $+6
$SG82599 DB	'Rule : Else If  --> ''else if'' Expr {Statement}', 00H
	ORG $+1
$SG82607 DB	'Rule : Else  --> ''Else'' {Statement} ', 00H
	ORG $+3
$SG82622 DB	'Rule : End  --> ''end''', 00H
	ORG $+2
$SG82635 DB	'Rule : While  --> ''while'' Expr', 00H
	ORG $+1
$SG82641 DB	'Rule : Statement  --> ''while'' Expr {Statement} end', 00H
	ORG $+5
$SG82624 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82627 DB	'Rule : Statement  --> ''do'' {Statement} while', 00H
	ORG $+3
$SG82637 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82649 DB	'Rule : End --> ''end''', 00H
	ORG $+3
$SG82659 DB	'Rule : Statement  --> ''return''', 00H
	ORG $+1
$SG82666 DB	'Rule : Statement  --> ''Try'' {Statement} Catch Done', 00H
	ORG $+5
$SG82651 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82673 DB	'Rule : Catch --> ''Catch'' {Statement}', 00H
	ORG $+3
$SG82681 DB	'Rule : Done --> ''Done''', 00H
	ORG $+1
$SG82683 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82685 DB	'COMPILER ERROR 11 : ''catch'' keyword is missing in try '
	DB	'| catch', 00H
	ORG $+2
$SG82688 DB	'Rule : Statement  --> ''__exit'' ', 00H
$SG82691 DB	'Rule : Statement  --> ''break'' ', 00H
	ORG $+1
$SG82698 DB	'Rule : Statement  --> ''continue''', 00H
	ORG $+7
$SG82706 DB	'Rule : Statement  --> ''switch'' Expr {case} [Other] def'
	DB	'ault', 00H
	ORG $+5
$SG82718 DB	'Rule : CASE --> ''case'' Expr {Statement}', 00H
$SG82728 DB	'Rule : DEFAULT --> ''default'' {Statement}', 00H
	ORG $+7
$SG82743 DB	'Rule : End --> ''end''', 00H
	ORG $+3
$SG82753 DB	'isblock', 00H
$SG82745 DB	'COMPILER ERROR 2 : The structure is not closed missing e'
	DB	'nd | {}', 00H
$SG82747 DB	'COMPILER ERROR 12 : Error in Switch statement expression'
	DB	00H
	ORG $+7
$SG82751 DB	'Rule : Statement  --> Expr ', 00H
$SG82754 DB	'self', 00H
	ORG $+7
$SG82755 DB	'braceexpreval', 00H
	ORG $+2
$SG82756 DB	'braceexpreval', 00H
	ORG $+2
$SG82761 DB	'Rule : Statement  --> ''?'' Identifier{''.''identifier}', 00H
	ORG $+4
$SG82771 DB	'Rule : ParaList --> Epslion ', 00H
	ORG $+3
$SG82775 DB	'Rule : ParaList --> Identifier {'','' Identifier}', 00H
$SG82785 DB	'COMPILER ERROR 0 : Check your parameters, Identifier exp'
	DB	'ected', 00H
	ORG $+2
$SG82788 DB	'COMPILER ERROR 0 : Check your parameters, Identifier exp'
	DB	'ected', 00H
	ORG $+2
$SG82798 DB	'Rule : List --> ''['' Expr { '','' Expr } '']'' ', 00H
	ORG $+5
$SG82811 DB	'Rule : List --> ''['' Expr { '','' Expr } '']'' ', 00H
	ORG $+5
$SG82813 DB	'COMPILER ERROR 4 : Error in list items', 00H
	ORG $+1
$SG82815 DB	'COMPILER ERROR 4 : Error in list items', 00H
	ORG $+1
$SG82825 DB	0aH, 'Line %d ', 0aH, 00H
	ORG $+5
$SG82844 DB	'COMPILER ERROR 15 : Error in module name', 00H
	ORG $+7
$SG82846 DB	'COMPILER ERROR 15 : Error in module name', 00H
	ORG $+7
$SG82897 DB	'Rule : End --> ''End''', 00H
_DATA	ENDS
PUBLIC	simple_parser_class
PUBLIC	simple_parser_stmt
PUBLIC	simple_parser_step
PUBLIC	load_module
PUBLIC	simple_parser_paralist
PUBLIC	simple_parser_list
PUBLIC	simple_parser_epslion
PUBLIC	simple_parser_passepslion
PUBLIC	simple_parser_namedotname
PUBLIC	simple_parser_csexpr
PUBLIC	simple_parser_csbraceend
PUBLIC	simple_parser_bracesandend
PUBLIC	__real@3ff0000000000000
EXTRN	atoi:PROC
EXTRN	printf:PROC
EXTRN	puts:PROC
EXTRN	sprintf:PROC
EXTRN	strcpy:PROC
EXTRN	strcat:PROC
EXTRN	strcmp:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_string_delete:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_setstsimple_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_fexists:PROC
EXTRN	simple_currentdir:PROC
EXTRN	simple_chdir:PROC
EXTRN	simple_exefolder:PROC
EXTRN	simple_scanner_readfile:PROC
EXTRN	accept_token_token:PROC
EXTRN	simple_parser_expr:PROC
EXTRN	simple_parser_mixer:PROC
EXTRN	simple_parser_nexttoken:PROC
EXTRN	simple_parser_iskeyword:PROC
EXTRN	simple_parser_isoperator:PROC
EXTRN	simple_parser_isliteral:PROC
EXTRN	simple_parser_isidentifier:PROC
EXTRN	simple_parser_isnumber:PROC
EXTRN	simple_parser_isendline:PROC
EXTRN	simple_parser_isoperator2:PROC
EXTRN	parser_error:PROC
EXTRN	simple_parser_icg_newoperation:PROC
EXTRN	simple_parser_icg_newoperand:PROC
EXTRN	simple_parser_icg_newoperandint:PROC
EXTRN	simple_parser_icg_newoperanddouble:PROC
EXTRN	simple_parser_icg_newoperandpointer:PROC
EXTRN	simple_parser_icg_getactiveoperation:PROC
EXTRN	simple_parser_icg_addoperandint:PROC
EXTRN	simple_parser_icg_deletelastoperation:PROC
EXTRN	simple_parser_icg_duplicate:PROC
EXTRN	simple_parser_icg_newlabel2:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_parser_class DD imagerel $LN49
	DD	imagerel $LN49+2866
	DD	imagerel $unwind$simple_parser_class
$pdata$simple_parser_stmt DD imagerel $LN170
	DD	imagerel $LN170+9773
	DD	imagerel $unwind$simple_parser_stmt
$pdata$simple_parser_step DD imagerel $LN7
	DD	imagerel $LN7+220
	DD	imagerel $unwind$simple_parser_step
$pdata$load_module DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$load_module
$pdata$simple_parser_paralist DD imagerel $LN19
	DD	imagerel $LN19+534
	DD	imagerel $unwind$simple_parser_paralist
$pdata$simple_parser_list DD imagerel $LN22
	DD	imagerel $LN22+460
	DD	imagerel $unwind$simple_parser_list
$pdata$simple_parser_epslion DD imagerel $LN8
	DD	imagerel $LN8+198
	DD	imagerel $unwind$simple_parser_epslion
$pdata$simple_parser_passepslion DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$simple_parser_passepslion
$pdata$simple_parser_namedotname DD imagerel $LN9
	DD	imagerel $LN9+296
	DD	imagerel $unwind$simple_parser_namedotname
$pdata$simple_parser_csexpr DD imagerel $LN6
	DD	imagerel $LN6+119
	DD	imagerel $unwind$simple_parser_csexpr
$pdata$simple_parser_csbraceend DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$simple_parser_csbraceend
$pdata$simple_parser_bracesandend DD imagerel $LN21
	DD	imagerel $LN21+321
	DD	imagerel $unwind$simple_parser_bracesandend
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$simple_parser_class DD 010901H
	DD	0c209H
$unwind$simple_parser_stmt DD 021e19H
	DD	059010cH
	DD	imagerel __GSHandlerCheck
	DD	02b0H
$unwind$simple_parser_step DD 010e01H
	DD	0420eH
$unwind$load_module DD 010901H
	DD	04209H
$unwind$simple_parser_paralist DD 010901H
	DD	06209H
$unwind$simple_parser_list DD 010901H
	DD	04209H
$unwind$simple_parser_epslion DD 010901H
	DD	04209H
$unwind$simple_parser_passepslion DD 010901H
	DD	04209H
$unwind$simple_parser_namedotname DD 010901H
	DD	06209H
$unwind$simple_parser_csexpr DD 010901H
	DD	06209H
$unwind$simple_parser_csbraceend DD 010901H
	DD	04209H
$unwind$simple_parser_bracesandend DD 011201H
	DD	04212H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
lClass$ = 56
nKeyword$ = 64
simple_parser_bracesandend PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1382
$LN21:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
$LN18@simple_par:
; Line 1391
  00012	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00017	e8 00 00 00 00	 call	 simple_parser_epslion
  0001c	85 c0		 test	 eax, eax
  0001e	74 02		 je	 SHORT $LN17@simple_par
  00020	eb f0		 jmp	 SHORT $LN18@simple_par
$LN17@simple_par:
; Line 1392
  00022	ba 11 00 00 00	 mov	 edx, 17
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0002c	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00031	85 c0		 test	 eax, eax
  00033	0f 84 86 00 00
	00		 je	 $LN16@simple_par
; Line 1393
  00039	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0003e	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1394
  00043	83 7c 24 38 00	 cmp	 DWORD PTR lClass$[rsp], 0
  00048	74 26		 je	 SHORT $LN15@simple_par
$LN14@simple_par:
; Line 1395
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0004f	e8 00 00 00 00	 call	 simple_parser_class
  00054	85 c0		 test	 eax, eax
  00056	74 16		 je	 SHORT $LN13@simple_par
; Line 1396
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0005d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00062	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  00065	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00068	75 02		 jne	 SHORT $LN12@simple_par
; Line 1397
  0006a	eb 02		 jmp	 SHORT $LN13@simple_par
$LN12@simple_par:
; Line 1399
  0006c	eb dc		 jmp	 SHORT $LN14@simple_par
$LN13@simple_par:
; Line 1401
  0006e	eb 24		 jmp	 SHORT $LN11@simple_par
$LN15@simple_par:
$LN10@simple_par:
; Line 1402
  00070	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00075	e8 00 00 00 00	 call	 simple_parser_stmt
  0007a	85 c0		 test	 eax, eax
  0007c	74 16		 je	 SHORT $LN9@simple_par
; Line 1403
  0007e	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00083	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00088	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  0008b	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  0008e	75 02		 jne	 SHORT $LN8@simple_par
; Line 1404
  00090	eb 02		 jmp	 SHORT $LN9@simple_par
$LN8@simple_par:
; Line 1406
  00092	eb dc		 jmp	 SHORT $LN10@simple_par
$LN9@simple_par:
$LN11@simple_par:
; Line 1408
  00094	ba 12 00 00 00	 mov	 edx, 18
  00099	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0009e	e8 00 00 00 00	 call	 simple_parser_isoperator2
  000a3	85 c0		 test	 eax, eax
  000a5	74 14		 je	 SHORT $LN7@simple_par
; Line 1409
  000a7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000ac	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1410
  000b1	b8 01 00 00 00	 mov	 eax, 1
  000b6	e9 81 00 00 00	 jmp	 $LN19@simple_par
$LN7@simple_par:
; Line 1412
  000bb	33 c0		 xor	 eax, eax
  000bd	eb 7d		 jmp	 SHORT $LN19@simple_par
$LN16@simple_par:
$LN6@simple_par:
; Line 1415
  000bf	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000c4	e8 00 00 00 00	 call	 simple_parser_class
  000c9	85 c0		 test	 eax, eax
  000cb	74 16		 je	 SHORT $LN5@simple_par
; Line 1416
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000d2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000d7	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  000da	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  000dd	75 02		 jne	 SHORT $LN4@simple_par
; Line 1417
  000df	eb 02		 jmp	 SHORT $LN5@simple_par
$LN4@simple_par:
; Line 1419
  000e1	eb dc		 jmp	 SHORT $LN6@simple_par
$LN5@simple_par:
; Line 1420
  000e3	ba 11 00 00 00	 mov	 edx, 17
  000e8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000ed	e8 00 00 00 00	 call	 simple_parser_iskeyword
  000f2	85 c0		 test	 eax, eax
  000f4	75 12		 jne	 SHORT $LN2@simple_par
  000f6	8b 54 24 40	 mov	 edx, DWORD PTR nKeyword$[rsp]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000ff	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00104	85 c0		 test	 eax, eax
  00106	74 2f		 je	 SHORT $LN3@simple_par
$LN2@simple_par:
; Line 1421
  00108	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0010d	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1423
  00112	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00117	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0011e	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00121	c1 e8 05	 shr	 eax, 5
  00124	83 e0 01	 and	 eax, 1
  00127	85 c0		 test	 eax, eax
  00129	74 0c		 je	 SHORT $LN1@simple_par
; Line 1425
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82897
  00132	e8 00 00 00 00	 call	 puts
$LN1@simple_par:
$LN3@simple_par:
; Line 1428
  00137	b8 01 00 00 00	 mov	 eax, 1
$LN19@simple_par:
; Line 1429
  0013c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00140	c3		 ret	 0
simple_parser_bracesandend ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_csbraceend PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1373
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1374
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0000e	83 78 7c 01	 cmp	 DWORD PTR [rax+124], 1
  00012	7c 2c		 jl	 SHORT $LN1@simple_par
  00014	ba 12 00 00 00	 mov	 edx, 18
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0001e	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00023	85 c0		 test	 eax, eax
  00025	74 19		 je	 SHORT $LN1@simple_par
; Line 1375
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0002c	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  0002f	ff c8		 dec	 eax
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00036	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
; Line 1376
  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	eb 02		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 1378
  00040	33 c0		 xor	 eax, eax
$LN2@simple_par:
; Line 1379
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	c3		 ret	 0
simple_parser_csbraceend ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nOutput$ = 32
parser$ = 64
simple_parser_csexpr PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1359
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1361
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0000e	c7 40 78 01 00
	00 00		 mov	 DWORD PTR [rax+120], 1
; Line 1362
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0001a	e8 00 00 00 00	 call	 simple_parser_expr
  0001f	89 44 24 20	 mov	 DWORD PTR nOutput$[rsp], eax
; Line 1363
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00028	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [rax+120], 0
$LN3@simple_par:
; Line 1364
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00034	e8 00 00 00 00	 call	 simple_parser_epslion
  00039	85 c0		 test	 eax, eax
  0003b	74 02		 je	 SHORT $LN2@simple_par
  0003d	eb f0		 jmp	 SHORT $LN3@simple_par
$LN2@simple_par:
; Line 1365
  0003f	ba 11 00 00 00	 mov	 edx, 17
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00049	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0004e	85 c0		 test	 eax, eax
  00050	74 1c		 je	 SHORT $LN1@simple_par
; Line 1366
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00057	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1367
  0005c	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00061	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00064	ff c0		 inc	 eax
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0006b	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
$LN1@simple_par:
; Line 1369
  0006e	8b 44 24 20	 mov	 eax, DWORD PTR nOutput$[rsp]
; Line 1370
  00072	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00076	c3		 ret	 0
simple_parser_csexpr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 32
parser$ = 64
simple_parser_namedotname PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1303
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1305
  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_parser_isidentifier
  00013	85 c0		 test	 eax, eax
  00015	0f 84 f5 00 00
	00		 je	 $LN6@simple_par
; Line 1307
  0001b	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00020	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00024	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00029	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00030	e8 00 00 00 00	 call	 simple_string_new_gc
  00035	48 89 44 24 20	 mov	 QWORD PTR string$[rsp], rax
; Line 1308
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0003f	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN5@simple_par:
; Line 1309
  00044	ba 06 00 00 00	 mov	 edx, 6
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0004e	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00053	85 c0		 test	 eax, eax
  00055	0f 84 84 00 00
	00		 je	 $LN4@simple_par
; Line 1310
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00060	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1311
  00065	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82841
  0006c	48 8b 54 24 20	 mov	 rdx, QWORD PTR string$[rsp]
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00076	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0007d	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 1312
  00082	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00087	e8 00 00 00 00	 call	 simple_parser_isidentifier
  0008c	85 c0		 test	 eax, eax
  0008e	74 2b		 je	 SHORT $LN3@simple_par
; Line 1313
  00090	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00095	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  00099	48 8b 54 24 20	 mov	 rdx, QWORD PTR string$[rsp]
  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000a3	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000aa	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 1314
  000af	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000b4	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1315
  000b9	eb 1f		 jmp	 SHORT $LN2@simple_par
$LN3@simple_par:
; Line 1316
  000bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82844
  000c2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000c7	e8 00 00 00 00	 call	 parser_error
; Line 1317
  000cc	48 8b 4c 24 20	 mov	 rcx, QWORD PTR string$[rsp]
  000d1	e8 00 00 00 00	 call	 simple_string_delete
; Line 1318
  000d6	33 c0		 xor	 eax, eax
  000d8	eb 49		 jmp	 SHORT $LN7@simple_par
$LN2@simple_par:
; Line 1320
  000da	e9 65 ff ff ff	 jmp	 $LN5@simple_par
$LN4@simple_par:
; Line 1322
  000df	48 8b 44 24 20	 mov	 rax, QWORD PTR string$[rsp]
  000e4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000ec	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1323
  000f1	48 8b 54 24 20	 mov	 rdx, QWORD PTR string$[rsp]
  000f6	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000fb	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00102	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 1324
  00107	b8 01 00 00 00	 mov	 eax, 1
  0010c	eb 15		 jmp	 SHORT $LN7@simple_par
; Line 1325
  0010e	eb 13		 jmp	 SHORT $LN1@simple_par
$LN6@simple_par:
; Line 1326
  00110	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82846
  00117	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0011c	e8 00 00 00 00	 call	 parser_error
; Line 1327
  00121	33 c0		 xor	 eax, eax
$LN1@simple_par:
$LN7@simple_par:
; Line 1329
  00123	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00127	c3		 ret	 0
simple_parser_namedotname ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_passepslion PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1291
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1293
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_parser_isendline
  00013	85 c0		 test	 eax, eax
  00015	74 2b		 je	 SHORT $LN2@simple_par
; Line 1294
  00017	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0001c	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00020	e8 00 00 00 00	 call	 atoi
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0002a	89 41 24	 mov	 DWORD PTR [rcx+36], eax
; Line 1295
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00032	e8 00 00 00 00	 call	 simple_parser_nexttoken
  00037	85 c0		 test	 eax, eax
  00039	74 07		 je	 SHORT $LN1@simple_par
; Line 1296
  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	eb 02		 jmp	 SHORT $LN3@simple_par
$LN1@simple_par:
$LN2@simple_par:
; Line 1299
  00042	33 c0		 xor	 eax, eax
$LN3@simple_par:
; Line 1300
  00044	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00048	c3		 ret	 0
simple_parser_passepslion ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_epslion PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1267
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1268
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_parser_isendline
  00013	85 c0		 test	 eax, eax
  00015	0f 84 a4 00 00
	00		 je	 $LN5@simple_par
; Line 1270
  0001b	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00020	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00027	0f be 40 70	 movsx	 eax, BYTE PTR [rax+112]
  0002b	85 c0		 test	 eax, eax
  0002d	75 26		 jne	 SHORT $LN4@simple_par
; Line 1271
  0002f	33 d2		 xor	 edx, edx
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00036	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1272
  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00040	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00044	e8 00 00 00 00	 call	 atoi
  00049	8b d0		 mov	 edx, eax
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00050	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
$LN4@simple_par:
; Line 1274
  00055	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0005a	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0005e	e8 00 00 00 00	 call	 atoi
  00063	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00068	89 41 24	 mov	 DWORD PTR [rcx+36], eax
; Line 1276
  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00070	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00077	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0007a	c1 e8 05	 shr	 eax, 5
  0007d	83 e0 01	 and	 eax, 1
  00080	85 c0		 test	 eax, eax
  00082	74 14		 je	 SHORT $LN3@simple_par
; Line 1278
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00089	8b 50 24	 mov	 edx, DWORD PTR [rax+36]
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82825
  00093	e8 00 00 00 00	 call	 printf
$LN3@simple_par:
; Line 1280
  00098	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0009d	e8 00 00 00 00	 call	 simple_parser_nexttoken
  000a2	85 c0		 test	 eax, eax
  000a4	74 07		 je	 SHORT $LN2@simple_par
; Line 1281
  000a6	b8 01 00 00 00	 mov	 eax, 1
  000ab	eb 14		 jmp	 SHORT $LN6@simple_par
$LN2@simple_par:
; Line 1283
  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000b2	83 78 0c 01	 cmp	 DWORD PTR [rax+12], 1
  000b6	75 07		 jne	 SHORT $LN1@simple_par
; Line 1284
  000b8	b8 01 00 00 00	 mov	 eax, 1
  000bd	eb 02		 jmp	 SHORT $LN6@simple_par
$LN1@simple_par:
$LN5@simple_par:
; Line 1287
  000bf	33 c0		 xor	 eax, eax
$LN6@simple_par:
; Line 1288
  000c1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c5	c3		 ret	 0
simple_parser_epslion ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
simple_parser_list PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1212
$LN22:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1214
  00009	ba 0e 00 00 00	 mov	 edx, 14
  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00013	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00018	85 c0		 test	 eax, eax
  0001a	0f 84 a5 01 00
	00		 je	 $LN19@simple_par
; Line 1216
  00020	ba 2f 00 00 00	 mov	 edx, 47			; 0000002fH
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0002a	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1217
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00034	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN18@simple_par:
; Line 1218
  00039	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0003e	e8 00 00 00 00	 call	 simple_parser_epslion
  00043	85 c0		 test	 eax, eax
  00045	74 02		 je	 SHORT $LN17@simple_par
  00047	eb f0		 jmp	 SHORT $LN18@simple_par
$LN17@simple_par:
; Line 1219
  00049	ba 0f 00 00 00	 mov	 edx, 15
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00053	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00058	85 c0		 test	 eax, eax
  0005a	74 48		 je	 SHORT $LN16@simple_par
; Line 1220
  0005c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00061	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1222
  00066	ba 31 00 00 00	 mov	 edx, 49			; 00000031H
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00070	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1224
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0007a	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00081	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00084	c1 e8 05	 shr	 eax, 5
  00087	83 e0 01	 and	 eax, 1
  0008a	85 c0		 test	 eax, eax
  0008c	74 0c		 je	 SHORT $LN15@simple_par
; Line 1226
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82798
  00095	e8 00 00 00 00	 call	 puts
$LN15@simple_par:
; Line 1228
  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	e9 23 01 00 00	 jmp	 $LN20@simple_par
$LN16@simple_par:
$LN14@simple_par:
; Line 1230
  000a4	33 c0		 xor	 eax, eax
  000a6	83 f8 01	 cmp	 eax, 1
  000a9	0f 84 16 01 00
	00		 je	 $LN13@simple_par
; Line 1231
  000af	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000b4	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 1232
  000b8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000bd	e8 00 00 00 00	 call	 simple_parser_expr
  000c2	85 c0		 test	 eax, eax
  000c4	0f 84 d1 00 00
	00		 je	 $LN12@simple_par
; Line 1234
  000ca	ba 01 00 00 00	 mov	 edx, 1
  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000d4	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  000d8	e8 00 00 00 00	 call	 simple_list_getitem
  000dd	83 78 08 31	 cmp	 DWORD PTR [rax+8], 49	; 00000031H
  000e1	74 0f		 je	 SHORT $LN11@simple_par
; Line 1235
  000e3	ba 30 00 00 00	 mov	 edx, 48			; 00000030H
  000e8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000ed	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
$LN11@simple_par:
; Line 1237
  000f2	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000f7	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
$LN10@simple_par:
; Line 1238
  000fb	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00100	e8 00 00 00 00	 call	 simple_parser_epslion
  00105	85 c0		 test	 eax, eax
  00107	74 02		 je	 SHORT $LN9@simple_par
  00109	eb f0		 jmp	 SHORT $LN10@simple_par
$LN9@simple_par:
; Line 1239
  0010b	ba 0a 00 00 00	 mov	 edx, 10
  00110	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00115	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0011a	85 c0		 test	 eax, eax
  0011c	74 0c		 je	 SHORT $LN8@simple_par
; Line 1240
  0011e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00123	e8 00 00 00 00	 call	 simple_parser_nexttoken
  00128	eb 6f		 jmp	 SHORT $LN7@simple_par
$LN8@simple_par:
; Line 1242
  0012a	ba 0f 00 00 00	 mov	 edx, 15
  0012f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00134	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00139	85 c0		 test	 eax, eax
  0013b	74 47		 je	 SHORT $LN6@simple_par
; Line 1243
  0013d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00142	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1245
  00147	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0014c	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00153	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00156	c1 e8 05	 shr	 eax, 5
  00159	83 e0 01	 and	 eax, 1
  0015c	85 c0		 test	 eax, eax
  0015e	74 0c		 je	 SHORT $LN5@simple_par
; Line 1247
  00160	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82811
  00167	e8 00 00 00 00	 call	 puts
$LN5@simple_par:
; Line 1250
  0016c	ba 31 00 00 00	 mov	 edx, 49			; 00000031H
  00171	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00176	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1251
  0017b	b8 01 00 00 00	 mov	 eax, 1
  00180	eb 45		 jmp	 SHORT $LN20@simple_par
; Line 1252
  00182	eb 15		 jmp	 SHORT $LN4@simple_par
$LN6@simple_par:
; Line 1253
  00184	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82813
  0018b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00190	e8 00 00 00 00	 call	 parser_error
; Line 1254
  00195	33 c0		 xor	 eax, eax
  00197	eb 2e		 jmp	 SHORT $LN20@simple_par
$LN4@simple_par:
$LN7@simple_par:
; Line 1256
  00199	eb 15		 jmp	 SHORT $LN3@simple_par
$LN12@simple_par:
; Line 1257
  0019b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82815
  001a2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  001a7	e8 00 00 00 00	 call	 parser_error
; Line 1258
  001ac	33 c0		 xor	 eax, eax
  001ae	eb 17		 jmp	 SHORT $LN20@simple_par
$LN3@simple_par:
$LN2@simple_par:
; Line 1260
  001b0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  001b5	e8 00 00 00 00	 call	 simple_parser_epslion
  001ba	85 c0		 test	 eax, eax
  001bc	74 02		 je	 SHORT $LN1@simple_par
  001be	eb f0		 jmp	 SHORT $LN2@simple_par
$LN1@simple_par:
; Line 1261
  001c0	e9 df fe ff ff	 jmp	 $LN14@simple_par
$LN13@simple_par:
$LN19@simple_par:
; Line 1263
  001c5	33 c0		 xor	 eax, eax
$LN20@simple_par:
; Line 1264
  001c7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001cb	c3		 ret	 0
simple_parser_list ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nStart$ = 32
cToken$ = 40
parser$ = 64
simple_parser_paralist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1148
$LN19:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1152
  00009	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR nStart$[rsp], 0
; Line 1153
  00011	ba 07 00 00 00	 mov	 edx, 7
  00016	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0001b	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00020	85 c0		 test	 eax, eax
  00022	74 12		 je	 SHORT $LN16@simple_par
; Line 1154
  00024	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00029	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1155
  0002e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR nStart$[rsp], 1
$LN16@simple_par:
; Line 1158
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_parser_isendline
  00040	85 c0		 test	 eax, eax
  00042	75 1a		 jne	 SHORT $LN14@simple_par
  00044	83 7c 24 20 00	 cmp	 DWORD PTR nStart$[rsp], 0
  00049	74 4c		 je	 SHORT $LN15@simple_par
  0004b	ba 08 00 00 00	 mov	 edx, 8
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00055	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0005a	85 c0		 test	 eax, eax
  0005c	74 39		 je	 SHORT $LN15@simple_par
$LN14@simple_par:
; Line 1159
  0005e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00063	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1161
  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  0006d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00074	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00077	c1 e8 05	 shr	 eax, 5
  0007a	83 e0 01	 and	 eax, 1
  0007d	85 c0		 test	 eax, eax
  0007f	74 0c		 je	 SHORT $LN13@simple_par
; Line 1163
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82771
  00088	e8 00 00 00 00	 call	 puts
$LN13@simple_par:
; Line 1165
  0008d	b8 01 00 00 00	 mov	 eax, 1
  00092	e9 7a 01 00 00	 jmp	 $LN17@simple_par
$LN15@simple_par:
; Line 1168
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0009c	e8 00 00 00 00	 call	 simple_parser_isidentifier
  000a1	85 c0		 test	 eax, eax
  000a3	0f 84 55 01 00
	00		 je	 $LN12@simple_par
; Line 1169
  000a9	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000ae	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000b2	48 89 44 24 28	 mov	 QWORD PTR cToken$[rsp], rax
; Line 1170
  000b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000bc	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1172
  000c1	83 7c 24 20 00	 cmp	 DWORD PTR nStart$[rsp], 0
  000c6	74 26		 je	 SHORT $LN11@simple_par
  000c8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000cd	e8 00 00 00 00	 call	 simple_parser_isidentifier
  000d2	85 c0		 test	 eax, eax
  000d4	74 18		 je	 SHORT $LN11@simple_par
; Line 1173
  000d6	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  000db	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000df	48 89 44 24 28	 mov	 QWORD PTR cToken$[rsp], rax
; Line 1174
  000e4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000e9	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN11@simple_par:
; Line 1177
  000ee	48 8b 54 24 28	 mov	 rdx, QWORD PTR cToken$[rsp]
  000f3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  000f8	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1179
  000fd	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00102	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00109	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0010c	c1 e8 05	 shr	 eax, 5
  0010f	83 e0 01	 and	 eax, 1
  00112	85 c0		 test	 eax, eax
  00114	74 0c		 je	 SHORT $LN10@simple_par
; Line 1181
  00116	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82775
  0011d	e8 00 00 00 00	 call	 puts
$LN10@simple_par:
$LN9@simple_par:
; Line 1183
  00122	ba 0a 00 00 00	 mov	 edx, 10
  00127	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0012c	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00131	85 c0		 test	 eax, eax
  00133	0f 84 98 00 00
	00		 je	 $LN8@simple_par
; Line 1184
  00139	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0013e	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN7@simple_par:
; Line 1185
  00143	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00148	e8 00 00 00 00	 call	 simple_parser_epslion
  0014d	85 c0		 test	 eax, eax
  0014f	74 02		 je	 SHORT $LN6@simple_par
  00151	eb f0		 jmp	 SHORT $LN7@simple_par
$LN6@simple_par:
; Line 1186
  00153	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00158	e8 00 00 00 00	 call	 simple_parser_isidentifier
  0015d	85 c0		 test	 eax, eax
  0015f	74 56		 je	 SHORT $LN5@simple_par
; Line 1187
  00161	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00166	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0016a	48 89 44 24 28	 mov	 QWORD PTR cToken$[rsp], rax
; Line 1188
  0016f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00174	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1190
  00179	83 7c 24 20 00	 cmp	 DWORD PTR nStart$[rsp], 0
  0017e	74 26		 je	 SHORT $LN4@simple_par
  00180	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  00185	e8 00 00 00 00	 call	 simple_parser_isidentifier
  0018a	85 c0		 test	 eax, eax
  0018c	74 18		 je	 SHORT $LN4@simple_par
; Line 1191
  0018e	48 8b 44 24 40	 mov	 rax, QWORD PTR parser$[rsp]
  00193	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00197	48 89 44 24 28	 mov	 QWORD PTR cToken$[rsp], rax
; Line 1192
  0019c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  001a1	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN4@simple_par:
; Line 1195
  001a6	48 8b 54 24 28	 mov	 rdx, QWORD PTR cToken$[rsp]
  001ab	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  001b0	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1196
  001b5	eb 15		 jmp	 SHORT $LN3@simple_par
$LN5@simple_par:
; Line 1197
  001b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82785
  001be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  001c3	e8 00 00 00 00	 call	 parser_error
; Line 1198
  001c8	33 c0		 xor	 eax, eax
  001ca	eb 45		 jmp	 SHORT $LN17@simple_par
$LN3@simple_par:
; Line 1200
  001cc	e9 51 ff ff ff	 jmp	 $LN9@simple_par
$LN8@simple_par:
; Line 1201
  001d1	83 7c 24 20 00	 cmp	 DWORD PTR nStart$[rsp], 0
  001d6	74 1d		 je	 SHORT $LN2@simple_par
  001d8	ba 08 00 00 00	 mov	 edx, 8
  001dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  001e2	e8 00 00 00 00	 call	 simple_parser_isoperator2
  001e7	85 c0		 test	 eax, eax
  001e9	74 0a		 je	 SHORT $LN2@simple_par
; Line 1202
  001eb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  001f0	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN2@simple_par:
; Line 1204
  001f5	b8 01 00 00 00	 mov	 eax, 1
  001fa	eb 15		 jmp	 SHORT $LN17@simple_par
; Line 1205
  001fc	eb 13		 jmp	 SHORT $LN1@simple_par
$LN12@simple_par:
; Line 1206
  001fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82788
  00205	48 8b 4c 24 40	 mov	 rcx, QWORD PTR parser$[rsp]
  0020a	e8 00 00 00 00	 call	 parser_error
; Line 1207
  0020f	33 c0		 xor	 eax, eax
$LN1@simple_par:
$LN17@simple_par:
; Line 1209
  00211	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00215	c3		 ret	 0
simple_parser_paralist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
load_module PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1136
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1138
  00009	ba 4f 00 00 00	 mov	 edx, 79			; 0000004fH
  0000e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00013	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1140
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0001d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00024	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00027	c1 e8 05	 shr	 eax, 5
  0002a	83 e0 01	 and	 eax, 1
  0002d	85 c0		 test	 eax, eax
  0002f	74 0c		 je	 SHORT $LN1@load_modul
; Line 1142
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82761
  00038	e8 00 00 00 00	 call	 puts
$LN1@load_modul:
; Line 1144
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00042	e8 00 00 00 00	 call	 simple_parser_namedotname
; Line 1145
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	c3		 ret	 0
load_module ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
parser$ = 48
nMark1$ = 56
simple_parser_step PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 1332
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1334
  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00013	c6 40 6c 01	 mov	 BYTE PTR [rax+108], 1
; Line 1335
  00017	48 8b 44 24 38	 mov	 rax, QWORD PTR nMark1$[rsp]
  0001c	8b 00		 mov	 eax, DWORD PTR [rax]
  0001e	ff c8		 dec	 eax
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00025	89 41 70	 mov	 DWORD PTR [rcx+112], eax
; Line 1336
  00028	ba 1e 00 00 00	 mov	 edx, 30
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00032	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00037	85 c0		 test	 eax, eax
  00039	74 41		 je	 SHORT $LN4@simple_par
; Line 1337
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00040	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1338
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  0004a	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 1339
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00053	e8 00 00 00 00	 call	 simple_parser_csexpr
  00058	85 c0		 test	 eax, eax
  0005a	74 1a		 je	 SHORT $LN3@simple_par
; Line 1340
  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  00061	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 1342
  00065	ba 5f 00 00 00	 mov	 edx, 95			; 0000005fH
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  0006f	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1343
  00074	eb 04		 jmp	 SHORT $LN2@simple_par
$LN3@simple_par:
; Line 1344
  00076	33 c0		 xor	 eax, eax
  00078	eb 5d		 jmp	 SHORT $LN5@simple_par
$LN2@simple_par:
; Line 1346
  0007a	eb 30		 jmp	 SHORT $LN1@simple_par
$LN4@simple_par:
; Line 1348
  0007c	ba 1c 00 00 00	 mov	 edx, 28
  00081	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00086	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1349
  0008b	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  00098	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
; Line 1350
  0009d	ba 5f 00 00 00	 mov	 edx, 95			; 0000005fH
  000a2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR parser$[rsp]
  000a7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
$LN1@simple_par:
; Line 1352
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000b1	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000b4	ff c0		 inc	 eax
  000b6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR nMark1$[rsp]
  000bb	89 01		 mov	 DWORD PTR [rcx], eax
; Line 1353
  000bd	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000c2	c6 40 6c 00	 mov	 BYTE PTR [rax+108], 0
; Line 1354
  000c6	48 8b 44 24 30	 mov	 rax, QWORD PTR parser$[rsp]
  000cb	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [rax+112], 0
; Line 1355
  000d2	b8 01 00 00 00	 mov	 eax, 1
$LN5@simple_par:
; Line 1356
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	c3		 ret	 0
simple_parser_step ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nMark1$ = 32
x$ = 36
pMark$ = 40
nMark2$ = 48
nMark3$ = 52
pMark3$ = 56
list2$ = 64
string$ = 72
nEnd$ = 80
nPerformanceLocations$ = 84
nFlag$ = 88
nStart$ = 92
nLoadModules$ = 96
nNum1$ = 104
pMark2$ = 112
cStr$ = 120
file_name$ = 176
cCurrentDir$ = 432
__$ArrayPad$ = 688
parser$ = 720
simple_parser_stmt PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 244
$LN170:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec c8 02
	00 00		 sub	 rsp, 712		; 000002c8H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 252
  0001e	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR nPerformanceLocations$[rsp], 0
; Line 253
  00026	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR nLoadModules$[rsp], 0
; Line 256
  0002e	ba 0b 00 00 00	 mov	 edx, 11
  00033	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0003b	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00040	85 c0		 test	 eax, eax
  00042	0f 84 c8 02 00
	00		 je	 $LN167@simple_par
; Line 257
  00048	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00050	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 258
  00055	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0005d	e8 00 00 00 00	 call	 simple_parser_isliteral
  00062	85 c0		 test	 eax, eax
  00064	0f 84 53 02 00
	00		 je	 $LN166@simple_par
; Line 260
  0006a	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00072	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00076	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR file_name$[rsp]
  0007e	e8 00 00 00 00	 call	 strcpy
; Line 261
  00083	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0008b	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0008f	e8 00 00 00 00	 call	 simple_fexists
  00094	85 c0		 test	 eax, eax
  00096	75 50		 jne	 SHORT $LN165@simple_par
; Line 262
  00098	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR file_name$[rsp]
  000a0	e8 00 00 00 00	 call	 simple_exefolder
; Line 263
  000a5	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  000ad	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  000b1	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR file_name$[rsp]
  000b9	e8 00 00 00 00	 call	 strcat
; Line 264
  000be	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR file_name$[rsp]
  000c6	e8 00 00 00 00	 call	 simple_fexists
  000cb	85 c0		 test	 eax, eax
  000cd	75 19		 jne	 SHORT $LN164@simple_par
; Line 265
  000cf	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  000d7	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  000db	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR file_name$[rsp]
  000e3	e8 00 00 00 00	 call	 strcpy
$LN164@simple_par:
$LN165@simple_par:
; Line 269
  000e8	ba 01 00 00 00	 mov	 edx, 1
  000ed	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  000f5	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 270
  000fa	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR file_name$[rsp]
  00102	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0010a	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 271
  0010f	ba 36 00 00 00	 mov	 edx, 54			; 00000036H
  00114	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0011c	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 272
  00121	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00129	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  0012e	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 274
  00133	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0013b	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00142	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00145	c1 e8 05	 shr	 eax, 5
  00148	83 e0 01	 and	 eax, 1
  0014b	85 c0		 test	 eax, eax
  0014d	74 0c		 je	 SHORT $LN163@simple_par
; Line 276
  0014f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82521
  00156	e8 00 00 00 00	 call	 puts
$LN163@simple_par:
; Line 279
  0015b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00163	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0016a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00172	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00176	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
; Line 281
  0017a	48 8d 8c 24 b0
	01 00 00	 lea	 rcx, QWORD PTR cCurrentDir$[rsp]
  00182	e8 00 00 00 00	 call	 simple_currentdir
; Line 283
  00187	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR file_name$[rsp]
  0018f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00197	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0019e	e8 00 00 00 00	 call	 simple_scanner_readfile
  001a3	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 285
  001a7	48 8d 8c 24 b0
	01 00 00	 lea	 rcx, QWORD PTR cCurrentDir$[rsp]
  001af	e8 00 00 00 00	 call	 simple_chdir
; Line 290
  001b4	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  001b9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  001c1	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 291
  001c6	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  001ce	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  001d2	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  001d5	ff c0		 inc	 eax
  001d7	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 292
  001db	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  001e0	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  001e5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  001ed	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 294
  001f2	ba 01 00 00 00	 mov	 edx, 1
  001f7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  001ff	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 295
  00204	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0020c	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00213	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00217	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0021f	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00226	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00229	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0022d	e8 00 00 00 00	 call	 simple_list_getitem
  00232	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00236	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00239	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00241	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 296
  00246	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0024b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00253	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 297
  00258	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00260	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 298
  00265	ba 03 00 00 00	 mov	 edx, 3
  0026a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00272	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00277	85 c0		 test	 eax, eax
  00279	75 18		 jne	 SHORT $LN161@simple_par
  0027b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82524
  00282	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0028a	e8 00 00 00 00	 call	 simple_parser_isoperator
  0028f	85 c0		 test	 eax, eax
  00291	74 1f		 je	 SHORT $LN162@simple_par
$LN161@simple_par:
; Line 299
  00293	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0029b	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 300
  002a0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  002a8	e8 00 00 00 00	 call	 load_module
  002ad	e9 63 23 00 00	 jmp	 $LN168@simple_par
$LN162@simple_par:
; Line 302
  002b2	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  002b6	e9 5a 23 00 00	 jmp	 $LN168@simple_par
; Line 303
  002bb	eb 4c		 jmp	 SHORT $LN160@simple_par
$LN166@simple_par:
; Line 305
  002bd	ba 4f 00 00 00	 mov	 edx, 79			; 0000004fH
  002c2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  002ca	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 307
  002cf	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  002d7	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  002de	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  002e1	c1 e8 05	 shr	 eax, 5
  002e4	83 e0 01	 and	 eax, 1
  002e7	85 c0		 test	 eax, eax
  002e9	74 0c		 je	 SHORT $LN159@simple_par
; Line 309
  002eb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82527
  002f2	e8 00 00 00 00	 call	 puts
$LN159@simple_par:
; Line 311
  002f7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  002ff	e8 00 00 00 00	 call	 simple_parser_namedotname
  00304	e9 0c 23 00 00	 jmp	 $LN168@simple_par
$LN160@simple_par:
; Line 313
  00309	33 c0		 xor	 eax, eax
  0030b	e9 05 23 00 00	 jmp	 $LN168@simple_par
$LN167@simple_par:
; Line 316
  00310	ba 0d 00 00 00	 mov	 edx, 13
  00315	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0031d	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00322	85 c0		 test	 eax, eax
  00324	0f 84 e6 00 00
	00		 je	 $LN158@simple_par
; Line 317
  0032a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00332	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 320
  00337	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  0033c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00344	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 321
  00349	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82529
  00350	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00358	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 323
  0035d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00365	0f be 40 40	 movsx	 eax, BYTE PTR [rax+64]
  00369	89 44 24 58	 mov	 DWORD PTR nFlag$[rsp], eax
; Line 324
  0036d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00375	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 325
  00379	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00381	e8 00 00 00 00	 call	 simple_parser_expr
  00386	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 326
  0038a	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00392	0f b6 4c 24 58	 movzx	 ecx, BYTE PTR nFlag$[rsp]
  00397	88 48 40	 mov	 BYTE PTR [rax+64], cl
; Line 327
  0039a	ba 2a 00 00 00	 mov	 edx, 42			; 0000002aH
  0039f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  003a7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 328
  003ac	33 d2		 xor	 edx, edx
  003ae	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  003b6	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 329
  003bb	ba 51 00 00 00	 mov	 edx, 81			; 00000051H
  003c0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  003c8	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 330
  003cd	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  003d2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  003da	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 344
  003df	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  003e7	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  003ee	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  003f1	c1 e8 05	 shr	 eax, 5
  003f4	83 e0 01	 and	 eax, 1
  003f7	85 c0		 test	 eax, eax
  003f9	74 0c		 je	 SHORT $LN157@simple_par
; Line 346
  003fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82531
  00402	e8 00 00 00 00	 call	 puts
$LN157@simple_par:
; Line 348
  00407	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  0040b	e9 05 22 00 00	 jmp	 $LN168@simple_par
$LN158@simple_par:
; Line 351
  00410	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82533
  00417	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0041f	e8 00 00 00 00	 call	 simple_parser_isoperator
  00424	85 c0		 test	 eax, eax
  00426	0f 84 c3 00 00
	00		 je	 $LN156@simple_par
; Line 352
  0042c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00434	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 354
  00439	ba 37 00 00 00	 mov	 edx, 55			; 00000037H
  0043e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00446	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 355
  0044b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00453	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 356
  00457	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0045f	e8 00 00 00 00	 call	 simple_parser_expr
  00464	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 357
  00468	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00470	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 359
  00474	ba 02 00 00 00	 mov	 edx, 2
  00479	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00481	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 361
  00486	ba 1b 00 00 00	 mov	 edx, 27
  0048b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00493	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 362
  00498	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82534
  0049f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  004a7	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 363
  004ac	ba 02 00 00 00	 mov	 edx, 2
  004b1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  004b9	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 365
  004be	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  004c6	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  004cd	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  004d0	c1 e8 05	 shr	 eax, 5
  004d3	83 e0 01	 and	 eax, 1
  004d6	85 c0		 test	 eax, eax
  004d8	74 0c		 je	 SHORT $LN155@simple_par
; Line 367
  004da	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82536
  004e1	e8 00 00 00 00	 call	 puts
$LN155@simple_par:
; Line 369
  004e6	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  004ea	e9 26 21 00 00	 jmp	 $LN168@simple_par
$LN156@simple_par:
; Line 372
  004ef	ba 12 00 00 00	 mov	 edx, 18
  004f4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  004fc	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00501	85 c0		 test	 eax, eax
  00503	0f 84 96 01 00
	00		 je	 $LN154@simple_par
; Line 373
  00509	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00511	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 374
  00516	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0051e	e8 00 00 00 00	 call	 simple_parser_isidentifier
  00523	85 c0		 test	 eax, eax
  00525	0f 84 59 01 00
	00		 je	 $LN153@simple_par
; Line 376
  0052b	ba 10 00 00 00	 mov	 edx, 16
  00530	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00538	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 377
  0053d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00545	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00549	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00551	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 378
  00556	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0055e	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 379
  00563	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0056b	e8 00 00 00 00	 call	 simple_parser_mixer
  00570	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 380
  00574	83 7c 24 24 00	 cmp	 DWORD PTR x$[rsp], 0
  00579	75 07		 jne	 SHORT $LN152@simple_par
; Line 381
  0057b	33 c0		 xor	 eax, eax
  0057d	e9 93 20 00 00	 jmp	 $LN168@simple_par
$LN152@simple_par:
; Line 385
  00582	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0058a	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00591	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00594	c1 e8 05	 shr	 eax, 5
  00597	83 e0 01	 and	 eax, 1
  0059a	85 c0		 test	 eax, eax
  0059c	74 0c		 je	 SHORT $LN151@simple_par
; Line 387
  0059e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82541
  005a5	e8 00 00 00 00	 call	 puts
$LN151@simple_par:
; Line 391
  005aa	ba 55 00 00 00	 mov	 edx, 85			; 00000055H
  005af	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  005b7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 392
  005bc	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  005c1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  005c9	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 393
  005ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82542
  005d5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  005dd	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 394
  005e2	ba 2a 00 00 00	 mov	 edx, 42			; 0000002aH
  005e7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  005ef	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 395
  005f4	33 d2		 xor	 edx, edx
  005f6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  005fe	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 396
  00603	ba 51 00 00 00	 mov	 edx, 81			; 00000051H
  00608	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00610	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 397
  00615	ba 56 00 00 00	 mov	 edx, 86			; 00000056H
  0061a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00622	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 398
  00627	33 d2		 xor	 edx, edx
  00629	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00631	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 399
  00636	ba 11 00 00 00	 mov	 edx, 17
  0063b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00643	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 400
  00648	33 d2		 xor	 edx, edx
  0064a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00652	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 401
  00657	33 d2		 xor	 edx, edx
  00659	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00661	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 402
  00666	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0066b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00673	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 406
  00678	b8 01 00 00 00	 mov	 eax, 1
  0067d	e9 93 1f 00 00	 jmp	 $LN168@simple_par
; Line 407
  00682	eb 1b		 jmp	 SHORT $LN150@simple_par
$LN153@simple_par:
; Line 408
  00684	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82544
  0068b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00693	e8 00 00 00 00	 call	 parser_error
; Line 409
  00698	33 c0		 xor	 eax, eax
  0069a	e9 76 1f 00 00	 jmp	 $LN168@simple_par
$LN150@simple_par:
$LN154@simple_par:
; Line 413
  0069f	ba 06 00 00 00	 mov	 edx, 6
  006a4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  006ac	e8 00 00 00 00	 call	 simple_parser_iskeyword
  006b1	85 c0		 test	 eax, eax
  006b3	0f 84 2c 0a 00
	00		 je	 $LN149@simple_par
; Line 414
  006b9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  006c1	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 417
  006c6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  006ce	e8 00 00 00 00	 call	 simple_parser_isidentifier
  006d3	85 c0		 test	 eax, eax
  006d5	0f 84 03 0a 00
	00		 je	 $LN148@simple_par
; Line 418
  006db	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  006e3	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  006e7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  006ef	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  006f6	e8 00 00 00 00	 call	 simple_string_new_gc
  006fb	48 89 44 24 48	 mov	 QWORD PTR string$[rsp], rax
; Line 419
  00700	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00708	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 420
  0070d	ba 09 00 00 00	 mov	 edx, 9
  00712	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0071a	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0071f	85 c0		 test	 eax, eax
  00721	0f 84 5d 04 00
	00		 je	 $LN147@simple_par
; Line 425
  00727	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  0072c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00734	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 426
  00739	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00741	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  00746	48 89 44 24 38	 mov	 QWORD PTR pMark3$[rsp], rax
; Line 427
  0074b	ba 61 00 00 00	 mov	 edx, 97			; 00000061H
  00750	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00758	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 428
  0075d	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  00762	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00765	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0076d	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 429
  00772	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0077a	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 430
  0077f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00787	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 431
  0078b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00793	e8 00 00 00 00	 call	 simple_parser_expr
  00798	85 c0		 test	 eax, eax
  0079a	0f 84 df 03 00
	00		 je	 $LN146@simple_par
; Line 436
  007a0	ba 56 00 00 00	 mov	 edx, 86			; 00000056H
  007a5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  007ad	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 437
  007b2	33 d2		 xor	 edx, edx
  007b4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  007bc	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 438
  007c1	ba 11 00 00 00	 mov	 edx, 17
  007c6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  007ce	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 439
  007d3	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  007db	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  007df	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  007e2	ff c0		 inc	 eax
  007e4	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 440
  007e8	ba 14 00 00 00	 mov	 edx, 20
  007ed	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  007f5	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 441
  007fa	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  007ff	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00802	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0080a	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 442
  0080f	ba 02 00 00 00	 mov	 edx, 2
  00814	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0081c	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00821	85 c0		 test	 eax, eax
  00823	0f 84 56 03 00
	00		 je	 $LN145@simple_par
; Line 443
  00829	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00831	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 444
  00836	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0083e	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 445
  00842	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0084a	e8 00 00 00 00	 call	 simple_parser_csexpr
  0084f	85 c0		 test	 eax, eax
  00851	0f 84 28 03 00
	00		 je	 $LN144@simple_par
; Line 446
  00857	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0085f	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 448
  00863	ba 01 00 00 00	 mov	 edx, 1
  00868	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00870	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  00874	e8 00 00 00 00	 call	 simple_list_getitem
  00879	83 78 08 1c	 cmp	 DWORD PTR [rax+8], 28
  0087d	0f 85 93 00 00
	00		 jne	 $LN143@simple_par
  00883	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0088b	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  0088f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00892	ff c0		 inc	 eax
  00894	8b 4c 24 20	 mov	 ecx, DWORD PTR nMark1$[rsp]
  00898	83 c1 02	 add	 ecx, 2
  0089b	3b c1		 cmp	 eax, ecx
  0089d	75 77		 jne	 SHORT $LN143@simple_par
; Line 453
  0089f	ba 02 00 00 00	 mov	 edx, 2
  008a4	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  008ac	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  008b0	e8 00 00 00 00	 call	 simple_list_getitem
  008b5	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  008ba	f2 0f 11 44 24
	68		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 454
  008c0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  008c8	e8 00 00 00 00	 call	 simple_parser_icg_deletelastoperation
; Line 455
  008cd	41 b9 3f 00 00
	00		 mov	 r9d, 63			; 0000003fH
  008d3	41 b8 01 00 00
	00		 mov	 r8d, 1
  008d9	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  008e1	48 8b 50 38	 mov	 rdx, QWORD PTR [rax+56]
  008e5	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  008ed	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  008f4	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 456
  008f9	f2 0f 10 4c 24
	68		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  008ff	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00907	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
; Line 458
  0090c	c7 44 24 54 01
	00 00 00	 mov	 DWORD PTR nPerformanceLocations$[rsp], 1
; Line 459
  00914	eb 12		 jmp	 SHORT $LN142@simple_par
$LN143@simple_par:
; Line 460
  00916	ba 0d 00 00 00	 mov	 edx, 13
  0091b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00923	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
$LN142@simple_par:
; Line 462
  00928	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00930	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  00935	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 464
  0093a	48 8d 54 24 20	 lea	 rdx, QWORD PTR nMark1$[rsp]
  0093f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00947	e8 00 00 00 00	 call	 simple_parser_step
  0094c	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 465
  00950	83 7c 24 24 00	 cmp	 DWORD PTR x$[rsp], 0
  00955	75 20		 jne	 SHORT $LN141@simple_par
; Line 466
  00957	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  0095c	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00964	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0096b	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 467
  00970	33 c0		 xor	 eax, eax
  00972	e9 9e 1c 00 00	 jmp	 $LN168@simple_par
$LN141@simple_par:
; Line 470
  00977	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0097f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00986	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00989	c1 e8 05	 shr	 eax, 5
  0098c	83 e0 01	 and	 eax, 1
  0098f	85 c0		 test	 eax, eax
  00991	74 0c		 je	 SHORT $LN140@simple_par
; Line 472
  00993	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82555
  0099a	e8 00 00 00 00	 call	 puts
$LN140@simple_par:
$LN139@simple_par:
; Line 474
  0099f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  009a7	e8 00 00 00 00	 call	 simple_parser_stmt
  009ac	85 c0		 test	 eax, eax
  009ae	74 1c		 je	 SHORT $LN138@simple_par
; Line 475
  009b0	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  009b8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  009c0	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  009c3	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  009c6	75 02		 jne	 SHORT $LN137@simple_par
; Line 476
  009c8	eb 02		 jmp	 SHORT $LN138@simple_par
$LN137@simple_par:
; Line 478
  009ca	eb d3		 jmp	 SHORT $LN139@simple_par
$LN138@simple_par:
; Line 479
  009cc	ba 11 00 00 00	 mov	 edx, 17
  009d1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  009d9	e8 00 00 00 00	 call	 simple_parser_iskeyword
  009de	85 c0		 test	 eax, eax
  009e0	75 15		 jne	 SHORT $LN135@simple_par
  009e2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  009ea	e8 00 00 00 00	 call	 simple_parser_csbraceend
  009ef	85 c0		 test	 eax, eax
  009f1	0f 84 74 01 00
	00		 je	 $LN136@simple_par
$LN135@simple_par:
; Line 481
  009f7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  009ff	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00a03	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00a06	ff c0		 inc	 eax
  00a08	89 44 24 34	 mov	 DWORD PTR nMark3$[rsp], eax
; Line 483
  00a0c	ba 3d 00 00 00	 mov	 edx, 61			; 0000003dH
  00a11	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a19	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 484
  00a1e	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  00a23	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00a26	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a2e	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 485
  00a33	8b 54 24 20	 mov	 edx, DWORD PTR nMark1$[rsp]
  00a37	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a3f	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 487
  00a44	33 d2		 xor	 edx, edx
  00a46	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a4e	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 488
  00a53	33 d2		 xor	 edx, edx
  00a55	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a5d	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 489
  00a62	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00a6a	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00a6e	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00a71	ff c0		 inc	 eax
  00a73	89 44 24 30	 mov	 DWORD PTR nMark2$[rsp], eax
; Line 490
  00a77	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  00a7c	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  00a81	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00a89	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 492
  00a8e	83 7c 24 54 00	 cmp	 DWORD PTR nPerformanceLocations$[rsp], 0
  00a93	74 2a		 je	 SHORT $LN134@simple_par
; Line 494
  00a95	45 33 c0	 xor	 r8d, r8d
  00a98	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  00a9d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00aa5	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 495
  00aaa	45 33 c0	 xor	 r8d, r8d
  00aad	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  00ab2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00aba	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
$LN134@simple_par:
; Line 498
  00abf	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  00ac4	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  00ac9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ad1	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 500
  00ad6	44 8b 44 24 34	 mov	 r8d, DWORD PTR nMark3$[rsp]
  00adb	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  00ae0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ae8	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 502
  00aed	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  00af2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00afa	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 504
  00aff	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  00b04	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00b0c	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 505
  00b11	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00b19	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 507
  00b1e	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00b26	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00b2d	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00b30	c1 e8 05	 shr	 eax, 5
  00b33	83 e0 01	 and	 eax, 1
  00b36	85 c0		 test	 eax, eax
  00b38	74 0c		 je	 SHORT $LN133@simple_par
; Line 509
  00b3a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82564
  00b41	e8 00 00 00 00	 call	 puts
$LN133@simple_par:
; Line 511
  00b46	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  00b4b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00b53	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00b5a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 512
  00b5f	b8 01 00 00 00	 mov	 eax, 1
  00b64	e9 ac 1a 00 00	 jmp	 $LN168@simple_par
; Line 513
  00b69	eb 14		 jmp	 SHORT $LN132@simple_par
$LN136@simple_par:
; Line 514
  00b6b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82566
  00b72	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00b7a	e8 00 00 00 00	 call	 parser_error
$LN132@simple_par:
$LN144@simple_par:
$LN145@simple_par:
$LN146@simple_par:
; Line 518
  00b7f	e9 41 05 00 00	 jmp	 $LN131@simple_par
$LN147@simple_par:
; Line 519
  00b84	ba 1a 00 00 00	 mov	 edx, 26
  00b89	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00b91	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00b96	85 c0		 test	 eax, eax
  00b98	0f 84 27 05 00
	00		 je	 $LN130@simple_par
; Line 521
  00b9e	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00ba6	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00baa	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00bae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82569
  00bb5	48 8d 4c 24 78	 lea	 rcx, QWORD PTR cStr$[rsp]
  00bba	e8 00 00 00 00	 call	 sprintf
; Line 523
  00bbf	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  00bc4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00bcc	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 524
  00bd1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00bd9	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  00bde	48 89 44 24 38	 mov	 QWORD PTR pMark3$[rsp], rax
; Line 525
  00be3	ba 10 00 00 00	 mov	 edx, 16
  00be8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00bf0	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 526
  00bf5	48 8d 54 24 78	 lea	 rdx, QWORD PTR cStr$[rsp]
  00bfa	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c02	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 527
  00c07	ba 1c 00 00 00	 mov	 edx, 28
  00c0c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c14	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 528
  00c19	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  00c21	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c29	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
; Line 530
  00c2e	ba 56 00 00 00	 mov	 edx, 86			; 00000056H
  00c33	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c3b	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 531
  00c40	33 d2		 xor	 edx, edx
  00c42	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c4a	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 532
  00c4f	ba 11 00 00 00	 mov	 edx, 17
  00c54	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c5c	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 534
  00c61	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00c69	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00c6d	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00c70	ff c0		 inc	 eax
  00c72	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 535
  00c76	ba 14 00 00 00	 mov	 edx, 20
  00c7b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c83	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 536
  00c88	48 8d 54 24 78	 lea	 rdx, QWORD PTR cStr$[rsp]
  00c8d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00c95	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 537
  00c9a	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  00c9f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ca7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 538
  00cac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82570
  00cb3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00cbb	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 539
  00cc0	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00cc8	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00ccc	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00ccf	ff c0		 inc	 eax
  00cd1	89 44 24 5c	 mov	 DWORD PTR nStart$[rsp], eax
; Line 540
  00cd5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00cdd	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 541
  00ce2	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00cea	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 542
  00cee	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00cf6	e8 00 00 00 00	 call	 simple_parser_csexpr
  00cfb	85 c0		 test	 eax, eax
  00cfd	0f 84 c2 03 00
	00		 je	 $LN129@simple_par
; Line 543
  00d03	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00d0b	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 545
  00d0f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00d17	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00d1b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00d1e	89 44 24 50	 mov	 DWORD PTR nEnd$[rsp], eax
; Line 547
  00d22	ba 01 00 00 00	 mov	 edx, 1
  00d27	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00d2f	48 8b 48 38	 mov	 rcx, QWORD PTR [rax+56]
  00d33	e8 00 00 00 00	 call	 simple_list_getitem
  00d38	83 78 08 1d	 cmp	 DWORD PTR [rax+8], 29
  00d3c	75 0a		 jne	 SHORT $LN128@simple_par
; Line 548
  00d3e	8b 44 24 50	 mov	 eax, DWORD PTR nEnd$[rsp]
  00d42	ff c8		 dec	 eax
  00d44	89 44 24 50	 mov	 DWORD PTR nEnd$[rsp], eax
$LN128@simple_par:
; Line 550
  00d48	ba 2a 00 00 00	 mov	 edx, 42			; 0000002aH
  00d4d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00d55	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 552
  00d5a	33 d2		 xor	 edx, edx
  00d5c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00d64	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 553
  00d69	ba 0d 00 00 00	 mov	 edx, 13
  00d6e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00d76	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 554
  00d7b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00d83	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  00d88	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 555
  00d8d	ba 61 00 00 00	 mov	 edx, 97			; 00000061H
  00d92	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00d9a	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 556
  00d9f	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  00da4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00da7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00daf	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 557
  00db4	44 8b 44 24 50	 mov	 r8d, DWORD PTR nEnd$[rsp]
  00db9	8b 54 24 5c	 mov	 edx, DWORD PTR nStart$[rsp]
  00dbd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00dc5	e8 00 00 00 00	 call	 simple_parser_icg_duplicate
; Line 558
  00dca	ba 14 00 00 00	 mov	 edx, 20
  00dcf	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00dd7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 559
  00ddc	48 8d 54 24 78	 lea	 rdx, QWORD PTR cStr$[rsp]
  00de1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00de9	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 560
  00dee	ba 13 00 00 00	 mov	 edx, 19
  00df3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00dfb	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 562
  00e00	33 d2		 xor	 edx, edx
  00e02	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00e0a	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 564
  00e0f	ba 53 00 00 00	 mov	 edx, 83			; 00000053H
  00e14	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00e1c	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 566
  00e21	48 8d 54 24 20	 lea	 rdx, QWORD PTR nMark1$[rsp]
  00e26	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00e2e	e8 00 00 00 00	 call	 simple_parser_step
  00e33	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 567
  00e37	83 7c 24 24 00	 cmp	 DWORD PTR x$[rsp], 0
  00e3c	75 20		 jne	 SHORT $LN127@simple_par
; Line 568
  00e3e	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  00e43	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00e4b	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00e52	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 569
  00e57	33 c0		 xor	 eax, eax
  00e59	e9 b7 17 00 00	 jmp	 $LN168@simple_par
$LN127@simple_par:
; Line 572
  00e5e	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00e66	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00e6d	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00e70	c1 e8 05	 shr	 eax, 5
  00e73	83 e0 01	 and	 eax, 1
  00e76	85 c0		 test	 eax, eax
  00e78	74 0c		 je	 SHORT $LN126@simple_par
; Line 574
  00e7a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82575
  00e81	e8 00 00 00 00	 call	 puts
$LN126@simple_par:
$LN125@simple_par:
; Line 576
  00e86	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00e8e	e8 00 00 00 00	 call	 simple_parser_stmt
  00e93	85 c0		 test	 eax, eax
  00e95	74 1c		 je	 SHORT $LN124@simple_par
; Line 577
  00e97	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00e9f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ea7	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  00eaa	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00ead	75 02		 jne	 SHORT $LN123@simple_par
; Line 578
  00eaf	eb 02		 jmp	 SHORT $LN124@simple_par
$LN123@simple_par:
; Line 580
  00eb1	eb d3		 jmp	 SHORT $LN125@simple_par
$LN124@simple_par:
; Line 581
  00eb3	ba 11 00 00 00	 mov	 edx, 17
  00eb8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ec0	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00ec5	85 c0		 test	 eax, eax
  00ec7	75 15		 jne	 SHORT $LN121@simple_par
  00ec9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ed1	e8 00 00 00 00	 call	 simple_parser_csbraceend
  00ed6	85 c0		 test	 eax, eax
  00ed8	0f 84 d3 01 00
	00		 je	 $LN122@simple_par
$LN121@simple_par:
; Line 582
  00ede	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ee6	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 584
  00eeb	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00ef3	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00ef7	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00efa	ff c0		 inc	 eax
  00efc	89 44 24 34	 mov	 DWORD PTR nMark3$[rsp], eax
; Line 586
  00f00	ba 3d 00 00 00	 mov	 edx, 61			; 0000003dH
  00f05	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f0d	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 587
  00f12	48 8d 54 24 78	 lea	 rdx, QWORD PTR cStr$[rsp]
  00f17	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f1f	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 588
  00f24	8b 54 24 20	 mov	 edx, DWORD PTR nMark1$[rsp]
  00f28	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f30	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 590
  00f35	33 d2		 xor	 edx, edx
  00f37	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f3f	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 591
  00f44	33 d2		 xor	 edx, edx
  00f46	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f4e	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 592
  00f53	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  00f5b	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00f5f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00f62	ff c0		 inc	 eax
  00f64	89 44 24 30	 mov	 DWORD PTR nMark2$[rsp], eax
; Line 593
  00f68	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  00f6d	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  00f72	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f7a	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 595
  00f7f	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  00f84	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  00f89	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00f91	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 597
  00f96	44 8b 44 24 34	 mov	 r8d, DWORD PTR nMark3$[rsp]
  00f9b	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  00fa0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00fa8	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 599
  00fad	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  00fb2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00fba	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 601
  00fbf	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  00fc4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00fcc	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 603
  00fd1	ba 61 00 00 00	 mov	 edx, 97			; 00000061H
  00fd6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00fde	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 604
  00fe3	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  00fe8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00feb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  00ff3	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 605
  00ff8	ba 54 00 00 00	 mov	 edx, 84			; 00000054H
  00ffd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01005	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 606
  0100a	ba 1c 00 00 00	 mov	 edx, 28
  0100f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01017	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 607
  0101c	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  01024	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0102c	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
; Line 609
  01031	ba 56 00 00 00	 mov	 edx, 86			; 00000056H
  01036	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0103e	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 610
  01043	33 d2		 xor	 edx, edx
  01045	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0104d	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 611
  01052	ba 11 00 00 00	 mov	 edx, 17
  01057	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0105f	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 613
  01064	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0106c	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01073	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01076	c1 e8 05	 shr	 eax, 5
  01079	83 e0 01	 and	 eax, 1
  0107c	85 c0		 test	 eax, eax
  0107e	74 0c		 je	 SHORT $LN120@simple_par
; Line 615
  01080	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82583
  01087	e8 00 00 00 00	 call	 puts
$LN120@simple_par:
; Line 617
  0108c	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  01091	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01099	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  010a0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 618
  010a5	b8 01 00 00 00	 mov	 eax, 1
  010aa	e9 66 15 00 00	 jmp	 $LN168@simple_par
; Line 619
  010af	eb 14		 jmp	 SHORT $LN119@simple_par
$LN122@simple_par:
; Line 620
  010b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82585
  010b8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  010c0	e8 00 00 00 00	 call	 parser_error
$LN119@simple_par:
$LN129@simple_par:
$LN130@simple_par:
$LN131@simple_par:
; Line 624
  010c5	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  010ca	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  010d2	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  010d9	e8 00 00 00 00	 call	 simple_string_delete_gc
$LN148@simple_par:
; Line 626
  010de	33 c0		 xor	 eax, eax
  010e0	e9 30 15 00 00	 jmp	 $LN168@simple_par
$LN149@simple_par:
; Line 629
  010e5	ba 01 00 00 00	 mov	 edx, 1
  010ea	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  010f2	e8 00 00 00 00	 call	 simple_parser_iskeyword
  010f7	85 c0		 test	 eax, eax
  010f9	0f 84 33 04 00
	00		 je	 $LN118@simple_par
; Line 630
  010ff	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01107	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 633
  0110c	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01114	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 634
  01118	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01120	e8 00 00 00 00	 call	 simple_parser_csexpr
  01125	85 c0		 test	 eax, eax
  01127	0f 84 fe 03 00
	00		 je	 $LN117@simple_par
; Line 635
  0112d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01135	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 640
  01139	ba 0b 00 00 00	 mov	 edx, 11
  0113e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01146	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 641
  0114b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01153	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01158	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 643
  0115d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01165	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0116c	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0116f	c1 e8 05	 shr	 eax, 5
  01172	83 e0 01	 and	 eax, 1
  01175	85 c0		 test	 eax, eax
  01177	74 0c		 je	 SHORT $LN116@simple_par
; Line 645
  01179	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82589
  01180	e8 00 00 00 00	 call	 puts
$LN116@simple_par:
$LN115@simple_par:
; Line 647
  01185	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0118d	e8 00 00 00 00	 call	 simple_parser_stmt
  01192	85 c0		 test	 eax, eax
  01194	74 1c		 je	 SHORT $LN114@simple_par
; Line 648
  01196	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0119e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  011a6	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  011a9	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  011ac	75 02		 jne	 SHORT $LN113@simple_par
; Line 649
  011ae	eb 02		 jmp	 SHORT $LN114@simple_par
$LN113@simple_par:
; Line 651
  011b0	eb d3		 jmp	 SHORT $LN115@simple_par
$LN114@simple_par:
; Line 653
  011b2	33 d2		 xor	 edx, edx
  011b4	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  011bc	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  011c3	e8 00 00 00 00	 call	 simple_list_new_gc
  011c8	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
; Line 654
  011cd	ba 0a 00 00 00	 mov	 edx, 10
  011d2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  011da	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 655
  011df	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  011e7	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  011ec	4c 8b c0	 mov	 r8, rax
  011ef	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  011f4	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  011fc	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  01203	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN112@simple_par:
; Line 657
  01208	ba 21 00 00 00	 mov	 edx, 33			; 00000021H
  0120d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01215	e8 00 00 00 00	 call	 simple_parser_iskeyword
  0121a	85 c0		 test	 eax, eax
  0121c	0f 84 1f 01 00
	00		 je	 $LN111@simple_par
; Line 659
  01222	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0122a	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  0122e	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01231	ff c0		 inc	 eax
  01233	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 660
  01237	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  0123c	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  01241	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01249	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 661
  0124e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01256	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 664
  0125b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01263	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 665
  01267	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0126f	e8 00 00 00 00	 call	 simple_parser_expr
  01274	85 c0		 test	 eax, eax
  01276	0f 84 c0 00 00
	00		 je	 $LN110@simple_par
; Line 666
  0127c	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01284	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 668
  01288	ba 0b 00 00 00	 mov	 edx, 11
  0128d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01295	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 669
  0129a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  012a2	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  012a7	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 671
  012ac	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  012b4	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  012bb	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  012be	c1 e8 05	 shr	 eax, 5
  012c1	83 e0 01	 and	 eax, 1
  012c4	85 c0		 test	 eax, eax
  012c6	74 0c		 je	 SHORT $LN109@simple_par
; Line 673
  012c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82599
  012cf	e8 00 00 00 00	 call	 puts
$LN109@simple_par:
$LN108@simple_par:
; Line 675
  012d4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  012dc	e8 00 00 00 00	 call	 simple_parser_stmt
  012e1	85 c0		 test	 eax, eax
  012e3	74 1c		 je	 SHORT $LN107@simple_par
; Line 676
  012e5	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  012ed	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  012f5	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  012f8	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  012fb	75 02		 jne	 SHORT $LN106@simple_par
; Line 677
  012fd	eb 02		 jmp	 SHORT $LN107@simple_par
$LN106@simple_par:
; Line 679
  012ff	eb d3		 jmp	 SHORT $LN108@simple_par
$LN107@simple_par:
; Line 681
  01301	ba 0a 00 00 00	 mov	 edx, 10
  01306	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0130e	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 682
  01313	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0131b	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01320	4c 8b c0	 mov	 r8, rax
  01323	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  01328	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01330	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  01337	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN110@simple_par:
; Line 684
  0133c	e9 c7 fe ff ff	 jmp	 $LN112@simple_par
$LN111@simple_par:
; Line 685
  01341	ba 0c 00 00 00	 mov	 edx, 12
  01346	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0134e	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01353	85 c0		 test	 eax, eax
  01355	0f 84 97 00 00
	00		 je	 $LN105@simple_par
; Line 687
  0135b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01363	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01367	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0136a	ff c0		 inc	 eax
  0136c	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 688
  01370	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  01375	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  0137a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01382	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 689
  01387	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR pMark$[rsp], 0
; Line 690
  01390	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01398	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 692
  0139d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  013a5	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  013ac	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  013af	c1 e8 05	 shr	 eax, 5
  013b2	83 e0 01	 and	 eax, 1
  013b5	85 c0		 test	 eax, eax
  013b7	74 0c		 je	 SHORT $LN104@simple_par
; Line 694
  013b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82607
  013c0	e8 00 00 00 00	 call	 puts
$LN104@simple_par:
$LN103@simple_par:
; Line 696
  013c5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  013cd	e8 00 00 00 00	 call	 simple_parser_stmt
  013d2	85 c0		 test	 eax, eax
  013d4	74 1c		 je	 SHORT $LN102@simple_par
; Line 697
  013d6	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  013de	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  013e6	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  013e9	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  013ec	75 02		 jne	 SHORT $LN101@simple_par
; Line 698
  013ee	eb 02		 jmp	 SHORT $LN102@simple_par
$LN101@simple_par:
; Line 700
  013f0	eb d3		 jmp	 SHORT $LN103@simple_par
$LN102@simple_par:
$LN105@simple_par:
; Line 702
  013f2	ba 11 00 00 00	 mov	 edx, 17
  013f7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  013ff	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01404	85 c0		 test	 eax, eax
  01406	75 15		 jne	 SHORT $LN99@simple_par
  01408	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01410	e8 00 00 00 00	 call	 simple_parser_csbraceend
  01415	85 c0		 test	 eax, eax
  01417	0f 84 e1 00 00
	00		 je	 $LN100@simple_par
$LN99@simple_par:
; Line 704
  0141d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01425	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01429	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0142c	ff c0		 inc	 eax
  0142e	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 705
  01432	48 83 7c 24 28
	00		 cmp	 QWORD PTR pMark$[rsp], 0
  01438	74 17		 je	 SHORT $LN98@simple_par
; Line 706
  0143a	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  0143f	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  01444	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0144c	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
$LN98@simple_par:
; Line 708
  01451	48 8b 44 24 40	 mov	 rax, QWORD PTR list2$[rsp]
  01456	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0145a	7e 48		 jle	 SHORT $LN97@simple_par
; Line 709
  0145c	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  01464	eb 0a		 jmp	 SHORT $LN96@simple_par
$LN95@simple_par:
  01466	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  0146a	ff c0		 inc	 eax
  0146c	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
$LN96@simple_par:
  01470	48 8b 44 24 40	 mov	 rax, QWORD PTR list2$[rsp]
  01475	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01478	39 44 24 24	 cmp	 DWORD PTR x$[rsp], eax
  0147c	7f 26		 jg	 SHORT $LN94@simple_par
; Line 710
  0147e	8b 54 24 24	 mov	 edx, DWORD PTR x$[rsp]
  01482	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list2$[rsp]
  01487	e8 00 00 00 00	 call	 simple_list_getitem
  0148c	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  01491	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  01495	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0149d	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 711
  014a2	eb c2		 jmp	 SHORT $LN95@simple_par
$LN94@simple_par:
$LN97@simple_par:
; Line 713
  014a4	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  014a9	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  014b1	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  014b8	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 714
  014bd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  014c5	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 716
  014ca	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  014d2	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  014d9	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  014dc	c1 e8 05	 shr	 eax, 5
  014df	83 e0 01	 and	 eax, 1
  014e2	85 c0		 test	 eax, eax
  014e4	74 0c		 je	 SHORT $LN93@simple_par
; Line 718
  014e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82622
  014ed	e8 00 00 00 00	 call	 puts
$LN93@simple_par:
; Line 720
  014f2	b8 01 00 00 00	 mov	 eax, 1
  014f7	e9 19 11 00 00	 jmp	 $LN168@simple_par
; Line 721
  014fc	eb 2d		 jmp	 SHORT $LN92@simple_par
$LN100@simple_par:
; Line 722
  014fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82624
  01505	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0150d	e8 00 00 00 00	 call	 parser_error
; Line 723
  01512	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  01517	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0151f	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  01526	e8 00 00 00 00	 call	 simple_list_delete_gc
$LN92@simple_par:
$LN117@simple_par:
; Line 726
  0152b	33 c0		 xor	 eax, eax
  0152d	e9 e3 10 00 00	 jmp	 $LN168@simple_par
$LN118@simple_par:
; Line 729
  01532	ba 1f 00 00 00	 mov	 edx, 31
  01537	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0153f	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01544	85 c0		 test	 eax, eax
  01546	0f 84 2a 02 00
	00		 je	 $LN91@simple_par
; Line 734
  0154c	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  01551	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01559	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 735
  0155e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01566	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  0156b	48 89 44 24 38	 mov	 QWORD PTR pMark3$[rsp], rax
; Line 736
  01570	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01578	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  0157c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0157f	ff c0		 inc	 eax
  01581	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 737
  01585	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0158d	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 739
  01592	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0159a	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  015a1	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  015a4	c1 e8 05	 shr	 eax, 5
  015a7	83 e0 01	 and	 eax, 1
  015aa	85 c0		 test	 eax, eax
  015ac	74 0c		 je	 SHORT $LN90@simple_par
; Line 741
  015ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82627
  015b5	e8 00 00 00 00	 call	 puts
$LN90@simple_par:
; Line 743
  015ba	ba 11 00 00 00	 mov	 edx, 17
  015bf	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  015c7	e8 00 00 00 00	 call	 accept_token_token
$LN89@simple_par:
; Line 744
  015cc	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  015d4	e8 00 00 00 00	 call	 simple_parser_stmt
  015d9	85 c0		 test	 eax, eax
  015db	74 1c		 je	 SHORT $LN88@simple_par
; Line 745
  015dd	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  015e5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  015ed	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  015f0	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  015f3	75 02		 jne	 SHORT $LN87@simple_par
; Line 746
  015f5	eb 02		 jmp	 SHORT $LN88@simple_par
$LN87@simple_par:
; Line 747
  015f7	eb d3		 jmp	 SHORT $LN89@simple_par
$LN88@simple_par:
; Line 748
  015f9	ba 12 00 00 00	 mov	 edx, 18
  015fe	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01606	e8 00 00 00 00	 call	 accept_token_token
; Line 749
  0160b	ba 0e 00 00 00	 mov	 edx, 14
  01610	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01618	e8 00 00 00 00	 call	 simple_parser_iskeyword
  0161d	85 c0		 test	 eax, eax
  0161f	0f 84 36 01 00
	00		 je	 $LN86@simple_par
; Line 751
  01625	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0162d	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 754
  01632	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0163a	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 755
  0163e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01646	e8 00 00 00 00	 call	 simple_parser_expr
  0164b	85 c0		 test	 eax, eax
  0164d	0f 84 06 01 00
	00		 je	 $LN85@simple_par
; Line 757
  01653	ba 0b 00 00 00	 mov	 edx, 11
  01658	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01660	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 758
  01665	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0166d	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01672	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 760
  01677	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0167f	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01683	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01686	ff c0		 inc	 eax
  01688	89 44 24 34	 mov	 DWORD PTR nMark3$[rsp], eax
; Line 761
  0168c	ba 0a 00 00 00	 mov	 edx, 10
  01691	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01699	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 762
  0169e	8b 54 24 20	 mov	 edx, DWORD PTR nMark1$[rsp]
  016a2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  016aa	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 763
  016af	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  016b7	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  016bb	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  016be	ff c0		 inc	 eax
  016c0	89 44 24 30	 mov	 DWORD PTR nMark2$[rsp], eax
; Line 764
  016c4	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  016c9	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  016ce	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  016d6	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 766
  016db	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  016e0	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  016e5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  016ed	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 768
  016f2	44 8b 44 24 34	 mov	 r8d, DWORD PTR nMark3$[rsp]
  016f7	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  016fc	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01704	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 770
  01709	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  0170e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01716	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 771
  0171b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01723	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 773
  01727	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0172f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01736	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01739	c1 e8 05	 shr	 eax, 5
  0173c	83 e0 01	 and	 eax, 1
  0173f	85 c0		 test	 eax, eax
  01741	74 0c		 je	 SHORT $LN84@simple_par
; Line 775
  01743	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82635
  0174a	e8 00 00 00 00	 call	 puts
$LN84@simple_par:
; Line 777
  0174f	b8 01 00 00 00	 mov	 eax, 1
  01754	e9 bc 0e 00 00	 jmp	 $LN168@simple_par
$LN85@simple_par:
; Line 779
  01759	eb 14		 jmp	 SHORT $LN83@simple_par
$LN86@simple_par:
; Line 780
  0175b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82637
  01762	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0176a	e8 00 00 00 00	 call	 parser_error
$LN83@simple_par:
; Line 782
  0176f	33 c0		 xor	 eax, eax
  01771	e9 9f 0e 00 00	 jmp	 $LN168@simple_par
$LN91@simple_par:
; Line 785
  01776	ba 0e 00 00 00	 mov	 edx, 14
  0177b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01783	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01788	85 c0		 test	 eax, eax
  0178a	0f 84 17 02 00
	00		 je	 $LN82@simple_par
; Line 790
  01790	ba 3a 00 00 00	 mov	 edx, 58			; 0000003aH
  01795	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0179d	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 791
  017a2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  017aa	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  017af	48 89 44 24 38	 mov	 QWORD PTR pMark3$[rsp], rax
; Line 792
  017b4	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  017bc	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  017c0	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  017c3	ff c0		 inc	 eax
  017c5	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 793
  017c9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  017d1	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 796
  017d6	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  017de	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 797
  017e2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  017ea	e8 00 00 00 00	 call	 simple_parser_csexpr
  017ef	85 c0		 test	 eax, eax
  017f1	0f 84 a9 01 00
	00		 je	 $LN81@simple_par
; Line 798
  017f7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  017ff	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 800
  01803	ba 0b 00 00 00	 mov	 edx, 11
  01808	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01810	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 801
  01815	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0181d	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01822	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 803
  01827	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0182f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01836	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01839	c1 e8 05	 shr	 eax, 5
  0183c	83 e0 01	 and	 eax, 1
  0183f	85 c0		 test	 eax, eax
  01841	74 0c		 je	 SHORT $LN80@simple_par
; Line 805
  01843	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82641
  0184a	e8 00 00 00 00	 call	 puts
$LN80@simple_par:
$LN79@simple_par:
; Line 807
  0184f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01857	e8 00 00 00 00	 call	 simple_parser_stmt
  0185c	85 c0		 test	 eax, eax
  0185e	74 1c		 je	 SHORT $LN78@simple_par
; Line 808
  01860	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01868	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01870	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  01873	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  01876	75 02		 jne	 SHORT $LN77@simple_par
; Line 809
  01878	eb 02		 jmp	 SHORT $LN78@simple_par
$LN77@simple_par:
; Line 811
  0187a	eb d3		 jmp	 SHORT $LN79@simple_par
$LN78@simple_par:
; Line 812
  0187c	ba 11 00 00 00	 mov	 edx, 17
  01881	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01889	e8 00 00 00 00	 call	 simple_parser_iskeyword
  0188e	85 c0		 test	 eax, eax
  01890	75 15		 jne	 SHORT $LN75@simple_par
  01892	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0189a	e8 00 00 00 00	 call	 simple_parser_csbraceend
  0189f	85 c0		 test	 eax, eax
  018a1	0f 84 e5 00 00
	00		 je	 $LN76@simple_par
$LN75@simple_par:
; Line 814
  018a7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  018af	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  018b3	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  018b6	ff c0		 inc	 eax
  018b8	89 44 24 34	 mov	 DWORD PTR nMark3$[rsp], eax
; Line 815
  018bc	ba 0a 00 00 00	 mov	 edx, 10
  018c1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  018c9	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 816
  018ce	8b 54 24 20	 mov	 edx, DWORD PTR nMark1$[rsp]
  018d2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  018da	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 817
  018df	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  018e7	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  018eb	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  018ee	ff c0		 inc	 eax
  018f0	89 44 24 30	 mov	 DWORD PTR nMark2$[rsp], eax
; Line 818
  018f4	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  018f9	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  018fe	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01906	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 820
  0190b	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  01910	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  01915	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0191d	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 822
  01922	44 8b 44 24 34	 mov	 r8d, DWORD PTR nMark3$[rsp]
  01927	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  0192c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01934	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 824
  01939	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  0193e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01946	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 825
  0194b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01953	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 827
  01958	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01960	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01967	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0196a	c1 e8 05	 shr	 eax, 5
  0196d	83 e0 01	 and	 eax, 1
  01970	85 c0		 test	 eax, eax
  01972	74 0c		 je	 SHORT $LN74@simple_par
; Line 829
  01974	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82649
  0197b	e8 00 00 00 00	 call	 puts
$LN74@simple_par:
; Line 831
  01980	b8 01 00 00 00	 mov	 eax, 1
  01985	e9 8b 0c 00 00	 jmp	 $LN168@simple_par
; Line 832
  0198a	eb 14		 jmp	 SHORT $LN73@simple_par
$LN76@simple_par:
; Line 833
  0198c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82651
  01993	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0199b	e8 00 00 00 00	 call	 parser_error
$LN73@simple_par:
$LN81@simple_par:
; Line 836
  019a0	33 c0		 xor	 eax, eax
  019a2	e9 6e 0c 00 00	 jmp	 $LN168@simple_par
$LN82@simple_par:
; Line 839
  019a7	ba 10 00 00 00	 mov	 edx, 16
  019ac	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  019b4	e8 00 00 00 00	 call	 simple_parser_iskeyword
  019b9	85 c0		 test	 eax, eax
  019bb	0f 84 02 01 00
	00		 je	 $LN72@simple_par
; Line 840
  019c1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  019c9	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 841
  019ce	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
; Line 842
  019d6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  019de	e8 00 00 00 00	 call	 simple_parser_isendline
  019e3	85 c0		 test	 eax, eax
  019e5	0f 85 8e 00 00
	00		 jne	 $LN71@simple_par
; Line 844
  019eb	ba 4a 00 00 00	 mov	 edx, 74			; 0000004aH
  019f0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  019f8	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 845
  019fd	ba 37 00 00 00	 mov	 edx, 55			; 00000037H
  01a02	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a0a	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 846
  01a0f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01a17	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 847
  01a1b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a23	e8 00 00 00 00	 call	 simple_parser_expr
  01a28	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
; Line 848
  01a2c	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01a34	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 850
  01a38	ba 38 00 00 00	 mov	 edx, 56			; 00000038H
  01a3d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a45	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 851
  01a4a	83 7c 24 24 00	 cmp	 DWORD PTR x$[rsp], 0
  01a4f	74 14		 je	 SHORT $LN70@simple_par
; Line 852
  01a51	ba 2b 00 00 00	 mov	 edx, 43			; 0000002bH
  01a56	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a5e	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 854
  01a63	eb 12		 jmp	 SHORT $LN69@simple_par
$LN70@simple_par:
; Line 855
  01a65	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  01a6a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a72	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
$LN69@simple_par:
; Line 857
  01a77	eb 12		 jmp	 SHORT $LN68@simple_par
$LN71@simple_par:
; Line 862
  01a79	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  01a7e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01a86	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
$LN68@simple_par:
; Line 865
  01a8b	83 7c 24 24 01	 cmp	 DWORD PTR x$[rsp], 1
  01a90	75 28		 jne	 SHORT $LN67@simple_par
; Line 866
  01a92	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01a9a	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01aa1	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01aa4	c1 e8 05	 shr	 eax, 5
  01aa7	83 e0 01	 and	 eax, 1
  01aaa	85 c0		 test	 eax, eax
  01aac	74 0c		 je	 SHORT $LN66@simple_par
; Line 868
  01aae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82659
  01ab5	e8 00 00 00 00	 call	 puts
$LN66@simple_par:
$LN67@simple_par:
; Line 871
  01aba	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  01abe	e9 52 0b 00 00	 jmp	 $LN168@simple_par
$LN72@simple_par:
; Line 874
  01ac3	ba 15 00 00 00	 mov	 edx, 21
  01ac8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ad0	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01ad5	85 c0		 test	 eax, eax
  01ad7	0f 84 da 02 00
	00		 je	 $LN65@simple_par
; Line 875
  01add	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ae5	e8 00 00 00 00	 call	 simple_parser_nexttoken
$LN64@simple_par:
; Line 876
  01aea	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01af2	e8 00 00 00 00	 call	 simple_parser_epslion
  01af7	85 c0		 test	 eax, eax
  01af9	74 02		 je	 SHORT $LN63@simple_par
  01afb	eb ed		 jmp	 SHORT $LN64@simple_par
$LN63@simple_par:
; Line 877
  01afd	ba 11 00 00 00	 mov	 edx, 17
  01b02	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b0a	e8 00 00 00 00	 call	 simple_parser_isoperator2
  01b0f	85 c0		 test	 eax, eax
  01b11	74 25		 je	 SHORT $LN62@simple_par
; Line 878
  01b13	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b1b	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 879
  01b20	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01b28	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  01b2b	ff c0		 inc	 eax
  01b2d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b35	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
$LN62@simple_par:
; Line 882
  01b38	ba 41 00 00 00	 mov	 edx, 65			; 00000041H
  01b3d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b45	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 883
  01b4a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b52	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01b57	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 885
  01b5c	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01b64	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01b6b	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01b6e	c1 e8 05	 shr	 eax, 5
  01b71	83 e0 01	 and	 eax, 1
  01b74	85 c0		 test	 eax, eax
  01b76	74 0c		 je	 SHORT $LN61@simple_par
; Line 887
  01b78	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82666
  01b7f	e8 00 00 00 00	 call	 puts
$LN61@simple_par:
$LN60@simple_par:
; Line 889
  01b84	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01b8c	e8 00 00 00 00	 call	 simple_parser_stmt
  01b91	85 c0		 test	 eax, eax
  01b93	74 1c		 je	 SHORT $LN59@simple_par
; Line 890
  01b95	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01b9d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ba5	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  01ba8	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  01bab	75 02		 jne	 SHORT $LN58@simple_par
; Line 891
  01bad	eb 02		 jmp	 SHORT $LN59@simple_par
$LN58@simple_par:
; Line 893
  01baf	eb d3		 jmp	 SHORT $LN60@simple_par
$LN59@simple_par:
; Line 894
  01bb1	ba 16 00 00 00	 mov	 edx, 22
  01bb6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01bbe	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01bc3	85 c0		 test	 eax, eax
  01bc5	0f 84 d8 01 00
	00		 je	 $LN57@simple_par
; Line 895
  01bcb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01bd3	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 900
  01bd8	ba 0a 00 00 00	 mov	 edx, 10
  01bdd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01be5	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 901
  01bea	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01bf2	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01bf7	48 89 44 24 70	 mov	 QWORD PTR pMark2$[rsp], rax
; Line 902
  01bfc	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01c04	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01c08	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01c0b	ff c0		 inc	 eax
  01c0d	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 903
  01c11	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  01c16	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  01c1b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01c23	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 905
  01c28	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01c30	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01c37	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01c3a	c1 e8 05	 shr	 eax, 5
  01c3d	83 e0 01	 and	 eax, 1
  01c40	85 c0		 test	 eax, eax
  01c42	74 0c		 je	 SHORT $LN56@simple_par
; Line 907
  01c44	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82673
  01c4b	e8 00 00 00 00	 call	 puts
$LN56@simple_par:
$LN55@simple_par:
; Line 909
  01c50	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01c58	e8 00 00 00 00	 call	 simple_parser_stmt
  01c5d	85 c0		 test	 eax, eax
  01c5f	74 1c		 je	 SHORT $LN54@simple_par
; Line 910
  01c61	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01c69	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01c71	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  01c74	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  01c77	75 02		 jne	 SHORT $LN53@simple_par
; Line 911
  01c79	eb 02		 jmp	 SHORT $LN54@simple_par
$LN53@simple_par:
; Line 913
  01c7b	eb d3		 jmp	 SHORT $LN55@simple_par
$LN54@simple_par:
; Line 914
  01c7d	ba 17 00 00 00	 mov	 edx, 23
  01c82	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01c8a	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01c8f	85 c0		 test	 eax, eax
  01c91	75 2b		 jne	 SHORT $LN51@simple_par
  01c93	ba 11 00 00 00	 mov	 edx, 17
  01c98	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ca0	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01ca5	85 c0		 test	 eax, eax
  01ca7	75 15		 jne	 SHORT $LN51@simple_par
  01ca9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01cb1	e8 00 00 00 00	 call	 simple_parser_csbraceend
  01cb6	85 c0		 test	 eax, eax
  01cb8	0f 84 cf 00 00
	00		 je	 $LN52@simple_par
$LN51@simple_par:
; Line 916
  01cbe	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01cc6	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01ccd	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01cd0	c1 e8 05	 shr	 eax, 5
  01cd3	83 e0 01	 and	 eax, 1
  01cd6	85 c0		 test	 eax, eax
  01cd8	74 0c		 je	 SHORT $LN50@simple_par
; Line 918
  01cda	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82681
  01ce1	e8 00 00 00 00	 call	 puts
$LN50@simple_par:
; Line 920
  01ce6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01cee	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 922
  01cf3	ba 0a 00 00 00	 mov	 edx, 10
  01cf8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d00	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 923
  01d05	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d0d	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  01d12	48 89 44 24 38	 mov	 QWORD PTR pMark3$[rsp], rax
; Line 924
  01d17	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01d1f	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01d23	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01d26	ff c0		 inc	 eax
  01d28	89 44 24 30	 mov	 DWORD PTR nMark2$[rsp], eax
; Line 925
  01d2c	44 8b 44 24 30	 mov	 r8d, DWORD PTR nMark2$[rsp]
  01d31	48 8b 54 24 70	 mov	 rdx, QWORD PTR pMark2$[rsp]
  01d36	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d3e	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 926
  01d43	ba 42 00 00 00	 mov	 edx, 66			; 00000042H
  01d48	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d50	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 927
  01d55	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01d5d	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  01d61	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  01d64	ff c0		 inc	 eax
  01d66	89 44 24 34	 mov	 DWORD PTR nMark3$[rsp], eax
; Line 928
  01d6a	44 8b 44 24 34	 mov	 r8d, DWORD PTR nMark3$[rsp]
  01d6f	48 8b 54 24 38	 mov	 rdx, QWORD PTR pMark3$[rsp]
  01d74	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d7c	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 929
  01d81	b8 01 00 00 00	 mov	 eax, 1
  01d86	e9 8a 08 00 00	 jmp	 $LN168@simple_par
; Line 930
  01d8b	eb 14		 jmp	 SHORT $LN49@simple_par
$LN52@simple_par:
; Line 931
  01d8d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82683
  01d94	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01d9c	e8 00 00 00 00	 call	 parser_error
$LN49@simple_par:
; Line 933
  01da1	eb 14		 jmp	 SHORT $LN48@simple_par
$LN57@simple_par:
; Line 934
  01da3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82685
  01daa	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01db2	e8 00 00 00 00	 call	 parser_error
$LN48@simple_par:
$LN65@simple_par:
; Line 938
  01db7	ba 13 00 00 00	 mov	 edx, 19
  01dbc	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01dc4	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01dc9	85 c0		 test	 eax, eax
  01dcb	74 51		 je	 SHORT $LN47@simple_par
; Line 939
  01dcd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01dd5	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 941
  01dda	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01de2	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01de9	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01dec	c1 e8 05	 shr	 eax, 5
  01def	83 e0 01	 and	 eax, 1
  01df2	85 c0		 test	 eax, eax
  01df4	74 0c		 je	 SHORT $LN46@simple_par
; Line 943
  01df6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82688
  01dfd	e8 00 00 00 00	 call	 puts
$LN46@simple_par:
; Line 946
  01e02	ba 3c 00 00 00	 mov	 edx, 60			; 0000003cH
  01e07	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e0f	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 947
  01e14	b8 01 00 00 00	 mov	 eax, 1
  01e19	e9 f7 07 00 00	 jmp	 $LN168@simple_par
$LN47@simple_par:
; Line 950
  01e1e	ba 14 00 00 00	 mov	 edx, 20
  01e23	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e2b	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01e30	85 c0		 test	 eax, eax
  01e32	0f 84 b4 00 00
	00		 je	 $LN45@simple_par
; Line 951
  01e38	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e40	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 953
  01e45	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01e4d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01e54	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01e57	c1 e8 05	 shr	 eax, 5
  01e5a	83 e0 01	 and	 eax, 1
  01e5d	85 c0		 test	 eax, eax
  01e5f	74 0c		 je	 SHORT $LN44@simple_par
; Line 955
  01e61	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82691
  01e68	e8 00 00 00 00	 call	 puts
$LN44@simple_par:
; Line 958
  01e6d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e75	e8 00 00 00 00	 call	 simple_parser_isnumber
  01e7a	85 c0		 test	 eax, eax
  01e7c	75 11		 jne	 SHORT $LN42@simple_par
  01e7e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e86	e8 00 00 00 00	 call	 simple_parser_isidentifier
  01e8b	85 c0		 test	 eax, eax
  01e8d	74 1a		 je	 SHORT $LN43@simple_par
$LN42@simple_par:
; Line 959
  01e8f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01e97	e8 00 00 00 00	 call	 simple_parser_expr
  01e9c	85 c0		 test	 eax, eax
  01e9e	75 07		 jne	 SHORT $LN41@simple_par
; Line 960
  01ea0	33 c0		 xor	 eax, eax
  01ea2	e9 6e 07 00 00	 jmp	 $LN168@simple_par
$LN41@simple_par:
; Line 963
  01ea7	eb 27		 jmp	 SHORT $LN40@simple_par
$LN43@simple_par:
; Line 964
  01ea9	ba 1c 00 00 00	 mov	 edx, 28
  01eae	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01eb6	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 965
  01ebb	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  01ec3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ecb	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
$LN40@simple_par:
; Line 968
  01ed0	ba 39 00 00 00	 mov	 edx, 57			; 00000039H
  01ed5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01edd	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 969
  01ee2	b8 01 00 00 00	 mov	 eax, 1
  01ee7	e9 29 07 00 00	 jmp	 $LN168@simple_par
$LN45@simple_par:
; Line 972
  01eec	ba 1b 00 00 00	 mov	 edx, 27
  01ef1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ef9	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01efe	85 c0		 test	 eax, eax
  01f00	0f 84 b4 00 00
	00		 je	 $LN39@simple_par
; Line 973
  01f06	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f0e	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 975
  01f13	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01f1b	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  01f22	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  01f25	c1 e8 05	 shr	 eax, 5
  01f28	83 e0 01	 and	 eax, 1
  01f2b	85 c0		 test	 eax, eax
  01f2d	74 0c		 je	 SHORT $LN38@simple_par
; Line 977
  01f2f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82698
  01f36	e8 00 00 00 00	 call	 puts
$LN38@simple_par:
; Line 980
  01f3b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f43	e8 00 00 00 00	 call	 simple_parser_isnumber
  01f48	85 c0		 test	 eax, eax
  01f4a	75 11		 jne	 SHORT $LN36@simple_par
  01f4c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f54	e8 00 00 00 00	 call	 simple_parser_isidentifier
  01f59	85 c0		 test	 eax, eax
  01f5b	74 1a		 je	 SHORT $LN37@simple_par
$LN36@simple_par:
; Line 981
  01f5d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f65	e8 00 00 00 00	 call	 simple_parser_expr
  01f6a	85 c0		 test	 eax, eax
  01f6c	75 07		 jne	 SHORT $LN35@simple_par
; Line 982
  01f6e	33 c0		 xor	 eax, eax
  01f70	e9 a0 06 00 00	 jmp	 $LN168@simple_par
$LN35@simple_par:
; Line 985
  01f75	eb 27		 jmp	 SHORT $LN34@simple_par
$LN37@simple_par:
; Line 986
  01f77	ba 1c 00 00 00	 mov	 edx, 28
  01f7c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f84	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 987
  01f89	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  01f91	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01f99	e8 00 00 00 00	 call	 simple_parser_icg_newoperanddouble
$LN34@simple_par:
; Line 990
  01f9e	ba 4b 00 00 00	 mov	 edx, 75			; 0000004bH
  01fa3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01fab	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 991
  01fb0	b8 01 00 00 00	 mov	 eax, 1
  01fb5	e9 5b 06 00 00	 jmp	 $LN168@simple_par
$LN39@simple_par:
; Line 994
  01fba	ba 18 00 00 00	 mov	 edx, 24
  01fbf	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01fc7	e8 00 00 00 00	 call	 simple_parser_iskeyword
  01fcc	85 c0		 test	 eax, eax
  01fce	0f 84 23 04 00
	00		 je	 $LN33@simple_par
; Line 995
  01fd4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01fdc	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 996
  01fe1	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  01fe9	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 997
  01fed	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  01ff5	e8 00 00 00 00	 call	 simple_parser_csexpr
  01ffa	85 c0		 test	 eax, eax
  01ffc	0f 84 e1 03 00
	00		 je	 $LN32@simple_par
; Line 998
  02002	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0200a	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 1000
  0200e	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02016	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0201d	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  02020	c1 e8 05	 shr	 eax, 5
  02023	83 e0 01	 and	 eax, 1
  02026	85 c0		 test	 eax, eax
  02028	74 0c		 je	 SHORT $LN31@simple_par
; Line 1002
  0202a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82706
  02031	e8 00 00 00 00	 call	 puts
$LN31@simple_par:
$LN30@simple_par:
; Line 1004
  02036	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0203e	e8 00 00 00 00	 call	 simple_parser_epslion
  02043	85 c0		 test	 eax, eax
  02045	74 02		 je	 SHORT $LN29@simple_par
  02047	eb ed		 jmp	 SHORT $LN30@simple_par
$LN29@simple_par:
; Line 1006
  02049	33 d2		 xor	 edx, edx
  0204b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02053	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0205a	e8 00 00 00 00	 call	 simple_list_new_gc
  0205f	48 89 44 24 40	 mov	 QWORD PTR list2$[rsp], rax
; Line 1007
  02064	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR pMark$[rsp], 0
$LN28@simple_par:
; Line 1008
  0206d	ba 23 00 00 00	 mov	 edx, 35			; 00000023H
  02072	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0207a	e8 00 00 00 00	 call	 simple_parser_iskeyword
  0207f	85 c0		 test	 eax, eax
  02081	0f 84 5d 01 00
	00		 je	 $LN27@simple_par
; Line 1009
  02087	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0208f	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1011
  02094	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0209c	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  020a0	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  020a3	ff c0		 inc	 eax
  020a5	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 1012
  020a9	48 83 7c 24 28
	00		 cmp	 QWORD PTR pMark$[rsp], 0
  020af	74 17		 je	 SHORT $LN26@simple_par
; Line 1013
  020b1	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  020b6	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  020bb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  020c3	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
$LN26@simple_par:
; Line 1015
  020c8	ba 05 00 00 00	 mov	 edx, 5
  020cd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  020d5	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1016
  020da	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  020e2	c6 40 40 00	 mov	 BYTE PTR [rax+64], 0
; Line 1017
  020e6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  020ee	e8 00 00 00 00	 call	 simple_parser_expr
  020f3	85 c0		 test	 eax, eax
  020f5	0f 84 e4 00 00
	00		 je	 $LN25@simple_par
; Line 1018
  020fb	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02103	c6 40 40 01	 mov	 BYTE PTR [rax+64], 1
; Line 1020
  02107	ba 15 00 00 00	 mov	 edx, 21
  0210c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02114	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1021
  02119	ba 0b 00 00 00	 mov	 edx, 11
  0211e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02126	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1022
  0212b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02133	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  02138	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 1023
  0213d	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  02142	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0214a	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1025
  0214f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02157	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0215e	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  02161	c1 e8 05	 shr	 eax, 5
  02164	83 e0 01	 and	 eax, 1
  02167	85 c0		 test	 eax, eax
  02169	74 0c		 je	 SHORT $LN24@simple_par
; Line 1027
  0216b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82718
  02172	e8 00 00 00 00	 call	 puts
$LN24@simple_par:
$LN23@simple_par:
; Line 1029
  02177	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0217f	e8 00 00 00 00	 call	 simple_parser_stmt
  02184	85 c0		 test	 eax, eax
  02186	74 1c		 je	 SHORT $LN22@simple_par
; Line 1030
  02188	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02190	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02198	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  0219b	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  0219e	75 02		 jne	 SHORT $LN21@simple_par
; Line 1031
  021a0	eb 02		 jmp	 SHORT $LN22@simple_par
$LN21@simple_par:
; Line 1033
  021a2	eb d3		 jmp	 SHORT $LN23@simple_par
$LN22@simple_par:
; Line 1035
  021a4	ba 0a 00 00 00	 mov	 edx, 10
  021a9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  021b1	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1036
  021b6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  021be	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  021c3	4c 8b c0	 mov	 r8, rax
  021c6	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  021cb	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  021d3	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  021da	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN25@simple_par:
; Line 1038
  021df	e9 89 fe ff ff	 jmp	 $LN28@simple_par
$LN27@simple_par:
; Line 1040
  021e4	ba 19 00 00 00	 mov	 edx, 25
  021e9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  021f1	e8 00 00 00 00	 call	 simple_parser_iskeyword
  021f6	85 c0		 test	 eax, eax
  021f8	0f 84 b1 00 00
	00		 je	 $LN20@simple_par
; Line 1041
  021fe	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02206	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1043
  0220b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02213	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  02217	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0221a	ff c0		 inc	 eax
  0221c	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 1044
  02220	48 83 7c 24 28
	00		 cmp	 QWORD PTR pMark$[rsp], 0
  02226	74 20		 je	 SHORT $LN19@simple_par
; Line 1045
  02228	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  0222d	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  02232	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0223a	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 1046
  0223f	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR pMark$[rsp], 0
$LN19@simple_par:
; Line 1048
  02248	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0224d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02255	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1050
  0225a	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02262	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  02269	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0226c	c1 e8 05	 shr	 eax, 5
  0226f	83 e0 01	 and	 eax, 1
  02272	85 c0		 test	 eax, eax
  02274	74 0c		 je	 SHORT $LN18@simple_par
; Line 1052
  02276	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82728
  0227d	e8 00 00 00 00	 call	 puts
$LN18@simple_par:
$LN17@simple_par:
; Line 1054
  02282	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0228a	e8 00 00 00 00	 call	 simple_parser_stmt
  0228f	85 c0		 test	 eax, eax
  02291	74 1c		 je	 SHORT $LN16@simple_par
; Line 1055
  02293	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0229b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  022a3	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  022a6	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  022a9	75 02		 jne	 SHORT $LN15@simple_par
; Line 1056
  022ab	eb 02		 jmp	 SHORT $LN16@simple_par
$LN15@simple_par:
; Line 1058
  022ad	eb d3		 jmp	 SHORT $LN17@simple_par
$LN16@simple_par:
$LN20@simple_par:
; Line 1061
  022af	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  022b7	e8 00 00 00 00	 call	 simple_parser_csbraceend
  022bc	85 c0		 test	 eax, eax
  022be	75 1a		 jne	 SHORT $LN13@simple_par
  022c0	ba 11 00 00 00	 mov	 edx, 17
  022c5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  022cd	e8 00 00 00 00	 call	 simple_parser_iskeyword
  022d2	85 c0		 test	 eax, eax
  022d4	0f 84 f3 00 00
	00		 je	 $LN14@simple_par
$LN13@simple_par:
; Line 1062
  022da	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  022e2	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 1064
  022e7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  022ef	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  022f3	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  022f6	ff c0		 inc	 eax
  022f8	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 1065
  022fc	48 83 7c 24 28
	00		 cmp	 QWORD PTR pMark$[rsp], 0
  02302	74 17		 je	 SHORT $LN12@simple_par
; Line 1066
  02304	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  02309	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  0230e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02316	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
$LN12@simple_par:
; Line 1068
  0231b	48 8b 44 24 40	 mov	 rax, QWORD PTR list2$[rsp]
  02320	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  02324	7e 48		 jle	 SHORT $LN11@simple_par
; Line 1069
  02326	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0232e	eb 0a		 jmp	 SHORT $LN10@simple_par
$LN9@simple_par:
  02330	8b 44 24 24	 mov	 eax, DWORD PTR x$[rsp]
  02334	ff c0		 inc	 eax
  02336	89 44 24 24	 mov	 DWORD PTR x$[rsp], eax
$LN10@simple_par:
  0233a	48 8b 44 24 40	 mov	 rax, QWORD PTR list2$[rsp]
  0233f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  02342	39 44 24 24	 cmp	 DWORD PTR x$[rsp], eax
  02346	7f 26		 jg	 SHORT $LN8@simple_par
; Line 1070
  02348	8b 54 24 24	 mov	 edx, DWORD PTR x$[rsp]
  0234c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list2$[rsp]
  02351	e8 00 00 00 00	 call	 simple_list_getitem
  02356	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  0235b	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0235f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02367	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
; Line 1071
  0236c	eb c2		 jmp	 SHORT $LN9@simple_par
$LN8@simple_par:
$LN11@simple_par:
; Line 1073
  0236e	48 8b 54 24 40	 mov	 rdx, QWORD PTR list2$[rsp]
  02373	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0237b	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  02382	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 1074
  02387	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0238c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02394	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1076
  02399	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  023a1	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  023a8	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  023ab	c1 e8 05	 shr	 eax, 5
  023ae	83 e0 01	 and	 eax, 1
  023b1	85 c0		 test	 eax, eax
  023b3	74 0c		 je	 SHORT $LN7@simple_par
; Line 1078
  023b5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82743
  023bc	e8 00 00 00 00	 call	 puts
$LN7@simple_par:
; Line 1080
  023c1	b8 01 00 00 00	 mov	 eax, 1
  023c6	e9 4a 02 00 00	 jmp	 $LN168@simple_par
; Line 1081
  023cb	eb 14		 jmp	 SHORT $LN6@simple_par
$LN14@simple_par:
; Line 1082
  023cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82745
  023d4	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  023dc	e8 00 00 00 00	 call	 parser_error
$LN6@simple_par:
; Line 1084
  023e1	eb 14		 jmp	 SHORT $LN5@simple_par
$LN32@simple_par:
; Line 1085
  023e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82747
  023ea	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  023f2	e8 00 00 00 00	 call	 parser_error
$LN5@simple_par:
$LN33@simple_par:
; Line 1089
  023f7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  023ff	e8 00 00 00 00	 call	 simple_parser_epslion
  02404	85 c0		 test	 eax, eax
  02406	74 0a		 je	 SHORT $LN4@simple_par
; Line 1090
  02408	b8 01 00 00 00	 mov	 eax, 1
  0240d	e9 03 02 00 00	 jmp	 $LN168@simple_par
$LN4@simple_par:
; Line 1093
  02412	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0241a	e8 00 00 00 00	 call	 simple_parser_expr
  0241f	85 c0		 test	 eax, eax
  02421	0f 84 ec 01 00
	00		 je	 $LN3@simple_par
; Line 1095
  02427	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  0242f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  02436	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  02439	c1 e8 05	 shr	 eax, 5
  0243c	83 e0 01	 and	 eax, 1
  0243f	85 c0		 test	 eax, eax
  02441	74 0c		 je	 SHORT $LN2@simple_par
; Line 1097
  02443	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82751
  0244a	e8 00 00 00 00	 call	 puts
$LN2@simple_par:
; Line 1103
  0244f	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  02457	83 78 68 00	 cmp	 DWORD PTR [rax+104], 0
  0245b	0f 84 99 01 00
	00		 je	 $LN1@simple_par
; Line 1105
  02461	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  02466	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0246e	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1106
  02473	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82753
  0247a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02482	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1107
  02487	ba 10 00 00 00	 mov	 edx, 16
  0248c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02494	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1108
  02499	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82754
  024a0	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  024a8	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1109
  024ad	33 d2		 xor	 edx, edx
  024af	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  024b7	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 1110
  024bc	ba 1d 00 00 00	 mov	 edx, 29
  024c1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  024c9	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1111
  024ce	ba 1b 00 00 00	 mov	 edx, 27
  024d3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  024db	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1112
  024e0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82755
  024e7	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  024ef	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1113
  024f4	ba 2a 00 00 00	 mov	 edx, 42			; 0000002aH
  024f9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02501	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1114
  02506	ba 51 00 00 00	 mov	 edx, 81			; 00000051H
  0250b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02513	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1115
  02518	ba 1d 00 00 00	 mov	 edx, 29
  0251d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02525	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1117
  0252a	ba 0b 00 00 00	 mov	 edx, 11
  0252f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02537	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1118
  0253c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02544	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  02549	48 89 44 24 28	 mov	 QWORD PTR pMark$[rsp], rax
; Line 1119
  0254e	ba 29 00 00 00	 mov	 edx, 41			; 00000029H
  02553	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0255b	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1120
  02560	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82756
  02567	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  0256f	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 1122
  02574	ba 05 00 00 00	 mov	 edx, 5
  02579	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02581	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1123
  02586	ba 2a 00 00 00	 mov	 edx, 42			; 0000002aH
  0258b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02593	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1124
  02598	ba 51 00 00 00	 mov	 edx, 81			; 00000051H
  0259d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  025a5	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1125
  025aa	ba 1d 00 00 00	 mov	 edx, 29
  025af	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  025b7	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1126
  025bc	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  025c1	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  025c9	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1127
  025ce	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR parser$[rsp]
  025d6	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  025da	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  025dd	ff c0		 inc	 eax
  025df	89 44 24 20	 mov	 DWORD PTR nMark1$[rsp], eax
; Line 1128
  025e3	44 8b 44 24 20	 mov	 r8d, DWORD PTR nMark1$[rsp]
  025e8	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMark$[rsp]
  025ed	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  025f5	e8 00 00 00 00	 call	 simple_parser_icg_addoperandint
$LN1@simple_par:
; Line 1130
  025fa	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  025ff	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR parser$[rsp]
  02607	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 1131
  0260c	b8 01 00 00 00	 mov	 eax, 1
  02611	eb 02		 jmp	 SHORT $LN168@simple_par
$LN3@simple_par:
; Line 1133
  02613	33 c0		 xor	 eax, eax
$LN168@simple_par:
; Line 1134
  02615	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0261d	48 33 cc	 xor	 rcx, rsp
  02620	e8 00 00 00 00	 call	 __security_check_cookie
  02625	48 81 c4 c8 02
	00 00		 add	 rsp, 712		; 000002c8H
  0262c	c3		 ret	 0
simple_parser_stmt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
list2$ = 48
list3$ = 56
string$ = 64
tv587 = 72
tv554 = 80
parser$ = 112
simple_parser_class PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_stmt.c
; Line 20
$LN49:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H
; Line 25
  00009	ba 0f 00 00 00	 mov	 edx, 15
  0000e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00013	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00018	85 c0		 test	 eax, eax
  0001a	0f 84 75 05 00
	00		 je	 $LN46@simple_par
; Line 26
  00020	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00025	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 27
  0002a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0002f	e8 00 00 00 00	 call	 simple_parser_isidentifier
  00034	85 c0		 test	 eax, eax
  00036	0f 84 41 05 00
	00		 je	 $LN45@simple_par
; Line 32
  0003c	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  00041	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00046	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 33
  0004b	ba 03 00 00 00	 mov	 edx, 3
  00050	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00055	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 34
  0005a	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0005f	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  00063	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00068	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 36
  0006d	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00072	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00076	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 38
  0007b	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  00080	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00084	7e 70		 jle	 SHORT $LN44@simple_par
; Line 39
  00086	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0008e	eb 0a		 jmp	 SHORT $LN43@simple_par
$LN42@simple_par:
  00090	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00094	ff c0		 inc	 eax
  00096	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN43@simple_par:
  0009a	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  0009f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000a2	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000a6	7f 4e		 jg	 SHORT $LN41@simple_par
; Line 40
  000a8	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000ac	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000b1	e8 00 00 00 00	 call	 simple_list_getlist
  000b6	ba 01 00 00 00	 mov	 edx, 1
  000bb	48 8b c8	 mov	 rcx, rax
  000be	e8 00 00 00 00	 call	 simple_list_getitem
  000c3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  000cc	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  000d0	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000d3	e8 00 00 00 00	 call	 strcmp
  000d8	85 c0		 test	 eax, eax
  000da	75 18		 jne	 SHORT $LN40@simple_par
; Line 41
  000dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82438
  000e3	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  000e8	e8 00 00 00 00	 call	 parser_error
; Line 42
  000ed	33 c0		 xor	 eax, eax
  000ef	e9 39 0a 00 00	 jmp	 $LN47@simple_par
$LN40@simple_par:
; Line 44
  000f4	eb 9a		 jmp	 SHORT $LN42@simple_par
$LN41@simple_par:
$LN44@simple_par:
; Line 46
  000f6	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000fb	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00100	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00107	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0010c	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 47
  00111	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00116	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  0011a	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0011f	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00124	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0012b	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 48
  00130	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00135	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00139	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0013d	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00142	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00147	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0014e	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 50
  00153	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00158	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0015d	e8 00 00 00 00	 call	 simple_parser_icg_newoperandpointer
; Line 51
  00162	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00167	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 53
  0016c	ba 10 00 00 00	 mov	 edx, 16
  00171	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00176	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0017b	85 c0		 test	 eax, eax
  0017d	75 17		 jne	 SHORT $LN38@simple_par
  0017f	ba 0d 00 00 00	 mov	 edx, 13
  00184	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00189	e8 00 00 00 00	 call	 simple_parser_isoperator2
  0018e	85 c0		 test	 eax, eax
  00190	0f 84 ef 00 00
	00		 je	 $LN39@simple_par
$LN38@simple_par:
; Line 54
  00196	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0019b	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 55
  001a0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  001a5	e8 00 00 00 00	 call	 simple_parser_namedotname
  001aa	85 c0		 test	 eax, eax
  001ac	0f 84 b9 00 00
	00		 je	 $LN37@simple_par
; Line 57
  001b2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  001b7	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  001bc	48 89 44 24 38	 mov	 QWORD PTR list3$[rsp], rax
; Line 59
  001c1	ba 04 00 00 00	 mov	 edx, 4
  001c6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  001cb	e8 00 00 00 00	 call	 simple_list_getitem
  001d0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001d4	48 89 44 24 48	 mov	 QWORD PTR tv587[rsp], rax
  001d9	ba 01 00 00 00	 mov	 edx, 1
  001de	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  001e3	e8 00 00 00 00	 call	 simple_list_getitem
  001e8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ec	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv587[rsp]
  001f1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  001f4	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001f7	e8 00 00 00 00	 call	 strcmp
  001fc	85 c0		 test	 eax, eax
  001fe	75 18		 jne	 SHORT $LN36@simple_par
; Line 60
  00200	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82443
  00207	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0020c	e8 00 00 00 00	 call	 parser_error
; Line 61
  00211	33 c0		 xor	 eax, eax
  00213	e9 15 09 00 00	 jmp	 $LN47@simple_par
$LN36@simple_par:
; Line 64
  00218	ba 04 00 00 00	 mov	 edx, 4
  0021d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  00222	e8 00 00 00 00	 call	 simple_list_getitem
  00227	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0022b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0022e	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00233	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00238	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0023f	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 66
  00244	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00249	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00250	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00253	c1 e8 05	 shr	 eax, 5
  00256	83 e0 01	 and	 eax, 1
  00259	85 c0		 test	 eax, eax
  0025b	74 0c		 je	 SHORT $LN35@simple_par
; Line 68
  0025d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82445
  00264	e8 00 00 00 00	 call	 puts
$LN35@simple_par:
; Line 70
  00269	eb 18		 jmp	 SHORT $LN34@simple_par
$LN37@simple_par:
; Line 71
  0026b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82447
  00272	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00277	e8 00 00 00 00	 call	 parser_error
; Line 72
  0027c	33 c0		 xor	 eax, eax
  0027e	e9 aa 08 00 00	 jmp	 $LN47@simple_par
$LN34@simple_par:
; Line 74
  00283	eb 42		 jmp	 SHORT $LN33@simple_par
$LN39@simple_par:
; Line 76
  00285	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82449
  0028c	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00291	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00296	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0029d	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 78
  002a2	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  002a7	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  002ae	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  002b1	c1 e8 05	 shr	 eax, 5
  002b4	83 e0 01	 and	 eax, 1
  002b7	85 c0		 test	 eax, eax
  002b9	74 0c		 je	 SHORT $LN32@simple_par
; Line 80
  002bb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82451
  002c2	e8 00 00 00 00	 call	 puts
$LN32@simple_par:
$LN33@simple_par:
; Line 84
  002c7	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  002cc	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  002d1	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  002d8	e8 00 00 00 00	 call	 simple_list_newlist_gc
  002dd	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 86
  002e2	45 33 c0	 xor	 r8d, r8d
  002e5	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  002ea	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  002ef	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  002f6	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 88
  002fb	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00300	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00305	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; Line 90
  00309	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0030e	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00315	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0031a	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0031e	48 39 41 50	 cmp	 QWORD PTR [rcx+80], rax
  00322	0f 84 70 01 00
	00		 je	 $LN31@simple_par
; Line 92
  00328	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0032d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00334	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  00338	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0033d	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00344	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00347	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0034b	e8 00 00 00 00	 call	 simple_list_getlist
  00350	48 89 44 24 38	 mov	 QWORD PTR list3$[rsp], rax
; Line 93
  00355	ba 01 00 00 00	 mov	 edx, 1
  0035a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  0035f	e8 00 00 00 00	 call	 simple_list_getitem
  00364	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00368	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0036b	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00370	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00377	e8 00 00 00 00	 call	 simple_string_new_gc
  0037c	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 95
  00381	4c 8b 44 24 38	 mov	 r8, QWORD PTR list3$[rsp]
  00386	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0038b	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00390	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00397	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 97
  0039c	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  003a1	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  003a8	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  003ac	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  003b1	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  003b8	e8 00 00 00 00	 call	 simple_list_newlist_gc
  003bd	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 98
  003c2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82453
  003c9	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  003ce	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  003d3	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  003da	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 99
  003df	4c 8b 44 24 28	 mov	 r8, QWORD PTR list$[rsp]
  003e4	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  003e9	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  003ee	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  003f5	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 101
  003fa	45 33 c0	 xor	 r8d, r8d
  003fd	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  00402	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00407	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0040e	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 103
  00413	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82455
  0041a	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  0041f	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00424	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0042b	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 104
  00430	ba 01 00 00 00	 mov	 edx, 1
  00435	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0043a	e8 00 00 00 00	 call	 simple_list_getitem
  0043f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00443	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00446	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  0044b	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00450	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00457	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 105
  0045c	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  00461	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  00464	41 b8 01 00 00
	00		 mov	 r8d, 1
  0046a	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  0046f	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00474	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0047b	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 106
  00480	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  00485	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0048a	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00491	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 107
  00496	eb 19		 jmp	 SHORT $LN30@simple_par
$LN31@simple_par:
; Line 109
  00498	45 33 c0	 xor	 r8d, r8d
  0049b	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  004a0	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  004a5	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  004ac	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN30@simple_par:
; Line 111
  004b1	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  004b6	c6 40 41 01	 mov	 BYTE PTR [rax+65], 1
; Line 113
  004ba	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  004bf	e8 00 00 00 00	 call	 simple_parser_icg_newlabel2
  004c4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  004c9	89 41 60	 mov	 DWORD PTR [rcx+96], eax
; Line 114
  004cc	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  004d1	c6 40 64 00	 mov	 BYTE PTR [rax+100], 0
; Line 116
  004d5	ba 01 00 00 00	 mov	 edx, 1
  004da	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  004df	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 117
  004e4	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  004e9	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  004f0	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004f4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  004f9	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00500	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00503	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00507	e8 00 00 00 00	 call	 simple_list_getitem
  0050c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00510	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00513	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00518	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 119
  0051d	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  00522	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00527	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 120
  0052c	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00531	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00538	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  0053c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00541	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00548	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0054b	48 8b 49 78	 mov	 rcx, QWORD PTR [rcx+120]
  0054f	e8 00 00 00 00	 call	 simple_list_getitem
  00554	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00557	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0055c	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 122
  00561	41 b8 11 00 00
	00		 mov	 r8d, 17
  00567	ba 01 00 00 00	 mov	 edx, 1
  0056c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00571	e8 00 00 00 00	 call	 simple_parser_bracesandend
  00576	e9 b2 05 00 00	 jmp	 $LN47@simple_par
; Line 123
  0057b	eb 18		 jmp	 SHORT $LN29@simple_par
$LN45@simple_par:
; Line 124
  0057d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82459
  00584	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00589	e8 00 00 00 00	 call	 parser_error
; Line 125
  0058e	33 c0		 xor	 eax, eax
  00590	e9 98 05 00 00	 jmp	 $LN47@simple_par
$LN29@simple_par:
$LN46@simple_par:
; Line 129
  00595	ba 08 00 00 00	 mov	 edx, 8
  0059a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0059f	e8 00 00 00 00	 call	 simple_parser_iskeyword
  005a4	85 c0		 test	 eax, eax
  005a6	0f 84 b7 02 00
	00		 je	 $LN28@simple_par
; Line 130
  005ac	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  005b1	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 131
  005b6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  005bb	e8 00 00 00 00	 call	 simple_parser_isidentifier
  005c0	85 c0		 test	 eax, eax
  005c2	0f 84 83 02 00
	00		 je	 $LN27@simple_par
; Line 136
  005c8	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  005cd	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  005d2	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 137
  005d7	ba 04 00 00 00	 mov	 edx, 4
  005dc	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  005e1	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 138
  005e6	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  005eb	48 8b 50 18	 mov	 rdx, QWORD PTR [rax+24]
  005ef	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  005f4	e8 00 00 00 00	 call	 simple_parser_icg_newoperand
; Line 140
  005f9	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  005fe	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00602	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 142
  00607	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  0060c	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00610	7e 70		 jle	 SHORT $LN26@simple_par
; Line 143
  00612	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0061a	eb 0a		 jmp	 SHORT $LN25@simple_par
$LN24@simple_par:
  0061c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00620	ff c0		 inc	 eax
  00622	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN25@simple_par:
  00626	48 8b 44 24 30	 mov	 rax, QWORD PTR list2$[rsp]
  0062b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0062e	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00632	7f 4e		 jg	 SHORT $LN23@simple_par
; Line 144
  00634	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00638	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0063d	e8 00 00 00 00	 call	 simple_list_getlist
  00642	ba 01 00 00 00	 mov	 edx, 1
  00647	48 8b c8	 mov	 rcx, rax
  0064a	e8 00 00 00 00	 call	 simple_list_getitem
  0064f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00653	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00658	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0065c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0065f	e8 00 00 00 00	 call	 strcmp
  00664	85 c0		 test	 eax, eax
  00666	75 18		 jne	 SHORT $LN22@simple_par
; Line 145
  00668	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82467
  0066f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00674	e8 00 00 00 00	 call	 parser_error
; Line 146
  00679	33 c0		 xor	 eax, eax
  0067b	e9 ad 04 00 00	 jmp	 $LN47@simple_par
$LN22@simple_par:
; Line 148
  00680	eb 9a		 jmp	 SHORT $LN24@simple_par
$LN23@simple_par:
$LN26@simple_par:
; Line 150
  00682	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  00687	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0068c	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00693	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00698	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 151
  0069d	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  006a2	4c 8b 40 18	 mov	 r8, QWORD PTR [rax+24]
  006a6	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  006ab	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  006b0	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  006b7	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 152
  006bc	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  006c1	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  006c5	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  006c9	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  006ce	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  006d3	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  006da	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 153
  006df	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  006e4	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  006eb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  006ef	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  006f4	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  006fb	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  006fe	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00702	e8 00 00 00 00	 call	 simple_list_getitem
  00707	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0070b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0070e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  00713	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00718	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0071f	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 154
  00724	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00729	0f be 40 41	 movsx	 eax, BYTE PTR [rax+65]
  0072d	83 f8 01	 cmp	 eax, 1
  00730	75 24		 jne	 SHORT $LN21@simple_par
; Line 155
  00732	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00737	0f be 40 64	 movsx	 eax, BYTE PTR [rax+100]
  0073b	44 8b c0	 mov	 r8d, eax
  0073e	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  00743	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00748	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0074f	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 156
  00754	eb 19		 jmp	 SHORT $LN20@simple_par
$LN21@simple_par:
; Line 157
  00756	45 33 c0	 xor	 r8d, r8d
  00759	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  0075e	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00763	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0076a	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN20@simple_par:
; Line 159
  0076f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00774	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 160
  00779	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0077e	e8 00 00 00 00	 call	 simple_parser_isidentifier
  00783	85 c0		 test	 eax, eax
  00785	75 13		 jne	 SHORT $LN18@simple_par
  00787	ba 07 00 00 00	 mov	 edx, 7
  0078c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00791	e8 00 00 00 00	 call	 simple_parser_isoperator2
  00796	85 c0		 test	 eax, eax
  00798	74 10		 je	 SHORT $LN19@simple_par
$LN18@simple_par:
; Line 161
  0079a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0079f	e8 00 00 00 00	 call	 simple_parser_paralist
  007a4	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
; Line 162
  007a8	eb 08		 jmp	 SHORT $LN17@simple_par
$LN19@simple_par:
; Line 163
  007aa	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
$LN17@simple_par:
; Line 166
  007b2	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  007b7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  007bc	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 167
  007c1	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  007c6	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  007cd	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  007d1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  007d6	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  007dd	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  007e0	48 8b 49 78	 mov	 rcx, QWORD PTR [rcx+120]
  007e4	e8 00 00 00 00	 call	 simple_list_getitem
  007e9	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  007ec	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  007f1	e8 00 00 00 00	 call	 simple_parser_icg_newoperandint
; Line 168
  007f6	83 7c 24 20 00	 cmp	 DWORD PTR x$[rsp], 0
  007fb	74 17		 je	 SHORT $LN16@simple_par
; Line 170
  007fd	41 b8 11 00 00
	00		 mov	 r8d, 17
  00803	33 d2		 xor	 edx, edx
  00805	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0080a	e8 00 00 00 00	 call	 simple_parser_bracesandend
  0080f	e9 19 03 00 00	 jmp	 $LN47@simple_par
$LN16@simple_par:
; Line 173
  00814	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  00819	75 25		 jne	 SHORT $LN15@simple_par
; Line 174
  0081b	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00820	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00827	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0082a	c1 e8 05	 shr	 eax, 5
  0082d	83 e0 01	 and	 eax, 1
  00830	85 c0		 test	 eax, eax
  00832	74 0c		 je	 SHORT $LN14@simple_par
; Line 176
  00834	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82476
  0083b	e8 00 00 00 00	 call	 puts
$LN14@simple_par:
$LN15@simple_par:
; Line 179
  00840	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00844	e9 e4 02 00 00	 jmp	 $LN47@simple_par
; Line 180
  00849	eb 18		 jmp	 SHORT $LN13@simple_par
$LN27@simple_par:
; Line 181
  0084b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82478
  00852	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00857	e8 00 00 00 00	 call	 parser_error
; Line 182
  0085c	33 c0		 xor	 eax, eax
  0085e	e9 ca 02 00 00	 jmp	 $LN47@simple_par
$LN13@simple_par:
$LN28@simple_par:
; Line 186
  00863	ba 1c 00 00 00	 mov	 edx, 28
  00868	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0086d	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00872	85 c0		 test	 eax, eax
  00874	0f 84 a8 01 00
	00		 je	 $LN12@simple_par
; Line 187
  0087a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0087f	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 189
  00884	ba 4e 00 00 00	 mov	 edx, 78			; 0000004eH
  00889	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0088e	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 191
  00893	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00898	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0089f	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  008a2	c1 e8 05	 shr	 eax, 5
  008a5	83 e0 01	 and	 eax, 1
  008a8	85 c0		 test	 eax, eax
  008aa	74 0c		 je	 SHORT $LN11@simple_par
; Line 193
  008ac	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82481
  008b3	e8 00 00 00 00	 call	 puts
$LN11@simple_par:
; Line 195
  008b8	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  008bd	e8 00 00 00 00	 call	 simple_parser_namedotname
  008c2	85 c0		 test	 eax, eax
  008c4	0f 84 51 01 00
	00		 je	 $LN10@simple_par
; Line 197
  008ca	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  008cf	e8 00 00 00 00	 call	 simple_parser_icg_getactiveoperation
  008d4	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 199
  008d9	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  008e1	eb 0a		 jmp	 SHORT $LN9@simple_par
$LN8@simple_par:
  008e3	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  008e7	ff c0		 inc	 eax
  008e9	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN9@simple_par:
  008ed	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  008f2	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  008f9	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  008fd	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00900	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00904	0f 8f 84 00 00
	00		 jg	 $LN7@simple_par
; Line 200
  0090a	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  0090f	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00916	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0091a	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0091e	e8 00 00 00 00	 call	 simple_list_getlist
  00923	48 89 44 24 38	 mov	 QWORD PTR list3$[rsp], rax
; Line 201
  00928	ba 02 00 00 00	 mov	 edx, 2
  0092d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00932	e8 00 00 00 00	 call	 simple_list_getitem
  00937	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0093b	48 89 44 24 50	 mov	 QWORD PTR tv554[rsp], rax
  00940	ba 01 00 00 00	 mov	 edx, 1
  00945	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  0094a	e8 00 00 00 00	 call	 simple_list_getitem
  0094f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00953	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv554[rsp]
  00958	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0095b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0095e	e8 00 00 00 00	 call	 strcmp
  00963	85 c0		 test	 eax, eax
  00965	75 22		 jne	 SHORT $LN6@simple_par
; Line 202
  00967	ba 02 00 00 00	 mov	 edx, 2
  0096c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  00971	e8 00 00 00 00	 call	 simple_list_getlist
  00976	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  0097b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
; Line 203
  0097f	b8 01 00 00 00	 mov	 eax, 1
  00984	e9 a4 01 00 00	 jmp	 $LN47@simple_par
$LN6@simple_par:
; Line 205
  00989	e9 55 ff ff ff	 jmp	 $LN8@simple_par
$LN7@simple_par:
; Line 206
  0098e	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00993	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0099a	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0099e	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  009a3	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  009aa	e8 00 00 00 00	 call	 simple_list_newlist_gc
  009af	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 208
  009b4	ba 02 00 00 00	 mov	 edx, 2
  009b9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  009be	e8 00 00 00 00	 call	 simple_list_getitem
  009c3	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  009c7	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  009ca	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  009cf	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  009d4	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  009db	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 210
  009e0	48 8b 54 24 30	 mov	 rdx, QWORD PTR list2$[rsp]
  009e5	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  009ea	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  009f1	e8 00 00 00 00	 call	 simple_list_newlist_gc
  009f6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  009fb	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
; Line 212
  009ff	41 b8 11 00 00
	00		 mov	 r8d, 17
  00a05	ba 01 00 00 00	 mov	 edx, 1
  00a0a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00a0f	e8 00 00 00 00	 call	 simple_parser_bracesandend
  00a14	e9 14 01 00 00	 jmp	 $LN47@simple_par
; Line 213
  00a19	eb 07		 jmp	 SHORT $LN5@simple_par
$LN10@simple_par:
; Line 214
  00a1b	33 c0		 xor	 eax, eax
  00a1d	e9 0b 01 00 00	 jmp	 $LN47@simple_par
$LN5@simple_par:
$LN12@simple_par:
; Line 218
  00a22	ba 1d 00 00 00	 mov	 edx, 29
  00a27	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00a2c	e8 00 00 00 00	 call	 simple_parser_iskeyword
  00a31	85 c0		 test	 eax, eax
  00a33	0f 84 ea 00 00
	00		 je	 $LN4@simple_par
; Line 219
  00a39	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00a3e	e8 00 00 00 00	 call	 simple_parser_nexttoken
; Line 220
  00a43	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00a48	0f be 40 41	 movsx	 eax, BYTE PTR [rax+65]
  00a4c	83 f8 01	 cmp	 eax, 1
  00a4f	0f 85 b9 00 00
	00		 jne	 $LN3@simple_par
; Line 222
  00a55	ba 2c 00 00 00	 mov	 edx, 44			; 0000002cH
  00a5a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00a5f	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 224
  00a64	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00a69	8b 50 60	 mov	 edx, DWORD PTR [rax+96]
  00a6c	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00a71	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
  00a75	e8 00 00 00 00	 call	 simple_list_getlist
  00a7a	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 225
  00a7f	41 b9 36 00 00
	00		 mov	 r9d, 54			; 00000036H
  00a85	41 b8 01 00 00
	00		 mov	 r8d, 1
  00a8b	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00a90	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00a95	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00a9c	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 226
  00aa1	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00aa6	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00aaa	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00aad	ff c0		 inc	 eax
  00aaf	44 8b c0	 mov	 r8d, eax
  00ab2	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00ab7	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00abc	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00ac3	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 227
  00ac8	ba 08 00 00 00	 mov	 edx, 8
  00acd	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00ad2	e8 00 00 00 00	 call	 simple_parser_icg_newoperation
; Line 229
  00ad7	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00adc	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00ae3	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00ae6	c1 e8 05	 shr	 eax, 5
  00ae9	83 e0 01	 and	 eax, 1
  00aec	85 c0		 test	 eax, eax
  00aee	74 0c		 je	 SHORT $LN2@simple_par
; Line 231
  00af0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82491
  00af7	e8 00 00 00 00	 call	 puts
$LN2@simple_par:
; Line 233
  00afc	48 8b 44 24 70	 mov	 rax, QWORD PTR parser$[rsp]
  00b01	c6 40 64 01	 mov	 BYTE PTR [rax+100], 1
; Line 234
  00b05	b8 01 00 00 00	 mov	 eax, 1
  00b0a	eb 21		 jmp	 SHORT $LN47@simple_par
; Line 235
  00b0c	eb 15		 jmp	 SHORT $LN1@simple_par
$LN3@simple_par:
; Line 236
  00b0e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82493
  00b15	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00b1a	e8 00 00 00 00	 call	 parser_error
; Line 237
  00b1f	33 c0		 xor	 eax, eax
  00b21	eb 0a		 jmp	 SHORT $LN47@simple_par
$LN1@simple_par:
$LN4@simple_par:
; Line 240
  00b23	48 8b 4c 24 70	 mov	 rcx, QWORD PTR parser$[rsp]
  00b28	e8 00 00 00 00	 call	 simple_parser_stmt
$LN47@simple_par:
; Line 241
  00b2d	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00b31	c3		 ret	 0
simple_parser_class ENDP
_TEXT	ENDS
END
