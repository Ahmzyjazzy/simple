; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG82460 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82472 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82485 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82503 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82519 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82536 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82577 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
	ORG $+5
$SG82582 DB	'RUNTIME ERROR 24 : Using bad data type in for loop', 00H
_DATA	ENDS
PUBLIC	simple_vm_jump
PUBLIC	simple_vm_jumpzero
PUBLIC	simple_vm_jumpfor
PUBLIC	simple_vm_jumpone
PUBLIC	simple_vm_jumpzero2
PUBLIC	simple_vm_jumpone2
PUBLIC	simple_vm_pushp
PUBLIC	simple_vm_incp
PUBLIC	simple_vm_pushpv
PUBLIC	simple_vm_incjump
PUBLIC	simple_vm_incpjump
PUBLIC	simple_vm_jumpvarlenum
PUBLIC	simple_vm_jumpvarplenum
PUBLIC	simple_vm_loadblockp
PUBLIC	simple_vm_pushplocal
PUBLIC	simple_vm_inclpjump
PUBLIC	simple_vm_jumpvarlplenum
PUBLIC	simple_vm_incpjumpstep1
PUBLIC	simple_vm_jumpvarplenumstep1
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
EXTRN	simple_string_size:PROC
EXTRN	simple_item_setpointer_gc:PROC
EXTRN	simple_item_setint_gc:PROC
EXTRN	simple_itemarray_setpointer:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_setdouble_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_isnumber:PROC
EXTRN	simple_list_isstring:PROC
EXTRN	simple_list_deliteminsidelist:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_stringtonum:PROC
EXTRN	simple_vm_findvar:PROC
EXTRN	simple_vm_newvar:PROC
EXTRN	simple_vm_saveloadaddressscope:PROC
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_jumpzero DD imagerel $LN5
	DD	imagerel $LN5+121
	DD	imagerel $unwind$simple_vm_jumpzero
$pdata$simple_vm_jumpfor DD imagerel $LN15
	DD	imagerel $LN15+555
	DD	imagerel $unwind$simple_vm_jumpfor
$pdata$simple_vm_jumpone DD imagerel $LN6
	DD	imagerel $LN6+121
	DD	imagerel $unwind$simple_vm_jumpone
$pdata$simple_vm_jumpzero2 DD imagerel $LN5
	DD	imagerel $LN5+184
	DD	imagerel $unwind$simple_vm_jumpzero2
$pdata$simple_vm_jumpone2 DD imagerel $LN6
	DD	imagerel $LN6+179
	DD	imagerel $unwind$simple_vm_jumpone2
$pdata$simple_vm_pushp DD imagerel $LN3
	DD	imagerel $LN3+200
	DD	imagerel $unwind$simple_vm_pushp
$pdata$simple_vm_incp DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$simple_vm_incp
$pdata$simple_vm_pushpv DD imagerel $LN6
	DD	imagerel $LN6+273
	DD	imagerel $unwind$simple_vm_pushpv
$pdata$simple_vm_incjump DD imagerel $LN13
	DD	imagerel $LN13+809
	DD	imagerel $unwind$simple_vm_incjump
$pdata$simple_vm_incpjump DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$simple_vm_incpjump
$pdata$simple_vm_jumpvarlenum DD imagerel $LN17
	DD	imagerel $LN17+893
	DD	imagerel $unwind$simple_vm_jumpvarlenum
$pdata$simple_vm_jumpvarplenum DD imagerel $LN11
	DD	imagerel $LN11+378
	DD	imagerel $unwind$simple_vm_jumpvarplenum
$pdata$simple_vm_loadblockp DD imagerel $LN3
	DD	imagerel $LN3+556
	DD	imagerel $unwind$simple_vm_loadblockp
$pdata$simple_vm_pushplocal DD imagerel $LN4
	DD	imagerel $LN4+382
	DD	imagerel $unwind$simple_vm_pushplocal
$pdata$simple_vm_inclpjump DD imagerel $LN8
	DD	imagerel $LN8+476
	DD	imagerel $unwind$simple_vm_inclpjump
$pdata$simple_vm_jumpvarlplenum DD imagerel $LN12
	DD	imagerel $LN12+472
	DD	imagerel $unwind$simple_vm_jumpvarlplenum
$pdata$simple_vm_incpjumpstep1 DD imagerel $LN3
	DD	imagerel $LN3+154
	DD	imagerel $unwind$simple_vm_incpjumpstep1
$pdata$simple_vm_jumpvarplenumstep1 DD imagerel $LN4
	DD	imagerel $LN4+147
	DD	imagerel $unwind$simple_vm_jumpvarplenumstep1
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_jumpzero DD 010901H
	DD	04209H
$unwind$simple_vm_jumpfor DD 010901H
	DD	08209H
$unwind$simple_vm_jumpone DD 010901H
	DD	04209H
$unwind$simple_vm_jumpzero2 DD 010901H
	DD	04209H
$unwind$simple_vm_jumpone2 DD 010901H
	DD	04209H
$unwind$simple_vm_pushp DD 010901H
	DD	06209H
$unwind$simple_vm_incp DD 010901H
	DD	06209H
$unwind$simple_vm_pushpv DD 010901H
	DD	08209H
$unwind$simple_vm_incjump DD 010901H
	DD	08209H
$unwind$simple_vm_incpjump DD 010901H
	DD	08209H
$unwind$simple_vm_jumpvarlenum DD 010901H
	DD	08209H
$unwind$simple_vm_jumpvarplenum DD 010901H
	DD	08209H
$unwind$simple_vm_loadblockp DD 010901H
	DD	06209H
$unwind$simple_vm_pushplocal DD 010901H
	DD	06209H
$unwind$simple_vm_inclpjump DD 010901H
	DD	08209H
$unwind$simple_vm_jumpvarlplenum DD 010901H
	DD	08209H
$unwind$simple_vm_incpjumpstep1 DD 010901H
	DD	06209H
$unwind$simple_vm_jumpvarplenumstep1 DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum1$ = 40
vm$ = 64
simple_vm_jumpvarplenumstep1 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 321
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 324
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 326
  0002b	ba 03 00 00 00	 mov	 edx, 3
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_getitem
  0003a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0003f	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 327
  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00051	b9 08 00 00 00	 mov	 ecx, 8
  00056	48 6b c9 02	 imul	 rcx, 2
  0005a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0005e	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00064	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [rax+8]
  00069	76 23		 jbe	 SHORT $LN1@simple_vm_
; Line 329
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00070	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00077	b9 08 00 00 00	 mov	 ecx, 8
  0007c	48 6b c9 03	 imul	 rcx, 3
  00080	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00089	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0008c	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@simple_vm_:
; Line 331
  0008e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00092	c3		 ret	 0
simple_vm_jumpvarplenumstep1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum1$ = 40
vm$ = 64
simple_vm_incpjumpstep1 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 309
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 312
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 314
  0002b	ba 03 00 00 00	 mov	 edx, 3
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_getitem
  0003a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0003f	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 315
  00045	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0004b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00053	0f 28 d8	 movaps	 xmm3, xmm0
  00056	41 b8 03 00 00
	00		 mov	 r8d, 3
  0005c	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  00061	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00066	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0006d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 317
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00077	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0007e	b9 08 00 00 00	 mov	 ecx, 8
  00083	48 6b c9 02	 imul	 rcx, 2
  00087	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0008b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00090	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00093	89 01		 mov	 DWORD PTR [rcx], eax
; Line 318
  00095	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00099	c3		 ret	 0
simple_vm_incpjumpstep1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_jumpvarlplenum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 248
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 252
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 05	 imul	 rcx, 5
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 89 f8 18 00
	00		 mov	 ecx, DWORD PTR [rcx+6392]
  0002d	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00030	74 35		 je	 SHORT $LN9@simple_vm_
; Line 253
  00032	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00037	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0003e	b9 08 00 00 00	 mov	 ecx, 8
  00043	48 6b c9 00	 imul	 rcx, 0
  00047	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0004b	c7 40 08 3f 00
	00 00		 mov	 DWORD PTR [rax+8], 63	; 0000003fH
; Line 259
  00052	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	ff c8		 dec	 eax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00060	89 01		 mov	 DWORD PTR [rcx], eax
; Line 260
  00062	e9 6c 01 00 00	 jmp	 $LN10@simple_vm_
$LN9@simple_vm_:
; Line 262
  00067	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00073	b9 08 00 00 00	 mov	 ecx, 8
  00078	48 6b c9 04	 imul	 rcx, 4
  0007c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00080	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00084	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 263
  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008e	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  00095	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00098	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0009d	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  000a4	e8 00 00 00 00	 call	 simple_list_getitem
  000a9	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000ae	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 265
  000b4	ba 03 00 00 00	 mov	 edx, 3
  000b9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000be	e8 00 00 00 00	 call	 simple_list_isstring
  000c3	85 c0		 test	 eax, eax
  000c5	74 28		 je	 SHORT $LN8@simple_vm_
; Line 266
  000c7	ba 03 00 00 00	 mov	 edx, 3
  000cc	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000d1	e8 00 00 00 00	 call	 simple_list_getitem
  000d6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000da	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000dd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e2	e8 00 00 00 00	 call	 simple_vm_stringtonum
  000e7	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000ed	eb 45		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 268
  000ef	ba 03 00 00 00	 mov	 edx, 3
  000f4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000f9	e8 00 00 00 00	 call	 simple_list_isnumber
  000fe	85 c0		 test	 eax, eax
  00100	74 1c		 je	 SHORT $LN6@simple_vm_
; Line 269
  00102	ba 03 00 00 00	 mov	 edx, 3
  00107	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0010c	e8 00 00 00 00	 call	 simple_list_getitem
  00111	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00116	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 270
  0011c	eb 16		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 271
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82536
  00125	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0012a	e8 00 00 00 00	 call	 simple_vm_error
; Line 272
  0012f	e9 9f 00 00 00	 jmp	 $LN10@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 274
  00134	0f 57 c0	 xorps	 xmm0, xmm0
  00137	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  0013d	76 4b		 jbe	 SHORT $LN4@simple_vm_
; Line 275
  0013f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00144	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0014b	b9 08 00 00 00	 mov	 ecx, 8
  00150	48 6b c9 02	 imul	 rcx, 2
  00154	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00158	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0015e	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [rax+8]
  00163	73 23		 jae	 SHORT $LN3@simple_vm_
; Line 277
  00165	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0016a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00171	b9 08 00 00 00	 mov	 ecx, 8
  00176	48 6b c9 03	 imul	 rcx, 3
  0017a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0017e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00183	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00186	89 01		 mov	 DWORD PTR [rcx], eax
$LN3@simple_vm_:
; Line 279
  00188	eb 49		 jmp	 SHORT $LN2@simple_vm_
$LN4@simple_vm_:
; Line 280
  0018a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0018f	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00196	b9 08 00 00 00	 mov	 ecx, 8
  0019b	48 6b c9 02	 imul	 rcx, 2
  0019f	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  001a3	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001a8	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  001ae	73 23		 jae	 SHORT $LN1@simple_vm_
; Line 282
  001b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b5	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  001bc	b9 08 00 00 00	 mov	 ecx, 8
  001c1	48 6b c9 03	 imul	 rcx, 3
  001c5	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  001c9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ce	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001d1	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN10@simple_vm_:
; Line 285
  001d3	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001d7	c3		 ret	 0
simple_vm_jumpvarlplenum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_inclpjump PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 130
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 134
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 04	 imul	 rcx, 4
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 89 f8 18 00
	00		 mov	 ecx, DWORD PTR [rcx+6392]
  0002d	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00030	0f 84 89 00 00
	00		 je	 $LN5@simple_vm_
; Line 135
  00036	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00042	b9 08 00 00 00	 mov	 ecx, 8
  00047	48 6b c9 00	 imul	 rcx, 0
  0004b	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0004f	c7 40 08 3d 00
	00 00		 mov	 DWORD PTR [rax+8], 61	; 0000003dH
; Line 136
  00056	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0005b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00062	b9 08 00 00 00	 mov	 ecx, 8
  00067	48 6b c9 03	 imul	 rcx, 3
  0006b	48 8b 14 08	 mov	 rdx, QWORD PTR [rax+rcx]
  0006f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00074	48 8b 88 78 19
	00 00		 mov	 rcx, QWORD PTR [rax+6520]
  0007b	e8 00 00 00 00	 call	 simple_list_deliteminsidelist
; Line 137
  00080	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00085	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0008c	b9 08 00 00 00	 mov	 ecx, 8
  00091	48 6b c9 04	 imul	 rcx, 4
  00095	48 8b 14 08	 mov	 rdx, QWORD PTR [rax+rcx]
  00099	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0009e	48 8b 88 78 19
	00 00		 mov	 rcx, QWORD PTR [rax+6520]
  000a5	e8 00 00 00 00	 call	 simple_list_deliteminsidelist
; Line 143
  000aa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000af	8b 00		 mov	 eax, DWORD PTR [rax]
  000b1	ff c8		 dec	 eax
  000b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b8	89 01		 mov	 DWORD PTR [rcx], eax
; Line 144
  000ba	e9 18 01 00 00	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
; Line 146
  000bf	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c4	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000cb	b9 08 00 00 00	 mov	 ecx, 8
  000d0	48 6b c9 03	 imul	 rcx, 3
  000d4	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000d8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000dc	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 147
  000e1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e6	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  000ed	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000f0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f5	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  000fc	e8 00 00 00 00	 call	 simple_list_getitem
  00101	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00106	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 149
  0010c	ba 03 00 00 00	 mov	 edx, 3
  00111	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00116	e8 00 00 00 00	 call	 simple_list_isstring
  0011b	85 c0		 test	 eax, eax
  0011d	74 28		 je	 SHORT $LN4@simple_vm_
; Line 150
  0011f	ba 03 00 00 00	 mov	 edx, 3
  00124	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00129	e8 00 00 00 00	 call	 simple_list_getitem
  0012e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00132	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00135	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0013a	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0013f	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00145	eb 42		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 152
  00147	ba 03 00 00 00	 mov	 edx, 3
  0014c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00151	e8 00 00 00 00	 call	 simple_list_isnumber
  00156	85 c0		 test	 eax, eax
  00158	74 1c		 je	 SHORT $LN2@simple_vm_
; Line 153
  0015a	ba 03 00 00 00	 mov	 edx, 3
  0015f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00164	e8 00 00 00 00	 call	 simple_list_getitem
  00169	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0016e	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 154
  00174	eb 13		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 155
  00176	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82485
  0017d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	e8 00 00 00 00	 call	 simple_vm_error
; Line 156
  00187	eb 4e		 jmp	 SHORT $LN6@simple_vm_
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 158
  00189	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0018f	f2 0f 58 44 24
	30		 addsd	 xmm0, QWORD PTR nNum1$[rsp]
  00195	0f 28 d8	 movaps	 xmm3, xmm0
  00198	41 b8 03 00 00
	00		 mov	 r8d, 3
  0019e	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  001a3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001af	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 160
  001b4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b9	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  001c0	b9 08 00 00 00	 mov	 ecx, 8
  001c5	48 6b c9 02	 imul	 rcx, 2
  001c9	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  001cd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d2	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001d5	89 01		 mov	 DWORD PTR [rcx], eax
$LN6@simple_vm_:
; Line 161
  001d7	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001db	c3		 ret	 0
simple_vm_inclpjump ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv139 = 32
vm$ = 64
simple_vm_pushplocal PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 26
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 28
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 04	 imul	 rcx, 4
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 89 f8 18 00
	00		 mov	 ecx, DWORD PTR [rcx+6392]
  0002d	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00030	0f 84 89 00 00
	00		 je	 $LN1@simple_vm_
; Line 29
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00042	b9 08 00 00 00	 mov	 ecx, 8
  00047	48 6b c9 00	 imul	 rcx, 0
  0004b	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0004f	c7 40 08 10 00
	00 00		 mov	 DWORD PTR [rax+8], 16
; Line 30
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00062	b9 08 00 00 00	 mov	 ecx, 8
  00067	48 6b c9 03	 imul	 rcx, 3
  0006b	48 8b 14 08	 mov	 rdx, QWORD PTR [rax+rcx]
  0006f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00074	48 8b 88 78 19
	00 00		 mov	 rcx, QWORD PTR [rax+6520]
  0007b	e8 00 00 00 00	 call	 simple_list_deliteminsidelist
; Line 31
  00080	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00085	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0008c	b9 08 00 00 00	 mov	 ecx, 8
  00091	48 6b c9 04	 imul	 rcx, 4
  00095	48 8b 14 08	 mov	 rdx, QWORD PTR [rax+rcx]
  00099	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0009e	48 8b 88 78 19
	00 00		 mov	 rcx, QWORD PTR [rax+6520]
  000a5	e8 00 00 00 00	 call	 simple_list_deliteminsidelist
; Line 37
  000aa	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000af	8b 00		 mov	 eax, DWORD PTR [rax]
  000b1	ff c8		 dec	 eax
  000b3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000b8	89 01		 mov	 DWORD PTR [rcx], eax
; Line 38
  000ba	e9 ba 00 00 00	 jmp	 $LN2@simple_vm_
$LN1@simple_vm_:
; Line 40
  000bf	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cb	fe c0		 inc	 al
  000cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d2	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000d8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000dd	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000e4	b9 08 00 00 00	 mov	 ecx, 8
  000e9	48 6b c9 03	 imul	 rcx, 3
  000ed	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000f1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f6	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  000fd	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00102	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00106	48 89 54 24 20	 mov	 QWORD PTR tv139[rsp], rdx
  0010b	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0010f	8b d1		 mov	 edx, ecx
  00111	48 8b 44 24 20	 mov	 rax, QWORD PTR tv139[rsp]
  00116	48 8b c8	 mov	 rcx, rax
  00119	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 41
  0011e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00123	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012a	48 6b c0 18	 imul	 rax, 24
  0012e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00133	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00137	83 e0 9f	 and	 eax, -97		; ffffff9fH
  0013a	83 c8 20	 or	 eax, 32			; 00000020H
  0013d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00142	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00149	48 6b c9 18	 imul	 rcx, 24
  0014d	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00152	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 43
  00156	41 b8 01 00 00
	00		 mov	 r8d, 1
  0015c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00161	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  00168	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0016d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00174	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN2@simple_vm_:
; Line 44
  00179	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017d	c3		 ret	 0
simple_vm_pushplocal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_loadblockp PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 288
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 290
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  00014	ff c0		 inc	 eax
  00016	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001b	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 291
  00021	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00026	8b 80 70 19 00
	00		 mov	 eax, DWORD PTR [rax+6512]
  0002c	ff c0		 inc	 eax
  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00033	89 81 70 19 00
	00		 mov	 DWORD PTR [rcx+6512], eax
; Line 292
  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003e	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00051	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00056	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 293
  0005b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00060	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00067	b9 08 00 00 00	 mov	 ecx, 8
  0006c	48 6b c9 03	 imul	 rcx, 3
  00070	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00074	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00078	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00082	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00089	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 294
  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00093	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0009a	b9 08 00 00 00	 mov	 ecx, 8
  0009f	48 6b c9 01	 imul	 rcx, 1
  000a3	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000a7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ab	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000ae	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000b3	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000bf	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 295
  000c4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c9	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000d0	b9 08 00 00 00	 mov	 ecx, 8
  000d5	48 6b c9 02	 imul	 rcx, 2
  000d9	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000dd	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  000e1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000e6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000eb	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000f2	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 296
  000f7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000fc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00103	44 8b c0	 mov	 r8d, eax
  00106	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0010b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00110	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00117	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 297
  0011c	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00121	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00126	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0012d	e8 00 00 00 00	 call	 simple_list_newlist_gc
; Line 298
  00132	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00137	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  0013e	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00143	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00148	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0014f	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 299
  00154	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00159	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0015e	48 8b 89 60 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6240]
  00165	48 89 88 c0 19
	00 00		 mov	 QWORD PTR [rax+6592], rcx
; Line 300
  0016c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00171	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00178	b9 08 00 00 00	 mov	 ecx, 8
  0017d	48 6b c9 04	 imul	 rcx, 4
  00181	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00185	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0018a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0018e	48 89 81 60 18
	00 00		 mov	 QWORD PTR [rcx+6240], rax
; Line 301
  00195	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0019a	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  001a1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  001a6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ab	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001b2	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 302
  001b7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001bc	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  001c3	b9 08 00 00 00	 mov	 ecx, 8
  001c8	48 6b c9 05	 imul	 rcx, 5
  001cc	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  001d0	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  001d4	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  001d9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 303
  001ea	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ef	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  001f6	b9 08 00 00 00	 mov	 ecx, 8
  001fb	48 6b c9 06	 imul	 rcx, 6
  001ff	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00203	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00207	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0020c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00211	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00218	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 304
  0021d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00222	e8 00 00 00 00	 call	 simple_vm_saveloadaddressscope
; Line 305
  00227	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0022b	c3		 ret	 0
simple_vm_loadblockp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_jumpvarplenum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 219
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 222
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 223
  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  00037	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003f	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  00046	e8 00 00 00 00	 call	 simple_list_getitem
  0004b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00050	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 225
  00056	ba 03 00 00 00	 mov	 edx, 3
  0005b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00060	e8 00 00 00 00	 call	 simple_list_isstring
  00065	85 c0		 test	 eax, eax
  00067	74 28		 je	 SHORT $LN8@simple_vm_
; Line 226
  00069	ba 03 00 00 00	 mov	 edx, 3
  0006e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00073	e8 00 00 00 00	 call	 simple_list_getitem
  00078	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00084	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00089	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0008f	eb 45		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 228
  00091	ba 03 00 00 00	 mov	 edx, 3
  00096	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_list_isnumber
  000a0	85 c0		 test	 eax, eax
  000a2	74 1c		 je	 SHORT $LN6@simple_vm_
; Line 229
  000a4	ba 03 00 00 00	 mov	 edx, 3
  000a9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000ae	e8 00 00 00 00	 call	 simple_list_getitem
  000b3	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000b8	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 230
  000be	eb 16		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 231
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82519
  000c7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000cc	e8 00 00 00 00	 call	 simple_vm_error
; Line 232
  000d1	e9 9f 00 00 00	 jmp	 $LN9@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 234
  000d6	0f 57 c0	 xorps	 xmm0, xmm0
  000d9	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  000df	76 4b		 jbe	 SHORT $LN4@simple_vm_
; Line 235
  000e1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e6	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000ed	b9 08 00 00 00	 mov	 ecx, 8
  000f2	48 6b c9 02	 imul	 rcx, 2
  000f6	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000fa	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00100	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [rax+8]
  00105	73 23		 jae	 SHORT $LN3@simple_vm_
; Line 237
  00107	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00113	b9 08 00 00 00	 mov	 ecx, 8
  00118	48 6b c9 03	 imul	 rcx, 3
  0011c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00120	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00125	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00128	89 01		 mov	 DWORD PTR [rcx], eax
$LN3@simple_vm_:
; Line 239
  0012a	eb 49		 jmp	 SHORT $LN2@simple_vm_
$LN4@simple_vm_:
; Line 240
  0012c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00131	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00138	b9 08 00 00 00	 mov	 ecx, 8
  0013d	48 6b c9 02	 imul	 rcx, 2
  00141	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00145	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0014a	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  00150	73 23		 jae	 SHORT $LN1@simple_vm_
; Line 242
  00152	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00157	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0015e	b9 08 00 00 00	 mov	 ecx, 8
  00163	48 6b c9 03	 imul	 rcx, 3
  00167	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0016b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00170	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00173	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
; Line 245
  00175	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00179	c3		 ret	 0
simple_vm_jumpvarplenum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_jumpvarlenum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 164
$LN17:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 167
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_findvar
  00033	85 c0		 test	 eax, eax
  00035	75 2a		 jne	 SHORT $LN14@simple_vm_
; Line 168
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	48 6b c9 01	 imul	 rcx, 1
  0004c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00057	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_newvar
$LN14@simple_vm_:
; Line 170
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  0006d	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00070	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00075	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  0007c	e8 00 00 00 00	 call	 simple_list_getitem
  00081	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00086	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 172
  0008c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00091	83 b8 e8 18 00
	00 03		 cmp	 DWORD PTR [rax+6376], 3
  00098	0f 85 9d 00 00
	00		 jne	 $LN13@simple_vm_
; Line 174
  0009e	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000a4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  000ac	7a 24		 jp	 SHORT $LN12@simple_vm_
  000ae	75 22		 jne	 SHORT $LN12@simple_vm_
; Line 175
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000bc	b9 08 00 00 00	 mov	 ecx, 8
  000c1	48 6b c9 00	 imul	 rcx, 0
  000c5	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000c9	c7 40 08 63 00
	00 00		 mov	 DWORD PTR [rax+8], 99	; 00000063H
; Line 176
  000d0	eb 20		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 177
  000d2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000de	b9 08 00 00 00	 mov	 ecx, 8
  000e3	48 6b c9 00	 imul	 rcx, 0
  000e7	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000eb	c7 40 08 40 00
	00 00		 mov	 DWORD PTR [rax+8], 64	; 00000040H
$LN11@simple_vm_:
; Line 179
  000f2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fe	48 6b c0 18	 imul	 rax, 24
  00102	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00107	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  0010e	ba 08 00 00 00	 mov	 edx, 8
  00113	48 6b d2 01	 imul	 rdx, 1
  00117	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  0011c	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  00121	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00125	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00131	e8 00 00 00 00	 call	 simple_item_setpointer_gc
  00136	e9 c4 00 00 00	 jmp	 $LN10@simple_vm_
$LN13@simple_vm_:
; Line 181
  0013b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00140	83 b8 e8 18 00
	00 01		 cmp	 DWORD PTR [rax+6376], 1
  00147	0f 85 b2 00 00
	00		 jne	 $LN9@simple_vm_
; Line 183
  0014d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00152	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00159	b9 08 00 00 00	 mov	 ecx, 8
  0015e	48 6b c9 00	 imul	 rcx, 0
  00162	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00166	c7 40 08 4d 00
	00 00		 mov	 DWORD PTR [rax+8], 77	; 0000004dH
; Line 184
  0016d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00172	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00179	48 6b c0 18	 imul	 rax, 24
  0017d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  00189	ba 08 00 00 00	 mov	 edx, 8
  0018e	48 6b d2 04	 imul	 rdx, 4
  00192	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  00197	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  0019c	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001a0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ac	e8 00 00 00 00	 call	 simple_item_setpointer_gc
; Line 185
  001b1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b6	48 8b 80 f0 18
	00 00		 mov	 rax, QWORD PTR [rax+6384]
  001bd	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  001c0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c5	48 8b 88 f0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6384]
  001cc	e8 00 00 00 00	 call	 simple_list_getitem
  001d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d6	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  001dd	ba 08 00 00 00	 mov	 edx, 8
  001e2	48 6b d2 05	 imul	 rdx, 5
  001e6	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  001ea	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001ee	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001fa	e8 00 00 00 00	 call	 simple_item_setint_gc
$LN9@simple_vm_:
$LN10@simple_vm_:
; Line 192
  001ff	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00204	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0020b	48 6b c0 18	 imul	 rax, 24
  0020f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00214	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00219	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 193
  0021e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00223	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0022a	fe c8		 dec	 al
  0022c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00231	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 195
  00237	ba 03 00 00 00	 mov	 edx, 3
  0023c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00241	e8 00 00 00 00	 call	 simple_list_isstring
  00246	85 c0		 test	 eax, eax
  00248	74 4a		 je	 SHORT $LN8@simple_vm_
; Line 196
  0024a	ba 03 00 00 00	 mov	 edx, 3
  0024f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00254	e8 00 00 00 00	 call	 simple_list_getitem
  00259	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0025d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00260	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00265	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0026a	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 197
  00270	f2 0f 10 5c 24
	28		 movsdx	 xmm3, QWORD PTR nNum2$[rsp]
  00276	41 b8 03 00 00
	00		 mov	 r8d, 3
  0027c	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  00281	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00286	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0028d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00292	eb 45		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 199
  00294	ba 03 00 00 00	 mov	 edx, 3
  00299	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0029e	e8 00 00 00 00	 call	 simple_list_isnumber
  002a3	85 c0		 test	 eax, eax
  002a5	74 1c		 je	 SHORT $LN6@simple_vm_
; Line 200
  002a7	ba 03 00 00 00	 mov	 edx, 3
  002ac	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  002b1	e8 00 00 00 00	 call	 simple_list_getitem
  002b6	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002bb	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 201
  002c1	eb 16		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 202
  002c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82503
  002ca	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002cf	e8 00 00 00 00	 call	 simple_vm_error
; Line 203
  002d4	e9 9f 00 00 00	 jmp	 $LN15@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 205
  002d9	0f 57 c0	 xorps	 xmm0, xmm0
  002dc	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  002e2	76 4b		 jbe	 SHORT $LN4@simple_vm_
; Line 206
  002e4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002e9	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  002f0	b9 08 00 00 00	 mov	 ecx, 8
  002f5	48 6b c9 02	 imul	 rcx, 2
  002f9	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  002fd	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00303	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [rax+8]
  00308	73 23		 jae	 SHORT $LN3@simple_vm_
; Line 208
  0030a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0030f	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00316	b9 08 00 00 00	 mov	 ecx, 8
  0031b	48 6b c9 03	 imul	 rcx, 3
  0031f	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00323	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00328	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0032b	89 01		 mov	 DWORD PTR [rcx], eax
$LN3@simple_vm_:
; Line 210
  0032d	eb 49		 jmp	 SHORT $LN2@simple_vm_
$LN4@simple_vm_:
; Line 211
  0032f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00334	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0033b	b9 08 00 00 00	 mov	 ecx, 8
  00340	48 6b c9 02	 imul	 rcx, 2
  00344	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00348	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0034d	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  00353	73 23		 jae	 SHORT $LN1@simple_vm_
; Line 213
  00355	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0035a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00361	b9 08 00 00 00	 mov	 ecx, 8
  00366	48 6b c9 03	 imul	 rcx, 3
  0036a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0036e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00373	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00376	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN15@simple_vm_:
; Line 216
  00378	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0037c	c3		 ret	 0
simple_vm_jumpvarlenum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_incpjump PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 109
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 112
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 113
  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00030	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  00037	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003f	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  00046	e8 00 00 00 00	 call	 simple_list_getitem
  0004b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00050	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 115
  00056	ba 03 00 00 00	 mov	 edx, 3
  0005b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00060	e8 00 00 00 00	 call	 simple_list_isstring
  00065	85 c0		 test	 eax, eax
  00067	74 28		 je	 SHORT $LN4@simple_vm_
; Line 116
  00069	ba 03 00 00 00	 mov	 edx, 3
  0006e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00073	e8 00 00 00 00	 call	 simple_list_getitem
  00078	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00084	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00089	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0008f	eb 42		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 118
  00091	ba 03 00 00 00	 mov	 edx, 3
  00096	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_list_isnumber
  000a0	85 c0		 test	 eax, eax
  000a2	74 1c		 je	 SHORT $LN2@simple_vm_
; Line 119
  000a4	ba 03 00 00 00	 mov	 edx, 3
  000a9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  000ae	e8 00 00 00 00	 call	 simple_list_getitem
  000b3	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000b8	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 120
  000be	eb 13		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 121
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82472
  000c7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000cc	e8 00 00 00 00	 call	 simple_vm_error
; Line 122
  000d1	eb 4e		 jmp	 SHORT $LN5@simple_vm_
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 124
  000d3	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  000d9	f2 0f 58 44 24
	30		 addsd	 xmm0, QWORD PTR nNum1$[rsp]
  000df	0f 28 d8	 movaps	 xmm3, xmm0
  000e2	41 b8 03 00 00
	00		 mov	 r8d, 3
  000e8	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  000ed	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000f9	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 126
  000fe	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00103	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0010a	b9 08 00 00 00	 mov	 ecx, 8
  0010f	48 6b c9 02	 imul	 rcx, 2
  00113	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00117	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0011c	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0011f	89 01		 mov	 DWORD PTR [rcx], eax
$LN5@simple_vm_:
; Line 127
  00121	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00125	c3		 ret	 0
simple_vm_incpjump ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
nNum2$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_incjump PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 67
$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 70
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00029	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002e	e8 00 00 00 00	 call	 simple_vm_findvar
  00033	85 c0		 test	 eax, eax
  00035	75 2a		 jne	 SHORT $LN10@simple_vm_
; Line 71
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	48 6b c9 01	 imul	 rcx, 1
  0004c	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00057	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_newvar
$LN10@simple_vm_:
; Line 73
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  0006d	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00070	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00075	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  0007c	e8 00 00 00 00	 call	 simple_list_getitem
  00081	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00086	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 75
  0008c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00091	83 b8 e8 18 00
	00 03		 cmp	 DWORD PTR [rax+6376], 3
  00098	0f 85 9d 00 00
	00		 jne	 $LN9@simple_vm_
; Line 77
  0009e	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000a4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  000ac	7a 24		 jp	 SHORT $LN8@simple_vm_
  000ae	75 22		 jne	 SHORT $LN8@simple_vm_
; Line 78
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000bc	b9 08 00 00 00	 mov	 ecx, 8
  000c1	48 6b c9 00	 imul	 rcx, 0
  000c5	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000c9	c7 40 08 62 00
	00 00		 mov	 DWORD PTR [rax+8], 98	; 00000062H
; Line 79
  000d0	eb 20		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 80
  000d2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000de	b9 08 00 00 00	 mov	 ecx, 8
  000e3	48 6b c9 00	 imul	 rcx, 0
  000e7	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000eb	c7 40 08 3e 00
	00 00		 mov	 DWORD PTR [rax+8], 62	; 0000003eH
$LN7@simple_vm_:
; Line 82
  000f2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fe	48 6b c0 18	 imul	 rax, 24
  00102	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00107	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  0010e	ba 08 00 00 00	 mov	 edx, 8
  00113	48 6b d2 01	 imul	 rdx, 1
  00117	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  0011c	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  00121	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00125	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00131	e8 00 00 00 00	 call	 simple_item_setpointer_gc
  00136	e9 c4 00 00 00	 jmp	 $LN6@simple_vm_
$LN9@simple_vm_:
; Line 84
  0013b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00140	83 b8 e8 18 00
	00 01		 cmp	 DWORD PTR [rax+6376], 1
  00147	0f 85 b2 00 00
	00		 jne	 $LN5@simple_vm_
; Line 86
  0014d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00152	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00159	b9 08 00 00 00	 mov	 ecx, 8
  0015e	48 6b c9 00	 imul	 rcx, 0
  00162	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00166	c7 40 08 4c 00
	00 00		 mov	 DWORD PTR [rax+8], 76	; 0000004cH
; Line 87
  0016d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00172	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00179	48 6b c0 18	 imul	 rax, 24
  0017d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  00189	ba 08 00 00 00	 mov	 edx, 8
  0018e	48 6b d2 03	 imul	 rdx, 3
  00192	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  00197	4d 8b 44 00 38	 mov	 r8, QWORD PTR [r8+rax+56]
  0019c	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001a0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ac	e8 00 00 00 00	 call	 simple_item_setpointer_gc
; Line 88
  001b1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b6	48 8b 80 f0 18
	00 00		 mov	 rax, QWORD PTR [rax+6384]
  001bd	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  001c0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c5	48 8b 88 f0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6384]
  001cc	e8 00 00 00 00	 call	 simple_list_getitem
  001d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d6	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  001dd	ba 08 00 00 00	 mov	 edx, 8
  001e2	48 6b d2 04	 imul	 rdx, 4
  001e6	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  001ea	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  001ee	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001fa	e8 00 00 00 00	 call	 simple_item_setint_gc
$LN5@simple_vm_:
$LN6@simple_vm_:
; Line 90
  001ff	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00204	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0020b	48 6b c0 18	 imul	 rax, 24
  0020f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00214	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00219	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 91
  0021e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00223	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0022a	fe c8		 dec	 al
  0022c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00231	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 93
  00237	ba 03 00 00 00	 mov	 edx, 3
  0023c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00241	e8 00 00 00 00	 call	 simple_list_isstring
  00246	85 c0		 test	 eax, eax
  00248	74 4a		 je	 SHORT $LN4@simple_vm_
; Line 94
  0024a	ba 03 00 00 00	 mov	 edx, 3
  0024f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00254	e8 00 00 00 00	 call	 simple_list_getitem
  00259	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0025d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00260	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00265	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0026a	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 95
  00270	f2 0f 10 5c 24
	28		 movsdx	 xmm3, QWORD PTR nNum2$[rsp]
  00276	41 b8 03 00 00
	00		 mov	 r8d, 3
  0027c	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  00281	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00286	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0028d	e8 00 00 00 00	 call	 simple_list_setdouble_gc
  00292	eb 42		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 97
  00294	ba 03 00 00 00	 mov	 edx, 3
  00299	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  0029e	e8 00 00 00 00	 call	 simple_list_isnumber
  002a3	85 c0		 test	 eax, eax
  002a5	74 1c		 je	 SHORT $LN2@simple_vm_
; Line 98
  002a7	ba 03 00 00 00	 mov	 edx, 3
  002ac	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  002b1	e8 00 00 00 00	 call	 simple_list_getitem
  002b6	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002bb	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 99
  002c1	eb 13		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 100
  002c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82460
  002ca	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002cf	e8 00 00 00 00	 call	 simple_vm_error
; Line 101
  002d4	eb 4e		 jmp	 SHORT $LN11@simple_vm_
$LN1@simple_vm_:
$LN3@simple_vm_:
; Line 103
  002d6	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  002dc	f2 0f 58 44 24
	30		 addsd	 xmm0, QWORD PTR nNum1$[rsp]
  002e2	0f 28 d8	 movaps	 xmm3, xmm0
  002e5	41 b8 03 00 00
	00		 mov	 r8d, 3
  002eb	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  002f0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fc	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 105
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0030d	b9 08 00 00 00	 mov	 ecx, 8
  00312	48 6b c9 02	 imul	 rcx, 2
  00316	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0031a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0031f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00322	89 01		 mov	 DWORD PTR [rcx], eax
$LN11@simple_vm_:
; Line 106
  00324	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00328	c3		 ret	 0
simple_vm_incjump ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv77 = 32
var$ = 40
tv93 = 48
tv139 = 56
vm$ = 80
simple_vm_pushpv PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 54
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 56
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 57
  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00030	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00037	fe c0		 inc	 al
  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0003e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 58
  00044	ba 03 00 00 00	 mov	 edx, 3
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0004e	e8 00 00 00 00	 call	 simple_list_isstring
  00053	85 c0		 test	 eax, eax
  00055	74 65		 je	 SHORT $LN3@simple_vm_
; Line 59
  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00061	e8 00 00 00 00	 call	 simple_list_getitem
  00066	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0006a	e8 00 00 00 00	 call	 simple_string_size
  0006f	89 44 24 20	 mov	 DWORD PTR tv77[rsp], eax
  00073	ba 03 00 00 00	 mov	 edx, 3
  00078	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0007d	e8 00 00 00 00	 call	 simple_list_getitem
  00082	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00086	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008b	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00092	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00097	48 83 c2 30	 add	 rdx, 48			; 00000030H
  0009b	48 89 54 24 30	 mov	 QWORD PTR tv93[rsp], rdx
  000a0	44 8b 44 24 20	 mov	 r8d, DWORD PTR tv77[rsp]
  000a5	45 8b c8	 mov	 r9d, r8d
  000a8	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000ab	8b d1		 mov	 edx, ecx
  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR tv93[rsp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 simple_itemarray_setstring2
  000ba	eb 50		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 61
  000bc	ba 03 00 00 00	 mov	 edx, 3
  000c1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000c6	e8 00 00 00 00	 call	 simple_list_isnumber
  000cb	85 c0		 test	 eax, eax
  000cd	74 3d		 je	 SHORT $LN1@simple_vm_
; Line 62
  000cf	ba 03 00 00 00	 mov	 edx, 3
  000d4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000d9	e8 00 00 00 00	 call	 simple_list_getitem
  000de	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e3	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  000ea	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  000ef	48 83 c2 30	 add	 rdx, 48			; 00000030H
  000f3	48 89 54 24 38	 mov	 QWORD PTR tv139[rsp], rdx
  000f8	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  000fd	8b d1		 mov	 edx, ecx
  000ff	48 8b 44 24 38	 mov	 rax, QWORD PTR tv139[rsp]
  00104	48 8b c8	 mov	 rcx, rax
  00107	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 64
  0010c	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00110	c3		 ret	 0
simple_vm_pushpv ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
var$ = 32
vm$ = 64
simple_vm_incp PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 47
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 49
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	48 89 44 24 20	 mov	 QWORD PTR var$[rsp], rax
; Line 50
  0002b	ba 03 00 00 00	 mov	 edx, 3
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR var$[rsp]
  00035	e8 00 00 00 00	 call	 simple_list_getitem
  0003a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0003f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00047	0f 28 d8	 movaps	 xmm3, xmm0
  0004a	41 b8 03 00 00
	00		 mov	 r8d, 3
  00050	48 8b 54 24 20	 mov	 rdx, QWORD PTR var$[rsp]
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00061	e8 00 00 00 00	 call	 simple_list_setdouble_gc
; Line 51
  00066	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006a	c3		 ret	 0
simple_vm_incp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv77 = 32
vm$ = 64
simple_vm_pushp PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 18
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 19
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	fe c0		 inc	 al
  00017	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00027	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0002e	b9 08 00 00 00	 mov	 ecx, 8
  00033	48 6b c9 01	 imul	 rcx, 1
  00037	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00040	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00047	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  0004c	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00050	48 89 54 24 20	 mov	 QWORD PTR tv77[rsp], rdx
  00055	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00059	8b d1		 mov	 edx, ecx
  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR tv77[rsp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 20
  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00084	83 c8 20	 or	 eax, 32			; 00000020H
  00087	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0008c	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00093	48 6b c9 18	 imul	 rcx, 24
  00097	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  0009c	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 22
  000a0	41 b8 03 00 00
	00		 mov	 r8d, 3
  000a6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ab	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  000b2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000be	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 23
  000c3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000c7	c3		 ret	 0
simple_vm_pushp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_jumpone2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 403
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 405
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 33		 jne	 SHORT $LN2@simple_vm_
; Line 406
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0004d	7a 02		 jp	 SHORT $LN5@simple_vm_
  0004f	74 0c		 je	 SHORT $LN1@simple_vm_
$LN5@simple_vm_:
; Line 407
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	e8 00 00 00 00	 call	 simple_vm_jump
; Line 408
  0005b	eb 51		 jmp	 SHORT $LN3@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 411
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00062	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00069	fe c8		 dec	 al
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00070	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 412
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0007b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00082	fe c0		 inc	 al
  00084	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00089	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0008f	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00094	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  000a0	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000a4	0f 57 d2	 xorps	 xmm2, xmm2
  000a7	8b d0		 mov	 edx, eax
  000a9	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN3@simple_vm_:
; Line 413
  000ae	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b2	c3		 ret	 0
simple_vm_jumpone2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_jumpzero2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 416
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 418
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 33		 jne	 SHORT $LN2@simple_vm_
; Line 419
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0004d	7a 0e		 jp	 SHORT $LN1@simple_vm_
  0004f	75 0c		 jne	 SHORT $LN1@simple_vm_
; Line 420
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	e8 00 00 00 00	 call	 simple_vm_jump
; Line 421
  0005b	eb 56		 jmp	 SHORT $LN3@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 424
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00062	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00069	fe c8		 dec	 al
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00070	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 425
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0007b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00082	fe c0		 inc	 al
  00084	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00089	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0008f	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00094	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  000a0	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000a4	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  000ac	8b d0		 mov	 edx, eax
  000ae	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN3@simple_vm_:
; Line 426
  000b3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b7	c3		 ret	 0
simple_vm_jumpzero2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_jumpone PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 393
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 394
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 31		 jne	 SHORT $LN2@simple_vm_
; Line 395
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0004d	7a 02		 jp	 SHORT $LN5@simple_vm_
  0004f	74 0a		 je	 SHORT $LN1@simple_vm_
$LN5@simple_vm_:
; Line 396
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	e8 00 00 00 00	 call	 simple_vm_jump
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 399
  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00060	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00067	fe c8		 dec	 al
  00069	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0006e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 400
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	c3		 ret	 0
simple_vm_jumpone ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
nNum3$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_jumpfor PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 349
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 352
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 3c		 jne	 SHORT $LN12@simple_vm_
; Line 353
  0002a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 354
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00050	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00057	fe c8		 dec	 al
  00059	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0005e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00064	eb 7f		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 356
  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00072	48 6b c0 18	 imul	 rax, 24
  00076	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0007f	83 e0 07	 and	 eax, 7
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 48		 jne	 SHORT $LN10@simple_vm_
; Line 357
  00087	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00093	48 6b c0 18	 imul	 rax, 24
  00097	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0009c	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000a1	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000a9	e8 00 00 00 00	 call	 simple_vm_stringtonum
  000ae	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 358
  000b4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c0	fe c8		 dec	 al
  000c2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c7	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 359
  000cd	eb 16		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 360
  000cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82577
  000d6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000db	e8 00 00 00 00	 call	 simple_vm_error
; Line 361
  000e0	e9 41 01 00 00	 jmp	 $LN13@simple_vm_
$LN9@simple_vm_:
$LN11@simple_vm_:
; Line 363
  000e5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ea	48 8b 80 40 19
	00 00		 mov	 rax, QWORD PTR [rax+6464]
  000f1	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000f4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f9	48 8b 88 40 19
	00 00		 mov	 rcx, QWORD PTR [rax+6464]
  00100	e8 00 00 00 00	 call	 simple_list_getitem
  00105	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0010a	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 365
  00110	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00115	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011c	48 6b c0 18	 imul	 rax, 24
  00120	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00125	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00129	83 e0 07	 and	 eax, 7
  0012c	83 f8 02	 cmp	 eax, 2
  0012f	75 3c		 jne	 SHORT $LN8@simple_vm_
; Line 366
  00131	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00136	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0013d	48 6b c0 18	 imul	 rax, 24
  00141	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00146	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0014c	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum3$[rsp], xmm0
; Line 367
  00152	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00157	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015e	fe c8		 dec	 al
  00160	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00165	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  0016b	eb 7c		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 369
  0016d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00172	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00179	48 6b c0 18	 imul	 rax, 24
  0017d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00186	83 e0 07	 and	 eax, 7
  00189	83 f8 01	 cmp	 eax, 1
  0018c	75 48		 jne	 SHORT $LN6@simple_vm_
; Line 370
  0018e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00193	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0019a	48 6b c0 18	 imul	 rax, 24
  0019e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001a3	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001b0	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001b5	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum3$[rsp], xmm0
; Line 371
  001bb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c7	fe c8		 dec	 al
  001c9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ce	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 372
  001d4	eb 13		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 373
  001d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82582
  001dd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001e2	e8 00 00 00 00	 call	 simple_vm_error
; Line 374
  001e7	eb 3d		 jmp	 SHORT $LN13@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 380
  001e9	0f 57 c0	 xorps	 xmm0, xmm0
  001ec	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  001f2	76 1a		 jbe	 SHORT $LN4@simple_vm_
; Line 381
  001f4	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum3$[rsp]
  001fa	66 0f 2f 44 24
	20		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  00200	73 0a		 jae	 SHORT $LN3@simple_vm_
; Line 382
  00202	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00207	e8 00 00 00 00	 call	 simple_vm_jump
$LN3@simple_vm_:
; Line 385
  0020c	eb 18		 jmp	 SHORT $LN2@simple_vm_
$LN4@simple_vm_:
; Line 386
  0020e	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00214	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR nNum3$[rsp]
  0021a	73 0a		 jae	 SHORT $LN1@simple_vm_
; Line 387
  0021c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00221	e8 00 00 00 00	 call	 simple_vm_jump
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN13@simple_vm_:
; Line 390
  00226	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0022a	c3		 ret	 0
simple_vm_jumpfor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_jumpzero PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 339
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 340
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 31		 jne	 SHORT $LN2@simple_vm_
; Line 341
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0004d	7a 0c		 jp	 SHORT $LN1@simple_vm_
  0004f	75 0a		 jne	 SHORT $LN1@simple_vm_
; Line 342
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	e8 00 00 00 00	 call	 simple_vm_jump
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 345
  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00060	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00067	fe c8		 dec	 al
  00069	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0006e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 346
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	c3		 ret	 0
simple_vm_jumpzero ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 8
simple_vm_jump PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmperformance.c
; Line 334
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 335
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  0000a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	48 6b c9 01	 imul	 rcx, 1
  0001a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0001e	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  00023	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00026	89 01		 mov	 DWORD PTR [rcx], eax
; Line 336
  00028	c3		 ret	 0
simple_vm_jump ENDP
_TEXT	ENDS
END
