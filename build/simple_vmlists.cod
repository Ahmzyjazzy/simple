; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82619 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82443 DB	'simple_sys_temp', 00H
$SG82447 DB	'simple_sys_temp', 00H
$SG82495 DB	'[]', 00H
	ORG $+5
$SG82498 DB	'RUNTIME ERROR 2 : Array Access (Index out of range) ', 00H
	ORG $+3
$SG82502 DB	'RUNTIME ERROR 24 : The varible is not initialized', 00H
	ORG $+2
$SG82510 DB	'[]', 00H
	ORG $+1
$SG82513 DB	'RUNTIME ERROR 2 : Array Access (Index out of range) ', 00H
	ORG $+3
$SG82504 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+1
$SG82533 DB	'[]', 00H
	ORG $+1
$SG82549 DB	'RUNTIME ERROR 2 : Array Access (Index out of range) ', 00H
	ORG $+3
$SG82517 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+1
$SG82541 DB	'[]', 00H
	ORG $+9
$SG82519 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82525 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82535 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82543 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82545 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82547 DB	'RUNTIME ERROR 4 : Can''t access the list item, Object is'
	DB	' not list !', 00H
	ORG $+13
$SG82599 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
_DATA	ENDS
PUBLIC	simple_vm_liststart
PUBLIC	simple_vm_listitem
PUBLIC	simple_vm_listend
PUBLIC	simple_vm_loadindexaddress
PUBLIC	simple_vm_listpushv
PUBLIC	simple_vm_listassignment
PUBLIC	simple_vm_listgetvalue
PUBLIC	simple_vm_strcmpnotcasesensitive
PUBLIC	__real@3ff0000000000000
EXTRN	__report_rangecheckfailure:PROC
EXTRN	tolower:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_item_settype_gc:PROC
EXTRN	simple_item_setstsimple_gc:PROC
EXTRN	simple_item_setdouble_gc:PROC
EXTRN	simple_itemarray_setpointer:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_isstring:PROC
EXTRN	simple_list_islist:PROC
EXTRN	simple_list_deleteallitems_gc:PROC
EXTRN	simple_list_copy:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_list_copy:PROC
EXTRN	simple_vm_beforeequalitem:PROC
EXTRN	simple_vm_stringtonum:PROC
EXTRN	simple_vm_expr_npoo:PROC
EXTRN	simple_vm_expr_spoo:PROC
EXTRN	simple_vm_newtempvar:PROC
EXTRN	simple_vm_createtemlist:PROC
EXTRN	simple_vm_isstackpointertoobjstate:PROC
EXTRN	simple_vm_stsimple_index:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_setbraceobj:PROC
EXTRN	simple_vm_oop_callmethodinsideclass:PROC
EXTRN	simple_vm_oop_updateselfpointer:PROC
EXTRN	NOT_CASE_SENSITIVE:DWORD
EXTRN	list_index:DWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_liststart DD imagerel $LN23
	DD	imagerel $LN23+1045
	DD	imagerel $unwind$simple_vm_liststart
$pdata$simple_vm_listitem DD imagerel $LN11
	DD	imagerel $LN11+693
	DD	imagerel $unwind$simple_vm_listitem
$pdata$simple_vm_listend DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$simple_vm_listend
$pdata$simple_vm_loadindexaddress DD imagerel $LN44
	DD	imagerel $LN44+2169
	DD	imagerel $unwind$simple_vm_loadindexaddress
$pdata$simple_vm_listpushv DD imagerel $LN11
	DD	imagerel $LN11+851
	DD	imagerel $unwind$simple_vm_listpushv
$pdata$simple_vm_listassignment DD imagerel $LN20
	DD	imagerel $LN20+1119
	DD	imagerel $unwind$simple_vm_listassignment
$pdata$simple_vm_listgetvalue DD imagerel $LN11
	DD	imagerel $LN11+567
	DD	imagerel $unwind$simple_vm_listgetvalue
$pdata$simple_vm_strcmpnotcasesensitive DD imagerel $LN9
	DD	imagerel $LN9+175
	DD	imagerel $unwind$simple_vm_strcmpnotcasesensitive
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_liststart DD 010901H
	DD	0a209H
$unwind$simple_vm_listitem DD 010901H
	DD	0a209H
$unwind$simple_vm_listend DD 010901H
	DD	04209H
$unwind$simple_vm_loadindexaddress DD 010901H
	DD	0a209H
$unwind$simple_vm_listpushv DD 010901H
	DD	06209H
$unwind$simple_vm_listassignment DD 010901H
	DD	0a209H
$unwind$simple_vm_listgetvalue DD 011301H
	DD	08213H
$unwind$simple_vm_strcmpnotcasesensitive DD 010e01H
	DD	0620eH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
tv66 = 36
string_one$ = 64
cStr2$ = 72
simple_vm_strcmpnotcasesensitive PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 400
$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN6@simple_vm_:
; Line 402
  0000e	33 c0		 xor	 eax, eax
  00010	83 f8 01	 cmp	 eax, 1
  00013	0f 84 91 00 00
	00		 je	 $LN5@simple_vm_
; Line 403
  00019	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR NOT_CASE_SENSITIVE, 0
  00020	74 2e		 je	 SHORT $LN4@simple_vm_
; Line 404
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR string_one$[rsp]
  00027	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0002a	8b c8		 mov	 ecx, eax
  0002c	e8 00 00 00 00	 call	 tolower
  00031	89 44 24 24	 mov	 DWORD PTR tv66[rsp], eax
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr2$[rsp]
  0003a	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  0003d	e8 00 00 00 00	 call	 tolower
  00042	8b 4c 24 24	 mov	 ecx, DWORD PTR tv66[rsp]
  00046	2b c8		 sub	 ecx, eax
  00048	8b c1		 mov	 eax, ecx
  0004a	89 44 24 20	 mov	 DWORD PTR nNum1$[rsp], eax
; Line 405
  0004e	eb 16		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 406
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR string_one$[rsp]
  00055	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00058	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr2$[rsp]
  0005d	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  00060	2b c1		 sub	 eax, ecx
  00062	89 44 24 20	 mov	 DWORD PTR nNum1$[rsp], eax
$LN3@simple_vm_:
; Line 407
  00066	83 7c 24 20 00	 cmp	 DWORD PTR nNum1$[rsp], 0
  0006b	75 18		 jne	 SHORT $LN1@simple_vm_
  0006d	48 8b 44 24 40	 mov	 rax, QWORD PTR string_one$[rsp]
  00072	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00075	85 c0		 test	 eax, eax
  00077	74 0c		 je	 SHORT $LN1@simple_vm_
  00079	48 8b 44 24 48	 mov	 rax, QWORD PTR cStr2$[rsp]
  0007e	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00081	85 c0		 test	 eax, eax
  00083	75 06		 jne	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 408
  00085	8b 44 24 20	 mov	 eax, DWORD PTR nNum1$[rsp]
  00089	eb 1f		 jmp	 SHORT $LN7@simple_vm_
$LN2@simple_vm_:
; Line 410
  0008b	48 8b 44 24 40	 mov	 rax, QWORD PTR string_one$[rsp]
  00090	48 ff c0	 inc	 rax
  00093	48 89 44 24 40	 mov	 QWORD PTR string_one$[rsp], rax
  00098	48 8b 44 24 48	 mov	 rax, QWORD PTR cStr2$[rsp]
  0009d	48 ff c0	 inc	 rax
  000a0	48 89 44 24 48	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 411
  000a5	e9 64 ff ff ff	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 412
  000aa	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000ae	c3		 ret	 0
simple_vm_strcmpnotcasesensitive ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
pItem$ = 48
cStr2$ = 56
vm$ = 80
var$ = 88
cStr$ = 96
simple_vm_listgetvalue PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 367
$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 372
  00013	48 8b 44 24 58	 mov	 rax, QWORD PTR var$[rsp]
  00018	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0001c	0f 8e 37 01 00
	00		 jle	 $LN8@simple_vm_
; Line 373
  00022	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  0002a	eb 0a		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
  0002c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00030	ff c0		 inc	 eax
  00032	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_vm_:
  00036	48 8b 44 24 58	 mov	 rax, QWORD PTR var$[rsp]
  0003b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003e	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00042	0f 8f 11 01 00
	00		 jg	 $LN5@simple_vm_
; Line 374
  00048	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0004c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR var$[rsp]
  00051	e8 00 00 00 00	 call	 simple_list_islist
  00056	85 c0		 test	 eax, eax
  00058	0f 84 f6 00 00
	00		 je	 $LN4@simple_vm_
; Line 375
  0005e	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00062	48 8b 4c 24 58	 mov	 rcx, QWORD PTR var$[rsp]
  00067	e8 00 00 00 00	 call	 simple_list_getlist
  0006c	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 376
  00071	48 8b 44 24 28	 mov	 rax, QWORD PTR list$[rsp]
  00076	83 78 10 02	 cmp	 DWORD PTR [rax+16], 2
  0007a	0f 8c d4 00 00
	00		 jl	 $LN3@simple_vm_
; Line 377
  00080	ba 01 00 00 00	 mov	 edx, 1
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0008a	e8 00 00 00 00	 call	 simple_list_isstring
  0008f	85 c0		 test	 eax, eax
  00091	0f 84 bd 00 00
	00		 je	 $LN2@simple_vm_
; Line 378
  00097	ba 01 00 00 00	 mov	 edx, 1
  0009c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000a1	e8 00 00 00 00	 call	 simple_list_getitem
  000a6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 89 44 24 38	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 379
  000b2	48 8b 54 24 38	 mov	 rdx, QWORD PTR cStr2$[rsp]
  000b7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr$[rsp]
  000bc	e8 00 00 00 00	 call	 simple_vm_strcmpnotcasesensitive
  000c1	85 c0		 test	 eax, eax
  000c3	0f 85 8b 00 00
	00		 jne	 $LN1@simple_vm_
; Line 380
  000c9	ba 02 00 00 00	 mov	 edx, 2
  000ce	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  000d3	e8 00 00 00 00	 call	 simple_list_getitem
  000d8	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 381
  000dd	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e9	fe c0		 inc	 al
  000eb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f0	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000f6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00102	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00107	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0010b	4c 8b 44 24 30	 mov	 r8, QWORD PTR pItem$[rsp]
  00110	8b d0		 mov	 edx, eax
  00112	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 382
  00117	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0011c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00123	48 6b c0 18	 imul	 rax, 24
  00127	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0012c	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00130	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00133	83 c8 40	 or	 eax, 64			; 00000040H
  00136	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0013b	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00142	48 6b c9 18	 imul	 rcx, 24
  00146	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  0014b	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 383
  0014f	e9 de 00 00 00	 jmp	 $LN9@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN3@simple_vm_:
$LN4@simple_vm_:
; Line 388
  00154	e9 d3 fe ff ff	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
$LN8@simple_vm_:
; Line 391
  00159	48 8b 54 24 58	 mov	 rdx, QWORD PTR var$[rsp]
  0015e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00163	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0016a	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0016f	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 392
  00174	4c 8b 44 24 60	 mov	 r8, QWORD PTR cStr$[rsp]
  00179	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0017e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00183	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0018a	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 393
  0018f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82619
  00196	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0019b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a7	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 394
  001ac	ba 02 00 00 00	 mov	 edx, 2
  001b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  001b6	e8 00 00 00 00	 call	 simple_list_getitem
  001bb	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 395
  001c0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001cc	fe c0		 inc	 al
  001ce	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d3	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ea	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001ee	4c 8b 44 24 30	 mov	 r8, QWORD PTR pItem$[rsp]
  001f3	8b d0		 mov	 edx, eax
  001f5	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 396
  001fa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00206	48 6b c0 18	 imul	 rax, 24
  0020a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0020f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00213	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00216	83 c8 40	 or	 eax, 64			; 00000040H
  00219	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0021e	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00225	48 6b c9 18	 imul	 rcx, 24
  00229	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  0022e	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
$LN9@simple_vm_:
; Line 397
  00232	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00236	c3		 ret	 0
simple_vm_listgetvalue ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
var$ = 40
string_one$ = 48
list$ = 56
nNum1$ = 64
string$ = 72
vm$ = 96
simple_vm_listassignment PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 302
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 307
  00009	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR var$[rsp], 0
; Line 308
  00012	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00017	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0001e	48 6b c0 18	 imul	 rax, 24
  00022	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0002b	83 e0 07	 and	 eax, 7
  0002e	83 f8 01	 cmp	 eax, 1
  00031	0f 85 81 01 00
	00		 jne	 $LN17@simple_vm_
  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  00043	83 f8 01	 cmp	 eax, 1
  00046	0f 8f 6c 01 00
	00		 jg	 $LN17@simple_vm_
; Line 309
  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	48 6b c0 18	 imul	 rax, 24
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00061	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00066	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00069	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0006e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00075	e8 00 00 00 00	 call	 simple_string_new_gc
  0007a	48 89 44 24 30	 mov	 QWORD PTR string_one$[rsp], rax
; Line 311
  0007f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00084	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0008b	fe c8		 dec	 al
  0008d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00092	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 312
  00098	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0009d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a4	48 6b c0 18	 imul	 rax, 24
  000a8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ad	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000b2	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 314
  000b7	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000bc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c3	fe c8		 dec	 al
  000c5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ca	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 315
  000d0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000d5	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  000dc	85 c0		 test	 eax, eax
  000de	75 23		 jne	 SHORT $LN16@simple_vm_
; Line 316
  000e0	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  000e5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000e8	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  000ed	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000f2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000f9	e8 00 00 00 00	 call	 simple_item_setstsimple_gc
; Line 317
  000fe	e9 9a 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 318
  00103	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00108	8b 00		 mov	 eax, DWORD PTR [rax]
  0010a	83 e0 07	 and	 eax, 7
  0010d	83 f8 01	 cmp	 eax, 1
  00110	75 2e		 jne	 SHORT $LN14@simple_vm_
; Line 319
  00112	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00117	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011b	48 89 44 24 48	 mov	 QWORD PTR string$[rsp], rax
; Line 320
  00120	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  00125	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00128	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  0012d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00132	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00139	e8 00 00 00 00	 call	 simple_string_add_gc
  0013e	eb 5d		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 322
  00140	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00145	8b 00		 mov	 eax, DWORD PTR [rax]
  00147	83 e0 07	 and	 eax, 7
  0014a	83 f8 02	 cmp	 eax, 2
  0014d	75 4e		 jne	 SHORT $LN12@simple_vm_
  0014f	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00154	8b 00		 mov	 eax, DWORD PTR [rax]
  00156	c1 e8 03	 shr	 eax, 3
  00159	83 e0 03	 and	 eax, 3
  0015c	83 f8 02	 cmp	 eax, 2
  0015f	75 3c		 jne	 SHORT $LN12@simple_vm_
; Line 323
  00161	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  00166	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00169	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0016e	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00173	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00178	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0017d	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00181	0f 28 c1	 movaps	 xmm0, xmm1
  00184	0f 28 d0	 movaps	 xmm2, xmm0
  00187	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  0018c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00191	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00198	e8 00 00 00 00	 call	 simple_item_setdouble_gc
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 326
  0019d	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  001a2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ae	e8 00 00 00 00	 call	 simple_string_delete_gc
  001b3	e9 a2 02 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 328
  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001bd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c4	48 6b c0 18	 imul	 rax, 24
  001c8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001d1	83 e0 07	 and	 eax, 7
  001d4	83 f8 02	 cmp	 eax, 2
  001d7	0f 85 ba 00 00
	00		 jne	 $LN10@simple_vm_
; Line 329
  001dd	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001e2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e9	48 6b c0 18	 imul	 rax, 24
  001ed	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001f2	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  001f8	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 330
  001fe	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00203	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0020a	fe c8		 dec	 al
  0020c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 331
  00217	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0021c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00223	48 6b c0 18	 imul	 rax, 24
  00227	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0022c	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00231	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 333
  00236	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0023b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00242	fe c8		 dec	 al
  00244	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00249	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 334
  0024f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00254	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  0025b	85 c0		 test	 eax, eax
  0025d	75 1e		 jne	 SHORT $LN9@simple_vm_
; Line 335
  0025f	f2 0f 10 54 24
	40		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00265	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  0026a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0026f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00276	e8 00 00 00 00	 call	 simple_item_setdouble_gc
; Line 336
  0027b	eb 15		 jmp	 SHORT $LN8@simple_vm_
$LN9@simple_vm_:
; Line 337
  0027d	f2 0f 10 54 24
	40		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00283	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00288	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0028d	e8 00 00 00 00	 call	 simple_vm_beforeequalitem
$LN8@simple_vm_:
; Line 338
  00292	e9 c3 01 00 00	 jmp	 $LN7@simple_vm_
$LN10@simple_vm_:
; Line 340
  00297	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0029c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002a3	48 6b c0 18	 imul	 rax, 24
  002a7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002b0	83 e0 07	 and	 eax, 7
  002b3	83 f8 03	 cmp	 eax, 3
  002b6	0f 85 8d 01 00
	00		 jne	 $LN6@simple_vm_
  002bc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002c1	0f be 80 49 19
	00 00		 movsx	 eax, BYTE PTR [rax+6473]
  002c8	85 c0		 test	 eax, eax
  002ca	0f 85 79 01 00
	00		 jne	 $LN6@simple_vm_
; Line 342
  002d0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002d5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002dc	48 6b c0 18	 imul	 rax, 24
  002e0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002e5	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002e9	c1 e8 05	 shr	 eax, 5
  002ec	83 e0 03	 and	 eax, 3
  002ef	83 f8 01	 cmp	 eax, 1
  002f2	75 35		 jne	 SHORT $LN5@simple_vm_
; Line 343
  002f4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002f9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00300	48 6b c0 18	 imul	 rax, 24
  00304	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00309	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0030e	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 344
  00313	ba 03 00 00 00	 mov	 edx, 3
  00318	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0031d	e8 00 00 00 00	 call	 simple_list_getlist
  00322	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
  00327	eb 51		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 346
  00329	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0032e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00335	48 6b c0 18	 imul	 rax, 24
  00339	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0033e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00342	c1 e8 05	 shr	 eax, 5
  00345	83 e0 03	 and	 eax, 3
  00348	83 f8 02	 cmp	 eax, 2
  0034b	75 2d		 jne	 SHORT $LN3@simple_vm_
; Line 347
  0034d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00352	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00359	48 6b c0 18	 imul	 rax, 24
  0035d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00362	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00367	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 348
  0036c	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00371	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00375	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
$LN3@simple_vm_:
$LN4@simple_vm_:
; Line 350
  0037a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0037f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00386	fe c8		 dec	 al
  00388	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0038d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 351
  00393	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00398	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0039f	48 6b c0 18	 imul	 rax, 24
  003a3	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003a8	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  003ad	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 352
  003b2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003be	fe c8		 dec	 al
  003c0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003c5	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 353
  003cb	41 b8 04 00 00
	00		 mov	 r8d, 4
  003d1	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  003d6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003db	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003e2	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 354
  003e7	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  003ec	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003f0	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
; Line 355
  003f5	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  003fa	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003ff	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00406	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 356
  0040b	4c 8b 44 24 28	 mov	 r8, QWORD PTR var$[rsp]
  00410	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  00415	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0041a	e8 00 00 00 00	 call	 simple_vm_list_copy
; Line 358
  0041f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00424	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00429	85 c0		 test	 eax, eax
  0042b	74 1a		 je	 SHORT $LN2@simple_vm_
; Line 359
  0042d	4c 8b 4c 24 20	 mov	 r9, QWORD PTR pItem$[rsp]
  00432	41 b8 02 00 00
	00		 mov	 r8d, 2
  00438	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0043d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00442	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
$LN2@simple_vm_:
; Line 361
  00447	eb 11		 jmp	 SHORT $LN1@simple_vm_
$LN6@simple_vm_:
; Line 362
  00449	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82599
  00450	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00455	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN7@simple_vm_:
$LN11@simple_vm_:
; Line 364
  0045a	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0045e	c3		 ret	 0
simple_vm_listassignment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
tv157 = 40
vm$ = 64
simple_vm_listpushv PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 267
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 269
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00023	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 270
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00034	fe c8		 dec	 al
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 272
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00046	8b 00		 mov	 eax, DWORD PTR [rax]
  00048	83 e0 07	 and	 eax, 7
  0004b	83 f8 01	 cmp	 eax, 1
  0004e	0f 85 1a 01 00
	00		 jne	 $LN8@simple_vm_
; Line 273
  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00059	0f be 80 94 19
	00 00		 movsx	 eax, BYTE PTR [rax+6548]
  00060	83 f8 01	 cmp	 eax, 1
  00063	0f 8c a3 00 00
	00		 jl	 $LN7@simple_vm_
  00069	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0006e	e8 00 00 00 00	 call	 simple_vm_isstackpointertoobjstate
  00073	83 f8 01	 cmp	 eax, 1
  00076	0f 85 90 00 00
	00		 jne	 $LN7@simple_vm_
; Line 274
  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00081	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00088	fe c0		 inc	 al
  0008a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00095	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0009a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a6	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000aa	4c 8b 44 24 20	 mov	 r8, QWORD PTR pItem$[rsp]
  000af	8b d0		 mov	 edx, eax
  000b1	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 275
  000b6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000bb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c2	48 6b c0 18	 imul	 rax, 24
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000cb	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000cf	83 e0 9f	 and	 eax, -97		; ffffff9fH
  000d2	83 c8 40	 or	 eax, 64			; 00000040H
  000d5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000da	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  000e1	48 6b c9 18	 imul	 rcx, 24
  000e5	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  000ea	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 276
  000ee	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f3	0f b6 80 94 19
	00 00		 movzx	 eax, BYTE PTR [rax+6548]
  000fa	fe c8		 dec	 al
  000fc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00101	88 81 94 19 00
	00		 mov	 BYTE PTR [rcx+6548], al
; Line 277
  00107	e9 42 02 00 00	 jmp	 $LN9@simple_vm_
$LN7@simple_vm_:
; Line 279
  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00111	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00118	fe c0		 inc	 al
  0011a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0011f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 280
  00125	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  0012a	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0012e	e8 00 00 00 00	 call	 simple_string_size
  00133	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItem$[rsp]
  00138	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0013c	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00141	0f b6 92 30 18
	00 00		 movzx	 edx, BYTE PTR [rdx+6192]
  00148	4c 8b 44 24 40	 mov	 r8, QWORD PTR vm$[rsp]
  0014d	49 83 c0 30	 add	 r8, 48			; 00000030H
  00151	4c 89 44 24 28	 mov	 QWORD PTR tv157[rsp], r8
  00156	44 8b c8	 mov	 r9d, eax
  00159	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  0015c	48 8b 44 24 28	 mov	 rax, QWORD PTR tv157[rsp]
  00161	48 8b c8	 mov	 rcx, rax
  00164	e8 00 00 00 00	 call	 simple_itemarray_setstring2
  00169	e9 e0 01 00 00	 jmp	 $LN6@simple_vm_
$LN8@simple_vm_:
; Line 282
  0016e	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00173	8b 00		 mov	 eax, DWORD PTR [rax]
  00175	83 e0 07	 and	 eax, 7
  00178	83 f8 02	 cmp	 eax, 2
  0017b	0f 85 fc 00 00
	00		 jne	 $LN5@simple_vm_
; Line 283
  00181	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00186	0f be 80 94 19
	00 00		 movsx	 eax, BYTE PTR [rax+6548]
  0018d	83 f8 01	 cmp	 eax, 1
  00190	0f 8c a3 00 00
	00		 jl	 $LN4@simple_vm_
  00196	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019b	e8 00 00 00 00	 call	 simple_vm_isstackpointertoobjstate
  001a0	83 f8 01	 cmp	 eax, 1
  001a3	0f 85 90 00 00
	00		 jne	 $LN4@simple_vm_
; Line 284
  001a9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ae	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b5	fe c0		 inc	 al
  001b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001bc	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  001c2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001ce	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001d3	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001d7	4c 8b 44 24 20	 mov	 r8, QWORD PTR pItem$[rsp]
  001dc	8b d0		 mov	 edx, eax
  001de	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 285
  001e3	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001e8	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001ef	48 6b c0 18	 imul	 rax, 24
  001f3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001f8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001fc	83 e0 9f	 and	 eax, -97		; ffffff9fH
  001ff	83 c8 40	 or	 eax, 64			; 00000040H
  00202	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00207	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0020e	48 6b c9 18	 imul	 rcx, 24
  00212	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00217	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 286
  0021b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00220	0f b6 80 94 19
	00 00		 movzx	 eax, BYTE PTR [rax+6548]
  00227	fe c8		 dec	 al
  00229	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0022e	88 81 94 19 00
	00		 mov	 BYTE PTR [rcx+6548], al
; Line 287
  00234	e9 15 01 00 00	 jmp	 $LN9@simple_vm_
$LN4@simple_vm_:
; Line 289
  00239	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0023e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00245	fe c0		 inc	 al
  00247	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0024c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00252	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00257	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0025e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00263	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00267	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  0026c	f2 0f 10 52 08	 movsdx	 xmm2, QWORD PTR [rdx+8]
  00271	8b d0		 mov	 edx, eax
  00273	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00278	e9 d1 00 00 00	 jmp	 $LN3@simple_vm_
$LN5@simple_vm_:
; Line 291
  0027d	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00282	8b 00		 mov	 eax, DWORD PTR [rax]
  00284	83 e0 07	 and	 eax, 7
  00287	83 f8 04	 cmp	 eax, 4
  0028a	0f 85 be 00 00
	00		 jne	 $LN2@simple_vm_
; Line 292
  00290	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00295	0f be 80 94 19
	00 00		 movsx	 eax, BYTE PTR [rax+6548]
  0029c	83 f8 01	 cmp	 eax, 1
  0029f	7c 28		 jl	 SHORT $LN1@simple_vm_
  002a1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002a6	e8 00 00 00 00	 call	 simple_vm_isstackpointertoobjstate
  002ab	83 f8 01	 cmp	 eax, 1
  002ae	75 19		 jne	 SHORT $LN1@simple_vm_
; Line 293
  002b0	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002b5	0f b6 80 94 19
	00 00		 movzx	 eax, BYTE PTR [rax+6548]
  002bc	fe c8		 dec	 al
  002be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002c3	88 81 94 19 00
	00		 mov	 BYTE PTR [rcx+6548], al
$LN1@simple_vm_:
; Line 295
  002c9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002ce	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002d5	fe c0		 inc	 al
  002d7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002dc	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  002e2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002f3	48 83 c1 30	 add	 rcx, 48			; 00000030H
  002f7	4c 8b 44 24 20	 mov	 r8, QWORD PTR pItem$[rsp]
  002fc	8b d0		 mov	 edx, eax
  002fe	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 296
  00303	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00308	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030f	48 6b c0 18	 imul	 rax, 24
  00313	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00318	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0031c	83 e0 9f	 and	 eax, -97		; ffffff9fH
  0031f	83 c8 40	 or	 eax, 64			; 00000040H
  00322	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00327	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0032e	48 6b c9 18	 imul	 rcx, 24
  00332	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00337	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 297
  0033b	48 8b 44 24 20	 mov	 rax, QWORD PTR pItem$[rsp]
  00340	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00344	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00349	e8 00 00 00 00	 call	 simple_vm_oop_setbraceobj
$LN2@simple_vm_:
$LN3@simple_vm_:
$LN6@simple_vm_:
$LN9@simple_vm_:
; Line 299
  0034e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00352	c3		 ret	 0
simple_vm_listpushv ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr2$ = 32
var$ = 40
nNum1$ = 48
pItem$ = 56
string$ = 64
$T1 = 72
vm$ = 96
simple_vm_loadindexaddress PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 132
$LN44:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 138
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 5d 05 00
	00		 jne	 $LN39@simple_vm_
; Line 139
  0002e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 140
  0004f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 141
  00068	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 03	 cmp	 eax, 3
  00087	0f 85 03 04 00
	00		 jne	 $LN38@simple_vm_
; Line 142
  0008d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00092	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00099	48 6b c0 18	 imul	 rax, 24
  0009d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000a2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000a6	c1 e8 05	 shr	 eax, 5
  000a9	83 e0 03	 and	 eax, 3
  000ac	83 f8 01	 cmp	 eax, 1
  000af	0f 85 ff 01 00
	00		 jne	 $LN37@simple_vm_
; Line 143
  000b5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ba	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c1	48 6b c0 18	 imul	 rax, 24
  000c5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000ca	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000cf	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 144
  000d4	ba 03 00 00 00	 mov	 edx, 3
  000d9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000de	e8 00 00 00 00	 call	 simple_list_islist
  000e3	85 c0		 test	 eax, eax
  000e5	0f 84 0a 01 00
	00		 je	 $LN36@simple_vm_
; Line 145
  000eb	ba 03 00 00 00	 mov	 edx, 3
  000f0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  000f5	e8 00 00 00 00	 call	 simple_list_getlist
  000fa	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 147
  000ff	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00109	83 f8 01	 cmp	 eax, 1
  0010c	75 1c		 jne	 SHORT $LN35@simple_vm_
; Line 148
  0010e	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82495
  0011b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00120	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 149
  00125	e9 4a 07 00 00	 jmp	 $LN40@simple_vm_
$LN35@simple_vm_:
; Line 150
  0012a	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00130	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00138	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR list_index
  00140	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00144	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 151
  0014a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0014f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00156	fe c8		 dec	 al
  00158	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0015d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 152
  00163	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  0016b	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  00171	77 16		 ja	 SHORT $LN33@simple_vm_
  00173	48 8b 44 24 28	 mov	 rax, QWORD PTR var$[rsp]
  00178	f2 0f 2a 40 10	 cvtsi2sd xmm0, DWORD PTR [rax+16]
  0017d	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00183	66 0f 2f c8	 comisd	 xmm1, xmm0
  00187	76 16		 jbe	 SHORT $LN34@simple_vm_
$LN33@simple_vm_:
; Line 153
  00189	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82498
  00190	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00195	e8 00 00 00 00	 call	 simple_vm_error
; Line 154
  0019a	e9 d5 06 00 00	 jmp	 $LN40@simple_vm_
$LN34@simple_vm_:
; Line 156
  0019f	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  001a5	8b d0		 mov	 edx, eax
  001a7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  001ac	e8 00 00 00 00	 call	 simple_list_getitem
  001b1	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 157
  001b6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001bb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c2	fe c0		 inc	 al
  001c4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001c9	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  001cf	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001d4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001e0	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001e4	4c 8b 44 24 38	 mov	 r8, QWORD PTR pItem$[rsp]
  001e9	8b d0		 mov	 edx, eax
  001eb	e8 00 00 00 00	 call	 simple_itemarray_setpointer
  001f0	e9 ba 00 00 00	 jmp	 $LN32@simple_vm_
$LN36@simple_vm_:
; Line 159
  001f5	ba 03 00 00 00	 mov	 edx, 3
  001fa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  001ff	e8 00 00 00 00	 call	 simple_list_isstring
  00204	85 c0		 test	 eax, eax
  00206	74 78		 je	 SHORT $LN31@simple_vm_
; Line 160
  00208	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0020d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00214	fe c8		 dec	 al
  00216	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0021b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 161
  00221	ba 02 00 00 00	 mov	 edx, 2
  00226	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0022b	e8 00 00 00 00	 call	 simple_list_getitem
  00230	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00234	75 16		 jne	 SHORT $LN30@simple_vm_
; Line 162
  00236	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82502
  0023d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00242	e8 00 00 00 00	 call	 simple_vm_error
; Line 163
  00247	e9 28 06 00 00	 jmp	 $LN40@simple_vm_
$LN30@simple_vm_:
; Line 165
  0024c	ba 03 00 00 00	 mov	 edx, 3
  00251	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00256	e8 00 00 00 00	 call	 simple_list_getitem
  0025b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0025f	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 166
  00264	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0026a	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  0026f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00274	e8 00 00 00 00	 call	 simple_vm_stsimple_index
; Line 167
  00279	e9 f6 05 00 00	 jmp	 $LN40@simple_vm_
; Line 168
  0027e	eb 2f		 jmp	 SHORT $LN29@simple_vm_
$LN31@simple_vm_:
; Line 169
  00280	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00285	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0028c	fe c8		 dec	 al
  0028e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00293	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 170
  00299	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82504
  002a0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002a5	e8 00 00 00 00	 call	 simple_vm_error
; Line 171
  002aa	e9 c5 05 00 00	 jmp	 $LN40@simple_vm_
$LN29@simple_vm_:
$LN32@simple_vm_:
; Line 172
  002af	e9 d7 01 00 00	 jmp	 $LN28@simple_vm_
$LN37@simple_vm_:
; Line 174
  002b4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002b9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002c0	48 6b c0 18	 imul	 rax, 24
  002c4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002c9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002cd	c1 e8 05	 shr	 eax, 5
  002d0	83 e0 03	 and	 eax, 3
  002d3	83 f8 02	 cmp	 eax, 2
  002d6	0f 85 99 01 00
	00		 jne	 $LN27@simple_vm_
; Line 175
  002dc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002e1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002e8	48 6b c0 18	 imul	 rax, 24
  002ec	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002f1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002f6	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 176
  002fb	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00300	8b 00		 mov	 eax, DWORD PTR [rax]
  00302	83 e0 07	 and	 eax, 7
  00305	83 f8 04	 cmp	 eax, 4
  00308	0f 85 e4 00 00
	00		 jne	 $LN26@simple_vm_
; Line 177
  0030e	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00313	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00317	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 179
  0031c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  00321	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00326	83 f8 01	 cmp	 eax, 1
  00329	75 1c		 jne	 SHORT $LN25@simple_vm_
; Line 180
  0032b	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00331	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82510
  00338	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0033d	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 181
  00342	e9 2d 05 00 00	 jmp	 $LN40@simple_vm_
$LN25@simple_vm_:
; Line 183
  00347	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0034c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00353	fe c8		 dec	 al
  00355	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0035a	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 184
  00360	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  00368	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  0036e	77 16		 ja	 SHORT $LN23@simple_vm_
  00370	48 8b 44 24 28	 mov	 rax, QWORD PTR var$[rsp]
  00375	f2 0f 2a 40 10	 cvtsi2sd xmm0, DWORD PTR [rax+16]
  0037a	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00380	66 0f 2f c8	 comisd	 xmm1, xmm0
  00384	76 16		 jbe	 SHORT $LN24@simple_vm_
$LN23@simple_vm_:
; Line 185
  00386	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82513
  0038d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00392	e8 00 00 00 00	 call	 simple_vm_error
; Line 186
  00397	e9 d8 04 00 00	 jmp	 $LN40@simple_vm_
$LN24@simple_vm_:
; Line 188
  0039c	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  003a2	8b d0		 mov	 edx, eax
  003a4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  003a9	e8 00 00 00 00	 call	 simple_list_getitem
  003ae	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 189
  003b3	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b8	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003bf	fe c0		 inc	 al
  003c1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  003cc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003d1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003d8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003dd	48 83 c1 30	 add	 rcx, 48			; 00000030H
  003e1	4c 8b 44 24 38	 mov	 r8, QWORD PTR pItem$[rsp]
  003e6	8b d0		 mov	 edx, eax
  003e8	e8 00 00 00 00	 call	 simple_itemarray_setpointer
  003ed	e9 81 00 00 00	 jmp	 $LN22@simple_vm_
$LN26@simple_vm_:
; Line 191
  003f2	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  003f7	8b 00		 mov	 eax, DWORD PTR [rax]
  003f9	83 e0 07	 and	 eax, 7
  003fc	83 f8 01	 cmp	 eax, 1
  003ff	75 43		 jne	 SHORT $LN21@simple_vm_
; Line 192
  00401	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00406	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0040d	fe c8		 dec	 al
  0040f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00414	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 193
  0041a	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  0041f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00423	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 194
  00428	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0042e	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  00433	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00438	e8 00 00 00 00	 call	 simple_vm_stsimple_index
; Line 195
  0043d	e9 32 04 00 00	 jmp	 $LN40@simple_vm_
; Line 196
  00442	eb 2f		 jmp	 SHORT $LN20@simple_vm_
$LN21@simple_vm_:
; Line 197
  00444	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00449	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00450	fe c8		 dec	 al
  00452	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00457	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 198
  0045d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82517
  00464	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00469	e8 00 00 00 00	 call	 simple_vm_error
; Line 199
  0046e	e9 01 04 00 00	 jmp	 $LN40@simple_vm_
$LN20@simple_vm_:
$LN22@simple_vm_:
; Line 201
  00473	eb 16		 jmp	 SHORT $LN19@simple_vm_
$LN27@simple_vm_:
; Line 202
  00475	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82519
  0047c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00481	e8 00 00 00 00	 call	 simple_vm_error
; Line 203
  00486	e9 e9 03 00 00	 jmp	 $LN40@simple_vm_
$LN19@simple_vm_:
$LN28@simple_vm_:
; Line 204
  0048b	e9 be 00 00 00	 jmp	 $LN18@simple_vm_
$LN38@simple_vm_:
; Line 206
  00490	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00495	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0049c	48 6b c0 18	 imul	 rax, 24
  004a0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  004a5	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  004a9	83 e0 07	 and	 eax, 7
  004ac	83 f8 01	 cmp	 eax, 1
  004af	0f 85 83 00 00
	00		 jne	 $LN17@simple_vm_
; Line 207
  004b5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  004ba	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004c1	48 6b c0 18	 imul	 rax, 24
  004c5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  004ca	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  004cf	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  004d5	ff c9		 dec	 ecx
  004d7	48 63 c9	 movsxd	 rcx, ecx
  004da	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004dd	ba 01 00 00 00	 mov	 edx, 1
  004e2	48 6b d2 00	 imul	 rdx, 0
  004e6	0f b6 04 08	 movzx	 eax, BYTE PTR [rax+rcx]
  004ea	88 44 14 20	 mov	 BYTE PTR cStr2$[rsp+rdx], al
; Line 208
  004ee	48 c7 44 24 48
	01 00 00 00	 mov	 QWORD PTR $T1[rsp], 1
  004f7	48 83 7c 24 48
	02		 cmp	 QWORD PTR $T1[rsp], 2
  004fd	73 02		 jae	 SHORT $LN42@simple_vm_
  004ff	eb 05		 jmp	 SHORT $LN43@simple_vm_
$LN42@simple_vm_:
  00501	e8 00 00 00 00	 call	 __report_rangecheckfailure
$LN43@simple_vm_:
  00506	48 8b 44 24 48	 mov	 rax, QWORD PTR $T1[rsp]
  0050b	c6 44 04 20 00	 mov	 BYTE PTR cStr2$[rsp+rax], 0
; Line 209
  00510	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00515	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0051c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00521	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00525	4c 8d 44 24 20	 lea	 r8, QWORD PTR cStr2$[rsp]
  0052a	8b d0		 mov	 edx, eax
  0052c	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 210
  00531	e9 3e 03 00 00	 jmp	 $LN40@simple_vm_
; Line 211
  00536	eb 16		 jmp	 SHORT $LN16@simple_vm_
$LN17@simple_vm_:
; Line 212
  00538	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82525
  0053f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00544	e8 00 00 00 00	 call	 simple_vm_error
; Line 213
  00549	e9 26 03 00 00	 jmp	 $LN40@simple_vm_
$LN16@simple_vm_:
$LN18@simple_vm_:
; Line 215
  0054e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00553	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0055a	48 6b c0 18	 imul	 rax, 24
  0055e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00563	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00567	83 e0 9f	 and	 eax, -97		; ffffff9fH
  0056a	83 c8 40	 or	 eax, 64			; 00000040H
  0056d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00572	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00579	48 6b c9 18	 imul	 rcx, 24
  0057d	48 8b 54 24 60	 mov	 rdx, QWORD PTR vm$[rsp]
  00582	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
  00586	e9 e9 02 00 00	 jmp	 $LN15@simple_vm_
$LN39@simple_vm_:
; Line 217
  0058b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00590	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00597	48 6b c0 18	 imul	 rax, 24
  0059b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  005a0	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  005a4	83 e0 07	 and	 eax, 7
  005a7	83 f8 01	 cmp	 eax, 1
  005aa	0f 85 b3 02 00
	00		 jne	 $LN14@simple_vm_
; Line 218
  005b0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  005b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  005bc	48 6b c0 18	 imul	 rax, 24
  005c0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  005c5	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  005ca	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  005cd	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  005d2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005d9	e8 00 00 00 00	 call	 simple_string_new_gc
  005de	48 89 44 24 40	 mov	 QWORD PTR string$[rsp], rax
; Line 219
  005e3	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  005e8	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  005ef	fe c8		 dec	 al
  005f1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  005f6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 221
  005fc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00601	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00608	48 6b c0 18	 imul	 rax, 24
  0060c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00611	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00615	83 e0 07	 and	 eax, 7
  00618	83 f8 03	 cmp	 eax, 3
  0061b	0f 85 19 02 00
	00		 jne	 $LN13@simple_vm_
; Line 222
  00621	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00626	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0062d	48 6b c0 18	 imul	 rax, 24
  00631	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00636	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0063a	c1 e8 05	 shr	 eax, 5
  0063d	83 e0 03	 and	 eax, 3
  00640	83 f8 01	 cmp	 eax, 1
  00643	0f 85 e5 00 00
	00		 jne	 $LN12@simple_vm_
; Line 223
  00649	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0064e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00655	48 6b c0 18	 imul	 rax, 24
  00659	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0065e	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00663	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 224
  00668	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0066d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00674	fe c8		 dec	 al
  00676	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0067b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 225
  00681	ba 03 00 00 00	 mov	 edx, 3
  00686	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  0068b	e8 00 00 00 00	 call	 simple_list_islist
  00690	85 c0		 test	 eax, eax
  00692	0f 84 80 00 00
	00		 je	 $LN11@simple_vm_
; Line 226
  00698	ba 03 00 00 00	 mov	 edx, 3
  0069d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  006a2	e8 00 00 00 00	 call	 simple_list_getlist
  006a7	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 228
  006ac	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  006b1	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  006b6	83 f8 01	 cmp	 eax, 1
  006b9	75 44		 jne	 SHORT $LN10@simple_vm_
; Line 229
  006bb	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  006c0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  006c7	fe c0		 inc	 al
  006c9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  006ce	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 230
  006d4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  006d9	e8 00 00 00 00	 call	 simple_string_size
  006de	44 8b c8	 mov	 r9d, eax
  006e1	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  006e6	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  006e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82533
  006f0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  006f5	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 231
  006fa	e9 75 01 00 00	 jmp	 $LN40@simple_vm_
$LN10@simple_vm_:
; Line 233
  006ff	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  00704	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00707	48 8b 54 24 28	 mov	 rdx, QWORD PTR var$[rsp]
  0070c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00711	e8 00 00 00 00	 call	 simple_vm_listgetvalue
; Line 234
  00716	eb 11		 jmp	 SHORT $LN9@simple_vm_
$LN11@simple_vm_:
; Line 235
  00718	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82535
  0071f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00724	e8 00 00 00 00	 call	 simple_vm_error
$LN9@simple_vm_:
; Line 236
  00729	e9 0a 01 00 00	 jmp	 $LN8@simple_vm_
$LN12@simple_vm_:
; Line 238
  0072e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00733	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0073a	48 6b c0 18	 imul	 rax, 24
  0073e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00743	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00747	c1 e8 05	 shr	 eax, 5
  0074a	83 e0 03	 and	 eax, 3
  0074d	83 f8 02	 cmp	 eax, 2
  00750	0f 85 d1 00 00
	00		 jne	 $LN7@simple_vm_
; Line 239
  00756	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0075b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00762	48 6b c0 18	 imul	 rax, 24
  00766	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0076b	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00770	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 240
  00775	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0077a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00781	fe c8		 dec	 al
  00783	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00788	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 241
  0078e	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00793	8b 00		 mov	 eax, DWORD PTR [rax]
  00795	83 e0 07	 and	 eax, 7
  00798	83 f8 04	 cmp	 eax, 4
  0079b	75 77		 jne	 SHORT $LN6@simple_vm_
; Line 242
  0079d	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  007a2	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  007a6	48 89 44 24 28	 mov	 QWORD PTR var$[rsp], rax
; Line 244
  007ab	48 8b 4c 24 28	 mov	 rcx, QWORD PTR var$[rsp]
  007b0	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  007b5	83 f8 01	 cmp	 eax, 1
  007b8	75 41		 jne	 SHORT $LN5@simple_vm_
; Line 245
  007ba	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  007bf	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  007c6	fe c0		 inc	 al
  007c8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  007cd	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 246
  007d3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR string$[rsp]
  007d8	e8 00 00 00 00	 call	 simple_string_size
  007dd	44 8b c8	 mov	 r9d, eax
  007e0	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  007e5	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  007e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82541
  007ef	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  007f4	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 247
  007f9	eb 79		 jmp	 SHORT $LN40@simple_vm_
$LN5@simple_vm_:
; Line 249
  007fb	48 8b 44 24 40	 mov	 rax, QWORD PTR string$[rsp]
  00800	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00803	48 8b 54 24 28	 mov	 rdx, QWORD PTR var$[rsp]
  00808	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0080d	e8 00 00 00 00	 call	 simple_vm_listgetvalue
; Line 250
  00812	eb 11		 jmp	 SHORT $LN4@simple_vm_
$LN6@simple_vm_:
; Line 251
  00814	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82543
  0081b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00820	e8 00 00 00 00	 call	 simple_vm_error
$LN4@simple_vm_:
; Line 253
  00825	eb 11		 jmp	 SHORT $LN3@simple_vm_
$LN7@simple_vm_:
; Line 254
  00827	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82545
  0082e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00833	e8 00 00 00 00	 call	 simple_vm_error
$LN3@simple_vm_:
$LN8@simple_vm_:
; Line 256
  00838	eb 11		 jmp	 SHORT $LN2@simple_vm_
$LN13@simple_vm_:
; Line 257
  0083a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82547
  00841	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00846	e8 00 00 00 00	 call	 simple_vm_error
$LN2@simple_vm_:
; Line 260
  0084b	48 8b 54 24 40	 mov	 rdx, QWORD PTR string$[rsp]
  00850	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00855	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0085c	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 261
  00861	eb 11		 jmp	 SHORT $LN1@simple_vm_
$LN14@simple_vm_:
; Line 262
  00863	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82549
  0086a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0086f	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN15@simple_vm_:
$LN40@simple_vm_:
$LN41@simple_vm_:
; Line 264
  00874	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00878	c3		 ret	 0
simple_vm_loadindexaddress ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_listend PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 126
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 127
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	8b 80 6c 18 00
	00		 mov	 eax, DWORD PTR [rax+6252]
  00014	ff c8		 dec	 eax
  00016	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001b	89 81 6c 18 00
	00		 mov	 DWORD PTR [rcx+6252], eax
; Line 128
  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00026	48 8b 80 70 18
	00 00		 mov	 rax, QWORD PTR [rax+6256]
  0002d	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00036	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00042	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00049	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 129
  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
simple_vm_listend ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list2$ = 32
list$ = 40
list3$ = 48
string_one$ = 56
nNum1$ = 64
pItem$ = 72
vm$ = 96
simple_vm_listitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 90
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 95
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 70 18
	00 00		 mov	 rax, QWORD PTR [rax+6256]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 70 18
	00 00		 mov	 rcx, QWORD PTR [rax+6256]
  00024	e8 00 00 00 00	 call	 simple_list_getitem
  00029	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002d	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 96
  00032	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00037	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003e	48 6b c0 18	 imul	 rax, 24
  00042	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00047	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0004b	83 e0 07	 and	 eax, 7
  0004e	83 f8 01	 cmp	 eax, 1
  00051	0f 85 85 00 00
	00		 jne	 $LN8@simple_vm_
; Line 97
  00057	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0005c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00063	48 6b c0 18	 imul	 rax, 24
  00067	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0006c	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00071	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00074	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00079	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00080	e8 00 00 00 00	 call	 simple_string_new_gc
  00085	48 89 44 24 38	 mov	 QWORD PTR string_one$[rsp], rax
; Line 98
  0008a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0008f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00096	fe c8		 dec	 al
  00098	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0009d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 99
  000a3	48 8b 44 24 38	 mov	 rax, QWORD PTR string_one$[rsp]
  000a8	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000ab	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  000b0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000bc	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 100
  000c1	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  000c6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000cb	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000d2	e8 00 00 00 00	 call	 simple_string_delete_gc
  000d7	e9 d4 01 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 102
  000dc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000e1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e8	48 6b c0 18	 imul	 rax, 24
  000ec	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000f1	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000f5	83 e0 07	 and	 eax, 7
  000f8	83 f8 02	 cmp	 eax, 2
  000fb	75 5b		 jne	 SHORT $LN6@simple_vm_
; Line 103
  000fd	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00102	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00109	48 6b c0 18	 imul	 rax, 24
  0010d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00112	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00118	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 104
  0011e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00123	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012a	fe c8		 dec	 al
  0012c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00131	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 105
  00137	f2 0f 10 54 24
	40		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0013d	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00142	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00147	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0014e	e8 00 00 00 00	 call	 simple_list_adddouble_gc
  00153	e9 58 01 00 00	 jmp	 $LN5@simple_vm_
$LN6@simple_vm_:
; Line 107
  00158	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0015d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00164	48 6b c0 18	 imul	 rax, 24
  00168	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0016d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00171	83 e0 07	 and	 eax, 7
  00174	83 f8 03	 cmp	 eax, 3
  00177	0f 85 33 01 00
	00		 jne	 $LN4@simple_vm_
; Line 108
  0017d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00182	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00189	48 6b c0 18	 imul	 rax, 24
  0018d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00192	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00196	c1 e8 05	 shr	 eax, 5
  00199	83 e0 03	 and	 eax, 3
  0019c	83 f8 01	 cmp	 eax, 1
  0019f	75 7b		 jne	 SHORT $LN3@simple_vm_
; Line 109
  001a1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001ad	48 6b c0 18	 imul	 rax, 24
  001b1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001b6	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001bb	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 110
  001c0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001cc	fe c8		 dec	 al
  001ce	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001d3	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 111
  001d9	ba 03 00 00 00	 mov	 edx, 3
  001de	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list2$[rsp]
  001e3	e8 00 00 00 00	 call	 simple_list_getlist
  001e8	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 112
  001ed	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  001f2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001f7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001fe	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00203	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 113
  00208	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  0020d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  00212	e8 00 00 00 00	 call	 simple_list_copy
  00217	e9 94 00 00 00	 jmp	 $LN2@simple_vm_
$LN3@simple_vm_:
; Line 115
  0021c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	48 6b c0 18	 imul	 rax, 24
  0022c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00231	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00235	c1 e8 05	 shr	 eax, 5
  00238	83 e0 03	 and	 eax, 3
  0023b	83 f8 02	 cmp	 eax, 2
  0023e	75 70		 jne	 SHORT $LN1@simple_vm_
; Line 116
  00240	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00245	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0024c	48 6b c0 18	 imul	 rax, 24
  00250	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00255	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0025a	48 89 44 24 48	 mov	 QWORD PTR pItem$[rsp], rax
; Line 117
  0025f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00264	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0026b	fe c8		 dec	 al
  0026d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00272	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 118
  00278	48 8b 44 24 48	 mov	 rax, QWORD PTR pItem$[rsp]
  0027d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00281	48 89 44 24 20	 mov	 QWORD PTR list2$[rsp], rax
; Line 119
  00286	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  0028b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00290	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00297	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0029c	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 120
  002a1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list2$[rsp]
  002a6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  002ab	e8 00 00 00 00	 call	 simple_list_copy
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 123
  002b0	48 83 c4 58	 add	 rsp, 88			; 00000058H
  002b4	c3		 ret	 0
simple_vm_listitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 32
nCont$ = 36
tv167 = 40
var$ = 48
pItem$ = 56
list$ = 64
vm$ = 96
simple_vm_liststart PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmlists.c
; Line 18
$LN23:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 23
  00009	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR var$[rsp], 0
; Line 24
  00012	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR pItem$[rsp], 0
; Line 25
  0001b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00020	8b 80 6c 18 00
	00		 mov	 eax, DWORD PTR [rax+6252]
  00026	ff c0		 inc	 eax
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0002d	89 81 6c 18 00
	00		 mov	 DWORD PTR [rcx+6252], eax
; Line 26
  00033	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00038	83 b8 6c 18 00
	00 01		 cmp	 DWORD PTR [rax+6252], 1
  0003f	0f 85 6c 03 00
	00		 jne	 $LN18@simple_vm_
; Line 28
  00045	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 0
; Line 29
  0004d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00052	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00059	48 6b c0 18	 imul	 rax, 24
  0005d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00066	83 e0 07	 and	 eax, 7
  00069	83 f8 03	 cmp	 eax, 3
  0006c	75 78		 jne	 SHORT $LN17@simple_vm_
; Line 30
  0006e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00073	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007a	48 6b c0 18	 imul	 rax, 24
  0007e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00083	48 8b 54 24 60	 mov	 rdx, QWORD PTR vm$[rsp]
  00088	48 8b 44 02 38	 mov	 rax, QWORD PTR [rdx+rax+56]
  0008d	48 39 81 30 19
	00 00		 cmp	 QWORD PTR [rcx+6448], rax
  00094	74 0a		 je	 SHORT $LN16@simple_vm_
; Line 31
  00096	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 1
; Line 33
  0009e	eb 46		 jmp	 SHORT $LN15@simple_vm_
$LN16@simple_vm_:
; Line 35
  000a0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000a5	83 b8 e8 18 00
	00 04		 cmp	 DWORD PTR [rax+6376], 4
  000ac	75 38		 jne	 SHORT $LN14@simple_vm_
; Line 40
  000ae	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000b3	48 8b 80 e0 18
	00 00		 mov	 rax, QWORD PTR [rax+6368]
  000ba	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  000be	7e 26		 jle	 SHORT $LN13@simple_vm_
  000c0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000c5	e8 00 00 00 00	 call	 simple_vm_oop_callmethodinsideclass
  000ca	85 c0		 test	 eax, eax
  000cc	75 18		 jne	 SHORT $LN13@simple_vm_
  000ce	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000d3	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  000da	85 c0		 test	 eax, eax
  000dc	75 08		 jne	 SHORT $LN13@simple_vm_
; Line 41
  000de	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR nCont$[rsp], 1
$LN13@simple_vm_:
$LN14@simple_vm_:
$LN15@simple_vm_:
$LN17@simple_vm_:
; Line 46
  000e6	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000eb	83 b8 94 18 00
	00 00		 cmp	 DWORD PTR [rax+6292], 0
  000f2	7f 0b		 jg	 SHORT $LN11@simple_vm_
  000f4	83 7c 24 24 01	 cmp	 DWORD PTR nCont$[rsp], 1
  000f9	0f 85 a5 00 00
	00		 jne	 $LN12@simple_vm_
$LN11@simple_vm_:
; Line 47
  000ff	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00104	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  0010b	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0010f	7e 0c		 jle	 SHORT $LN10@simple_vm_
; Line 48
  00111	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00116	e8 00 00 00 00	 call	 simple_vm_createtemlist
; Line 49
  0011b	eb 1d		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 51
  0011d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00122	4c 8b 80 48 18
	00 00		 mov	 r8, QWORD PTR [rax+6216]
  00129	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82443
  00130	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00135	e8 00 00 00 00	 call	 simple_vm_newtempvar
$LN9@simple_vm_:
; Line 53
  0013a	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0013f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00146	48 6b c0 18	 imul	 rax, 24
  0014a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0014f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00154	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 54
  00159	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0015e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00165	48 6b c0 18	 imul	 rax, 24
  00169	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0016e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00172	c1 e8 05	 shr	 eax, 5
  00175	83 e0 03	 and	 eax, 3
  00178	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 56
  0017c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00182	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00187	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  0018e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00193	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0019a	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 57
  0019f	e9 fd 00 00 00	 jmp	 $LN8@simple_vm_
$LN12@simple_vm_:
; Line 58
  001a4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b0	48 6b c0 18	 imul	 rax, 24
  001b4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001b9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001bd	83 e0 07	 and	 eax, 7
  001c0	83 f8 03	 cmp	 eax, 3
  001c3	75 0a		 jne	 SHORT $LN21@simple_vm_
  001c5	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv167[rsp], 1
  001cd	eb 08		 jmp	 SHORT $LN22@simple_vm_
$LN21@simple_vm_:
  001cf	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv167[rsp], 0
$LN22@simple_vm_:
  001d7	83 7c 24 28 00	 cmp	 DWORD PTR tv167[rsp], 0
  001dc	75 40		 jne	 SHORT $LN7@simple_vm_
; Line 60
  001de	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001e3	4c 8b 80 48 18
	00 00		 mov	 r8, QWORD PTR [rax+6216]
  001ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82447
  001f1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001f6	e8 00 00 00 00	 call	 simple_vm_newtempvar
; Line 61
  001fb	41 b8 01 00 00
	00		 mov	 r8d, 1
  00201	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00206	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  0020d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00212	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00219	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN7@simple_vm_:
; Line 63
  0021e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00223	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0022a	48 6b c0 18	 imul	 rax, 24
  0022e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00233	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00237	c1 e8 05	 shr	 eax, 5
  0023a	83 e0 03	 and	 eax, 3
  0023d	89 44 24 20	 mov	 DWORD PTR nType$[rsp], eax
; Line 64
  00241	83 7c 24 20 02	 cmp	 DWORD PTR nType$[rsp], 2
  00246	75 21		 jne	 SHORT $LN6@simple_vm_
; Line 65
  00248	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0024d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00254	48 6b c0 18	 imul	 rax, 24
  00258	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0025d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00262	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 66
  00267	eb 1f		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 67
  00269	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0026e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00275	48 6b c0 18	 imul	 rax, 24
  00279	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0027e	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00283	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
$LN5@simple_vm_:
; Line 69
  00288	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00294	fe c8		 dec	 al
  00296	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0029b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
$LN8@simple_vm_:
; Line 71
  002a1	83 7c 24 20 01	 cmp	 DWORD PTR nType$[rsp], 1
  002a6	0f 85 92 00 00
	00		 jne	 $LN4@simple_vm_
; Line 72
  002ac	41 b9 03 00 00
	00		 mov	 r9d, 3
  002b2	41 b8 02 00 00
	00		 mov	 r8d, 2
  002b8	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  002bd	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002c2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002c9	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 73
  002ce	41 b8 03 00 00
	00		 mov	 r8d, 3
  002d4	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  002d9	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e5	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 74
  002ea	ba 03 00 00 00	 mov	 edx, 3
  002ef	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  002f4	e8 00 00 00 00	 call	 simple_list_getlist
  002f9	48 8b d0	 mov	 rdx, rax
  002fc	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00301	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00308	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 75
  0030d	ba 03 00 00 00	 mov	 edx, 3
  00312	48 8b 4c 24 30	 mov	 rcx, QWORD PTR var$[rsp]
  00317	e8 00 00 00 00	 call	 simple_list_getlist
  0031c	4c 8b c0	 mov	 r8, rax
  0031f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00324	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  0032b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00330	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00337	e8 00 00 00 00	 call	 simple_list_addpointer_gc
  0033c	eb 71		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 77
  0033e	83 7c 24 20 02	 cmp	 DWORD PTR nType$[rsp], 2
  00343	75 6a		 jne	 SHORT $LN2@simple_vm_
  00345	48 83 7c 24 38
	00		 cmp	 QWORD PTR pItem$[rsp], 0
  0034b	74 62		 je	 SHORT $LN2@simple_vm_
; Line 78
  0034d	41 b8 04 00 00
	00		 mov	 r8d, 4
  00353	48 8b 54 24 38	 mov	 rdx, QWORD PTR pItem$[rsp]
  00358	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0035d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00364	e8 00 00 00 00	 call	 simple_item_settype_gc
; Line 79
  00369	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  0036e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00372	48 89 44 24 30	 mov	 QWORD PTR var$[rsp], rax
; Line 80
  00377	48 8b 54 24 30	 mov	 rdx, QWORD PTR var$[rsp]
  0037c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00381	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00388	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 81
  0038d	4c 8b 44 24 30	 mov	 r8, QWORD PTR var$[rsp]
  00392	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00397	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  0039e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003a3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003aa	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 83
  003af	eb 5f		 jmp	 SHORT $LN1@simple_vm_
$LN18@simple_vm_:
; Line 84
  003b1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b6	48 8b 80 70 18
	00 00		 mov	 rax, QWORD PTR [rax+6256]
  003bd	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  003c0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003c5	48 8b 88 70 18
	00 00		 mov	 rcx, QWORD PTR [rax+6256]
  003cc	e8 00 00 00 00	 call	 simple_list_getitem
  003d1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003d5	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 85
  003da	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  003df	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003e4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003eb	e8 00 00 00 00	 call	 simple_list_newlist_gc
  003f0	4c 8b c0	 mov	 r8, rax
  003f3	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003f8	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  003ff	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00404	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0040b	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN1@simple_vm_:
; Line 87
  00410	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00414	c3		 ret	 0
simple_vm_liststart ENDP
_TEXT	ENDS
END
