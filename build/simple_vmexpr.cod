; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG83044 DB	01H DUP (?)
$SG83070 DB	01H DUP (?)
$SG82437 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82958 DB	'^', 00H
	ORG $+2
$SG82970 DB	'^', 00H
	ORG $+2
$SG82973 DB	'^', 00H
	ORG $+2
$SG82985 DB	'~', 00H
	ORG $+2
$SG82996 DB	'%.0f', 00H
	ORG $+3
$SG82998 DB	'%.', 00H
	ORG $+1
$SG82999 DB	'%s%df', 00H
	ORG $+2
$SG83035 DB	'+', 00H
	ORG $+2
$SG83008 DB	'RUNTIME ERROR 24 : Numeric Overflow! ', 00H
	ORG $+2
$SG83025 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83033 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83039 DB	'=', 00H
	ORG $+2
$SG83066 DB	'+', 00H
	ORG $+2
$SG82507 DB	'RUNTIME ERROR 24 : Numeric Overflow! ', 00H
	ORG $+2
$SG83046 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83048 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83064 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83072 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83090 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG83092 DB	'+', 00H
	ORG $+2
$SG82436 DB	0aH, 00H
	ORG $+2
$SG82518 DB	'RUNTIME ERROR 1 : Can''t divide by zero ', 00H
$SG83097 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82441 DB	'+', 00H
	ORG $+2
$SG82449 DB	'+', 00H
	ORG $+2
$SG82452 DB	'+', 00H
	ORG $+6
$SG82454 DB	'RUNTIME ERROR 24 : Using operator with values of incorre'
	DB	'ct type', 00H
$SG82467 DB	'-', 00H
	ORG $+2
$SG82475 DB	'-', 00H
	ORG $+2
$SG82478 DB	'-', 00H
	ORG $+2
$SG82493 DB	'*', 00H
	ORG $+2
$SG82501 DB	'*', 00H
	ORG $+2
$SG82504 DB	'*', 00H
	ORG $+2
$SG82524 DB	'/', 00H
	ORG $+2
$SG82532 DB	'/', 00H
	ORG $+2
$SG82535 DB	'/', 00H
	ORG $+2
$SG82555 DB	'%', 00H
	ORG $+2
$SG82538 DB	'RUNTIME ERROR 24 : Numeric Overflow! ', 00H
	ORG $+2
$SG82549 DB	'RUNTIME ERROR 1 : Can''t divide by zero ', 00H
$SG82563 DB	'%', 00H
	ORG $+2
$SG82566 DB	'%', 00H
	ORG $+2
$SG82569 DB	'RUNTIME ERROR 24 : Numeric Overflow! ', 00H
	ORG $+2
$SG82579 DB	'neg', 00H
$SG82598 DB	'=', 00H
	ORG $+2
$SG82610 DB	'=', 00H
	ORG $+2
$SG82613 DB	'=', 00H
	ORG $+2
$SG82626 DB	'<=', 00H
	ORG $+1
$SG82634 DB	'<=', 00H
	ORG $+1
$SG82637 DB	'<=', 00H
	ORG $+1
$SG82652 DB	'<', 00H
	ORG $+2
$SG82660 DB	'<', 00H
	ORG $+2
$SG82663 DB	'<', 00H
	ORG $+2
$SG82678 DB	'>', 00H
	ORG $+2
$SG82686 DB	'>', 00H
	ORG $+2
$SG82689 DB	'>', 00H
	ORG $+2
$SG82704 DB	'>=', 00H
	ORG $+1
$SG82712 DB	'>=', 00H
	ORG $+1
$SG82715 DB	'>=', 00H
	ORG $+1
$SG82736 DB	'!=', 00H
	ORG $+1
$SG82748 DB	'!=', 00H
	ORG $+1
$SG82751 DB	'!=', 00H
	ORG $+1
$SG82764 DB	'and', 00H
$SG82772 DB	'and', 00H
$SG82775 DB	'and', 00H
$SG82788 DB	'or', 00H
	ORG $+1
$SG82796 DB	'or', 00H
	ORG $+1
$SG82799 DB	'or', 00H
	ORG $+1
$SG82813 DB	'not', 00H
$SG82830 DB	'&', 00H
	ORG $+2
$SG82842 DB	'&', 00H
	ORG $+2
$SG82845 DB	'&', 00H
	ORG $+2
$SG82862 DB	'|', 00H
	ORG $+2
$SG82874 DB	'|', 00H
	ORG $+2
$SG82877 DB	'|', 00H
	ORG $+2
$SG82894 DB	'<<', 00H
	ORG $+1
$SG82906 DB	'<<', 00H
	ORG $+1
$SG82909 DB	'<<', 00H
	ORG $+1
$SG82926 DB	'>>', 00H
	ORG $+1
$SG82938 DB	'>>', 00H
	ORG $+1
$SG82941 DB	'>>', 00H
_DATA	ENDS
PUBLIC	simple_vm_equal
PUBLIC	simple_vm_lessequal
PUBLIC	simple_vm_less
PUBLIC	simple_vm_greater
PUBLIC	simple_vm_greaterequal
PUBLIC	simple_vm_notequal
PUBLIC	simple_vm_sum
PUBLIC	simple_vm_sub
PUBLIC	simple_vm_mul
PUBLIC	simple_vm_div
PUBLIC	simple_vm_mod
PUBLIC	simple_vm_neg
PUBLIC	simple_vm_numtostring
PUBLIC	simple_vm_stringtonum
PUBLIC	simple_vm_expr_ppoo
PUBLIC	simple_vm_expr_npoo
PUBLIC	simple_vm_expr_spoo
PUBLIC	simple_vm_addlisttolist
PUBLIC	simple_vm_and
PUBLIC	simple_vm_or
PUBLIC	simple_vm_not
PUBLIC	simple_vm_bitand
PUBLIC	simple_vm_bitor
PUBLIC	simple_vm_bitxor
PUBLIC	simple_vm_bitnot
PUBLIC	simple_vm_bitshl
PUBLIC	simple_vm_bitshr
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@bff0000000000000
EXTRN	atof:PROC
EXTRN	sprintf:PROC
EXTRN	strcmp:PROC
EXTRN	strlen:PROC
EXTRN	fmod:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_new2_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_string_add2_gc:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_addstring2_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_copy_gc:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_operatoroverloading:PROC
EXTRN	simple_vm_oop_updateselfpointer:PROC
EXTRN	api_iscpointer_list:PROC
EXTRN	api_cpointer_cmp:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_equal DD imagerel $LN26
	DD	imagerel $LN26+1387
	DD	imagerel $unwind$simple_vm_equal
$pdata$simple_vm_lessequal DD imagerel $LN20
	DD	imagerel $LN20+910
	DD	imagerel $unwind$simple_vm_lessequal
$pdata$simple_vm_less DD imagerel $LN20
	DD	imagerel $LN20+910
	DD	imagerel $unwind$simple_vm_less
$pdata$simple_vm_greater DD imagerel $LN20
	DD	imagerel $LN20+910
	DD	imagerel $unwind$simple_vm_greater
$pdata$simple_vm_greaterequal DD imagerel $LN20
	DD	imagerel $LN20+910
	DD	imagerel $unwind$simple_vm_greaterequal
$pdata$simple_vm_notequal DD imagerel $LN26
	DD	imagerel $LN26+1457
	DD	imagerel $unwind$simple_vm_notequal
$pdata$simple_vm_sum DD imagerel $LN21
	DD	imagerel $LN21+1647
	DD	imagerel $unwind$simple_vm_sum
$pdata$simple_vm_sub DD imagerel $LN18
	DD	imagerel $LN18+901
	DD	imagerel $unwind$simple_vm_sub
$pdata$simple_vm_mul DD imagerel $LN20
	DD	imagerel $LN20+1195
	DD	imagerel $unwind$simple_vm_mul
$pdata$simple_vm_div DD imagerel $LN21
	DD	imagerel $LN21+1238
	DD	imagerel $unwind$simple_vm_div
$pdata$simple_vm_mod DD imagerel $LN21
	DD	imagerel $LN21+1243
	DD	imagerel $unwind$simple_vm_mod
$pdata$simple_vm_neg DD imagerel $LN8
	DD	imagerel $LN8+296
	DD	imagerel $unwind$simple_vm_neg
$pdata$simple_vm_numtostring DD imagerel $LN5
	DD	imagerel $LN5+177
	DD	imagerel $unwind$simple_vm_numtostring
$pdata$simple_vm_stringtonum DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$simple_vm_stringtonum
$pdata$simple_vm_expr_ppoo DD imagerel $LN22
	DD	imagerel $LN22+1107
	DD	imagerel $unwind$simple_vm_expr_ppoo
$pdata$simple_vm_expr_npoo DD imagerel $LN11
	DD	imagerel $LN11+410
	DD	imagerel $unwind$simple_vm_expr_npoo
$pdata$simple_vm_expr_spoo DD imagerel $LN11
	DD	imagerel $LN11+413
	DD	imagerel $unwind$simple_vm_expr_spoo
$pdata$simple_vm_addlisttolist DD imagerel $LN6
	DD	imagerel $LN6+322
	DD	imagerel $unwind$simple_vm_addlisttolist
$pdata$simple_vm_and DD imagerel $LN34
	DD	imagerel $LN34+1152
	DD	imagerel $unwind$simple_vm_and
$pdata$simple_vm_or DD imagerel $LN26
	DD	imagerel $LN26+1152
	DD	imagerel $unwind$simple_vm_or
$pdata$simple_vm_not DD imagerel $LN13
	DD	imagerel $LN13+384
	DD	imagerel $unwind$simple_vm_not
$pdata$simple_vm_bitand DD imagerel $LN18
	DD	imagerel $LN18+976
	DD	imagerel $unwind$simple_vm_bitand
$pdata$simple_vm_bitor DD imagerel $LN18
	DD	imagerel $LN18+976
	DD	imagerel $unwind$simple_vm_bitor
$pdata$simple_vm_bitxor DD imagerel $LN18
	DD	imagerel $LN18+976
	DD	imagerel $unwind$simple_vm_bitxor
$pdata$simple_vm_bitnot DD imagerel $LN8
	DD	imagerel $LN8+292
	DD	imagerel $unwind$simple_vm_bitnot
$pdata$simple_vm_bitshl DD imagerel $LN18
	DD	imagerel $LN18+976
	DD	imagerel $unwind$simple_vm_bitshl
$pdata$simple_vm_bitshr DD imagerel $LN18
	DD	imagerel $LN18+976
	DD	imagerel $unwind$simple_vm_bitshr
pdata	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_equal DD 021e19H
	DD	019010cH
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$simple_vm_lessequal DD 010901H
	DD	08209H
$unwind$simple_vm_less DD 010901H
	DD	08209H
$unwind$simple_vm_greater DD 010901H
	DD	08209H
$unwind$simple_vm_greaterequal DD 010901H
	DD	08209H
$unwind$simple_vm_notequal DD 021e19H
	DD	019010cH
	DD	imagerel __GSHandlerCheck
	DD	0b0H
$unwind$simple_vm_sum DD 021e19H
	DD	01b010cH
	DD	imagerel __GSHandlerCheck
	DD	0c0H
$unwind$simple_vm_sub DD 010901H
	DD	08209H
$unwind$simple_vm_mul DD 021e19H
	DD	027010cH
	DD	imagerel __GSHandlerCheck
	DD	0120H
$unwind$simple_vm_div DD 021e19H
	DD	027010cH
	DD	imagerel __GSHandlerCheck
	DD	0120H
$unwind$simple_vm_mod DD 021e19H
	DD	027010cH
	DD	imagerel __GSHandlerCheck
	DD	0120H
$unwind$simple_vm_neg DD 010901H
	DD	06209H
$unwind$simple_vm_numtostring DD 012319H
	DD	08214H
	DD	imagerel __GSHandlerCheck
	DD	030H
$unwind$simple_vm_stringtonum DD 010e01H
	DD	0620eH
$unwind$simple_vm_expr_ppoo DD 010e01H
	DD	0e20eH
$unwind$simple_vm_expr_npoo DD 011401H
	DD	0a214H
$unwind$simple_vm_expr_spoo DD 011801H
	DD	0a218H
$unwind$simple_vm_addlisttolist DD 011301H
	DD	06213H
$unwind$simple_vm_and DD 010901H
	DD	0a209H
$unwind$simple_vm_or DD 010901H
	DD	0a209H
$unwind$simple_vm_not DD 010901H
	DD	06209H
$unwind$simple_vm_bitand DD 010901H
	DD	08209H
$unwind$simple_vm_bitor DD 010901H
	DD	08209H
$unwind$simple_vm_bitxor DD 010901H
	DD	08209H
$unwind$simple_vm_bitnot DD 010901H
	DD	06209H
$unwind$simple_vm_bitshl DD 010901H
	DD	08209H
$unwind$simple_vm_bitshr DD 010901H
	DD	08209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
string_one$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_bitshr PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 857
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 860
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 69 01 00
	00		 jne	 $LN15@simple_vm_
; Line 861
  0002e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 862
  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 863
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 4b		 jne	 SHORT $LN14@simple_vm_
; Line 864
  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00095	48 6b c0 18	 imul	 rax, 24
  00099	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0009e	f2 0f 2c 44 01
	38		 cvttsd2si eax, QWORD PTR [rcx+rax+56]
  000a4	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  000aa	d3 f8		 sar	 eax, cl
  000ac	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c5	0f 28 d0	 movaps	 xmm2, xmm0
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000cf	e9 be 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 866
  000d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e0	48 6b c0 18	 imul	 rax, 24
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ed	83 e0 07	 and	 eax, 7
  000f0	83 f8 01	 cmp	 eax, 1
  000f3	75 60		 jne	 SHORT $LN12@simple_vm_
; Line 867
  000f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00101	48 6b c0 18	 imul	 rax, 24
  00105	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0010a	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00112	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0011c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 868
  00122	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum2$[rsp]
  00128	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  0012e	d3 f8		 sar	 eax, cl
  00130	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00140	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00149	0f 28 d0	 movaps	 xmm2, xmm0
  0014c	8b d0		 mov	 edx, eax
  0014e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00153	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 870
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00161	48 6b c0 18	 imul	 rax, 24
  00165	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016e	83 e0 07	 and	 eax, 7
  00171	83 f8 03	 cmp	 eax, 3
  00174	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 871
  00176	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82926
  00183	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00188	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 872
  0018d	e9 39 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 873
  00192	e9 34 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 875
  00197	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a3	48 6b c0 18	 imul	 rax, 24
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b0	83 e0 07	 and	 eax, 7
  001b3	83 f8 01	 cmp	 eax, 1
  001b6	0f 85 dd 01 00
	00		 jne	 $LN8@simple_vm_
; Line 876
  001bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c8	48 6b c0 18	 imul	 rax, 24
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001d6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_string_new_gc
  001ea	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 877
  001ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00209	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00216	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 878
  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	fe c8		 dec	 al
  0022a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 879
  00235	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0023a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00241	48 6b c0 18	 imul	 rax, 24
  00245	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0024a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0024e	83 e0 07	 and	 eax, 7
  00251	83 f8 02	 cmp	 eax, 2
  00254	75 4b		 jne	 SHORT $LN7@simple_vm_
; Line 880
  00256	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0025b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00262	48 6b c0 18	 imul	 rax, 24
  00266	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0026b	f2 0f 2c 44 01
	38		 cvttsd2si eax, QWORD PTR [rcx+rax+56]
  00271	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00277	d3 f8		 sar	 eax, cl
  00279	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0027d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00282	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00289	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0028e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00292	0f 28 d0	 movaps	 xmm2, xmm0
  00295	8b d0		 mov	 edx, eax
  00297	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0029c	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 882
  002a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ad	48 6b c0 18	 imul	 rax, 24
  002b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002ba	83 e0 07	 and	 eax, 7
  002bd	83 f8 01	 cmp	 eax, 1
  002c0	75 60		 jne	 SHORT $LN5@simple_vm_
; Line 883
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ce	48 6b c0 18	 imul	 rax, 24
  002d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002dc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002e9	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 884
  002ef	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum2$[rsp]
  002f5	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  002fb	d3 f8		 sar	 eax, cl
  002fd	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00312	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00316	0f 28 d0	 movaps	 xmm2, xmm0
  00319	8b d0		 mov	 edx, eax
  0031b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00320	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 886
  00322	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00327	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032e	48 6b c0 18	 imul	 rax, 24
  00332	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 887
  00343	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00348	e8 00 00 00 00	 call	 simple_string_size
  0034d	44 8b c8	 mov	 r9d, eax
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00355	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00358	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82938
  0035f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00364	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 888
  00369	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0036e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 889
  0037f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 891
  00381	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  00386	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00392	e8 00 00 00 00	 call	 simple_string_delete_gc
  00397	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 893
  00399	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003a5	48 6b c0 18	 imul	 rax, 24
  003a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003b2	83 e0 07	 and	 eax, 7
  003b5	83 f8 03	 cmp	 eax, 3
  003b8	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 894
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82941
  003c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 896
  003cb	48 83 c4 48	 add	 rsp, 72			; 00000048H
  003cf	c3		 ret	 0
simple_vm_bitshr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
string_one$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_bitshl PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 815
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 818
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 69 01 00
	00		 jne	 $LN15@simple_vm_
; Line 819
  0002e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 820
  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 821
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 4b		 jne	 SHORT $LN14@simple_vm_
; Line 822
  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0008e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00095	48 6b c0 18	 imul	 rax, 24
  00099	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0009e	f2 0f 2c 44 01
	38		 cvttsd2si eax, QWORD PTR [rcx+rax+56]
  000a4	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  000aa	d3 e0		 shl	 eax, cl
  000ac	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c5	0f 28 d0	 movaps	 xmm2, xmm0
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000cf	e9 be 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 824
  000d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e0	48 6b c0 18	 imul	 rax, 24
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ed	83 e0 07	 and	 eax, 7
  000f0	83 f8 01	 cmp	 eax, 1
  000f3	75 60		 jne	 SHORT $LN12@simple_vm_
; Line 825
  000f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00101	48 6b c0 18	 imul	 rax, 24
  00105	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0010a	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00112	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0011c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 826
  00122	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum2$[rsp]
  00128	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  0012e	d3 e0		 shl	 eax, cl
  00130	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00140	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00149	0f 28 d0	 movaps	 xmm2, xmm0
  0014c	8b d0		 mov	 edx, eax
  0014e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00153	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 828
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00161	48 6b c0 18	 imul	 rax, 24
  00165	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016e	83 e0 07	 and	 eax, 7
  00171	83 f8 03	 cmp	 eax, 3
  00174	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 829
  00176	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82894
  00183	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00188	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 830
  0018d	e9 39 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 831
  00192	e9 34 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 833
  00197	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a3	48 6b c0 18	 imul	 rax, 24
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b0	83 e0 07	 and	 eax, 7
  001b3	83 f8 01	 cmp	 eax, 1
  001b6	0f 85 dd 01 00
	00		 jne	 $LN8@simple_vm_
; Line 834
  001bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c8	48 6b c0 18	 imul	 rax, 24
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001d6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_string_new_gc
  001ea	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 835
  001ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00209	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00216	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 836
  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	fe c8		 dec	 al
  0022a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 837
  00235	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0023a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00241	48 6b c0 18	 imul	 rax, 24
  00245	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0024a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0024e	83 e0 07	 and	 eax, 7
  00251	83 f8 02	 cmp	 eax, 2
  00254	75 4b		 jne	 SHORT $LN7@simple_vm_
; Line 838
  00256	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0025b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00262	48 6b c0 18	 imul	 rax, 24
  00266	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0026b	f2 0f 2c 44 01
	38		 cvttsd2si eax, QWORD PTR [rcx+rax+56]
  00271	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  00277	d3 e0		 shl	 eax, cl
  00279	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0027d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00282	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00289	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0028e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00292	0f 28 d0	 movaps	 xmm2, xmm0
  00295	8b d0		 mov	 edx, eax
  00297	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0029c	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 840
  002a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ad	48 6b c0 18	 imul	 rax, 24
  002b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002ba	83 e0 07	 and	 eax, 7
  002bd	83 f8 01	 cmp	 eax, 1
  002c0	75 60		 jne	 SHORT $LN5@simple_vm_
; Line 841
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ce	48 6b c0 18	 imul	 rax, 24
  002d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002dc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002e9	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 842
  002ef	f2 0f 2c 44 24
	30		 cvttsd2si eax, QWORD PTR nNum2$[rsp]
  002f5	f2 0f 2c 4c 24
	20		 cvttsd2si ecx, QWORD PTR nNum1$[rsp]
  002fb	d3 e0		 shl	 eax, cl
  002fd	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00312	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00316	0f 28 d0	 movaps	 xmm2, xmm0
  00319	8b d0		 mov	 edx, eax
  0031b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00320	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 844
  00322	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00327	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032e	48 6b c0 18	 imul	 rax, 24
  00332	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 845
  00343	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00348	e8 00 00 00 00	 call	 simple_string_size
  0034d	44 8b c8	 mov	 r9d, eax
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00355	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00358	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82906
  0035f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00364	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 846
  00369	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0036e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 847
  0037f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 849
  00381	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  00386	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00392	e8 00 00 00 00	 call	 simple_string_delete_gc
  00397	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 851
  00399	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003a5	48 6b c0 18	 imul	 rax, 24
  003a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003b2	83 e0 07	 and	 eax, 7
  003b5	83 f8 03	 cmp	 eax, 3
  003b8	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 852
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82909
  003c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 854
  003cb	48 83 c4 48	 add	 rsp, 72			; 00000048H
  003cf	c3		 ret	 0
simple_vm_bitshl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
vm$ = 64
simple_vm_bitnot PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 941
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 943
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 45		 jne	 SHORT $LN5@simple_vm_
; Line 944
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 2c 44 01
	38		 cvttsd2si eax, QWORD PTR [rcx+rax+56]
  00045	f7 d0		 not	 eax
  00047	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00050	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00057	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00060	0f 28 d0	 movaps	 xmm2, xmm0
  00063	8b d0		 mov	 edx, eax
  00065	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0006a	e9 b0 00 00 00	 jmp	 $LN4@simple_vm_
$LN5@simple_vm_:
; Line 946
  0006f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00074	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007b	48 6b c0 18	 imul	 rax, 24
  0007f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00084	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00088	83 e0 07	 and	 eax, 7
  0008b	83 f8 01	 cmp	 eax, 1
  0008e	75 5a		 jne	 SHORT $LN3@simple_vm_
; Line 947
  00090	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00095	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009c	48 6b c0 18	 imul	 rax, 24
  000a0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a5	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000aa	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000b2	e8 00 00 00 00	 call	 simple_vm_stringtonum
  000b7	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 948
  000bd	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  000c3	f7 d0		 not	 eax
  000c5	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000c9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ce	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000d5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000da	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000de	0f 28 d0	 movaps	 xmm2, xmm0
  000e1	8b d0		 mov	 edx, eax
  000e3	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000e8	eb 35		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 950
  000ea	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ef	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000f6	48 6b c0 18	 imul	 rax, 24
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000ff	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00103	83 e0 07	 and	 eax, 7
  00106	83 f8 03	 cmp	 eax, 3
  00109	75 14		 jne	 SHORT $LN1@simple_vm_
; Line 951
  0010b	0f 57 d2	 xorps	 xmm2, xmm2
  0010e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82985
  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0011a	e8 00 00 00 00	 call	 simple_vm_expr_npoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
; Line 954
  0011f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00123	c3		 ret	 0
simple_vm_bitnot ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
string_one$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_bitxor PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 899
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 902
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 69 01 00
	00		 jne	 $LN15@simple_vm_
; Line 903
  0002e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 904
  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 905
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 4b		 jne	 SHORT $LN14@simple_vm_
; Line 906
  00089	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0008f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00094	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0009b	48 6b c9 18	 imul	 rcx, 24
  0009f	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  000a4	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  000aa	33 c1		 xor	 eax, ecx
  000ac	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c5	0f 28 d0	 movaps	 xmm2, xmm0
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000cf	e9 be 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 908
  000d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e0	48 6b c0 18	 imul	 rax, 24
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ed	83 e0 07	 and	 eax, 7
  000f0	83 f8 01	 cmp	 eax, 1
  000f3	75 60		 jne	 SHORT $LN12@simple_vm_
; Line 909
  000f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00101	48 6b c0 18	 imul	 rax, 24
  00105	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0010a	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00112	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0011c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 910
  00122	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  00128	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  0012e	33 c1		 xor	 eax, ecx
  00130	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00140	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00149	0f 28 d0	 movaps	 xmm2, xmm0
  0014c	8b d0		 mov	 edx, eax
  0014e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00153	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 912
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00161	48 6b c0 18	 imul	 rax, 24
  00165	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016e	83 e0 07	 and	 eax, 7
  00171	83 f8 03	 cmp	 eax, 3
  00174	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 913
  00176	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82958
  00183	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00188	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 914
  0018d	e9 39 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 915
  00192	e9 34 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 917
  00197	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a3	48 6b c0 18	 imul	 rax, 24
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b0	83 e0 07	 and	 eax, 7
  001b3	83 f8 01	 cmp	 eax, 1
  001b6	0f 85 dd 01 00
	00		 jne	 $LN8@simple_vm_
; Line 918
  001bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c8	48 6b c0 18	 imul	 rax, 24
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001d6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_string_new_gc
  001ea	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 919
  001ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00209	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00216	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 920
  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	fe c8		 dec	 al
  0022a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 921
  00235	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0023a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00241	48 6b c0 18	 imul	 rax, 24
  00245	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0024a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0024e	83 e0 07	 and	 eax, 7
  00251	83 f8 02	 cmp	 eax, 2
  00254	75 4b		 jne	 SHORT $LN7@simple_vm_
; Line 922
  00256	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0025c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00261	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00268	48 6b c9 18	 imul	 rcx, 24
  0026c	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00271	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  00277	33 c1		 xor	 eax, ecx
  00279	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0027d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00282	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00289	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0028e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00292	0f 28 d0	 movaps	 xmm2, xmm0
  00295	8b d0		 mov	 edx, eax
  00297	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0029c	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 924
  002a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ad	48 6b c0 18	 imul	 rax, 24
  002b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002ba	83 e0 07	 and	 eax, 7
  002bd	83 f8 01	 cmp	 eax, 1
  002c0	75 60		 jne	 SHORT $LN5@simple_vm_
; Line 925
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ce	48 6b c0 18	 imul	 rax, 24
  002d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002dc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002e9	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 926
  002ef	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  002f5	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  002fb	33 c1		 xor	 eax, ecx
  002fd	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00312	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00316	0f 28 d0	 movaps	 xmm2, xmm0
  00319	8b d0		 mov	 edx, eax
  0031b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00320	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 928
  00322	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00327	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032e	48 6b c0 18	 imul	 rax, 24
  00332	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 929
  00343	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00348	e8 00 00 00 00	 call	 simple_string_size
  0034d	44 8b c8	 mov	 r9d, eax
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00355	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00358	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82970
  0035f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00364	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 930
  00369	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0036e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 931
  0037f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 933
  00381	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  00386	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00392	e8 00 00 00 00	 call	 simple_string_delete_gc
  00397	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 935
  00399	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003a5	48 6b c0 18	 imul	 rax, 24
  003a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003b2	83 e0 07	 and	 eax, 7
  003b5	83 f8 03	 cmp	 eax, 3
  003b8	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 936
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82973
  003c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 938
  003cb	48 83 c4 48	 add	 rsp, 72			; 00000048H
  003cf	c3		 ret	 0
simple_vm_bitxor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
string_one$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_bitor PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 773
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 776
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 69 01 00
	00		 jne	 $LN15@simple_vm_
; Line 777
  0002e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 778
  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 779
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 4b		 jne	 SHORT $LN14@simple_vm_
; Line 780
  00089	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0008f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00094	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0009b	48 6b c9 18	 imul	 rcx, 24
  0009f	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  000a4	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  000aa	0b c1		 or	 eax, ecx
  000ac	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c5	0f 28 d0	 movaps	 xmm2, xmm0
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000cf	e9 be 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 782
  000d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e0	48 6b c0 18	 imul	 rax, 24
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ed	83 e0 07	 and	 eax, 7
  000f0	83 f8 01	 cmp	 eax, 1
  000f3	75 60		 jne	 SHORT $LN12@simple_vm_
; Line 783
  000f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00101	48 6b c0 18	 imul	 rax, 24
  00105	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0010a	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00112	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0011c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 784
  00122	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  00128	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  0012e	0b c1		 or	 eax, ecx
  00130	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00140	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00149	0f 28 d0	 movaps	 xmm2, xmm0
  0014c	8b d0		 mov	 edx, eax
  0014e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00153	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 786
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00161	48 6b c0 18	 imul	 rax, 24
  00165	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016e	83 e0 07	 and	 eax, 7
  00171	83 f8 03	 cmp	 eax, 3
  00174	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 787
  00176	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82862
  00183	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00188	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 788
  0018d	e9 39 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 789
  00192	e9 34 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 791
  00197	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a3	48 6b c0 18	 imul	 rax, 24
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b0	83 e0 07	 and	 eax, 7
  001b3	83 f8 01	 cmp	 eax, 1
  001b6	0f 85 dd 01 00
	00		 jne	 $LN8@simple_vm_
; Line 792
  001bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c8	48 6b c0 18	 imul	 rax, 24
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001d6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_string_new_gc
  001ea	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 793
  001ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00209	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00216	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 794
  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	fe c8		 dec	 al
  0022a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 795
  00235	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0023a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00241	48 6b c0 18	 imul	 rax, 24
  00245	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0024a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0024e	83 e0 07	 and	 eax, 7
  00251	83 f8 02	 cmp	 eax, 2
  00254	75 4b		 jne	 SHORT $LN7@simple_vm_
; Line 796
  00256	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0025c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00261	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00268	48 6b c9 18	 imul	 rcx, 24
  0026c	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00271	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  00277	0b c1		 or	 eax, ecx
  00279	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0027d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00282	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00289	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0028e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00292	0f 28 d0	 movaps	 xmm2, xmm0
  00295	8b d0		 mov	 edx, eax
  00297	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0029c	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 798
  002a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ad	48 6b c0 18	 imul	 rax, 24
  002b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002ba	83 e0 07	 and	 eax, 7
  002bd	83 f8 01	 cmp	 eax, 1
  002c0	75 60		 jne	 SHORT $LN5@simple_vm_
; Line 799
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ce	48 6b c0 18	 imul	 rax, 24
  002d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002dc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002e9	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 800
  002ef	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  002f5	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  002fb	0b c1		 or	 eax, ecx
  002fd	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00312	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00316	0f 28 d0	 movaps	 xmm2, xmm0
  00319	8b d0		 mov	 edx, eax
  0031b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00320	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 802
  00322	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00327	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032e	48 6b c0 18	 imul	 rax, 24
  00332	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 803
  00343	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00348	e8 00 00 00 00	 call	 simple_string_size
  0034d	44 8b c8	 mov	 r9d, eax
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00355	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00358	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82874
  0035f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00364	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 804
  00369	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0036e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 805
  0037f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 807
  00381	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  00386	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00392	e8 00 00 00 00	 call	 simple_string_delete_gc
  00397	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 809
  00399	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003a5	48 6b c0 18	 imul	 rax, 24
  003a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003b2	83 e0 07	 and	 eax, 7
  003b5	83 f8 03	 cmp	 eax, 3
  003b8	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 810
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82877
  003c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 812
  003cb	48 83 c4 48	 add	 rsp, 72			; 00000048H
  003cf	c3		 ret	 0
simple_vm_bitor ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
string_one$ = 40
nNum2$ = 48
vm$ = 80
simple_vm_bitand PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 731
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 734
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 69 01 00
	00		 jne	 $LN15@simple_vm_
; Line 735
  0002e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 736
  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 737
  00068	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 4b		 jne	 SHORT $LN14@simple_vm_
; Line 738
  00089	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0008f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00094	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0009b	48 6b c9 18	 imul	 rcx, 24
  0009f	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  000a4	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  000aa	23 c1		 and	 eax, ecx
  000ac	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000c1	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000c5	0f 28 d0	 movaps	 xmm2, xmm0
  000c8	8b d0		 mov	 edx, eax
  000ca	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000cf	e9 be 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 740
  000d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e0	48 6b c0 18	 imul	 rax, 24
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000e9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ed	83 e0 07	 and	 eax, 7
  000f0	83 f8 01	 cmp	 eax, 1
  000f3	75 60		 jne	 SHORT $LN12@simple_vm_
; Line 741
  000f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00101	48 6b c0 18	 imul	 rax, 24
  00105	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0010a	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010f	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00112	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0011c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 742
  00122	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  00128	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  0012e	23 c1		 and	 eax, ecx
  00130	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00140	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00149	0f 28 d0	 movaps	 xmm2, xmm0
  0014c	8b d0		 mov	 edx, eax
  0014e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00153	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 744
  00155	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0015a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00161	48 6b c0 18	 imul	 rax, 24
  00165	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0016a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016e	83 e0 07	 and	 eax, 7
  00171	83 f8 03	 cmp	 eax, 3
  00174	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 745
  00176	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  0017c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82830
  00183	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00188	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 746
  0018d	e9 39 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 747
  00192	e9 34 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 749
  00197	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a3	48 6b c0 18	 imul	 rax, 24
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b0	83 e0 07	 and	 eax, 7
  001b3	83 f8 01	 cmp	 eax, 1
  001b6	0f 85 dd 01 00
	00		 jne	 $LN8@simple_vm_
; Line 750
  001bc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001c8	48 6b c0 18	 imul	 rax, 24
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001d6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e5	e8 00 00 00 00	 call	 simple_string_new_gc
  001ea	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 751
  001ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00209	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0020c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00211	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00216	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 752
  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00221	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00228	fe c8		 dec	 al
  0022a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 753
  00235	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0023a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00241	48 6b c0 18	 imul	 rax, 24
  00245	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0024a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0024e	83 e0 07	 and	 eax, 7
  00251	83 f8 02	 cmp	 eax, 2
  00254	75 4b		 jne	 SHORT $LN7@simple_vm_
; Line 754
  00256	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  0025c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00261	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00268	48 6b c9 18	 imul	 rcx, 24
  0026c	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00271	f2 0f 2c 4c 0a
	38		 cvttsd2si ecx, QWORD PTR [rdx+rcx+56]
  00277	23 c1		 and	 eax, ecx
  00279	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0027d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00282	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00289	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0028e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00292	0f 28 d0	 movaps	 xmm2, xmm0
  00295	8b d0		 mov	 edx, eax
  00297	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0029c	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 756
  002a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ad	48 6b c0 18	 imul	 rax, 24
  002b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002ba	83 e0 07	 and	 eax, 7
  002bd	83 f8 01	 cmp	 eax, 1
  002c0	75 60		 jne	 SHORT $LN5@simple_vm_
; Line 757
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002ce	48 6b c0 18	 imul	 rax, 24
  002d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002dc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002e9	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 758
  002ef	f2 0f 2c 44 24
	20		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  002f5	f2 0f 2c 4c 24
	30		 cvttsd2si ecx, QWORD PTR nNum2$[rsp]
  002fb	23 c1		 and	 eax, ecx
  002fd	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00301	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00306	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00312	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00316	0f 28 d0	 movaps	 xmm2, xmm0
  00319	8b d0		 mov	 edx, eax
  0031b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  00320	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 760
  00322	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00327	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032e	48 6b c0 18	 imul	 rax, 24
  00332	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00337	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033b	83 e0 07	 and	 eax, 7
  0033e	83 f8 03	 cmp	 eax, 3
  00341	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 761
  00343	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00348	e8 00 00 00 00	 call	 simple_string_size
  0034d	44 8b c8	 mov	 r9d, eax
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00355	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00358	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82842
  0035f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00364	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 762
  00369	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0036e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00373	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0037a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 763
  0037f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 765
  00381	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  00386	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00392	e8 00 00 00 00	 call	 simple_string_delete_gc
  00397	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 767
  00399	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003a5	48 6b c0 18	 imul	 rax, 24
  003a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003b2	83 e0 07	 and	 eax, 7
  003b5	83 f8 03	 cmp	 eax, 3
  003b8	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 768
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82845
  003c1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c6	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 770
  003cb	48 83 c4 48	 add	 rsp, 72			; 00000048H
  003cf	c3		 ret	 0
simple_vm_bitand ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
vm$ = 64
simple_vm_not PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 706
$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 708
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 71		 jne	 SHORT $LN9@simple_vm_
; Line 709
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0004d	7a 02		 jp	 SHORT $LN12@simple_vm_
  0004f	74 21		 je	 SHORT $LN8@simple_vm_
$LN12@simple_vm_:
; Line 710
  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00056	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00066	0f 57 d2	 xorps	 xmm2, xmm2
  00069	8b d0		 mov	 edx, eax
  0006b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 711
  00070	eb 24		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 712
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00077	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00083	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00087	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0008f	8b d0		 mov	 edx, eax
  00091	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN7@simple_vm_:
; Line 713
  00096	e9 e0 00 00 00	 jmp	 $LN6@simple_vm_
$LN9@simple_vm_:
; Line 715
  0009b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000b4	83 e0 07	 and	 eax, 7
  000b7	83 f8 01	 cmp	 eax, 1
  000ba	0f 85 86 00 00
	00		 jne	 $LN5@simple_vm_
; Line 716
  000c0	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cc	48 6b c0 18	 imul	 rax, 24
  000d0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d5	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000da	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000dd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000e2	e8 00 00 00 00	 call	 simple_vm_stringtonum
  000e7	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 717
  000ed	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000f3	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  000fb	7a 23		 jp	 SHORT $LN4@simple_vm_
  000fd	75 21		 jne	 SHORT $LN4@simple_vm_
; Line 718
  000ff	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00104	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0010b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00110	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00114	0f 57 d2	 xorps	 xmm2, xmm2
  00117	8b d0		 mov	 edx, eax
  00119	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 719
  0011e	eb 24		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 720
  00120	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00125	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00131	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00135	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0013d	8b d0		 mov	 edx, eax
  0013f	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN3@simple_vm_:
; Line 721
  00144	eb 35		 jmp	 SHORT $LN2@simple_vm_
$LN5@simple_vm_:
; Line 723
  00146	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0014b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00152	48 6b c0 18	 imul	 rax, 24
  00156	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0015b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0015f	83 e0 07	 and	 eax, 7
  00162	83 f8 03	 cmp	 eax, 3
  00165	75 14		 jne	 SHORT $LN1@simple_vm_
; Line 724
  00167	0f 57 d2	 xorps	 xmm2, xmm2
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82813
  00171	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00176	e8 00 00 00 00	 call	 simple_vm_expr_npoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN6@simple_vm_:
; Line 727
  0017b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0017f	c3		 ret	 0
simple_vm_not ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv131 = 32
tv159 = 36
tv228 = 40
tv256 = 44
nNum1$ = 48
string_one$ = 56
nNum2$ = 64
vm$ = 96
simple_vm_or PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 664
$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 667
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 c1 01 00
	00		 jne	 $LN15@simple_vm_
; Line 668
  0002e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 669
  0004f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 670
  00068	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 75		 jne	 SHORT $LN14@simple_vm_
; Line 671
  00089	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0008f	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00097	7a 33		 jp	 SHORT $LN18@simple_vm_
  00099	75 31		 jne	 SHORT $LN18@simple_vm_
  0009b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000be	7a 0c		 jp	 SHORT $LN18@simple_vm_
  000c0	75 0a		 jne	 SHORT $LN18@simple_vm_
  000c2	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv131[rsp], 0
  000ca	eb 08		 jmp	 SHORT $LN19@simple_vm_
$LN18@simple_vm_:
  000cc	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv131[rsp], 1
$LN19@simple_vm_:
  000d4	f2 0f 2a 44 24
	20		 cvtsi2sd xmm0, DWORD PTR tv131[rsp]
  000da	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000df	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000ef	0f 28 d0	 movaps	 xmm2, xmm0
  000f2	8b d0		 mov	 edx, eax
  000f4	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000f9	e9 ec 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 673
  000fe	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00103	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0010a	48 6b c0 18	 imul	 rax, 24
  0010e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00113	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00117	83 e0 07	 and	 eax, 7
  0011a	83 f8 01	 cmp	 eax, 1
  0011d	0f 85 8a 00 00
	00		 jne	 $LN12@simple_vm_
; Line 674
  00123	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00128	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012f	48 6b c0 18	 imul	 rax, 24
  00133	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00138	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0013d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00140	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0014a	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 675
  00150	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00156	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0015e	7a 1e		 jp	 SHORT $LN20@simple_vm_
  00160	75 1c		 jne	 SHORT $LN20@simple_vm_
  00162	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00168	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00170	7a 0c		 jp	 SHORT $LN20@simple_vm_
  00172	75 0a		 jne	 SHORT $LN20@simple_vm_
  00174	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv159[rsp], 0
  0017c	eb 08		 jmp	 SHORT $LN21@simple_vm_
$LN20@simple_vm_:
  0017e	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv159[rsp], 1
$LN21@simple_vm_:
  00186	f2 0f 2a 44 24
	24		 cvtsi2sd xmm0, DWORD PTR tv159[rsp]
  0018c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00191	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00198	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0019d	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001a1	0f 28 d0	 movaps	 xmm2, xmm0
  001a4	8b d0		 mov	 edx, eax
  001a6	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  001ab	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 677
  001ad	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 6b c0 18	 imul	 rax, 24
  001bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001c2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001c6	83 e0 07	 and	 eax, 7
  001c9	83 f8 03	 cmp	 eax, 3
  001cc	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 678
  001ce	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  001d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82788
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001e0	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 679
  001e5	e9 91 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 680
  001ea	e9 8c 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 682
  001ef	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00208	83 e0 07	 and	 eax, 7
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	0f 85 35 02 00
	00		 jne	 $LN8@simple_vm_
; Line 683
  00214	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00219	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00220	48 6b c0 18	 imul	 rax, 24
  00224	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00229	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00231	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00236	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0023d	e8 00 00 00 00	 call	 simple_string_new_gc
  00242	48 89 44 24 38	 mov	 QWORD PTR string_one$[rsp], rax
; Line 684
  00247	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0024c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00253	48 6b c0 18	 imul	 rax, 24
  00257	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0025c	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00261	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00264	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00269	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0026e	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 685
  00274	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00279	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00280	fe c8		 dec	 al
  00282	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00287	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 686
  0028d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00292	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00299	48 6b c0 18	 imul	 rax, 24
  0029d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002a2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a6	83 e0 07	 and	 eax, 7
  002a9	83 f8 02	 cmp	 eax, 2
  002ac	75 75		 jne	 SHORT $LN7@simple_vm_
; Line 687
  002ae	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  002b4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002bc	7a 33		 jp	 SHORT $LN22@simple_vm_
  002be	75 31		 jne	 SHORT $LN22@simple_vm_
  002c0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002cc	48 6b c0 18	 imul	 rax, 24
  002d0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002d5	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  002db	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002e3	7a 0c		 jp	 SHORT $LN22@simple_vm_
  002e5	75 0a		 jne	 SHORT $LN22@simple_vm_
  002e7	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv228[rsp], 0
  002ef	eb 08		 jmp	 SHORT $LN23@simple_vm_
$LN22@simple_vm_:
  002f1	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv228[rsp], 1
$LN23@simple_vm_:
  002f9	f2 0f 2a 44 24
	28		 cvtsi2sd xmm0, DWORD PTR tv228[rsp]
  002ff	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00304	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00310	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00314	0f 28 d0	 movaps	 xmm2, xmm0
  00317	8b d0		 mov	 edx, eax
  00319	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0031e	e9 0e 01 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 689
  00323	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00328	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032f	48 6b c0 18	 imul	 rax, 24
  00333	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00338	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033c	83 e0 07	 and	 eax, 7
  0033f	83 f8 01	 cmp	 eax, 1
  00342	0f 85 8a 00 00
	00		 jne	 $LN5@simple_vm_
; Line 690
  00348	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0034d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00354	48 6b c0 18	 imul	 rax, 24
  00358	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0035d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00362	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00365	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0036a	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0036f	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 691
  00375	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0037b	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00383	7a 1e		 jp	 SHORT $LN24@simple_vm_
  00385	75 1c		 jne	 SHORT $LN24@simple_vm_
  00387	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0038d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00395	7a 0c		 jp	 SHORT $LN24@simple_vm_
  00397	75 0a		 jne	 SHORT $LN24@simple_vm_
  00399	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR tv256[rsp], 0
  003a1	eb 08		 jmp	 SHORT $LN25@simple_vm_
$LN24@simple_vm_:
  003a3	c7 44 24 2c 01
	00 00 00	 mov	 DWORD PTR tv256[rsp], 1
$LN25@simple_vm_:
  003ab	f2 0f 2a 44 24
	2c		 cvtsi2sd xmm0, DWORD PTR tv256[rsp]
  003b1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003c2	48 83 c1 30	 add	 rcx, 48			; 00000030H
  003c6	0f 28 d0	 movaps	 xmm2, xmm0
  003c9	8b d0		 mov	 edx, eax
  003cb	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  003d0	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 693
  003d2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003d7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003de	48 6b c0 18	 imul	 rax, 24
  003e2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003e7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003eb	83 e0 07	 and	 eax, 7
  003ee	83 f8 03	 cmp	 eax, 3
  003f1	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 694
  003f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR string_one$[rsp]
  003f8	e8 00 00 00 00	 call	 simple_string_size
  003fd	44 8b c8	 mov	 r9d, eax
  00400	48 8b 44 24 38	 mov	 rax, QWORD PTR string_one$[rsp]
  00405	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00408	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82796
  0040f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00414	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 695
  00419	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  0041e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00423	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0042a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 696
  0042f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 698
  00431	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  00436	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0043b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00442	e8 00 00 00 00	 call	 simple_string_delete_gc
  00447	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 700
  00449	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0044e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00455	48 6b c0 18	 imul	 rax, 24
  00459	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0045e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00462	83 e0 07	 and	 eax, 7
  00465	83 f8 03	 cmp	 eax, 3
  00468	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 701
  0046a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82799
  00471	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00476	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 703
  0047b	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0047f	c3		 ret	 0
simple_vm_or ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv131 = 32
tv159 = 36
tv228 = 40
tv256 = 44
nNum1$ = 48
string_one$ = 56
nNum2$ = 64
vm$ = 96
simple_vm_and PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 622
$LN34:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 625
  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	0f 85 c1 01 00
	00		 jne	 $LN15@simple_vm_
; Line 626
  0002e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00033	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003a	48 6b c0 18	 imul	 rax, 24
  0003e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00043	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00049	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 627
  0004f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00054	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005b	fe c8		 dec	 al
  0005d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 628
  00068	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0006d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00074	48 6b c0 18	 imul	 rax, 24
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00081	83 e0 07	 and	 eax, 7
  00084	83 f8 02	 cmp	 eax, 2
  00087	75 75		 jne	 SHORT $LN14@simple_vm_
; Line 629
  00089	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0008f	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00097	7a 02		 jp	 SHORT $LN33@simple_vm_
  00099	74 31		 je	 SHORT $LN18@simple_vm_
$LN33@simple_vm_:
  0009b	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000be	7a 02		 jp	 SHORT $LN32@simple_vm_
  000c0	74 0a		 je	 SHORT $LN18@simple_vm_
$LN32@simple_vm_:
  000c2	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv131[rsp], 1
  000ca	eb 08		 jmp	 SHORT $LN19@simple_vm_
$LN18@simple_vm_:
  000cc	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv131[rsp], 0
$LN19@simple_vm_:
  000d4	f2 0f 2a 44 24
	20		 cvtsi2sd xmm0, DWORD PTR tv131[rsp]
  000da	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000df	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000ef	0f 28 d0	 movaps	 xmm2, xmm0
  000f2	8b d0		 mov	 edx, eax
  000f4	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000f9	e9 ec 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 631
  000fe	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00103	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0010a	48 6b c0 18	 imul	 rax, 24
  0010e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00113	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00117	83 e0 07	 and	 eax, 7
  0011a	83 f8 01	 cmp	 eax, 1
  0011d	0f 85 8a 00 00
	00		 jne	 $LN12@simple_vm_
; Line 632
  00123	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00128	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012f	48 6b c0 18	 imul	 rax, 24
  00133	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00138	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0013d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00140	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00145	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0014a	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 633
  00150	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00156	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0015e	7a 02		 jp	 SHORT $LN31@simple_vm_
  00160	74 1c		 je	 SHORT $LN20@simple_vm_
$LN31@simple_vm_:
  00162	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00168	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00170	7a 02		 jp	 SHORT $LN30@simple_vm_
  00172	74 0a		 je	 SHORT $LN20@simple_vm_
$LN30@simple_vm_:
  00174	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv159[rsp], 1
  0017c	eb 08		 jmp	 SHORT $LN21@simple_vm_
$LN20@simple_vm_:
  0017e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv159[rsp], 0
$LN21@simple_vm_:
  00186	f2 0f 2a 44 24
	24		 cvtsi2sd xmm0, DWORD PTR tv159[rsp]
  0018c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00191	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00198	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0019d	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001a1	0f 28 d0	 movaps	 xmm2, xmm0
  001a4	8b d0		 mov	 edx, eax
  001a6	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  001ab	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 635
  001ad	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b9	48 6b c0 18	 imul	 rax, 24
  001bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001c2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001c6	83 e0 07	 and	 eax, 7
  001c9	83 f8 03	 cmp	 eax, 3
  001cc	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 636
  001ce	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  001d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82764
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  001e0	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 637
  001e5	e9 91 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 638
  001ea	e9 8c 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 640
  001ef	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00208	83 e0 07	 and	 eax, 7
  0020b	83 f8 01	 cmp	 eax, 1
  0020e	0f 85 35 02 00
	00		 jne	 $LN8@simple_vm_
; Line 641
  00214	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00219	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00220	48 6b c0 18	 imul	 rax, 24
  00224	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00229	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00231	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00236	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0023d	e8 00 00 00 00	 call	 simple_string_new_gc
  00242	48 89 44 24 38	 mov	 QWORD PTR string_one$[rsp], rax
; Line 642
  00247	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0024c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00253	48 6b c0 18	 imul	 rax, 24
  00257	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0025c	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00261	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00264	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00269	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0026e	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 643
  00274	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00279	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00280	fe c8		 dec	 al
  00282	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00287	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 644
  0028d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00292	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00299	48 6b c0 18	 imul	 rax, 24
  0029d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002a2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a6	83 e0 07	 and	 eax, 7
  002a9	83 f8 02	 cmp	 eax, 2
  002ac	75 75		 jne	 SHORT $LN7@simple_vm_
; Line 645
  002ae	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  002b4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002bc	7a 02		 jp	 SHORT $LN29@simple_vm_
  002be	74 31		 je	 SHORT $LN22@simple_vm_
$LN29@simple_vm_:
  002c0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  002c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002cc	48 6b c0 18	 imul	 rax, 24
  002d0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  002d5	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  002db	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002e3	7a 02		 jp	 SHORT $LN28@simple_vm_
  002e5	74 0a		 je	 SHORT $LN22@simple_vm_
$LN28@simple_vm_:
  002e7	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv228[rsp], 1
  002ef	eb 08		 jmp	 SHORT $LN23@simple_vm_
$LN22@simple_vm_:
  002f1	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv228[rsp], 0
$LN23@simple_vm_:
  002f9	f2 0f 2a 44 24
	28		 cvtsi2sd xmm0, DWORD PTR tv228[rsp]
  002ff	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00304	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00310	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00314	0f 28 d0	 movaps	 xmm2, xmm0
  00317	8b d0		 mov	 edx, eax
  00319	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0031e	e9 0e 01 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 647
  00323	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00328	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032f	48 6b c0 18	 imul	 rax, 24
  00333	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00338	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033c	83 e0 07	 and	 eax, 7
  0033f	83 f8 01	 cmp	 eax, 1
  00342	0f 85 8a 00 00
	00		 jne	 $LN5@simple_vm_
; Line 648
  00348	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0034d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00354	48 6b c0 18	 imul	 rax, 24
  00358	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0035d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00362	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00365	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0036a	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0036f	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 649
  00375	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0037b	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00383	7a 02		 jp	 SHORT $LN27@simple_vm_
  00385	74 1c		 je	 SHORT $LN24@simple_vm_
$LN27@simple_vm_:
  00387	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0038d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00395	7a 02		 jp	 SHORT $LN26@simple_vm_
  00397	74 0a		 je	 SHORT $LN24@simple_vm_
$LN26@simple_vm_:
  00399	c7 44 24 2c 01
	00 00 00	 mov	 DWORD PTR tv256[rsp], 1
  003a1	eb 08		 jmp	 SHORT $LN25@simple_vm_
$LN24@simple_vm_:
  003a3	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR tv256[rsp], 0
$LN25@simple_vm_:
  003ab	f2 0f 2a 44 24
	2c		 cvtsi2sd xmm0, DWORD PTR tv256[rsp]
  003b1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003b6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003bd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003c2	48 83 c1 30	 add	 rcx, 48			; 00000030H
  003c6	0f 28 d0	 movaps	 xmm2, xmm0
  003c9	8b d0		 mov	 edx, eax
  003cb	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  003d0	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 651
  003d2	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  003d7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003de	48 6b c0 18	 imul	 rax, 24
  003e2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  003e7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003eb	83 e0 07	 and	 eax, 7
  003ee	83 f8 03	 cmp	 eax, 3
  003f1	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 652
  003f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR string_one$[rsp]
  003f8	e8 00 00 00 00	 call	 simple_string_size
  003fd	44 8b c8	 mov	 r9d, eax
  00400	48 8b 44 24 38	 mov	 rax, QWORD PTR string_one$[rsp]
  00405	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00408	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82772
  0040f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00414	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 653
  00419	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  0041e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00423	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0042a	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 654
  0042f	eb 4a		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 656
  00431	48 8b 54 24 38	 mov	 rdx, QWORD PTR string_one$[rsp]
  00436	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0043b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00442	e8 00 00 00 00	 call	 simple_string_delete_gc
  00447	eb 32		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 658
  00449	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0044e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00455	48 6b c0 18	 imul	 rax, 24
  00459	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0045e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00462	83 e0 07	 and	 eax, 7
  00465	83 f8 03	 cmp	 eax, 3
  00468	75 11		 jne	 SHORT $LN1@simple_vm_
; Line 659
  0046a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82775
  00471	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00476	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
$LN16@simple_vm_:
; Line 661
  0047b	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0047f	c3		 ret	 0
simple_vm_and ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list3$ = 32
list4$ = 40
vm$ = 64
list$ = 72
list2$ = 80
simple_vm_addlisttolist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 1113
$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1120
  00013	33 d2		 xor	 edx, edx
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_list_new_gc
  00026	48 89 44 24 28	 mov	 QWORD PTR list4$[rsp], rax
; Line 1121
  0002b	4c 8b 44 24 48	 mov	 r8, QWORD PTR list$[rsp]
  00030	48 8b 54 24 28	 mov	 rdx, QWORD PTR list4$[rsp]
  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00041	e8 00 00 00 00	 call	 simple_list_copy_gc
; Line 1122
  00046	48 8b 54 24 50	 mov	 rdx, QWORD PTR list2$[rsp]
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00050	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00057	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0005c	48 89 44 24 20	 mov	 QWORD PTR list3$[rsp], rax
; Line 1123
  00061	4c 8b 44 24 28	 mov	 r8, QWORD PTR list4$[rsp]
  00066	48 8b 54 24 20	 mov	 rdx, QWORD PTR list3$[rsp]
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00070	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00077	e8 00 00 00 00	 call	 simple_list_copy_gc
; Line 1124
  0007c	48 8b 54 24 28	 mov	 rdx, QWORD PTR list4$[rsp]
  00081	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00086	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0008d	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 1125
  00092	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list3$[rsp]
  00097	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  0009c	83 f8 01	 cmp	 eax, 1
  0009f	75 50		 jne	 SHORT $LN3@simple_vm_
  000a1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000a6	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  000ab	48 39 88 d8 18
	00 00		 cmp	 QWORD PTR [rax+6360], rcx
  000b2	75 3d		 jne	 SHORT $LN3@simple_vm_
; Line 1126
  000b4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list3$[rsp]
  000be	48 89 88 d8 18
	00 00		 mov	 QWORD PTR [rax+6360], rcx
; Line 1135
  000c5	48 8b 44 24 50	 mov	 rax, QWORD PTR list2$[rsp]
  000ca	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000cd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list2$[rsp]
  000d2	e8 00 00 00 00	 call	 simple_list_getitem
  000d7	4c 8b c8	 mov	 r9, rax
  000da	41 b8 02 00 00
	00		 mov	 r8d, 2
  000e0	48 8b 54 24 20	 mov	 rdx, QWORD PTR list3$[rsp]
  000e5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000ea	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
  000ef	eb 4c		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 1137
  000f1	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list3$[rsp]
  000f6	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000fb	83 f8 01	 cmp	 eax, 1
  000fe	75 3d		 jne	 SHORT $LN1@simple_vm_
  00100	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00105	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list$[rsp]
  0010a	48 39 88 d8 18
	00 00		 cmp	 QWORD PTR [rax+6360], rcx
  00111	74 2a		 je	 SHORT $LN1@simple_vm_
; Line 1142
  00113	48 8b 44 24 50	 mov	 rax, QWORD PTR list2$[rsp]
  00118	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0011b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list2$[rsp]
  00120	e8 00 00 00 00	 call	 simple_list_getitem
  00125	4c 8b c8	 mov	 r9, rax
  00128	41 b8 02 00 00
	00		 mov	 r8d, 2
  0012e	48 8b 54 24 20	 mov	 rdx, QWORD PTR list3$[rsp]
  00133	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00138	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 1144
  0013d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00141	c3		 ret	 0
simple_vm_addlisttolist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 64
pItem$ = 72
vm$ = 96
cStr$ = 104
cStr2$ = 112
nSize$ = 120
simple_vm_expr_spoo PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 1082
$LN11:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 1085
  00018	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00024	48 6b c0 18	 imul	 rax, 24
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0002d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00031	c1 e8 05	 shr	 eax, 5
  00034	83 e0 03	 and	 eax, 3
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 35		 jne	 SHORT $LN8@simple_vm_
; Line 1086
  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00041	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00048	48 6b c0 18	 imul	 rax, 24
  0004c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00051	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00056	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1087
  0005b	ba 03 00 00 00	 mov	 edx, 3
  00060	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00065	e8 00 00 00 00	 call	 simple_list_getlist
  0006a	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
  0006f	eb 69		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 1089
  00071	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00076	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007d	48 6b c0 18	 imul	 rax, 24
  00081	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00086	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0008a	c1 e8 05	 shr	 eax, 5
  0008d	83 e0 03	 and	 eax, 3
  00090	83 f8 02	 cmp	 eax, 2
  00093	75 2f		 jne	 SHORT $LN6@simple_vm_
; Line 1090
  00095	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0009a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a1	48 6b c0 18	 imul	 rax, 24
  000a5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000aa	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000af	48 89 44 24 48	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1091
  000b4	48 8b 44 24 48	 mov	 rax, QWORD PTR pItem$[rsp]
  000b9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000bd	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1092
  000c2	eb 16		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 1093
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83090
  000cb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000d0	e8 00 00 00 00	 call	 simple_vm_error
; Line 1094
  000d5	e9 be 00 00 00	 jmp	 $LN9@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 1096
  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83092
  000e1	48 8b 4c 24 68	 mov	 rcx, QWORD PTR cStr$[rsp]
  000e6	e8 00 00 00 00	 call	 strcmp
  000eb	85 c0		 test	 eax, eax
  000ed	75 30		 jne	 SHORT $LN4@simple_vm_
; Line 1097
  000ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000f4	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000f9	85 c0		 test	 eax, eax
  000fb	75 22		 jne	 SHORT $LN3@simple_vm_
; Line 1098
  000fd	44 8b 4c 24 78	 mov	 r9d, DWORD PTR nSize$[rsp]
  00102	4c 8b 44 24 70	 mov	 r8, QWORD PTR cStr2$[rsp]
  00107	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0010c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00111	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00118	e8 00 00 00 00	 call	 simple_list_addstring2_gc
; Line 1099
  0011d	eb 79		 jmp	 SHORT $LN9@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
; Line 1102
  0011f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00124	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00129	83 f8 01	 cmp	 eax, 1
  0012c	75 59		 jne	 SHORT $LN2@simple_vm_
; Line 1104
  0012e	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  00136	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  0013f	0f 57 c0	 xorps	 xmm0, xmm0
  00142	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR [rsp+40], xmm0
  00148	48 8b 44 24 70	 mov	 rax, QWORD PTR cStr2$[rsp]
  0014d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00152	41 b9 01 00 00
	00		 mov	 r9d, 1
  00158	4c 8b 44 24 68	 mov	 r8, QWORD PTR cStr$[rsp]
  0015d	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  00162	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00167	e8 00 00 00 00	 call	 simple_vm_oop_operatoroverloading
; Line 1105
  0016c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00171	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00178	fe c8		 dec	 al
  0017a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0017f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1106
  00185	eb 11		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1107
  00187	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83097
  0018e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00193	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN9@simple_vm_:
; Line 1109
  00198	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0019c	c3		 ret	 0
simple_vm_expr_spoo ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 64
pItem$ = 72
vm$ = 96
cStr$ = 104
nNum1$ = 112
simple_vm_expr_npoo PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 1051
$LN11:
  00000	f2 0f 11 54 24
	18		 movsdx	 QWORD PTR [rsp+24], xmm2
  00006	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 1054
  00014	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00019	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00020	48 6b c0 18	 imul	 rax, 24
  00024	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00029	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0002d	c1 e8 05	 shr	 eax, 5
  00030	83 e0 03	 and	 eax, 3
  00033	83 f8 01	 cmp	 eax, 1
  00036	75 35		 jne	 SHORT $LN8@simple_vm_
; Line 1055
  00038	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00044	48 6b c0 18	 imul	 rax, 24
  00048	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0004d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00052	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1056
  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00061	e8 00 00 00 00	 call	 simple_list_getlist
  00066	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
  0006b	eb 69		 jmp	 SHORT $LN7@simple_vm_
$LN8@simple_vm_:
; Line 1058
  0006d	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00072	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00079	48 6b c0 18	 imul	 rax, 24
  0007d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00082	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00086	c1 e8 05	 shr	 eax, 5
  00089	83 e0 03	 and	 eax, 3
  0008c	83 f8 02	 cmp	 eax, 2
  0008f	75 2f		 jne	 SHORT $LN6@simple_vm_
; Line 1059
  00091	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00096	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009d	48 6b c0 18	 imul	 rax, 24
  000a1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000a6	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000ab	48 89 44 24 48	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1060
  000b0	48 8b 44 24 48	 mov	 rax, QWORD PTR pItem$[rsp]
  000b5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b9	48 89 44 24 40	 mov	 QWORD PTR list$[rsp], rax
; Line 1061
  000be	eb 16		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 1062
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83064
  000c7	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000cc	e8 00 00 00 00	 call	 simple_vm_error
; Line 1063
  000d1	e9 bf 00 00 00	 jmp	 $LN9@simple_vm_
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 1065
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83066
  000dd	48 8b 4c 24 68	 mov	 rcx, QWORD PTR cStr$[rsp]
  000e2	e8 00 00 00 00	 call	 strcmp
  000e7	85 c0		 test	 eax, eax
  000e9	75 2c		 jne	 SHORT $LN4@simple_vm_
; Line 1066
  000eb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  000f0	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000f5	85 c0		 test	 eax, eax
  000f7	75 1e		 jne	 SHORT $LN3@simple_vm_
; Line 1067
  000f9	f2 0f 10 54 24
	70		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  000ff	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  00104	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00109	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00110	e8 00 00 00 00	 call	 simple_list_adddouble_gc
; Line 1068
  00115	eb 7e		 jmp	 SHORT $LN9@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
; Line 1071
  00117	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0011c	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00121	83 f8 01	 cmp	 eax, 1
  00124	75 5e		 jne	 SHORT $LN2@simple_vm_
; Line 1073
  00126	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR [rsp+56], 0
  0012e	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00137	f2 0f 10 44 24
	70		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0013d	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR [rsp+40], xmm0
  00143	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG83070
  0014a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0014f	41 b9 02 00 00
	00		 mov	 r9d, 2
  00155	4c 8b 44 24 68	 mov	 r8, QWORD PTR cStr$[rsp]
  0015a	48 8b 54 24 40	 mov	 rdx, QWORD PTR list$[rsp]
  0015f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00164	e8 00 00 00 00	 call	 simple_vm_oop_operatoroverloading
; Line 1074
  00169	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0016e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00175	fe c8		 dec	 al
  00177	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0017c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1075
  00182	eb 11		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1076
  00184	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83072
  0018b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00190	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN9@simple_vm_:
; Line 1078
  00195	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00199	c3		 ret	 0
simple_vm_expr_npoo ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nType$ = 64
list2$ = 72
list$ = 80
pItem$ = 88
pointer$ = 96
vm$ = 128
cStr$ = 136
simple_vm_expr_ppoo PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 987
$LN22:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 78	 sub	 rsp, 120		; 00000078H
; Line 992
  0000e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00016	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0001d	48 6b c0 18	 imul	 rax, 24
  00021	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00029	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0002d	c1 e8 05	 shr	 eax, 5
  00030	83 e0 03	 and	 eax, 3
  00033	83 f8 01	 cmp	 eax, 1
  00036	75 3b		 jne	 SHORT $LN19@simple_vm_
; Line 993
  00038	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00040	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00047	48 6b c0 18	 imul	 rax, 24
  0004b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00053	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00058	48 89 44 24 50	 mov	 QWORD PTR list$[rsp], rax
; Line 994
  0005d	ba 03 00 00 00	 mov	 edx, 3
  00062	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00067	e8 00 00 00 00	 call	 simple_list_getlist
  0006c	48 89 44 24 50	 mov	 QWORD PTR list$[rsp], rax
  00071	eb 78		 jmp	 SHORT $LN18@simple_vm_
$LN19@simple_vm_:
; Line 996
  00073	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0007b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00082	48 6b c0 18	 imul	 rax, 24
  00086	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0008e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00092	c1 e8 05	 shr	 eax, 5
  00095	83 e0 03	 and	 eax, 3
  00098	83 f8 02	 cmp	 eax, 2
  0009b	75 35		 jne	 SHORT $LN17@simple_vm_
; Line 997
  0009d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000a5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ac	48 6b c0 18	 imul	 rax, 24
  000b0	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000b8	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000bd	48 89 44 24 58	 mov	 QWORD PTR pItem$[rsp], rax
; Line 998
  000c2	48 8b 44 24 58	 mov	 rax, QWORD PTR pItem$[rsp]
  000c7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cb	48 89 44 24 50	 mov	 QWORD PTR list$[rsp], rax
; Line 999
  000d0	eb 19		 jmp	 SHORT $LN16@simple_vm_
$LN17@simple_vm_:
; Line 1000
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83025
  000d9	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e1	e8 00 00 00 00	 call	 simple_vm_error
; Line 1001
  000e6	e9 63 03 00 00	 jmp	 $LN20@simple_vm_
$LN16@simple_vm_:
$LN18@simple_vm_:
; Line 1004
  000eb	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000f3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fa	48 6b c0 18	 imul	 rax, 24
  000fe	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00106	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0010b	48 89 44 24 60	 mov	 QWORD PTR pointer$[rsp], rax
; Line 1005
  00110	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00118	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011f	48 6b c0 18	 imul	 rax, 24
  00123	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0012b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012f	c1 e8 05	 shr	 eax, 5
  00132	83 e0 03	 and	 eax, 3
  00135	89 44 24 40	 mov	 DWORD PTR nType$[rsp], eax
; Line 1006
  00139	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00141	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00148	fe c8		 dec	 al
  0014a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00152	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1007
  00158	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00160	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00167	48 6b c0 18	 imul	 rax, 24
  0016b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00173	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00177	83 e0 07	 and	 eax, 7
  0017a	83 f8 03	 cmp	 eax, 3
  0017d	0f 85 b7 02 00
	00		 jne	 $LN15@simple_vm_
; Line 1008
  00183	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0018b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00192	48 6b c0 18	 imul	 rax, 24
  00196	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0019e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001a2	c1 e8 05	 shr	 eax, 5
  001a5	83 e0 03	 and	 eax, 3
  001a8	83 f8 01	 cmp	 eax, 1
  001ab	75 3b		 jne	 SHORT $LN14@simple_vm_
; Line 1009
  001ad	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001bc	48 6b c0 18	 imul	 rax, 24
  001c0	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001c8	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001cd	48 89 44 24 48	 mov	 QWORD PTR list2$[rsp], rax
; Line 1010
  001d2	ba 03 00 00 00	 mov	 edx, 3
  001d7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list2$[rsp]
  001dc	e8 00 00 00 00	 call	 simple_list_getlist
  001e1	48 89 44 24 48	 mov	 QWORD PTR list2$[rsp], rax
  001e6	eb 78		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 1012
  001e8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001f0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001f7	48 6b c0 18	 imul	 rax, 24
  001fb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00203	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00207	c1 e8 05	 shr	 eax, 5
  0020a	83 e0 03	 and	 eax, 3
  0020d	83 f8 02	 cmp	 eax, 2
  00210	75 35		 jne	 SHORT $LN12@simple_vm_
; Line 1013
  00212	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00221	48 6b c0 18	 imul	 rax, 24
  00225	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0022d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00232	48 89 44 24 58	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1014
  00237	48 8b 44 24 58	 mov	 rax, QWORD PTR pItem$[rsp]
  0023c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00240	48 89 44 24 48	 mov	 QWORD PTR list2$[rsp], rax
; Line 1015
  00245	eb 19		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 1016
  00247	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83033
  0024e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00256	e8 00 00 00 00	 call	 simple_vm_error
; Line 1017
  0025b	e9 ee 01 00 00	 jmp	 $LN20@simple_vm_
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 1019
  00260	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83035
  00267	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR cStr$[rsp]
  0026f	e8 00 00 00 00	 call	 strcmp
  00274	85 c0		 test	 eax, eax
  00276	75 2f		 jne	 SHORT $LN10@simple_vm_
; Line 1020
  00278	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list2$[rsp]
  0027d	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  00282	85 c0		 test	 eax, eax
  00284	75 1c		 jne	 SHORT $LN9@simple_vm_
; Line 1021
  00286	4c 8b 44 24 48	 mov	 r8, QWORD PTR list2$[rsp]
  0028b	48 8b 54 24 50	 mov	 rdx, QWORD PTR list$[rsp]
  00290	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00298	e8 00 00 00 00	 call	 simple_vm_addlisttolist
; Line 1022
  0029d	e9 ac 01 00 00	 jmp	 $LN20@simple_vm_
$LN9@simple_vm_:
; Line 1023
  002a2	e9 06 01 00 00	 jmp	 $LN8@simple_vm_
$LN10@simple_vm_:
; Line 1025
  002a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83039
  002ae	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR cStr$[rsp]
  002b6	e8 00 00 00 00	 call	 strcmp
  002bb	85 c0		 test	 eax, eax
  002bd	0f 85 ea 00 00
	00		 jne	 $LN7@simple_vm_
; Line 1026
  002c3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  002c8	e8 00 00 00 00	 call	 api_iscpointer_list
  002cd	85 c0		 test	 eax, eax
  002cf	0f 84 d8 00 00
	00		 je	 $LN6@simple_vm_
  002d5	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list2$[rsp]
  002da	e8 00 00 00 00	 call	 api_iscpointer_list
  002df	85 c0		 test	 eax, eax
  002e1	0f 84 c6 00 00
	00		 je	 $LN6@simple_vm_
; Line 1027
  002e7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002ef	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002f6	fe c8		 dec	 al
  002f8	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00300	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1028
  00306	48 8b 54 24 48	 mov	 rdx, QWORD PTR list2$[rsp]
  0030b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR list$[rsp]
  00310	e8 00 00 00 00	 call	 api_cpointer_cmp
  00315	85 c0		 test	 eax, eax
  00317	74 4b		 je	 SHORT $LN5@simple_vm_
; Line 1029
  00319	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00321	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00328	fe c0		 inc	 al
  0032a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00332	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00338	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00340	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00347	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0034f	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00353	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0035b	8b d0		 mov	 edx, eax
  0035d	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 1031
  00362	eb 44		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 1032
  00364	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0036c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00373	fe c0		 inc	 al
  00375	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00383	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00392	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0039a	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0039e	0f 57 d2	 xorps	 xmm2, xmm2
  003a1	8b d0		 mov	 edx, eax
  003a3	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN4@simple_vm_:
; Line 1034
  003a8	e9 a1 00 00 00	 jmp	 $LN20@simple_vm_
$LN6@simple_vm_:
$LN7@simple_vm_:
$LN8@simple_vm_:
; Line 1037
  003ad	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list2$[rsp]
  003b2	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  003b7	83 f8 01	 cmp	 eax, 1
  003ba	75 68		 jne	 SHORT $LN3@simple_vm_
; Line 1039
  003bc	8b 44 24 40	 mov	 eax, DWORD PTR nType$[rsp]
  003c0	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  003c4	48 8b 44 24 60	 mov	 rax, QWORD PTR pointer$[rsp]
  003c9	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  003ce	0f 57 c0	 xorps	 xmm0, xmm0
  003d1	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR [rsp+40], xmm0
  003d7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG83044
  003de	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  003e3	41 b9 03 00 00
	00		 mov	 r9d, 3
  003e9	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR cStr$[rsp]
  003f1	48 8b 54 24 48	 mov	 rdx, QWORD PTR list2$[rsp]
  003f6	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003fe	e8 00 00 00 00	 call	 simple_vm_oop_operatoroverloading
; Line 1040
  00403	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0040b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00412	fe c8		 dec	 al
  00414	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0041c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1041
  00422	eb 14		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 1042
  00424	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83046
  0042b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00433	e8 00 00 00 00	 call	 simple_vm_error
$LN2@simple_vm_:
; Line 1044
  00438	eb 14		 jmp	 SHORT $LN1@simple_vm_
$LN15@simple_vm_:
; Line 1045
  0043a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83048
  00441	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00449	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN20@simple_vm_:
; Line 1047
  0044e	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00452	c3		 ret	 0
simple_vm_expr_ppoo ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nResult$ = 32
vm$ = 64
cStr$ = 72
simple_vm_stringtonum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 971
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 973
  0000e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr$[rsp]
  00013	e8 00 00 00 00	 call	 strlen
  00018	48 83 f8 0f	 cmp	 rax, 15
  0001c	77 12		 ja	 SHORT $LN2@simple_vm_
; Line 974
  0001e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cStr$[rsp]
  00023	e8 00 00 00 00	 call	 atof
  00028	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nResult$[rsp], xmm0
; Line 975
  0002e	eb 16		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 976
  00030	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG83008
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003c	e8 00 00 00 00	 call	 simple_vm_error
; Line 977
  00041	0f 57 c0	 xorps	 xmm0, xmm0
  00044	eb 06		 jmp	 SHORT $LN3@simple_vm_
$LN1@simple_vm_:
; Line 979
  00046	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nResult$[rsp]
$LN3@simple_vm_:
; Line 980
  0004c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00050	c3		 ret	 0
simple_vm_stringtonum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cOptions$ = 32
__$ArrayPad$ = 48
vm$ = 80
nNum1$ = 88
cStr$ = 96
simple_vm_numtostring PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 958
$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	f2 0f 11 4c 24
	10		 movsdx	 QWORD PTR [rsp+16], xmm1
  0000b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00010	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001b	48 33 c4	 xor	 rax, rsp
  0001e	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 960
  00023	f2 0f 2c 44 24
	58		 cvttsd2si eax, QWORD PTR nNum1$[rsp]
  00029	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0002d	f2 0f 10 4c 24
	58		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00033	66 0f 2e c8	 ucomisd xmm1, xmm0
  00037	7a 20		 jp	 SHORT $LN2@simple_vm_
  00039	75 1e		 jne	 SHORT $LN2@simple_vm_
; Line 961
  0003b	f2 0f 10 54 24
	58		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00041	66 49 0f 7e d0	 movd	 r8, xmm2
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82996
  0004d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr$[rsp]
  00052	e8 00 00 00 00	 call	 sprintf
; Line 963
  00057	eb 41		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 964
  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0005e	0f be 80 81 19
	00 00		 movsx	 eax, BYTE PTR [rax+6529]
  00065	44 8b c8	 mov	 r9d, eax
  00068	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82998
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82999
  00076	48 8d 4c 24 20	 lea	 rcx, QWORD PTR cOptions$[rsp]
  0007b	e8 00 00 00 00	 call	 sprintf
; Line 965
  00080	f2 0f 10 54 24
	58		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00086	66 49 0f 7e d0	 movd	 r8, xmm2
  0008b	48 8d 54 24 20	 lea	 rdx, QWORD PTR cOptions$[rsp]
  00090	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr$[rsp]
  00095	e8 00 00 00 00	 call	 sprintf
$LN1@simple_vm_:
; Line 967
  0009a	48 8b 44 24 60	 mov	 rax, QWORD PTR cStr$[rsp]
; Line 968
  0009f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a4	48 33 cc	 xor	 rcx, rsp
  000a7	e8 00 00 00 00	 call	 __security_check_cookie
  000ac	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000b0	c3		 ret	 0
simple_vm_numtostring ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
vm$ = 64
simple_vm_neg PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 283
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 285
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 02	 cmp	 eax, 2
  00028	75 47		 jne	 SHORT $LN5@simple_vm_
; Line 286
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00045	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00052	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00059	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0005e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00062	0f 28 d0	 movaps	 xmm2, xmm0
  00065	8b d0		 mov	 edx, eax
  00067	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  0006c	e9 b2 00 00 00	 jmp	 $LN4@simple_vm_
$LN5@simple_vm_:
; Line 288
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00076	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0007d	48 6b c0 18	 imul	 rax, 24
  00081	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00086	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0008a	83 e0 07	 and	 eax, 7
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 5c		 jne	 SHORT $LN3@simple_vm_
; Line 289
  00092	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00097	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009e	48 6b c0 18	 imul	 rax, 24
  000a2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000ac	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000af	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000b4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  000b9	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 290
  000bf	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000c5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bff0000000000000
  000cd	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000d2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000d9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000de	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000e2	0f 28 d0	 movaps	 xmm2, xmm0
  000e5	8b d0		 mov	 edx, eax
  000e7	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  000ec	eb 35		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 292
  000ee	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000fa	48 6b c0 18	 imul	 rax, 24
  000fe	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00103	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00107	83 e0 07	 and	 eax, 7
  0010a	83 f8 03	 cmp	 eax, 3
  0010d	75 14		 jne	 SHORT $LN1@simple_vm_
; Line 293
  0010f	0f 57 d2	 xorps	 xmm2, xmm2
  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82579
  00119	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0011e	e8 00 00 00 00	 call	 simple_vm_expr_npoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
; Line 295
  00123	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00127	c3		 ret	 0
simple_vm_neg ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum1$ = 32
nNum2$ = 40
string_one$ = 48
cStr2$ = 64
cStr3$ = 176
__$ArrayPad$ = 288
vm$ = 320
simple_vm_mod PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 230
$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 231
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 235
  00030	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00038	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003f	48 6b c0 18	 imul	 rax, 24
  00043	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0004b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0004f	83 e0 07	 and	 eax, 7
  00052	83 f8 02	 cmp	 eax, 2
  00055	0f 85 6e 01 00
	00		 jne	 $LN18@simple_vm_
; Line 236
  0005b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00063	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006a	48 6b c0 18	 imul	 rax, 24
  0006e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00076	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0007c	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 237
  00082	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0008a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00091	fe c8		 dec	 al
  00093	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 238
  000a1	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000a7	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000af	7a 1b		 jp	 SHORT $LN17@simple_vm_
  000b1	75 19		 jne	 SHORT $LN17@simple_vm_
; Line 239
  000b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82549
  000ba	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_vm_error
; Line 240
  000c7	e9 f7 03 00 00	 jmp	 $LN19@simple_vm_
$LN17@simple_vm_:
; Line 242
  000cc	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000db	48 6b c0 18	 imul	 rax, 24
  000df	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000eb	83 e0 07	 and	 eax, 7
  000ee	83 f8 02	 cmp	 eax, 2
  000f1	75 2c		 jne	 SHORT $LN16@simple_vm_
; Line 243
  000f3	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00102	48 6b c0 18	 imul	 rax, 24
  00106	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0010e	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00114	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0011a	e9 a5 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 245
  0011f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00127	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012e	48 6b c0 18	 imul	 rax, 24
  00132	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0013a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0013e	83 e0 07	 and	 eax, 7
  00141	83 f8 01	 cmp	 eax, 1
  00144	75 38		 jne	 SHORT $LN14@simple_vm_
; Line 246
  00146	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0014e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00155	48 6b c0 18	 imul	 rax, 24
  00159	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00161	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00166	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00169	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00171	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00176	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0017c	eb 46		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 248
  0017e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00186	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0018d	48 6b c0 18	 imul	 rax, 24
  00191	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00199	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0019d	83 e0 07	 and	 eax, 7
  001a0	83 f8 03	 cmp	 eax, 3
  001a3	75 1f		 jne	 SHORT $LN12@simple_vm_
; Line 249
  001a5	f2 0f 10 54 24
	20		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  001ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82555
  001b2	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001ba	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 250
  001bf	e9 ff 02 00 00	 jmp	 $LN19@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 251
  001c4	e9 5f 02 00 00	 jmp	 $LN11@simple_vm_
$LN18@simple_vm_:
; Line 253
  001c9	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d8	48 6b c0 18	 imul	 rax, 24
  001dc	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001e4	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001e8	83 e0 07	 and	 eax, 7
  001eb	83 f8 01	 cmp	 eax, 1
  001ee	0f 85 f4 01 00
	00		 jne	 $LN10@simple_vm_
; Line 254
  001f4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001fc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00203	48 6b c0 18	 imul	 rax, 24
  00207	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0020f	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00214	e8 00 00 00 00	 call	 simple_string_size
  00219	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00221	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00228	48 6b c9 18	 imul	 rcx, 24
  0022c	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00234	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  00239	44 8b c0	 mov	 r8d, eax
  0023c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0023f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00247	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0024e	e8 00 00 00 00	 call	 simple_string_new2_gc
  00253	48 89 44 24 30	 mov	 QWORD PTR string_one$[rsp], rax
; Line 255
  00258	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00260	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00267	48 6b c0 18	 imul	 rax, 24
  0026b	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00273	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00278	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0027b	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00283	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00288	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 256
  0028e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00296	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0029d	fe c8		 dec	 al
  0029f	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002a7	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 257
  002ad	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002bc	48 6b c0 18	 imul	 rax, 24
  002c0	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002c8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002cc	83 e0 07	 and	 eax, 7
  002cf	83 f8 01	 cmp	 eax, 1
  002d2	75 3b		 jne	 SHORT $LN9@simple_vm_
; Line 258
  002d4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002dc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002e3	48 6b c0 18	 imul	 rax, 24
  002e7	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ef	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002f4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002f7	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ff	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00304	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0030a	e9 be 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 260
  0030f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00317	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0031e	48 6b c0 18	 imul	 rax, 24
  00322	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0032a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0032e	83 e0 07	 and	 eax, 7
  00331	83 f8 02	 cmp	 eax, 2
  00334	75 29		 jne	 SHORT $LN7@simple_vm_
; Line 261
  00336	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0033e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00345	48 6b c0 18	 imul	 rax, 24
  00349	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00351	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00357	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0035d	eb 6e		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 263
  0035f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00367	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0036e	48 6b c0 18	 imul	 rax, 24
  00372	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0037e	83 e0 07	 and	 eax, 7
  00381	83 f8 03	 cmp	 eax, 3
  00384	75 47		 jne	 SHORT $LN5@simple_vm_
; Line 264
  00386	48 8b 4c 24 30	 mov	 rcx, QWORD PTR string_one$[rsp]
  0038b	e8 00 00 00 00	 call	 simple_string_size
  00390	44 8b c8	 mov	 r9d, eax
  00393	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  00398	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0039b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82563
  003a2	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003aa	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 265
  003af	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  003b4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003bc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003c3	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 266
  003c8	e9 f6 00 00 00	 jmp	 $LN19@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 268
  003cd	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  003d2	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003da	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003e1	e8 00 00 00 00	 call	 simple_string_delete_gc
  003e6	eb 40		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 270
  003e8	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003f0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003f7	48 6b c0 18	 imul	 rax, 24
  003fb	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00403	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00407	83 e0 07	 and	 eax, 7
  0040a	83 f8 03	 cmp	 eax, 3
  0040d	75 19		 jne	 SHORT $LN3@simple_vm_
; Line 271
  0040f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82566
  00416	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0041e	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 272
  00423	e9 9b 00 00 00	 jmp	 $LN19@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 275
  00428	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr2$[rsp]
  0042d	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00433	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0043b	e8 00 00 00 00	 call	 simple_vm_numtostring
  00440	48 8b c8	 mov	 rcx, rax
  00443	e8 00 00 00 00	 call	 strlen
  00448	48 83 f8 0f	 cmp	 rax, 15
  0044c	73 29		 jae	 SHORT $LN1@simple_vm_
  0044e	4c 8d 84 24 b0
	00 00 00	 lea	 r8, QWORD PTR cStr3$[rsp]
  00456	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR nNum2$[rsp]
  0045c	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00464	e8 00 00 00 00	 call	 simple_vm_numtostring
  00469	48 8b c8	 mov	 rcx, rax
  0046c	e8 00 00 00 00	 call	 strlen
  00471	48 83 f8 0f	 cmp	 rax, 15
  00475	72 16		 jb	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 276
  00477	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82569
  0047e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00486	e8 00 00 00 00	 call	 simple_vm_error
; Line 277
  0048b	eb 36		 jmp	 SHORT $LN19@simple_vm_
$LN2@simple_vm_:
; Line 279
  0048d	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00493	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00499	e8 00 00 00 00	 call	 fmod
  0049e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004ad	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004b5	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004b9	0f 28 d0	 movaps	 xmm2, xmm0
  004bc	8b d0		 mov	 edx, eax
  004be	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN19@simple_vm_:
; Line 280
  004c3	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  004cb	48 33 cc	 xor	 rcx, rsp
  004ce	e8 00 00 00 00	 call	 __security_check_cookie
  004d3	48 81 c4 38 01
	00 00		 add	 rsp, 312		; 00000138H
  004da	c3		 ret	 0
simple_vm_mod ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
nNum1$ = 40
string_one$ = 48
cStr2$ = 64
cStr3$ = 176
__$ArrayPad$ = 288
vm$ = 320
simple_vm_div PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 177
$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 178
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 182
  00030	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00038	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003f	48 6b c0 18	 imul	 rax, 24
  00043	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0004b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0004f	83 e0 07	 and	 eax, 7
  00052	83 f8 02	 cmp	 eax, 2
  00055	0f 85 6e 01 00
	00		 jne	 $LN18@simple_vm_
; Line 183
  0005b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00063	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006a	48 6b c0 18	 imul	 rax, 24
  0006e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00076	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0007c	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 184
  00082	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0008a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00091	fe c8		 dec	 al
  00093	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 185
  000a1	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  000a7	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000af	7a 1b		 jp	 SHORT $LN17@simple_vm_
  000b1	75 19		 jne	 SHORT $LN17@simple_vm_
; Line 186
  000b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82518
  000ba	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000c2	e8 00 00 00 00	 call	 simple_vm_error
; Line 187
  000c7	e9 f2 03 00 00	 jmp	 $LN19@simple_vm_
$LN17@simple_vm_:
; Line 189
  000cc	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000db	48 6b c0 18	 imul	 rax, 24
  000df	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000eb	83 e0 07	 and	 eax, 7
  000ee	83 f8 02	 cmp	 eax, 2
  000f1	75 2c		 jne	 SHORT $LN16@simple_vm_
; Line 190
  000f3	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00102	48 6b c0 18	 imul	 rax, 24
  00106	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0010e	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00114	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0011a	e9 a5 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 192
  0011f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00127	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012e	48 6b c0 18	 imul	 rax, 24
  00132	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0013a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0013e	83 e0 07	 and	 eax, 7
  00141	83 f8 01	 cmp	 eax, 1
  00144	75 38		 jne	 SHORT $LN14@simple_vm_
; Line 193
  00146	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0014e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00155	48 6b c0 18	 imul	 rax, 24
  00159	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00161	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00166	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00169	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00171	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00176	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0017c	eb 46		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 195
  0017e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00186	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0018d	48 6b c0 18	 imul	 rax, 24
  00191	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00199	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0019d	83 e0 07	 and	 eax, 7
  001a0	83 f8 03	 cmp	 eax, 3
  001a3	75 1f		 jne	 SHORT $LN12@simple_vm_
; Line 196
  001a5	f2 0f 10 54 24
	28		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  001ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82524
  001b2	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001ba	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 197
  001bf	e9 fa 02 00 00	 jmp	 $LN19@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 198
  001c4	e9 5f 02 00 00	 jmp	 $LN11@simple_vm_
$LN18@simple_vm_:
; Line 200
  001c9	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d8	48 6b c0 18	 imul	 rax, 24
  001dc	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001e4	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001e8	83 e0 07	 and	 eax, 7
  001eb	83 f8 01	 cmp	 eax, 1
  001ee	0f 85 f4 01 00
	00		 jne	 $LN10@simple_vm_
; Line 201
  001f4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001fc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00203	48 6b c0 18	 imul	 rax, 24
  00207	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0020f	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00214	e8 00 00 00 00	 call	 simple_string_size
  00219	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00221	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00228	48 6b c9 18	 imul	 rcx, 24
  0022c	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00234	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  00239	44 8b c0	 mov	 r8d, eax
  0023c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0023f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00247	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0024e	e8 00 00 00 00	 call	 simple_string_new2_gc
  00253	48 89 44 24 30	 mov	 QWORD PTR string_one$[rsp], rax
; Line 202
  00258	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00260	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00267	48 6b c0 18	 imul	 rax, 24
  0026b	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00273	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00278	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0027b	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00283	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00288	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 203
  0028e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00296	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0029d	fe c8		 dec	 al
  0029f	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002a7	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 204
  002ad	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002bc	48 6b c0 18	 imul	 rax, 24
  002c0	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002c8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002cc	83 e0 07	 and	 eax, 7
  002cf	83 f8 01	 cmp	 eax, 1
  002d2	75 3b		 jne	 SHORT $LN9@simple_vm_
; Line 205
  002d4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002dc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002e3	48 6b c0 18	 imul	 rax, 24
  002e7	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ef	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002f4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002f7	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ff	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00304	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0030a	e9 be 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 207
  0030f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00317	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0031e	48 6b c0 18	 imul	 rax, 24
  00322	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0032a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0032e	83 e0 07	 and	 eax, 7
  00331	83 f8 02	 cmp	 eax, 2
  00334	75 29		 jne	 SHORT $LN7@simple_vm_
; Line 208
  00336	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0033e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00345	48 6b c0 18	 imul	 rax, 24
  00349	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00351	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00357	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0035d	eb 6e		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 210
  0035f	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00367	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0036e	48 6b c0 18	 imul	 rax, 24
  00372	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0037e	83 e0 07	 and	 eax, 7
  00381	83 f8 03	 cmp	 eax, 3
  00384	75 47		 jne	 SHORT $LN5@simple_vm_
; Line 211
  00386	48 8b 4c 24 30	 mov	 rcx, QWORD PTR string_one$[rsp]
  0038b	e8 00 00 00 00	 call	 simple_string_size
  00390	44 8b c8	 mov	 r9d, eax
  00393	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  00398	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0039b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82532
  003a2	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003aa	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 212
  003af	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  003b4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003bc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003c3	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 213
  003c8	e9 f1 00 00 00	 jmp	 $LN19@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 215
  003cd	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  003d2	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003da	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003e1	e8 00 00 00 00	 call	 simple_string_delete_gc
  003e6	eb 40		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 217
  003e8	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003f0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003f7	48 6b c0 18	 imul	 rax, 24
  003fb	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00403	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00407	83 e0 07	 and	 eax, 7
  0040a	83 f8 03	 cmp	 eax, 3
  0040d	75 19		 jne	 SHORT $LN3@simple_vm_
; Line 218
  0040f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82535
  00416	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0041e	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 219
  00423	e9 96 00 00 00	 jmp	 $LN19@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 222
  00428	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr2$[rsp]
  0042d	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00433	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0043b	e8 00 00 00 00	 call	 simple_vm_numtostring
  00440	48 8b c8	 mov	 rcx, rax
  00443	e8 00 00 00 00	 call	 strlen
  00448	48 83 f8 0f	 cmp	 rax, 15
  0044c	73 29		 jae	 SHORT $LN1@simple_vm_
  0044e	4c 8d 84 24 b0
	00 00 00	 lea	 r8, QWORD PTR cStr3$[rsp]
  00456	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR nNum2$[rsp]
  0045c	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00464	e8 00 00 00 00	 call	 simple_vm_numtostring
  00469	48 8b c8	 mov	 rcx, rax
  0046c	e8 00 00 00 00	 call	 strlen
  00471	48 83 f8 0f	 cmp	 rax, 15
  00475	72 16		 jb	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 223
  00477	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82538
  0047e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00486	e8 00 00 00 00	 call	 simple_vm_error
; Line 224
  0048b	eb 31		 jmp	 SHORT $LN19@simple_vm_
$LN2@simple_vm_:
; Line 226
  0048d	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  00493	f2 0f 5e 44 24
	28		 divsd	 xmm0, QWORD PTR nNum1$[rsp]
  00499	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004a1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004a8	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004b0	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004b4	0f 28 d0	 movaps	 xmm2, xmm0
  004b7	8b d0		 mov	 edx, eax
  004b9	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN19@simple_vm_:
; Line 227
  004be	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  004c6	48 33 cc	 xor	 rcx, rsp
  004c9	e8 00 00 00 00	 call	 __security_check_cookie
  004ce	48 81 c4 38 01
	00 00		 add	 rsp, 312		; 00000138H
  004d5	c3		 ret	 0
simple_vm_div ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
nNum1$ = 40
string_one$ = 48
cStr2$ = 64
cStr3$ = 176
__$ArrayPad$ = 288
vm$ = 320
simple_vm_mul PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 128
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 129
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 133
  00030	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00038	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003f	48 6b c0 18	 imul	 rax, 24
  00043	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0004b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0004f	83 e0 07	 and	 eax, 7
  00052	83 f8 02	 cmp	 eax, 2
  00055	0f 85 43 01 00
	00		 jne	 $LN17@simple_vm_
; Line 134
  0005b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00063	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006a	48 6b c0 18	 imul	 rax, 24
  0006e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00076	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0007c	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 135
  00082	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0008a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00091	fe c8		 dec	 al
  00093	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 136
  000a1	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000a9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b0	48 6b c0 18	 imul	 rax, 24
  000b4	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000bc	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000c0	83 e0 07	 and	 eax, 7
  000c3	83 f8 02	 cmp	 eax, 2
  000c6	75 2c		 jne	 SHORT $LN16@simple_vm_
; Line 137
  000c8	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000d7	48 6b c0 18	 imul	 rax, 24
  000db	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e3	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000e9	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000ef	e9 a5 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 139
  000f4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00103	48 6b c0 18	 imul	 rax, 24
  00107	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0010f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00113	83 e0 07	 and	 eax, 7
  00116	83 f8 01	 cmp	 eax, 1
  00119	75 38		 jne	 SHORT $LN14@simple_vm_
; Line 140
  0011b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00123	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0012a	48 6b c0 18	 imul	 rax, 24
  0012e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00136	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0013b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0013e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00146	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0014b	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00151	eb 46		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 142
  00153	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0015b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00162	48 6b c0 18	 imul	 rax, 24
  00166	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0016e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00172	83 e0 07	 and	 eax, 7
  00175	83 f8 03	 cmp	 eax, 3
  00178	75 1f		 jne	 SHORT $LN12@simple_vm_
; Line 143
  0017a	f2 0f 10 54 24
	28		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00180	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82493
  00187	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0018f	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 144
  00194	e9 fa 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 145
  00199	e9 5f 02 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 147
  0019e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001a6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001ad	48 6b c0 18	 imul	 rax, 24
  001b1	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001b9	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001bd	83 e0 07	 and	 eax, 7
  001c0	83 f8 01	 cmp	 eax, 1
  001c3	0f 85 f4 01 00
	00		 jne	 $LN10@simple_vm_
; Line 148
  001c9	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001d1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d8	48 6b c0 18	 imul	 rax, 24
  001dc	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001e4	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  001e9	e8 00 00 00 00	 call	 simple_string_size
  001ee	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001f6	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001fd	48 6b c9 18	 imul	 rcx, 24
  00201	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00209	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0020e	44 8b c0	 mov	 r8d, eax
  00211	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00214	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00223	e8 00 00 00 00	 call	 simple_string_new2_gc
  00228	48 89 44 24 30	 mov	 QWORD PTR string_one$[rsp], rax
; Line 149
  0022d	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00235	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0023c	48 6b c0 18	 imul	 rax, 24
  00240	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00248	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0024d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00250	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00258	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0025d	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 150
  00263	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0026b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00272	fe c8		 dec	 al
  00274	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0027c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 151
  00282	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0028a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00291	48 6b c0 18	 imul	 rax, 24
  00295	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0029d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a1	83 e0 07	 and	 eax, 7
  002a4	83 f8 01	 cmp	 eax, 1
  002a7	75 3b		 jne	 SHORT $LN9@simple_vm_
; Line 152
  002a9	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002b1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002b8	48 6b c0 18	 imul	 rax, 24
  002bc	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002c4	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  002c9	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  002cc	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002d4	e8 00 00 00 00	 call	 simple_vm_stringtonum
  002d9	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  002df	e9 be 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 154
  002e4	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002ec	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002f3	48 6b c0 18	 imul	 rax, 24
  002f7	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ff	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00303	83 e0 07	 and	 eax, 7
  00306	83 f8 02	 cmp	 eax, 2
  00309	75 29		 jne	 SHORT $LN7@simple_vm_
; Line 155
  0030b	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00313	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0031a	48 6b c0 18	 imul	 rax, 24
  0031e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00326	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0032c	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00332	eb 6e		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 157
  00334	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0033c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00343	48 6b c0 18	 imul	 rax, 24
  00347	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0034f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00353	83 e0 07	 and	 eax, 7
  00356	83 f8 03	 cmp	 eax, 3
  00359	75 47		 jne	 SHORT $LN5@simple_vm_
; Line 158
  0035b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR string_one$[rsp]
  00360	e8 00 00 00 00	 call	 simple_string_size
  00365	44 8b c8	 mov	 r9d, eax
  00368	48 8b 44 24 30	 mov	 rax, QWORD PTR string_one$[rsp]
  0036d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00370	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82501
  00377	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037f	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 159
  00384	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  00389	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00391	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00398	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 160
  0039d	e9 f1 00 00 00	 jmp	 $LN18@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 162
  003a2	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  003a7	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003af	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003b6	e8 00 00 00 00	 call	 simple_string_delete_gc
  003bb	eb 40		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 164
  003bd	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003c5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003cc	48 6b c0 18	 imul	 rax, 24
  003d0	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003d8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003dc	83 e0 07	 and	 eax, 7
  003df	83 f8 03	 cmp	 eax, 3
  003e2	75 19		 jne	 SHORT $LN3@simple_vm_
; Line 165
  003e4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82504
  003eb	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003f3	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 166
  003f8	e9 96 00 00 00	 jmp	 $LN18@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 169
  003fd	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr2$[rsp]
  00402	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  00408	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00410	e8 00 00 00 00	 call	 simple_vm_numtostring
  00415	48 8b c8	 mov	 rcx, rax
  00418	e8 00 00 00 00	 call	 strlen
  0041d	48 83 f8 0f	 cmp	 rax, 15
  00421	73 29		 jae	 SHORT $LN1@simple_vm_
  00423	4c 8d 84 24 b0
	00 00 00	 lea	 r8, QWORD PTR cStr3$[rsp]
  0042b	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR nNum2$[rsp]
  00431	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00439	e8 00 00 00 00	 call	 simple_vm_numtostring
  0043e	48 8b c8	 mov	 rcx, rax
  00441	e8 00 00 00 00	 call	 strlen
  00446	48 83 f8 0f	 cmp	 rax, 15
  0044a	72 16		 jb	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 170
  0044c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82507
  00453	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0045b	e8 00 00 00 00	 call	 simple_vm_error
; Line 171
  00460	eb 31		 jmp	 SHORT $LN18@simple_vm_
$LN2@simple_vm_:
; Line 173
  00462	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00468	f2 0f 59 44 24
	20		 mulsd	 xmm0, QWORD PTR nNum2$[rsp]
  0046e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00476	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0047d	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00485	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00489	0f 28 d0	 movaps	 xmm2, xmm0
  0048c	8b d0		 mov	 edx, eax
  0048e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN18@simple_vm_:
; Line 174
  00493	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0049b	48 33 cc	 xor	 rcx, rsp
  0049e	e8 00 00 00 00	 call	 __security_check_cookie
  004a3	48 81 c4 38 01
	00 00		 add	 rsp, 312		; 00000138H
  004aa	c3		 ret	 0
simple_vm_mul ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
string_one$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_sub PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 86
$LN18:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 87
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 89
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00027	48 6b c0 18	 imul	 rax, 24
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00034	83 e0 07	 and	 eax, 7
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 85 13 01 00
	00		 jne	 $LN15@simple_vm_
; Line 90
  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00045	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004c	48 6b c0 18	 imul	 rax, 24
  00050	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00055	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 91
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006d	fe c8		 dec	 al
  0006f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 92
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00086	48 6b c0 18	 imul	 rax, 24
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00093	83 e0 07	 and	 eax, 7
  00096	83 f8 02	 cmp	 eax, 2
  00099	75 26		 jne	 SHORT $LN14@simple_vm_
; Line 93
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000bc	e9 8d 00 00 00	 jmp	 $LN13@simple_vm_
$LN14@simple_vm_:
; Line 95
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cd	48 6b c0 18	 imul	 rax, 24
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000da	83 e0 07	 and	 eax, 7
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 2f		 jne	 SHORT $LN12@simple_vm_
; Line 96
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000fc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00109	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0010f	eb 3d		 jmp	 SHORT $LN11@simple_vm_
$LN12@simple_vm_:
; Line 98
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00116	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011d	48 6b c0 18	 imul	 rax, 24
  00121	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00126	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012a	83 e0 07	 and	 eax, 7
  0012d	83 f8 03	 cmp	 eax, 3
  00130	75 1c		 jne	 SHORT $LN10@simple_vm_
; Line 99
  00132	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82467
  0013f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 100
  00149	e9 32 02 00 00	 jmp	 $LN16@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
$LN13@simple_vm_:
; Line 101
  0014e	e9 02 02 00 00	 jmp	 $LN9@simple_vm_
$LN15@simple_vm_:
; Line 103
  00153	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016c	83 e0 07	 and	 eax, 7
  0016f	83 f8 01	 cmp	 eax, 1
  00172	0f 85 a9 01 00
	00		 jne	 $LN8@simple_vm_
; Line 104
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00184	48 6b c0 18	 imul	 rax, 24
  00188	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0018d	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00192	e8 00 00 00 00	 call	 simple_string_size
  00197	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0019c	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001a3	48 6b c9 18	 imul	 rcx, 24
  001a7	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  001ac	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  001b1	44 8b c0	 mov	 r8d, eax
  001b4	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  001b7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001bc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001c3	e8 00 00 00 00	 call	 simple_string_new2_gc
  001c8	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 105
  001cd	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001d2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d9	48 6b c0 18	 imul	 rax, 24
  001dd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001e2	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001e7	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ea	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ef	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001f4	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 106
  001fa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00206	fe c8		 dec	 al
  00208	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0020d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 107
  00213	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00218	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021f	48 6b c0 18	 imul	 rax, 24
  00223	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00228	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0022c	83 e0 07	 and	 eax, 7
  0022f	83 f8 01	 cmp	 eax, 1
  00232	75 32		 jne	 SHORT $LN7@simple_vm_
; Line 108
  00234	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00239	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00240	48 6b c0 18	 imul	 rax, 24
  00244	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00249	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0024e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00251	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00256	e8 00 00 00 00	 call	 simple_vm_stringtonum
  0025b	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00261	e9 a3 00 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 110
  00266	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00272	48 6b c0 18	 imul	 rax, 24
  00276	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0027b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0027f	83 e0 07	 and	 eax, 7
  00282	83 f8 02	 cmp	 eax, 2
  00285	75 23		 jne	 SHORT $LN5@simple_vm_
; Line 111
  00287	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0028c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00293	48 6b c0 18	 imul	 rax, 24
  00297	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0029c	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  002a2	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  002a8	eb 5f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 113
  002aa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002af	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002b6	48 6b c0 18	 imul	 rax, 24
  002ba	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002bf	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002c3	83 e0 07	 and	 eax, 7
  002c6	83 f8 03	 cmp	 eax, 3
  002c9	75 3e		 jne	 SHORT $LN3@simple_vm_
; Line 114
  002cb	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  002d0	e8 00 00 00 00	 call	 simple_string_size
  002d5	44 8b c8	 mov	 r9d, eax
  002d8	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002dd	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002e0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82475
  002e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ec	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 115
  002f1	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002f6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002fb	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00302	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 116
  00307	eb 77		 jmp	 SHORT $LN16@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 118
  00309	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  0030e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00313	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0031a	e8 00 00 00 00	 call	 simple_string_delete_gc
  0031f	eb 34		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 120
  00321	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00326	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032d	48 6b c0 18	 imul	 rax, 24
  00331	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00336	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0033a	83 e0 07	 and	 eax, 7
  0033d	83 f8 03	 cmp	 eax, 3
  00340	75 13		 jne	 SHORT $LN1@simple_vm_
; Line 121
  00342	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82478
  00349	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0034e	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 122
  00353	eb 2b		 jmp	 SHORT $LN16@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN9@simple_vm_:
; Line 124
  00355	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0035b	f2 0f 5c 44 24
	30		 subsd	 xmm0, QWORD PTR nNum1$[rsp]
  00361	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00366	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0036d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00372	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00376	0f 28 d0	 movaps	 xmm2, xmm0
  00379	8b d0		 mov	 edx, eax
  0037b	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN16@simple_vm_:
; Line 125
  00380	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00384	c3		 ret	 0
simple_vm_sub ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr2$ = 32
string_one$ = 40
nNum2$ = 48
nNum1$ = 56
tv172 = 64
cStr3$ = 80
__$ArrayPad$ = 192
vm$ = 224
simple_vm_sum PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 18
$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 29
  0001e	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00026	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002d	48 6b c0 18	 imul	 rax, 24
  00031	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00039	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0003d	83 e0 07	 and	 eax, 7
  00040	83 f8 01	 cmp	 eax, 1
  00043	0f 85 9f 03 00
	00		 jne	 $LN18@simple_vm_
; Line 30
  00049	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	48 6b c0 18	 imul	 rax, 24
  0005c	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00064	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00069	e8 00 00 00 00	 call	 simple_string_size
  0006e	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00076	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0007d	48 6b c9 18	 imul	 rcx, 24
  00081	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00089	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0008e	44 8b c0	 mov	 r8d, eax
  00091	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00094	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0009c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a3	e8 00 00 00 00	 call	 simple_string_new2_gc
  000a8	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 31
  000ad	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000bc	fe c8		 dec	 al
  000be	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000c6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 32
  000cc	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000db	48 6b c0 18	 imul	 rax, 24
  000df	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000e7	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000eb	83 e0 07	 and	 eax, 7
  000ee	83 f8 01	 cmp	 eax, 1
  000f1	0f 85 f4 00 00
	00		 jne	 $LN17@simple_vm_
; Line 33
  000f7	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00106	48 6b c0 18	 imul	 rax, 24
  0010a	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00112	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  00117	e8 00 00 00 00	 call	 simple_string_size
  0011c	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00124	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0012b	48 6b c9 18	 imul	 rcx, 24
  0012f	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  00137	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0013c	44 8b c0	 mov	 r8d, eax
  0013f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00142	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0014a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00151	e8 00 00 00 00	 call	 simple_string_new2_gc
  00156	48 89 44 24 20	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 34
  0015b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00160	e8 00 00 00 00	 call	 simple_string_size
  00165	44 8b c8	 mov	 r9d, eax
  00168	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  0016d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00170	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  00175	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00184	e8 00 00 00 00	 call	 simple_string_add2_gc
; Line 35
  00189	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cStr2$[rsp]
  0018e	e8 00 00 00 00	 call	 simple_string_size
  00193	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0019b	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  001a2	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR vm$[rsp]
  001aa	48 83 c2 30	 add	 rdx, 48			; 00000030H
  001ae	48 89 54 24 40	 mov	 QWORD PTR tv172[rsp], rdx
  001b3	44 8b c8	 mov	 r9d, eax
  001b6	48 8b 44 24 20	 mov	 rax, QWORD PTR cStr2$[rsp]
  001bb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001be	8b d1		 mov	 edx, ecx
  001c0	48 8b 44 24 40	 mov	 rax, QWORD PTR tv172[rsp]
  001c5	48 8b c8	 mov	 rcx, rax
  001c8	e8 00 00 00 00	 call	 simple_itemarray_setstring2
; Line 36
  001cd	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  001d2	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001da	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e1	e8 00 00 00 00	 call	 simple_string_delete_gc
  001e6	e9 df 01 00 00	 jmp	 $LN16@simple_vm_
$LN17@simple_vm_:
; Line 38
  001eb	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001f3	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fa	48 6b c0 18	 imul	 rax, 24
  001fe	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00206	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0020a	83 e0 07	 and	 eax, 7
  0020d	83 f8 02	 cmp	 eax, 2
  00210	0f 85 46 01 00
	00		 jne	 $LN15@simple_vm_
; Line 39
  00216	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00225	48 6b c0 18	 imul	 rax, 24
  00229	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00231	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00237	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 40
  0023d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82436
  00244	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00249	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0024c	e8 00 00 00 00	 call	 strcmp
  00251	85 c0		 test	 eax, eax
  00253	0f 85 ba 00 00
	00		 jne	 $LN14@simple_vm_
; Line 41
  00259	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82437
  00260	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00268	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0026f	e8 00 00 00 00	 call	 simple_string_new_gc
  00274	48 89 44 24 20	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 42
  00279	4c 8d 44 24 50	 lea	 r8, QWORD PTR cStr3$[rsp]
  0027e	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR nNum2$[rsp]
  00284	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0028c	e8 00 00 00 00	 call	 simple_vm_numtostring
  00291	4c 8b c0	 mov	 r8, rax
  00294	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  00299	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002a1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002a8	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 43
  002ad	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002b2	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002b5	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  002ba	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002c2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002c9	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 44
  002ce	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002d6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002dd	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002e5	48 83 c1 30	 add	 rcx, 48			; 00000030H
  002e9	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  002ee	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
  002f1	8b d0		 mov	 edx, eax
  002f3	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 45
  002f8	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  002fd	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00305	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0030c	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 46
  00311	eb 47		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 47
  00313	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00318	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0031b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00323	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00328	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR nNum2$[rsp]
  0032e	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00332	0f 28 c1	 movaps	 xmm0, xmm1
  00335	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0033d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00344	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0034c	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00350	0f 28 d0	 movaps	 xmm2, xmm0
  00353	8b d0		 mov	 edx, eax
  00355	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN13@simple_vm_:
; Line 48
  0035a	eb 6e		 jmp	 SHORT $LN12@simple_vm_
$LN15@simple_vm_:
; Line 50
  0035c	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00364	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0036b	48 6b c0 18	 imul	 rax, 24
  0036f	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00377	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0037b	83 e0 07	 and	 eax, 7
  0037e	83 f8 03	 cmp	 eax, 3
  00381	75 47		 jne	 SHORT $LN11@simple_vm_
; Line 51
  00383	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00388	e8 00 00 00 00	 call	 simple_string_size
  0038d	44 8b c8	 mov	 r9d, eax
  00390	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  00395	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00398	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82441
  0039f	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003a7	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 52
  003ac	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  003b1	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003b9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003c0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 53
  003c5	e9 8d 02 00 00	 jmp	 $LN19@simple_vm_
$LN11@simple_vm_:
$LN12@simple_vm_:
$LN16@simple_vm_:
; Line 55
  003ca	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  003cf	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003d7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  003de	e8 00 00 00 00	 call	 simple_string_delete_gc
  003e3	e9 6f 02 00 00	 jmp	 $LN10@simple_vm_
$LN18@simple_vm_:
; Line 57
  003e8	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003f0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003f7	48 6b c0 18	 imul	 rax, 24
  003fb	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00403	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00407	83 e0 07	 and	 eax, 7
  0040a	83 f8 02	 cmp	 eax, 2
  0040d	0f 85 f1 01 00
	00		 jne	 $LN9@simple_vm_
; Line 58
  00413	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0041b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00422	48 6b c0 18	 imul	 rax, 24
  00426	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0042e	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00434	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 59
  0043a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00442	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00449	fe c8		 dec	 al
  0044b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00453	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 60
  00459	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00461	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00468	48 6b c0 18	 imul	 rax, 24
  0046c	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00474	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00478	83 e0 07	 and	 eax, 7
  0047b	83 f8 02	 cmp	 eax, 2
  0047e	75 5d		 jne	 SHORT $LN8@simple_vm_
; Line 61
  00480	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00488	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0048f	48 6b c0 18	 imul	 rax, 24
  00493	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0049b	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  004a1	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 62
  004a7	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  004ad	f2 0f 58 44 24
	30		 addsd	 xmm0, QWORD PTR nNum2$[rsp]
  004b3	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004bb	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004c2	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004ca	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004ce	0f 28 d0	 movaps	 xmm2, xmm0
  004d1	8b d0		 mov	 edx, eax
  004d3	e8 00 00 00 00	 call	 simple_itemarray_setdouble
  004d8	e9 25 01 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 64
  004dd	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004e5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004ec	48 6b c0 18	 imul	 rax, 24
  004f0	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004f8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  004fc	83 e0 07	 and	 eax, 7
  004ff	83 f8 01	 cmp	 eax, 1
  00502	0f 85 b7 00 00
	00		 jne	 $LN6@simple_vm_
; Line 65
  00508	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00510	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00517	48 6b c0 18	 imul	 rax, 24
  0051b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00523	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00528	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0052b	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00533	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0053a	e8 00 00 00 00	 call	 simple_string_new_gc
  0053f	48 89 44 24 20	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 66
  00544	4c 8d 44 24 50	 lea	 r8, QWORD PTR cStr3$[rsp]
  00549	f2 0f 10 4c 24
	38		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  0054f	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00557	e8 00 00 00 00	 call	 simple_vm_numtostring
; Line 67
  0055c	4c 8d 44 24 50	 lea	 r8, QWORD PTR cStr3$[rsp]
  00561	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  00566	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0056e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00575	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 68
  0057a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00582	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00589	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00591	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00595	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  0059a	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
  0059d	8b d0		 mov	 edx, eax
  0059f	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 69
  005a4	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr2$[rsp]
  005a9	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005b1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005b8	e8 00 00 00 00	 call	 simple_string_delete_gc
  005bd	eb 43		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 71
  005bf	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  005c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  005ce	48 6b c0 18	 imul	 rax, 24
  005d2	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  005da	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  005de	83 e0 07	 and	 eax, 7
  005e1	83 f8 03	 cmp	 eax, 3
  005e4	75 1c		 jne	 SHORT $LN4@simple_vm_
; Line 72
  005e6	f2 0f 10 54 24
	38		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  005ec	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82449
  005f3	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  005fb	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 73
  00600	eb 55		 jmp	 SHORT $LN19@simple_vm_
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 74
  00602	eb 53		 jmp	 SHORT $LN3@simple_vm_
$LN9@simple_vm_:
; Line 76
  00604	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0060c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00613	48 6b c0 18	 imul	 rax, 24
  00617	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0061f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00623	83 e0 07	 and	 eax, 7
  00626	83 f8 03	 cmp	 eax, 3
  00629	75 18		 jne	 SHORT $LN2@simple_vm_
; Line 77
  0062b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82452
  00632	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0063a	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 78
  0063f	eb 16		 jmp	 SHORT $LN19@simple_vm_
; Line 79
  00641	eb 14		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 80
  00643	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82454
  0064a	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00652	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
$LN3@simple_vm_:
$LN10@simple_vm_:
$LN19@simple_vm_:
; Line 83
  00657	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0065f	48 33 cc	 xor	 rcx, rsp
  00662	e8 00 00 00 00	 call	 __security_check_cookie
  00667	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  0066e	c3		 ret	 0
simple_vm_sum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string_one$ = 32
nNum1$ = 40
cStr2$ = 48
nNum2$ = 56
cStr3$ = 64
__$ArrayPad$ = 176
vm$ = 208
simple_vm_notequal PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 552
$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 556
  0001e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00026	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002d	48 6b c0 18	 imul	 rax, 24
  00031	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00039	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0003d	83 e0 07	 and	 eax, 7
  00040	83 f8 01	 cmp	 eax, 1
  00043	0f 85 a6 02 00
	00		 jne	 $LN23@simple_vm_
; Line 557
  00049	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	48 6b c0 18	 imul	 rax, 24
  0005c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00064	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00069	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0006c	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00074	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007b	e8 00 00 00 00	 call	 simple_string_new_gc
  00080	48 89 44 24 20	 mov	 QWORD PTR string_one$[rsp], rax
; Line 558
  00085	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00094	fe c8		 dec	 al
  00096	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0009e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 559
  000a4	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ac	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b3	48 6b c0 18	 imul	 rax, 24
  000b7	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000bf	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000c3	83 e0 07	 and	 eax, 7
  000c6	83 f8 01	 cmp	 eax, 1
  000c9	0f 85 c4 00 00
	00		 jne	 $LN22@simple_vm_
; Line 560
  000cf	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000de	48 6b c0 18	 imul	 rax, 24
  000e2	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000ea	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000ef	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000f2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00101	e8 00 00 00 00	 call	 simple_string_new_gc
  00106	48 89 44 24 30	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 562
  0010b	48 8b 44 24 30	 mov	 rax, QWORD PTR cStr2$[rsp]
  00110	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00113	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  00118	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0011b	e8 00 00 00 00	 call	 strcmp
  00120	85 c0		 test	 eax, eax
  00122	75 27		 jne	 SHORT $LN21@simple_vm_
; Line 563
  00124	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0012c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00133	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0013b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0013f	0f 57 d2	 xorps	 xmm2, xmm2
  00142	8b d0		 mov	 edx, eax
  00144	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 564
  00149	eb 2a		 jmp	 SHORT $LN20@simple_vm_
$LN21@simple_vm_:
; Line 565
  0014b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00153	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015a	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00162	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00166	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0016e	8b d0		 mov	 edx, eax
  00170	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN20@simple_vm_:
; Line 567
  00175	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr2$[rsp]
  0017a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00182	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00189	e8 00 00 00 00	 call	 simple_string_delete_gc
  0018e	e9 3e 01 00 00	 jmp	 $LN19@simple_vm_
$LN22@simple_vm_:
; Line 569
  00193	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0019b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a2	48 6b c0 18	 imul	 rax, 24
  001a6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b2	83 e0 07	 and	 eax, 7
  001b5	83 f8 02	 cmp	 eax, 2
  001b8	0f 85 a5 00 00
	00		 jne	 $LN18@simple_vm_
; Line 570
  001be	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001cd	48 6b c0 18	 imul	 rax, 24
  001d1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001d9	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  001df	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 571
  001e5	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  001ea	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ed	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001f5	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001fa	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 573
  00200	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  00206	66 0f 2e 44 24
	38		 ucomisd xmm0, QWORD PTR nNum2$[rsp]
  0020c	7a 29		 jp	 SHORT $LN17@simple_vm_
  0020e	75 27		 jne	 SHORT $LN17@simple_vm_
; Line 574
  00210	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00218	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00227	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0022b	0f 57 d2	 xorps	 xmm2, xmm2
  0022e	8b d0		 mov	 edx, eax
  00230	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 575
  00235	eb 2a		 jmp	 SHORT $LN16@simple_vm_
$LN17@simple_vm_:
; Line 576
  00237	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0023f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00246	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0024e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00252	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0025a	8b d0		 mov	 edx, eax
  0025c	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN16@simple_vm_:
; Line 577
  00261	eb 6e		 jmp	 SHORT $LN15@simple_vm_
$LN18@simple_vm_:
; Line 579
  00263	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0026b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00272	48 6b c0 18	 imul	 rax, 24
  00276	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0027e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00282	83 e0 07	 and	 eax, 7
  00285	83 f8 03	 cmp	 eax, 3
  00288	75 47		 jne	 SHORT $LN14@simple_vm_
; Line 580
  0028a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR string_one$[rsp]
  0028f	e8 00 00 00 00	 call	 simple_string_size
  00294	44 8b c8	 mov	 r9d, eax
  00297	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  0029c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0029f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82736
  002a6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 581
  002b3	48 8b 54 24 20	 mov	 rdx, QWORD PTR string_one$[rsp]
  002b8	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002c0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002c7	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 582
  002cc	e9 c8 02 00 00	 jmp	 $LN24@simple_vm_
$LN14@simple_vm_:
$LN15@simple_vm_:
$LN19@simple_vm_:
; Line 584
  002d1	48 8b 54 24 20	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d6	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002de	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e5	e8 00 00 00 00	 call	 simple_string_delete_gc
  002ea	e9 aa 02 00 00	 jmp	 $LN13@simple_vm_
$LN23@simple_vm_:
; Line 586
  002ef	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002f7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002fe	48 6b c0 18	 imul	 rax, 24
  00302	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0030a	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0030e	83 e0 07	 and	 eax, 7
  00311	83 f8 02	 cmp	 eax, 2
  00314	0f 85 44 02 00
	00		 jne	 $LN12@simple_vm_
; Line 587
  0031a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00322	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00329	48 6b c0 18	 imul	 rax, 24
  0032d	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00335	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0033b	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 588
  00341	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00349	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00350	fe c8		 dec	 al
  00352	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0035a	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 589
  00360	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00368	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0036f	48 6b c0 18	 imul	 rax, 24
  00373	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0037f	83 e0 07	 and	 eax, 7
  00382	83 f8 02	 cmp	 eax, 2
  00385	0f 85 8d 00 00
	00		 jne	 $LN11@simple_vm_
; Line 590
  0038b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00393	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0039a	48 6b c0 18	 imul	 rax, 24
  0039e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003a6	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  003ac	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 592
  003b2	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  003b8	66 0f 2e 44 24
	38		 ucomisd xmm0, QWORD PTR nNum2$[rsp]
  003be	7a 29		 jp	 SHORT $LN10@simple_vm_
  003c0	75 27		 jne	 SHORT $LN10@simple_vm_
; Line 593
  003c2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003ca	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003d1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003d9	48 83 c1 30	 add	 rcx, 48			; 00000030H
  003dd	0f 57 d2	 xorps	 xmm2, xmm2
  003e0	8b d0		 mov	 edx, eax
  003e2	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 594
  003e7	eb 2a		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 595
  003e9	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003f1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003f8	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00400	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00404	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  0040c	8b d0		 mov	 edx, eax
  0040e	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN9@simple_vm_:
; Line 596
  00413	e9 44 01 00 00	 jmp	 $LN8@simple_vm_
$LN11@simple_vm_:
; Line 598
  00418	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00420	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00427	48 6b c0 18	 imul	 rax, 24
  0042b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00433	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00437	83 e0 07	 and	 eax, 7
  0043a	83 f8 01	 cmp	 eax, 1
  0043d	0f 85 d6 00 00
	00		 jne	 $LN7@simple_vm_
; Line 599
  00443	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0044b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00452	48 6b c0 18	 imul	 rax, 24
  00456	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0045e	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00463	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00466	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0046e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00475	e8 00 00 00 00	 call	 simple_string_new_gc
  0047a	48 89 44 24 30	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 600
  0047f	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr3$[rsp]
  00484	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  0048a	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00492	e8 00 00 00 00	 call	 simple_vm_numtostring
; Line 602
  00497	48 8d 54 24 40	 lea	 rdx, QWORD PTR cStr3$[rsp]
  0049c	48 8b 44 24 30	 mov	 rax, QWORD PTR cStr2$[rsp]
  004a1	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  004a4	e8 00 00 00 00	 call	 strcmp
  004a9	85 c0		 test	 eax, eax
  004ab	75 27		 jne	 SHORT $LN6@simple_vm_
; Line 603
  004ad	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004b5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004bc	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004c4	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004c8	0f 57 d2	 xorps	 xmm2, xmm2
  004cb	8b d0		 mov	 edx, eax
  004cd	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 604
  004d2	eb 2a		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 605
  004d4	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004dc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004e3	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004eb	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004ef	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  004f7	8b d0		 mov	 edx, eax
  004f9	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN5@simple_vm_:
; Line 607
  004fe	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr2$[rsp]
  00503	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0050b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00512	e8 00 00 00 00	 call	 simple_string_delete_gc
  00517	eb 43		 jmp	 SHORT $LN4@simple_vm_
$LN7@simple_vm_:
; Line 609
  00519	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00521	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00528	48 6b c0 18	 imul	 rax, 24
  0052c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00534	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00538	83 e0 07	 and	 eax, 7
  0053b	83 f8 03	 cmp	 eax, 3
  0053e	75 1c		 jne	 SHORT $LN3@simple_vm_
; Line 610
  00540	f2 0f 10 54 24
	28		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00546	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82748
  0054d	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00555	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 611
  0055a	eb 3d		 jmp	 SHORT $LN24@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN8@simple_vm_:
; Line 612
  0055c	eb 3b		 jmp	 SHORT $LN2@simple_vm_
$LN12@simple_vm_:
; Line 614
  0055e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00566	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0056d	48 6b c0 18	 imul	 rax, 24
  00571	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00579	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0057d	83 e0 07	 and	 eax, 7
  00580	83 f8 03	 cmp	 eax, 3
  00583	75 14		 jne	 SHORT $LN1@simple_vm_
; Line 615
  00585	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82751
  0058c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00594	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN13@simple_vm_:
$LN24@simple_vm_:
; Line 618
  00599	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  005a1	48 33 cc	 xor	 rcx, rsp
  005a4	e8 00 00 00 00	 call	 __security_check_cookie
  005a9	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  005b0	c3		 ret	 0
simple_vm_notequal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
string_one$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_greaterequal PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 505
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 506
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 508
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00027	48 6b c0 18	 imul	 rax, 24
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00034	83 e0 07	 and	 eax, 7
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 85 13 01 00
	00		 jne	 $LN17@simple_vm_
; Line 509
  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00045	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004c	48 6b c0 18	 imul	 rax, 24
  00050	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00055	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 510
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006d	fe c8		 dec	 al
  0006f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 511
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00086	48 6b c0 18	 imul	 rax, 24
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00093	83 e0 07	 and	 eax, 7
  00096	83 f8 02	 cmp	 eax, 2
  00099	75 26		 jne	 SHORT $LN16@simple_vm_
; Line 512
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000bc	e9 8d 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 514
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cd	48 6b c0 18	 imul	 rax, 24
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000da	83 e0 07	 and	 eax, 7
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 2f		 jne	 SHORT $LN14@simple_vm_
; Line 515
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000fc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00109	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0010f	eb 3d		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 517
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00116	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011d	48 6b c0 18	 imul	 rax, 24
  00121	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00126	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012a	83 e0 07	 and	 eax, 7
  0012d	83 f8 03	 cmp	 eax, 3
  00130	75 1c		 jne	 SHORT $LN12@simple_vm_
; Line 518
  00132	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82704
  0013f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 519
  00149	e9 3b 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 520
  0014e	e9 e3 01 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 522
  00153	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016c	83 e0 07	 and	 eax, 7
  0016f	83 f8 01	 cmp	 eax, 1
  00172	0f 85 8a 01 00
	00		 jne	 $LN10@simple_vm_
; Line 523
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00184	48 6b c0 18	 imul	 rax, 24
  00188	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0018d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00192	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00195	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a1	e8 00 00 00 00	 call	 simple_string_new_gc
  001a6	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 524
  001ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b7	48 6b c0 18	 imul	 rax, 24
  001bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c0	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001c5	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001d2	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 525
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e4	fe c8		 dec	 al
  001e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001eb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 526
  001f1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fd	48 6b c0 18	 imul	 rax, 24
  00201	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00206	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0020a	83 e0 07	 and	 eax, 7
  0020d	83 f8 01	 cmp	 eax, 1
  00210	75 32		 jne	 SHORT $LN9@simple_vm_
; Line 527
  00212	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00217	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021e	48 6b c0 18	 imul	 rax, 24
  00222	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00227	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0022f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00234	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00239	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0023f	e9 a6 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 529
  00244	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00249	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00250	48 6b c0 18	 imul	 rax, 24
  00254	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0025d	83 e0 07	 and	 eax, 7
  00260	83 f8 02	 cmp	 eax, 2
  00263	75 23		 jne	 SHORT $LN7@simple_vm_
; Line 530
  00265	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00271	48 6b c0 18	 imul	 rax, 24
  00275	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0027a	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00280	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00286	eb 62		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 532
  00288	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00294	48 6b c0 18	 imul	 rax, 24
  00298	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0029d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a1	83 e0 07	 and	 eax, 7
  002a4	83 f8 03	 cmp	 eax, 3
  002a7	75 41		 jne	 SHORT $LN5@simple_vm_
; Line 533
  002a9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_string_size
  002b3	44 8b c8	 mov	 r9d, eax
  002b6	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002bb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82712
  002c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ca	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 534
  002cf	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 535
  002e5	e9 9f 00 00 00	 jmp	 $LN18@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 537
  002ea	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fb	e8 00 00 00 00	 call	 simple_string_delete_gc
  00300	eb 34		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 539
  00302	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00307	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030e	48 6b c0 18	 imul	 rax, 24
  00312	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00317	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0031b	83 e0 07	 and	 eax, 7
  0031e	83 f8 03	 cmp	 eax, 3
  00321	75 13		 jne	 SHORT $LN3@simple_vm_
; Line 540
  00323	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82715
  0032a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0032f	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 541
  00334	eb 53		 jmp	 SHORT $LN18@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 544
  00336	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0033c	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  00342	72 26		 jb	 SHORT $LN2@simple_vm_
; Line 545
  00344	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00349	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00350	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00355	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00359	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00361	8b d0		 mov	 edx, eax
  00363	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 546
  00368	eb 1f		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 547
  0036a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0036f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00376	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0037f	0f 57 d2	 xorps	 xmm2, xmm2
  00382	8b d0		 mov	 edx, eax
  00384	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN18@simple_vm_:
; Line 549
  00389	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0038d	c3		 ret	 0
simple_vm_greaterequal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
string_one$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_greater PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 458
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 459
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 461
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00027	48 6b c0 18	 imul	 rax, 24
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00034	83 e0 07	 and	 eax, 7
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 85 13 01 00
	00		 jne	 $LN17@simple_vm_
; Line 462
  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00045	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004c	48 6b c0 18	 imul	 rax, 24
  00050	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00055	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 463
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006d	fe c8		 dec	 al
  0006f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 464
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00086	48 6b c0 18	 imul	 rax, 24
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00093	83 e0 07	 and	 eax, 7
  00096	83 f8 02	 cmp	 eax, 2
  00099	75 26		 jne	 SHORT $LN16@simple_vm_
; Line 465
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000bc	e9 8d 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 467
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cd	48 6b c0 18	 imul	 rax, 24
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000da	83 e0 07	 and	 eax, 7
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 2f		 jne	 SHORT $LN14@simple_vm_
; Line 468
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000fc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00109	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0010f	eb 3d		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 470
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00116	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011d	48 6b c0 18	 imul	 rax, 24
  00121	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00126	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012a	83 e0 07	 and	 eax, 7
  0012d	83 f8 03	 cmp	 eax, 3
  00130	75 1c		 jne	 SHORT $LN12@simple_vm_
; Line 471
  00132	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82678
  0013f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 472
  00149	e9 3b 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 473
  0014e	e9 e3 01 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 475
  00153	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016c	83 e0 07	 and	 eax, 7
  0016f	83 f8 01	 cmp	 eax, 1
  00172	0f 85 8a 01 00
	00		 jne	 $LN10@simple_vm_
; Line 476
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00184	48 6b c0 18	 imul	 rax, 24
  00188	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0018d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00192	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00195	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a1	e8 00 00 00 00	 call	 simple_string_new_gc
  001a6	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 477
  001ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b7	48 6b c0 18	 imul	 rax, 24
  001bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c0	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001c5	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001d2	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 478
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e4	fe c8		 dec	 al
  001e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001eb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 479
  001f1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fd	48 6b c0 18	 imul	 rax, 24
  00201	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00206	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0020a	83 e0 07	 and	 eax, 7
  0020d	83 f8 01	 cmp	 eax, 1
  00210	75 32		 jne	 SHORT $LN9@simple_vm_
; Line 480
  00212	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00217	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021e	48 6b c0 18	 imul	 rax, 24
  00222	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00227	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0022f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00234	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00239	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0023f	e9 a6 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 482
  00244	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00249	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00250	48 6b c0 18	 imul	 rax, 24
  00254	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0025d	83 e0 07	 and	 eax, 7
  00260	83 f8 02	 cmp	 eax, 2
  00263	75 23		 jne	 SHORT $LN7@simple_vm_
; Line 483
  00265	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00271	48 6b c0 18	 imul	 rax, 24
  00275	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0027a	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00280	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00286	eb 62		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 485
  00288	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00294	48 6b c0 18	 imul	 rax, 24
  00298	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0029d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a1	83 e0 07	 and	 eax, 7
  002a4	83 f8 03	 cmp	 eax, 3
  002a7	75 41		 jne	 SHORT $LN5@simple_vm_
; Line 486
  002a9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_string_size
  002b3	44 8b c8	 mov	 r9d, eax
  002b6	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002bb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82686
  002c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ca	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 487
  002cf	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 488
  002e5	e9 9f 00 00 00	 jmp	 $LN18@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 490
  002ea	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fb	e8 00 00 00 00	 call	 simple_string_delete_gc
  00300	eb 34		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 492
  00302	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00307	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030e	48 6b c0 18	 imul	 rax, 24
  00312	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00317	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0031b	83 e0 07	 and	 eax, 7
  0031e	83 f8 03	 cmp	 eax, 3
  00321	75 13		 jne	 SHORT $LN3@simple_vm_
; Line 493
  00323	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82689
  0032a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0032f	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 494
  00334	eb 53		 jmp	 SHORT $LN18@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 497
  00336	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR nNum2$[rsp]
  0033c	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR nNum1$[rsp]
  00342	76 26		 jbe	 SHORT $LN2@simple_vm_
; Line 498
  00344	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00349	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00350	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00355	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00359	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00361	8b d0		 mov	 edx, eax
  00363	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 499
  00368	eb 1f		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 500
  0036a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0036f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00376	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0037f	0f 57 d2	 xorps	 xmm2, xmm2
  00382	8b d0		 mov	 edx, eax
  00384	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN18@simple_vm_:
; Line 502
  00389	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0038d	c3		 ret	 0
simple_vm_greater ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
string_one$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_less PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 411
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 412
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 414
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00027	48 6b c0 18	 imul	 rax, 24
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00034	83 e0 07	 and	 eax, 7
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 85 13 01 00
	00		 jne	 $LN17@simple_vm_
; Line 415
  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00045	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004c	48 6b c0 18	 imul	 rax, 24
  00050	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00055	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 416
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006d	fe c8		 dec	 al
  0006f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 417
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00086	48 6b c0 18	 imul	 rax, 24
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00093	83 e0 07	 and	 eax, 7
  00096	83 f8 02	 cmp	 eax, 2
  00099	75 26		 jne	 SHORT $LN16@simple_vm_
; Line 418
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000bc	e9 8d 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 420
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cd	48 6b c0 18	 imul	 rax, 24
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000da	83 e0 07	 and	 eax, 7
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 2f		 jne	 SHORT $LN14@simple_vm_
; Line 421
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000fc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00109	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0010f	eb 3d		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 423
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00116	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011d	48 6b c0 18	 imul	 rax, 24
  00121	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00126	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012a	83 e0 07	 and	 eax, 7
  0012d	83 f8 03	 cmp	 eax, 3
  00130	75 1c		 jne	 SHORT $LN12@simple_vm_
; Line 424
  00132	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82652
  0013f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 425
  00149	e9 3b 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 426
  0014e	e9 e3 01 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 428
  00153	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016c	83 e0 07	 and	 eax, 7
  0016f	83 f8 01	 cmp	 eax, 1
  00172	0f 85 8a 01 00
	00		 jne	 $LN10@simple_vm_
; Line 429
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00184	48 6b c0 18	 imul	 rax, 24
  00188	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0018d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00192	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00195	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a1	e8 00 00 00 00	 call	 simple_string_new_gc
  001a6	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 430
  001ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b7	48 6b c0 18	 imul	 rax, 24
  001bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c0	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001c5	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001d2	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 431
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e4	fe c8		 dec	 al
  001e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001eb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 432
  001f1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fd	48 6b c0 18	 imul	 rax, 24
  00201	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00206	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0020a	83 e0 07	 and	 eax, 7
  0020d	83 f8 01	 cmp	 eax, 1
  00210	75 32		 jne	 SHORT $LN9@simple_vm_
; Line 433
  00212	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00217	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021e	48 6b c0 18	 imul	 rax, 24
  00222	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00227	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0022f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00234	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00239	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0023f	e9 a6 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 435
  00244	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00249	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00250	48 6b c0 18	 imul	 rax, 24
  00254	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0025d	83 e0 07	 and	 eax, 7
  00260	83 f8 02	 cmp	 eax, 2
  00263	75 23		 jne	 SHORT $LN7@simple_vm_
; Line 436
  00265	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00271	48 6b c0 18	 imul	 rax, 24
  00275	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0027a	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00280	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00286	eb 62		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 438
  00288	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00294	48 6b c0 18	 imul	 rax, 24
  00298	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0029d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a1	83 e0 07	 and	 eax, 7
  002a4	83 f8 03	 cmp	 eax, 3
  002a7	75 41		 jne	 SHORT $LN5@simple_vm_
; Line 439
  002a9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_string_size
  002b3	44 8b c8	 mov	 r9d, eax
  002b6	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002bb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82660
  002c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ca	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 440
  002cf	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 441
  002e5	e9 9f 00 00 00	 jmp	 $LN18@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 443
  002ea	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fb	e8 00 00 00 00	 call	 simple_string_delete_gc
  00300	eb 34		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 445
  00302	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00307	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030e	48 6b c0 18	 imul	 rax, 24
  00312	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00317	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0031b	83 e0 07	 and	 eax, 7
  0031e	83 f8 03	 cmp	 eax, 3
  00321	75 13		 jne	 SHORT $LN3@simple_vm_
; Line 446
  00323	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82663
  0032a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0032f	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 447
  00334	eb 53		 jmp	 SHORT $LN18@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 450
  00336	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0033c	66 0f 2f 44 24
	20		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  00342	76 26		 jbe	 SHORT $LN2@simple_vm_
; Line 451
  00344	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00349	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00350	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00355	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00359	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00361	8b d0		 mov	 edx, eax
  00363	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 452
  00368	eb 1f		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 453
  0036a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0036f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00376	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0037f	0f 57 d2	 xorps	 xmm2, xmm2
  00382	8b d0		 mov	 edx, eax
  00384	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN18@simple_vm_:
; Line 455
  00389	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0038d	c3		 ret	 0
simple_vm_less ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nNum2$ = 32
string_one$ = 40
nNum1$ = 48
vm$ = 80
simple_vm_lessequal PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 364
$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 365
  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
  00012	0f 57 c0	 xorps	 xmm0, xmm0
  00015	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 367
  0001b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00020	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00027	48 6b c0 18	 imul	 rax, 24
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00034	83 e0 07	 and	 eax, 7
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 85 13 01 00
	00		 jne	 $LN17@simple_vm_
; Line 368
  00040	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00045	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0004c	48 6b c0 18	 imul	 rax, 24
  00050	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00055	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 369
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00066	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0006d	fe c8		 dec	 al
  0006f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00074	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 370
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00086	48 6b c0 18	 imul	 rax, 24
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0008f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00093	83 e0 07	 and	 eax, 7
  00096	83 f8 02	 cmp	 eax, 2
  00099	75 26		 jne	 SHORT $LN16@simple_vm_
; Line 371
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000a7	48 6b c0 18	 imul	 rax, 24
  000ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000b0	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  000b6	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  000bc	e9 8d 00 00 00	 jmp	 $LN15@simple_vm_
$LN16@simple_vm_:
; Line 373
  000c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000cd	48 6b c0 18	 imul	 rax, 24
  000d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d6	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000da	83 e0 07	 and	 eax, 7
  000dd	83 f8 01	 cmp	 eax, 1
  000e0	75 2f		 jne	 SHORT $LN14@simple_vm_
; Line 374
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000fc	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00104	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00109	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0010f	eb 3d		 jmp	 SHORT $LN13@simple_vm_
$LN14@simple_vm_:
; Line 376
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00116	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0011d	48 6b c0 18	 imul	 rax, 24
  00121	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00126	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0012a	83 e0 07	 and	 eax, 7
  0012d	83 f8 03	 cmp	 eax, 3
  00130	75 1c		 jne	 SHORT $LN12@simple_vm_
; Line 377
  00132	f2 0f 10 54 24
	30		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00138	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82626
  0013f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00144	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 378
  00149	e9 3b 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
$LN13@simple_vm_:
$LN15@simple_vm_:
; Line 379
  0014e	e9 e3 01 00 00	 jmp	 $LN11@simple_vm_
$LN17@simple_vm_:
; Line 381
  00153	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 6b c0 18	 imul	 rax, 24
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0016c	83 e0 07	 and	 eax, 7
  0016f	83 f8 01	 cmp	 eax, 1
  00172	0f 85 8a 01 00
	00		 jne	 $LN10@simple_vm_
; Line 382
  00178	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00184	48 6b c0 18	 imul	 rax, 24
  00188	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0018d	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00192	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00195	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0019a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a1	e8 00 00 00 00	 call	 simple_string_new_gc
  001a6	48 89 44 24 28	 mov	 QWORD PTR string_one$[rsp], rax
; Line 383
  001ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b7	48 6b c0 18	 imul	 rax, 24
  001bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c0	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  001c5	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001cd	e8 00 00 00 00	 call	 simple_vm_stringtonum
  001d2	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 384
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e4	fe c8		 dec	 al
  001e6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001eb	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 385
  001f1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fd	48 6b c0 18	 imul	 rax, 24
  00201	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00206	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0020a	83 e0 07	 and	 eax, 7
  0020d	83 f8 01	 cmp	 eax, 1
  00210	75 32		 jne	 SHORT $LN9@simple_vm_
; Line 386
  00212	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00217	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0021e	48 6b c0 18	 imul	 rax, 24
  00222	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00227	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0022c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0022f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00234	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00239	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  0023f	e9 a6 00 00 00	 jmp	 $LN8@simple_vm_
$LN9@simple_vm_:
; Line 388
  00244	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00249	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00250	48 6b c0 18	 imul	 rax, 24
  00254	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00259	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0025d	83 e0 07	 and	 eax, 7
  00260	83 f8 02	 cmp	 eax, 2
  00263	75 23		 jne	 SHORT $LN7@simple_vm_
; Line 389
  00265	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00271	48 6b c0 18	 imul	 rax, 24
  00275	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0027a	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  00280	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
  00286	eb 62		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 391
  00288	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0028d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00294	48 6b c0 18	 imul	 rax, 24
  00298	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0029d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  002a1	83 e0 07	 and	 eax, 7
  002a4	83 f8 03	 cmp	 eax, 3
  002a7	75 41		 jne	 SHORT $LN5@simple_vm_
; Line 392
  002a9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_string_size
  002b3	44 8b c8	 mov	 r9d, eax
  002b6	48 8b 44 24 28	 mov	 rax, QWORD PTR string_one$[rsp]
  002bb	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82634
  002c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ca	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 393
  002cf	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e0	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 394
  002e5	e9 9f 00 00 00	 jmp	 $LN18@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 396
  002ea	48 8b 54 24 28	 mov	 rdx, QWORD PTR string_one$[rsp]
  002ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fb	e8 00 00 00 00	 call	 simple_string_delete_gc
  00300	eb 34		 jmp	 SHORT $LN4@simple_vm_
$LN10@simple_vm_:
; Line 398
  00302	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00307	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0030e	48 6b c0 18	 imul	 rax, 24
  00312	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00317	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0031b	83 e0 07	 and	 eax, 7
  0031e	83 f8 03	 cmp	 eax, 3
  00321	75 13		 jne	 SHORT $LN3@simple_vm_
; Line 399
  00323	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82637
  0032a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0032f	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
; Line 400
  00334	eb 53		 jmp	 SHORT $LN18@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN11@simple_vm_:
; Line 403
  00336	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  0033c	66 0f 2f 44 24
	20		 comisd	 xmm0, QWORD PTR nNum2$[rsp]
  00342	72 26		 jb	 SHORT $LN2@simple_vm_
; Line 404
  00344	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00349	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00350	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00355	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00359	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00361	8b d0		 mov	 edx, eax
  00363	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 405
  00368	eb 1f		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 406
  0036a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0036f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00376	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0037b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0037f	0f 57 d2	 xorps	 xmm2, xmm2
  00382	8b d0		 mov	 edx, eax
  00384	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN1@simple_vm_:
$LN18@simple_vm_:
; Line 408
  00389	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0038d	c3		 ret	 0
simple_vm_lessequal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string_one$ = 32
nNum1$ = 40
cStr2$ = 48
nNum2$ = 56
cStr3$ = 64
__$ArrayPad$ = 176
vm$ = 208
simple_vm_equal PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmexpr.c
; Line 303
$LN26:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 307
  0001e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00026	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002d	48 6b c0 18	 imul	 rax, 24
  00031	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00039	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0003d	83 e0 07	 and	 eax, 7
  00040	83 f8 01	 cmp	 eax, 1
  00043	0f 85 a9 02 00
	00		 jne	 $LN23@simple_vm_
; Line 308
  00049	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	48 6b c0 18	 imul	 rax, 24
  0005c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00064	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00069	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0006c	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00074	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007b	e8 00 00 00 00	 call	 simple_string_new_gc
  00080	48 89 44 24 20	 mov	 QWORD PTR string_one$[rsp], rax
; Line 309
  00085	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00094	fe c8		 dec	 al
  00096	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0009e	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 310
  000a4	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ac	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b3	48 6b c0 18	 imul	 rax, 24
  000b7	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000bf	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000c3	83 e0 07	 and	 eax, 7
  000c6	83 f8 01	 cmp	 eax, 1
  000c9	0f 85 c4 00 00
	00		 jne	 $LN22@simple_vm_
; Line 311
  000cf	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000d7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000de	48 6b c0 18	 imul	 rax, 24
  000e2	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  000ea	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000ef	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000f2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00101	e8 00 00 00 00	 call	 simple_string_new_gc
  00106	48 89 44 24 30	 mov	 QWORD PTR cStr2$[rsp], rax
; Line 312
  0010b	48 8b 44 24 30	 mov	 rax, QWORD PTR cStr2$[rsp]
  00110	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00113	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  00118	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0011b	e8 00 00 00 00	 call	 strcmp
  00120	85 c0		 test	 eax, eax
  00122	75 2c		 jne	 SHORT $LN21@simple_vm_
; Line 313
  00124	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0012c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00133	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0013b	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0013f	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00147	8b d0		 mov	 edx, eax
  00149	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 314
  0014e	eb 25		 jmp	 SHORT $LN20@simple_vm_
$LN21@simple_vm_:
; Line 315
  00150	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00158	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0015f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00167	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0016b	0f 57 d2	 xorps	 xmm2, xmm2
  0016e	8b d0		 mov	 edx, eax
  00170	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN20@simple_vm_:
; Line 317
  00175	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr2$[rsp]
  0017a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00182	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00189	e8 00 00 00 00	 call	 simple_string_delete_gc
  0018e	e9 41 01 00 00	 jmp	 $LN19@simple_vm_
$LN22@simple_vm_:
; Line 319
  00193	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0019b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a2	48 6b c0 18	 imul	 rax, 24
  001a6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001ae	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001b2	83 e0 07	 and	 eax, 7
  001b5	83 f8 02	 cmp	 eax, 2
  001b8	0f 85 a8 00 00
	00		 jne	 $LN18@simple_vm_
; Line 320
  001be	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001c6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001cd	48 6b c0 18	 imul	 rax, 24
  001d1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001d9	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  001df	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 321
  001e5	4c 8d 44 24 40	 lea	 r8, QWORD PTR cStr3$[rsp]
  001ea	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR nNum1$[rsp]
  001f0	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001f8	e8 00 00 00 00	 call	 simple_vm_numtostring
; Line 322
  001fd	48 8d 54 24 40	 lea	 rdx, QWORD PTR cStr3$[rsp]
  00202	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  00207	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0020a	e8 00 00 00 00	 call	 strcmp
  0020f	85 c0		 test	 eax, eax
  00211	75 2c		 jne	 SHORT $LN17@simple_vm_
; Line 323
  00213	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00222	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0022a	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0022e	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00236	8b d0		 mov	 edx, eax
  00238	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 324
  0023d	eb 25		 jmp	 SHORT $LN16@simple_vm_
$LN17@simple_vm_:
; Line 325
  0023f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00247	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0024e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00256	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0025a	0f 57 d2	 xorps	 xmm2, xmm2
  0025d	8b d0		 mov	 edx, eax
  0025f	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN16@simple_vm_:
; Line 326
  00264	eb 6e		 jmp	 SHORT $LN15@simple_vm_
$LN18@simple_vm_:
; Line 328
  00266	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0026e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00275	48 6b c0 18	 imul	 rax, 24
  00279	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00281	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00285	83 e0 07	 and	 eax, 7
  00288	83 f8 03	 cmp	 eax, 3
  0028b	75 47		 jne	 SHORT $LN14@simple_vm_
; Line 329
  0028d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR string_one$[rsp]
  00292	e8 00 00 00 00	 call	 simple_string_size
  00297	44 8b c8	 mov	 r9d, eax
  0029a	48 8b 44 24 20	 mov	 rax, QWORD PTR string_one$[rsp]
  0029f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  002a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82598
  002a9	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  002b1	e8 00 00 00 00	 call	 simple_vm_expr_spoo
; Line 330
  002b6	48 8b 54 24 20	 mov	 rdx, QWORD PTR string_one$[rsp]
  002bb	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002c3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002ca	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 331
  002cf	e9 7f 02 00 00	 jmp	 $LN24@simple_vm_
$LN14@simple_vm_:
$LN15@simple_vm_:
$LN19@simple_vm_:
; Line 333
  002d4	48 8b 54 24 20	 mov	 rdx, QWORD PTR string_one$[rsp]
  002d9	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002e1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002e8	e8 00 00 00 00	 call	 simple_string_delete_gc
  002ed	e9 61 02 00 00	 jmp	 $LN13@simple_vm_
$LN23@simple_vm_:
; Line 335
  002f2	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002fa	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00301	48 6b c0 18	 imul	 rax, 24
  00305	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0030d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00311	83 e0 07	 and	 eax, 7
  00314	83 f8 02	 cmp	 eax, 2
  00317	0f 85 fb 01 00
	00		 jne	 $LN12@simple_vm_
; Line 336
  0031d	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00325	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0032c	48 6b c0 18	 imul	 rax, 24
  00330	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00338	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  0033e	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR nNum1$[rsp], xmm0
; Line 337
  00344	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0034c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00353	fe c8		 dec	 al
  00355	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0035d	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 338
  00363	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0036b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00372	48 6b c0 18	 imul	 rax, 24
  00376	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0037e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00382	83 e0 07	 and	 eax, 7
  00385	83 f8 02	 cmp	 eax, 2
  00388	0f 85 8d 00 00
	00		 jne	 $LN11@simple_vm_
; Line 339
  0038e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00396	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0039d	48 6b c0 18	 imul	 rax, 24
  003a1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003a9	f2 0f 10 44 01
	38		 movsdx	 xmm0, QWORD PTR [rcx+rax+56]
  003af	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR nNum2$[rsp], xmm0
; Line 340
  003b5	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR nNum1$[rsp]
  003bb	66 0f 2e 44 24
	38		 ucomisd xmm0, QWORD PTR nNum2$[rsp]
  003c1	7a 2e		 jp	 SHORT $LN10@simple_vm_
  003c3	75 2c		 jne	 SHORT $LN10@simple_vm_
; Line 341
  003c5	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003cd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003d4	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003dc	48 83 c1 30	 add	 rcx, 48			; 00000030H
  003e0	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  003e8	8b d0		 mov	 edx, eax
  003ea	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 342
  003ef	eb 25		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 343
  003f1	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003f9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00400	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00408	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0040c	0f 57 d2	 xorps	 xmm2, xmm2
  0040f	8b d0		 mov	 edx, eax
  00411	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN9@simple_vm_:
; Line 344
  00416	e9 fb 00 00 00	 jmp	 $LN8@simple_vm_
$LN11@simple_vm_:
; Line 346
  0041b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00423	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0042a	48 6b c0 18	 imul	 rax, 24
  0042e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00436	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0043a	83 e0 07	 and	 eax, 7
  0043d	83 f8 01	 cmp	 eax, 1
  00440	0f 85 8d 00 00
	00		 jne	 $LN7@simple_vm_
; Line 347
  00446	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0044e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00455	48 6b c0 18	 imul	 rax, 24
  00459	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00461	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00466	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00469	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00471	e8 00 00 00 00	 call	 simple_vm_stringtonum
  00476	66 0f 2e 44 24
	28		 ucomisd xmm0, QWORD PTR nNum1$[rsp]
  0047c	7a 2e		 jp	 SHORT $LN6@simple_vm_
  0047e	75 2c		 jne	 SHORT $LN6@simple_vm_
; Line 348
  00480	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00488	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0048f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00497	48 83 c1 30	 add	 rcx, 48			; 00000030H
  0049b	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  004a3	8b d0		 mov	 edx, eax
  004a5	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 349
  004aa	eb 25		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 350
  004ac	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004b4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004bb	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004c3	48 83 c1 30	 add	 rcx, 48			; 00000030H
  004c7	0f 57 d2	 xorps	 xmm2, xmm2
  004ca	8b d0		 mov	 edx, eax
  004cc	e8 00 00 00 00	 call	 simple_itemarray_setdouble
$LN5@simple_vm_:
; Line 351
  004d1	eb 43		 jmp	 SHORT $LN4@simple_vm_
$LN7@simple_vm_:
; Line 353
  004d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  004db	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004e2	48 6b c0 18	 imul	 rax, 24
  004e6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  004ee	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  004f2	83 e0 07	 and	 eax, 7
  004f5	83 f8 03	 cmp	 eax, 3
  004f8	75 1c		 jne	 SHORT $LN3@simple_vm_
; Line 354
  004fa	f2 0f 10 54 24
	28		 movsdx	 xmm2, QWORD PTR nNum1$[rsp]
  00500	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82610
  00507	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0050f	e8 00 00 00 00	 call	 simple_vm_expr_npoo
; Line 355
  00514	eb 3d		 jmp	 SHORT $LN24@simple_vm_
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN8@simple_vm_:
; Line 356
  00516	eb 3b		 jmp	 SHORT $LN2@simple_vm_
$LN12@simple_vm_:
; Line 358
  00518	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00520	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00527	48 6b c0 18	 imul	 rax, 24
  0052b	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00533	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00537	83 e0 07	 and	 eax, 7
  0053a	83 f8 03	 cmp	 eax, 3
  0053d	75 14		 jne	 SHORT $LN1@simple_vm_
; Line 359
  0053f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82613
  00546	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0054e	e8 00 00 00 00	 call	 simple_vm_expr_ppoo
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN13@simple_vm_:
$LN24@simple_vm_:
; Line 361
  00553	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0055b	48 33 cc	 xor	 rcx, rsp
  0055e	e8 00 00 00 00	 call	 __security_check_cookie
  00563	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  0056a	c3		 ret	 0
simple_vm_equal ENDP
_TEXT	ENDS
END
