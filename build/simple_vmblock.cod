; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82501 DB	01H DUP (?)
$SG82504 DB	01H DUP (?)
$SG82507 DB	01H DUP (?)
$SG82511 DB	01H DUP (?)
$SG82539 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82456 DB	'RUNTIME ERROR 24 : Private blocks is inaccesible from ou'
	DB	'tside class ', 00H
	ORG $+3
$SG82460 DB	'main', 00H
	ORG $+3
$SG82462 DB	'RUNTIME ERROR 24 : Calling Block without definition ', 00H
	ORG $+3
$SG82468 DB	'main', 00H
	ORG $+3
$SG82469 DB	'RUNTIME ERROR 2 : Calling Block without definition ', 00H
$SG82535 DB	'main', 00H
	ORG $+7
$SG82559 DB	'RUNTIME ERROR 24 : Calling block with less parameters!', 00H
	ORG $+1
$SG82561 DB	'RUNTIME ERROR 24 : Calling block with extra parameters!', 00H
$SG82591 DB	'simple_sys_temp', 00H
$SG82597 DB	'simple_sys_temp', 00H
$SG82611 DB	'RUNTIME ERROR 24 : The CALL command expect a variable co'
	DB	'ntains string', 00H
_DATA	ENDS
PUBLIC	simple_vm_loadblock
PUBLIC	simple_vm_loadblock2
PUBLIC	simple_vm_call
PUBLIC	simple_vm_call2
PUBLIC	simple_vm_return
PUBLIC	simple_vm_returnnull
PUBLIC	simple_vm_newblock
PUBLIC	simple_vm_blockflag
PUBLIC	simple_vm_blockflag2
PUBLIC	simple_vm_removeblockflag
PUBLIC	simple_vm_movetoprevscope
PUBLIC	simple_vm_createtemlist
PUBLIC	simple_vm_saveloadaddressscope
PUBLIC	simple_vm_restoreloadaddressscope
PUBLIC	simple_vm_anonymous
PUBLIC	simple_vm_isstackpointertoobjstate
EXTRN	strcmp:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_item_setpointer_gc:PROC
EXTRN	simple_item_setint_gc:PROC
EXTRN	simple_itemarray_setpointer:PROC
EXTRN	simple_itemarray_setstring:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_addpointer_gc:PROC
EXTRN	simple_list_addblockpointer_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_newlist_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_copy_gc:PROC
EXTRN	simple_list_islist:PROC
EXTRN	simple_list_deleteallitems_gc:PROC
EXTRN	simple_list_genhashtable2_gc:PROC
EXTRN	simple_hashtable_findpointer:PROC
EXTRN	simple_vm_error:PROC
EXTRN	simple_vm_error2:PROC
EXTRN	simple_vm_newbytecodeitem:PROC
EXTRN	simple_vm_mainloop:PROC
EXTRN	simple_vm_newscope:PROC
EXTRN	simple_vm_newvar2:PROC
EXTRN	simple_vm_addnewnumbervar:PROC
EXTRN	simple_vm_deletescope:PROC
EXTRN	simple_vm_addnewpointervar:PROC
EXTRN	simple_vm_newtempvar:PROC
EXTRN	simple_vm_addnewstringvar2:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_callmethodinsideclass:PROC
EXTRN	simple_vm_oop_callmethodfrombrace:PROC
EXTRN	simple_vm_oop_updateselfpointer:PROC
EXTRN	simple_vm_oop_setthethisvariable:PROC
EXTRN	exit_simple_vm:PROC
EXTRN	simple_vm_backstate:PROC
EXTRN	simple_vm_savestate2:PROC
EXTRN	simple_vm_restorestate2:PROC
EXTRN	simple_vm_traceevent:PROC
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_loadblock DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$simple_vm_loadblock
$pdata$simple_vm_loadblock2 DD imagerel $LN24
	DD	imagerel $LN24+2006
	DD	imagerel $unwind$simple_vm_loadblock2
$pdata$simple_vm_call DD imagerel $LN6
	DD	imagerel $LN6+245
	DD	imagerel $unwind$simple_vm_call
$pdata$simple_vm_call2 DD imagerel $LN27
	DD	imagerel $LN27+1646
	DD	imagerel $unwind$simple_vm_call2
$pdata$simple_vm_return DD imagerel $LN15
	DD	imagerel $LN15+728
	DD	imagerel $unwind$simple_vm_return
$pdata$simple_vm_returnnull DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$simple_vm_returnnull
$pdata$simple_vm_newblock DD imagerel $LN15
	DD	imagerel $LN15+749
	DD	imagerel $unwind$simple_vm_newblock
$pdata$simple_vm_blockflag DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$simple_vm_blockflag
$pdata$simple_vm_blockflag2 DD imagerel $LN3
	DD	imagerel $LN3+217
	DD	imagerel $unwind$simple_vm_blockflag2
$pdata$simple_vm_removeblockflag DD imagerel $LN3
	DD	imagerel $LN3+265
	DD	imagerel $unwind$simple_vm_removeblockflag
$pdata$simple_vm_movetoprevscope DD imagerel $LN11
	DD	imagerel $LN11+546
	DD	imagerel $unwind$simple_vm_movetoprevscope
$pdata$simple_vm_createtemlist DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$simple_vm_createtemlist
$pdata$simple_vm_saveloadaddressscope DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$simple_vm_saveloadaddressscope
$pdata$simple_vm_restoreloadaddressscope DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$simple_vm_restoreloadaddressscope
$pdata$simple_vm_anonymous DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$simple_vm_anonymous
$pdata$simple_vm_isstackpointertoobjstate DD imagerel $LN6
	DD	imagerel $LN6+84
	DD	imagerel $unwind$simple_vm_isstackpointertoobjstate
pdata	ENDS
xdata	SEGMENT
$unwind$simple_vm_loadblock DD 010901H
	DD	04209H
$unwind$simple_vm_loadblock2 DD 011301H
	DD	08213H
$unwind$simple_vm_call DD 010901H
	DD	06209H
$unwind$simple_vm_call2 DD 010901H
	DD	08209H
$unwind$simple_vm_return DD 010901H
	DD	06209H
$unwind$simple_vm_returnnull DD 010901H
	DD	04209H
$unwind$simple_vm_newblock DD 010901H
	DD	06209H
$unwind$simple_vm_blockflag DD 010901H
	DD	04209H
$unwind$simple_vm_blockflag2 DD 010d01H
	DD	0620dH
$unwind$simple_vm_removeblockflag DD 010901H
	DD	06209H
$unwind$simple_vm_movetoprevscope DD 010901H
	DD	08209H
$unwind$simple_vm_createtemlist DD 010901H
	DD	06209H
$unwind$simple_vm_saveloadaddressscope DD 010901H
	DD	04209H
$unwind$simple_vm_restoreloadaddressscope DD 010901H
	DD	04209H
$unwind$simple_vm_anonymous DD 010901H
	DD	06209H
$unwind$simple_vm_isstackpointertoobjstate DD 010901H
	DD	06209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nScope$ = 32
vm$ = 64
simple_vm_isstackpointertoobjstate PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 569
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 572
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 19
	00 00		 mov	 rax, QWORD PTR [rax+6488]
  00015	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00019	7c 32		 jl	 SHORT $LN3@simple_vm_
; Line 573
  0001b	ba 01 00 00 00	 mov	 edx, 1
  00020	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00025	48 8b 88 58 19
	00 00		 mov	 rcx, QWORD PTR [rax+6488]
  0002c	e8 00 00 00 00	 call	 simple_list_getitem
  00031	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00034	89 44 24 20	 mov	 DWORD PTR nScope$[rsp], eax
; Line 574
  00038	83 7c 24 20 02	 cmp	 DWORD PTR nScope$[rsp], 2
  0003d	74 07		 je	 SHORT $LN1@simple_vm_
  0003f	83 7c 24 20 03	 cmp	 DWORD PTR nScope$[rsp], 3
  00044	75 07		 jne	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 575
  00046	b8 01 00 00 00	 mov	 eax, 1
  0004b	eb 02		 jmp	 SHORT $LN4@simple_vm_
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 578
  0004d	33 c0		 xor	 eax, eax
$LN4@simple_vm_:
; Line 579
  0004f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00053	c3		 ret	 0
simple_vm_isstackpointertoobjstate ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr$ = 32
vm$ = 64
simple_vm_anonymous PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 556
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 558
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	83 e0 07	 and	 eax, 7
  00025	83 f8 01	 cmp	 eax, 1
  00028	75 4f		 jne	 SHORT $LN2@simple_vm_
; Line 559
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00036	48 6b c0 18	 imul	 rax, 24
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 44 24 20	 mov	 QWORD PTR cStr$[rsp], rax
; Line 560
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00051	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00058	fe c8		 dec	 al
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0005f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 561
  00065	45 33 c0	 xor	 r8d, r8d
  00068	48 8b 54 24 20	 mov	 rdx, QWORD PTR cStr$[rsp]
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00072	e8 00 00 00 00	 call	 simple_vm_loadblock2
; Line 563
  00077	eb 11		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 564
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82611
  00080	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00085	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
; Line 566
  0008a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0008e	c3		 ret	 0
simple_vm_anonymous ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_restoreloadaddressscope PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 549
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 550
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  00015	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 551
  00026	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002b	48 8b 80 68 19
	00 00		 mov	 rax, QWORD PTR [rax+6504]
  00032	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003a	48 8b 88 68 19
	00 00		 mov	 rcx, QWORD PTR [rax+6504]
  00041	e8 00 00 00 00	 call	 simple_list_getitem
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 81 58 19
	00 00		 mov	 QWORD PTR [rcx+6488], rax
; Line 552
  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0005b	48 8b 80 68 19
	00 00		 mov	 rax, QWORD PTR [rax+6504]
  00062	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00066	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0006b	48 8b 90 68 19
	00 00		 mov	 rdx, QWORD PTR [rax+6504]
  00072	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00077	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0007e	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 553
  00083	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00087	c3		 ret	 0
simple_vm_restoreloadaddressscope ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_saveloadaddressscope PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 543
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 544
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	4c 8b 80 58 19
	00 00		 mov	 r8, QWORD PTR [rax+6488]
  00015	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 90 68 19
	00 00		 mov	 rdx, QWORD PTR [rax+6504]
  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00026	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0002d	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 545
  00032	33 d2		 xor	 edx, edx
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00039	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00040	e8 00 00 00 00	 call	 simple_list_new_gc
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0004a	48 89 81 58 19
	00 00		 mov	 QWORD PTR [rcx+6488], rax
; Line 546
  00051	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00055	c3		 ret	 0
simple_vm_saveloadaddressscope ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_createtemlist PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 530
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 537
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 538
  0002e	ba 05 00 00 00	 mov	 edx, 5
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00038	e8 00 00 00 00	 call	 simple_list_getlist
  0003d	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 539
  00042	4c 8b 44 24 20	 mov	 r8, QWORD PTR list$[rsp]
  00047	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82597
  0004e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00053	e8 00 00 00 00	 call	 simple_vm_newtempvar
; Line 540
  00058	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005c	c3		 ret	 0
simple_vm_createtemlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
list2$ = 40
list3$ = 48
pItem$ = 56
vm$ = 80
simple_vm_movetoprevscope PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 489
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 496
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  00015	83 78 10 02	 cmp	 DWORD PTR [rax+16], 2
  00019	7d 05		 jge	 SHORT $LN8@simple_vm_
; Line 497
  0001b	e9 fd 01 00 00	 jmp	 $LN9@simple_vm_
$LN8@simple_vm_:
; Line 500
  00020	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00025	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002c	48 6b c0 18	 imul	 rax, 24
  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00035	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00039	c1 e8 05	 shr	 eax, 5
  0003c	83 e0 03	 and	 eax, 3
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 4f		 jne	 SHORT $LN7@simple_vm_
; Line 501
  00044	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00049	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00050	48 6b c0 18	 imul	 rax, 24
  00054	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00059	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  0005e	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 502
  00063	ba 03 00 00 00	 mov	 edx, 3
  00068	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_islist
  00072	85 c0		 test	 eax, eax
  00074	74 16		 je	 SHORT $LN6@simple_vm_
; Line 503
  00076	ba 03 00 00 00	 mov	 edx, 3
  0007b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00080	e8 00 00 00 00	 call	 simple_list_getlist
  00085	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 504
  0008a	eb 05		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 505
  0008c	e9 8c 01 00 00	 jmp	 $LN9@simple_vm_
$LN5@simple_vm_:
; Line 506
  00091	eb 58		 jmp	 SHORT $LN4@simple_vm_
$LN7@simple_vm_:
; Line 508
  00093	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00098	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009f	48 6b c0 18	 imul	 rax, 24
  000a3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000a8	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000ac	c1 e8 05	 shr	 eax, 5
  000af	83 e0 03	 and	 eax, 3
  000b2	83 f8 02	 cmp	 eax, 2
  000b5	75 2f		 jne	 SHORT $LN3@simple_vm_
; Line 509
  000b7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000bc	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c3	48 6b c0 18	 imul	 rax, 24
  000c7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000cc	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000d1	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 510
  000d6	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  000db	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000df	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 511
  000e4	eb 05		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 512
  000e6	e9 32 01 00 00	 jmp	 $LN9@simple_vm_
$LN2@simple_vm_:
$LN4@simple_vm_:
; Line 514
  000eb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f0	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  000f7	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000fa	ff c8		 dec	 eax
  000fc	8b d0		 mov	 edx, eax
  000fe	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00103	48 8b 88 38 18
	00 00		 mov	 rcx, QWORD PTR [rax+6200]
  0010a	e8 00 00 00 00	 call	 simple_list_getlist
  0010f	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 515
  00114	4c 8b 44 24 28	 mov	 r8, QWORD PTR list2$[rsp]
  00119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82591
  00120	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00125	e8 00 00 00 00	 call	 simple_vm_newvar2
  0012a	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 516
  0012f	41 b9 03 00 00
	00		 mov	 r9d, 3
  00135	41 b8 02 00 00
	00		 mov	 r8d, 2
  0013b	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  00140	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00145	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0014c	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 517
  00151	41 b8 03 00 00
	00		 mov	 r8d, 3
  00157	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  0015c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00161	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00168	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 518
  0016d	ba 03 00 00 00	 mov	 edx, 3
  00172	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  00177	e8 00 00 00 00	 call	 simple_list_getlist
  0017c	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 520
  00181	4c 8b 44 24 20	 mov	 r8, QWORD PTR list$[rsp]
  00186	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0018b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00190	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00197	e8 00 00 00 00	 call	 simple_list_copy_gc
; Line 522
  0019c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  001a1	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  001a6	85 c0		 test	 eax, eax
  001a8	74 1a		 je	 SHORT $LN1@simple_vm_
; Line 523
  001aa	4c 8b 4c 24 30	 mov	 r9, QWORD PTR list3$[rsp]
  001af	41 b8 01 00 00
	00		 mov	 r8d, 1
  001b5	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  001ba	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001bf	e8 00 00 00 00	 call	 simple_vm_oop_updateselfpointer
$LN1@simple_vm_:
; Line 525
  001c4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001c9	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001d0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d5	48 83 c1 30	 add	 rcx, 48			; 00000030H
  001d9	4c 8b 44 24 30	 mov	 r8, QWORD PTR list3$[rsp]
  001de	8b d0		 mov	 edx, eax
  001e0	e8 00 00 00 00	 call	 simple_itemarray_setpointer
; Line 526
  001e5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001ea	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001f1	48 6b c0 18	 imul	 rax, 24
  001f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001fa	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001fe	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00201	83 c8 20	 or	 eax, 32			; 00000020H
  00204	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00209	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00210	48 6b c9 18	 imul	 rcx, 24
  00214	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00219	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
$LN9@simple_vm_:
; Line 527
  0021d	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00221	c3		 ret	 0
simple_vm_movetoprevscope ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_removeblockflag PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 476
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 478
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 80 18
	00 00		 mov	 rax, QWORD PTR [rax+6272]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 80 18
	00 00		 mov	 rcx, QWORD PTR [rax+6272]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 479
  0002e	ba 01 00 00 00	 mov	 edx, 1
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00038	e8 00 00 00 00	 call	 simple_list_getitem
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00042	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00045	89 01		 mov	 DWORD PTR [rcx], eax
; Line 480
  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004c	8b 80 78 18 00
	00		 mov	 eax, DWORD PTR [rax+6264]
  00052	ff c8		 dec	 eax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00059	89 81 78 18 00
	00		 mov	 DWORD PTR [rcx+6264], eax
; Line 482
  0005f	ba 02 00 00 00	 mov	 edx, 2
  00064	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00069	e8 00 00 00 00	 call	 simple_list_getitem
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00073	4c 8b 81 a0 18
	00 00		 mov	 r8, QWORD PTR [rcx+6304]
  0007a	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00082	e8 00 00 00 00	 call	 simple_vm_backstate
; Line 483
  00087	ba 03 00 00 00	 mov	 edx, 3
  0008c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00091	e8 00 00 00 00	 call	 simple_list_getitem
  00096	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	4c 8b 81 a8 18
	00 00		 mov	 r8, QWORD PTR [rcx+6312]
  000a2	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  000a5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000aa	e8 00 00 00 00	 call	 simple_vm_backstate
; Line 484
  000af	ba 04 00 00 00	 mov	 edx, 4
  000b4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000b9	e8 00 00 00 00	 call	 simple_list_getitem
  000be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000c3	4c 8b 81 b8 18
	00 00		 mov	 r8, QWORD PTR [rcx+6328]
  000ca	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  000cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d2	e8 00 00 00 00	 call	 simple_vm_backstate
; Line 485
  000d7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000dc	48 8b 80 80 18
	00 00		 mov	 rax, QWORD PTR [rax+6272]
  000e3	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  000e7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ec	48 8b 90 80 18
	00 00		 mov	 rdx, QWORD PTR [rax+6272]
  000f3	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000f8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ff	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 486
  00104	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00108	c3		 ret	 0
simple_vm_removeblockflag ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
x$ = 72
simple_vm_blockflag2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 464
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 466
  0000d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00012	8b 80 78 18 00
	00		 mov	 eax, DWORD PTR [rax+6264]
  00018	ff c0		 inc	 eax
  0001a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001f	89 81 78 18 00
	00		 mov	 DWORD PTR [rcx+6264], eax
; Line 467
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002a	48 8b 90 80 18
	00 00		 mov	 rdx, QWORD PTR [rax+6272]
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00036	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0003d	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00042	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 468
  00047	44 8b 44 24 48	 mov	 r8d, DWORD PTR x$[rsp]
  0004c	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00056	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0005d	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 470
  00062	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00067	48 8b 80 a0 18
	00 00		 mov	 rax, QWORD PTR [rax+6304]
  0006e	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00072	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  00077	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0007c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00083	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 471
  00088	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	48 8b 80 a8 18
	00 00		 mov	 rax, QWORD PTR [rax+6312]
  00094	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00098	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000a2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a9	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 472
  000ae	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b3	48 8b 80 b8 18
	00 00		 mov	 rax, QWORD PTR [rax+6328]
  000ba	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  000be	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000c3	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000cf	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 473
  000d4	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d8	c3		 ret	 0
simple_vm_blockflag2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_blockflag PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 459
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 460
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0002a	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 461
  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
simple_vm_blockflag ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nsp$ = 36
list$ = 40
vm$ = 64
simple_vm_newblock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 418
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 422
  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0000e	e8 00 00 00 00	 call	 simple_vm_newscope
; Line 424
  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00018	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  0001f	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00027	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  0002e	e8 00 00 00 00	 call	 simple_list_getlist
  00033	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 426
  00038	ba 04 00 00 00	 mov	 edx, 4
  0003d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00042	e8 00 00 00 00	 call	 simple_list_getitem
  00047	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0004a	89 44 24 24	 mov	 DWORD PTR nsp$[rsp], eax
; Line 427
  0004e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00053	8b 4c 24 24	 mov	 ecx, DWORD PTR nsp$[rsp]
  00057	89 88 90 18 00
	00		 mov	 DWORD PTR [rax+6288], ecx
; Line 428
  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00062	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00069	0f be 80 c0 00
	00 00		 movsx	 eax, BYTE PTR [rax+192]
  00070	83 f8 02	 cmp	 eax, 2
  00073	0f 8e 36 02 00
	00		 jle	 $LN12@simple_vm_
; Line 429
  00079	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0007e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00085	0f be 80 c0 00
	00 00		 movsx	 eax, BYTE PTR [rax+192]
  0008c	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  00090	eb 0a		 jmp	 SHORT $LN11@simple_vm_
$LN10@simple_vm_:
  00092	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00096	ff c8		 dec	 eax
  00098	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN11@simple_vm_:
  0009c	83 7c 24 20 03	 cmp	 DWORD PTR x$[rsp], 3
  000a1	0f 8c 08 02 00
	00		 jl	 $LN9@simple_vm_
; Line 430
  000a7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ac	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000b3	39 44 24 24	 cmp	 DWORD PTR nsp$[rsp], eax
  000b7	0f 8d da 01 00
	00		 jge	 $LN8@simple_vm_
; Line 431
  000bd	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c2	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c9	48 6b c0 18	 imul	 rax, 24
  000cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d2	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000d6	83 e0 07	 and	 eax, 7
  000d9	83 f8 01	 cmp	 eax, 1
  000dc	0f 85 89 00 00
	00		 jne	 $LN7@simple_vm_
; Line 432
  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ee	48 6b c0 18	 imul	 rax, 24
  000f2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f7	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  000fc	e8 00 00 00 00	 call	 simple_string_size
  00101	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00106	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0010d	48 6b c9 18	 imul	 rcx, 24
  00111	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00116	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0011b	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00120	48 8b 92 58 18
	00 00		 mov	 rdx, QWORD PTR [rdx+6232]
  00127	44 8b 44 24 20	 mov	 r8d, DWORD PTR x$[rsp]
  0012c	41 ff c8	 dec	 r8d
  0012f	4d 63 c0	 movsxd	 r8, r8d
  00132	4a 8b 14 c2	 mov	 rdx, QWORD PTR [rdx+r8*8]
  00136	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  0013a	44 8b c8	 mov	 r9d, eax
  0013d	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  00140	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00143	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00148	e8 00 00 00 00	 call	 simple_vm_addnewstringvar2
; Line 433
  0014d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00152	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00159	fe c8		 dec	 al
  0015b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00160	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00166	e9 2a 01 00 00	 jmp	 $LN6@simple_vm_
$LN7@simple_vm_:
; Line 435
  0016b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00170	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00177	48 6b c0 18	 imul	 rax, 24
  0017b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00180	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00184	83 e0 07	 and	 eax, 7
  00187	83 f8 02	 cmp	 eax, 2
  0018a	75 63		 jne	 SHORT $LN5@simple_vm_
; Line 436
  0018c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00191	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00198	48 6b c0 18	 imul	 rax, 24
  0019c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001a1	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  001a8	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  001ac	ff ca		 dec	 edx
  001ae	48 63 d2	 movsxd	 rdx, edx
  001b1	48 8b 0c d1	 mov	 rcx, QWORD PTR [rcx+rdx*8]
  001b5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  001b9	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  001be	f2 0f 10 54 02
	38		 movsdx	 xmm2, QWORD PTR [rdx+rax+56]
  001c4	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001cc	e8 00 00 00 00	 call	 simple_vm_addnewnumbervar
; Line 437
  001d1	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001d6	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001dd	fe c8		 dec	 al
  001df	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001e4	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  001ea	e9 a6 00 00 00	 jmp	 $LN4@simple_vm_
$LN5@simple_vm_:
; Line 439
  001ef	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001f4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001fb	48 6b c0 18	 imul	 rax, 24
  001ff	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00204	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00208	83 e0 07	 and	 eax, 7
  0020b	83 f8 03	 cmp	 eax, 3
  0020e	0f 85 81 00 00
	00		 jne	 $LN3@simple_vm_
; Line 440
  00214	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00219	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00220	48 6b c0 18	 imul	 rax, 24
  00224	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00229	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0022d	c1 e8 05	 shr	 eax, 5
  00230	83 e0 03	 and	 eax, 3
  00233	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00238	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  0023f	48 6b c9 18	 imul	 rcx, 24
  00243	48 8b 54 24 40	 mov	 rdx, QWORD PTR vm$[rsp]
  00248	48 8b 92 58 18
	00 00		 mov	 rdx, QWORD PTR [rdx+6232]
  0024f	44 8b 44 24 20	 mov	 r8d, DWORD PTR x$[rsp]
  00254	41 ff c8	 dec	 r8d
  00257	4d 63 c0	 movsxd	 r8, r8d
  0025a	4a 8b 14 c2	 mov	 rdx, QWORD PTR [rdx+r8*8]
  0025e	48 8b 52 08	 mov	 rdx, QWORD PTR [rdx+8]
  00262	44 8b c8	 mov	 r9d, eax
  00265	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0026a	4c 8b 44 08 38	 mov	 r8, QWORD PTR [rax+rcx+56]
  0026f	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00272	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00277	e8 00 00 00 00	 call	 simple_vm_addnewpointervar
; Line 441
  0027c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00281	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00288	fe c8		 dec	 al
  0028a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0028f	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
$LN3@simple_vm_:
$LN4@simple_vm_:
$LN6@simple_vm_:
; Line 443
  00295	eb 13		 jmp	 SHORT $LN2@simple_vm_
$LN8@simple_vm_:
; Line 444
  00297	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82559
  0029e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002a3	e8 00 00 00 00	 call	 simple_vm_error
; Line 445
  002a8	eb 05		 jmp	 SHORT $LN9@simple_vm_
$LN2@simple_vm_:
; Line 447
  002aa	e9 e3 fd ff ff	 jmp	 $LN10@simple_vm_
$LN9@simple_vm_:
$LN12@simple_vm_:
; Line 449
  002af	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002b4	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002bb	39 44 24 24	 cmp	 DWORD PTR nsp$[rsp], eax
  002bf	7d 11		 jge	 SHORT $LN1@simple_vm_
; Line 450
  002c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82561
  002c8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002cd	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
; Line 453
  002d2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002d7	e8 00 00 00 00	 call	 simple_vm_oop_setthethisvariable
; Line 455
  002dc	b2 02		 mov	 dl, 2
  002de	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002e3	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 456
  002e8	48 83 c4 38	 add	 rsp, 56			; 00000038H
  002ec	c3		 ret	 0
simple_vm_newblock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_returnnull PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 412
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 413
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	fe c0		 inc	 al
  00017	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001c	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00027	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00033	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82539
  0003e	8b d0		 mov	 edx, eax
  00040	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 414
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0004a	e8 00 00 00 00	 call	 simple_vm_return
; Line 415
  0004f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00053	c3		 ret	 0
simple_vm_returnnull ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_return PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 340
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 343
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f be 80 00 1a
	00 00		 movsx	 eax, BYTE PTR [rax+6656]
  00015	83 f8 01	 cmp	 eax, 1
  00018	7c 05		 jl	 SHORT $LN12@simple_vm_
; Line 348
  0001a	e9 b4 02 00 00	 jmp	 $LN13@simple_vm_
$LN12@simple_vm_:
; Line 351
  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00024	83 b8 78 18 00
	00 01		 cmp	 DWORD PTR [rax+6264], 1
  0002b	7c 19		 jl	 SHORT $LN11@simple_vm_
; Line 352
  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00032	e8 00 00 00 00	 call	 simple_vm_removeblockflag
; Line 354
  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	83 38 00	 cmp	 DWORD PTR [rax], 0
  0003f	74 05		 je	 SHORT $LN10@simple_vm_
; Line 355
  00041	e9 8d 02 00 00	 jmp	 $LN13@simple_vm_
$LN10@simple_vm_:
$LN11@simple_vm_:
; Line 358
  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004b	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00052	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00056	0f 8e 10 02 00
	00		 jle	 $LN9@simple_vm_
; Line 359
  0005c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00061	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00068	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00070	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00077	e8 00 00 00 00	 call	 simple_list_getlist
  0007c	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 360
  00081	ba 0a 00 00 00	 mov	 edx, 10
  00086	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0008b	e8 00 00 00 00	 call	 simple_list_getitem
  00090	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00095	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00098	89 01		 mov	 DWORD PTR [rcx], eax
; Line 361
  0009a	ba 0b 00 00 00	 mov	 edx, 11
  0009f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000a4	e8 00 00 00 00	 call	 simple_list_getitem
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000ae	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000b1	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 363
  000b7	ba 0c 00 00 00	 mov	 edx, 12
  000bc	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000c1	e8 00 00 00 00	 call	 simple_list_getitem
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000cb	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000ce	89 81 6c 18 00
	00		 mov	 DWORD PTR [rcx+6252], eax
; Line 364
  000d4	ba 0d 00 00 00	 mov	 edx, 13
  000d9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000de	e8 00 00 00 00	 call	 simple_list_getitem
  000e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000e8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ec	48 39 81 70 18
	00 00		 cmp	 QWORD PTR [rcx+6256], rax
  000f3	74 48		 je	 SHORT $LN8@simple_vm_
; Line 365
  000f5	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000fa	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  00101	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00106	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0010d	e8 00 00 00 00	 call	 simple_list_delete_gc
  00112	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00117	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 366
  0011e	ba 0d 00 00 00	 mov	 edx, 13
  00123	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00128	e8 00 00 00 00	 call	 simple_list_getitem
  0012d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00132	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00136	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
$LN8@simple_vm_:
; Line 369
  0013d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00142	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00147	48 8b 89 60 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6240]
  0014e	48 89 88 c0 19
	00 00		 mov	 QWORD PTR [rax+6592], rcx
; Line 370
  00155	ba 06 00 00 00	 mov	 edx, 6
  0015a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0015f	e8 00 00 00 00	 call	 simple_list_getitem
  00164	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00169	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0016d	48 89 81 60 18
	00 00		 mov	 QWORD PTR [rcx+6240], rax
; Line 372
  00174	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00179	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00180	48 6b c0 18	 imul	 rax, 24
  00184	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00189	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0018d	83 e0 07	 and	 eax, 7
  00190	83 f8 03	 cmp	 eax, 3
  00193	75 18		 jne	 SHORT $LN7@simple_vm_
; Line 378
  00195	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019a	e8 00 00 00 00	 call	 simple_vm_isstackpointertoobjstate
  0019f	85 c0		 test	 eax, eax
  001a1	75 0a		 jne	 SHORT $LN6@simple_vm_
; Line 379
  001a3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001a8	e8 00 00 00 00	 call	 simple_vm_movetoprevscope
$LN6@simple_vm_:
$LN7@simple_vm_:
; Line 382
  001ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001b2	e8 00 00 00 00	 call	 simple_vm_deletescope
; Line 384
  001b7	41 b8 0e 00 00
	00		 mov	 r8d, 14
  001bd	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  001c2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001c7	e8 00 00 00 00	 call	 simple_vm_restorestate2
; Line 385
  001cc	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001d1	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  001d8	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  001dc	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001e1	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  001e8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ed	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001f4	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 387
  001f9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001fe	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00205	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00209	7e 44		 jle	 SHORT $LN5@simple_vm_
; Line 388
  0020b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00210	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00217	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0021a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0021f	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00226	e8 00 00 00 00	 call	 simple_list_getlist
  0022b	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 389
  00230	ba 04 00 00 00	 mov	 edx, 4
  00235	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0023a	e8 00 00 00 00	 call	 simple_list_getitem
  0023f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00244	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00247	89 81 90 18 00
	00		 mov	 DWORD PTR [rcx+6288], eax
; Line 390
  0024d	eb 0f		 jmp	 SHORT $LN4@simple_vm_
$LN5@simple_vm_:
; Line 391
  0024f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00254	c7 80 90 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6288], 0
$LN4@simple_vm_:
; Line 394
  0025e	b2 03		 mov	 dl, 3
  00260	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00265	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 395
  0026a	eb 67		 jmp	 SHORT $LN3@simple_vm_
$LN9@simple_vm_:
; Line 397
  0026c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00271	83 b8 b0 18 00
	00 00		 cmp	 DWORD PTR [rax+6320], 0
  00278	75 4f		 jne	 SHORT $LN2@simple_vm_
; Line 398
  0027a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0027f	8b 00		 mov	 eax, DWORD PTR [rax]
  00281	ff c8		 dec	 eax
  00283	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00288	89 01		 mov	 DWORD PTR [rcx], eax
; Line 399
  0028a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0028f	c6 80 30 18 00
	00 00		 mov	 BYTE PTR [rax+6192], 0
; Line 400
  00296	45 33 c0	 xor	 r8d, r8d
  00299	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82535
  002a0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002a5	e8 00 00 00 00	 call	 simple_vm_loadblock2
  002aa	85 c0		 test	 eax, eax
  002ac	74 1b		 je	 SHORT $LN1@simple_vm_
; Line 401
  002ae	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002b3	e8 00 00 00 00	 call	 simple_vm_call
; Line 402
  002b8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  002bd	c7 80 b0 18 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+6320], 1
; Line 403
  002c7	eb 0a		 jmp	 SHORT $LN13@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 407
  002c9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  002ce	e8 00 00 00 00	 call	 exit_simple_vm
$LN3@simple_vm_:
$LN13@simple_vm_:
; Line 409
  002d3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  002d7	c3		 ret	 0
simple_vm_return ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nsp$ = 36
nMax1$ = 40
nBlockEx$ = 44
list$ = 48
pActiveMem$ = 56
vm$ = 80
simple_vm_call2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 202
$LN27:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 206
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	83 b8 94 18 00
	00 00		 cmp	 DWORD PTR [rax+6292], 0
  00015	7e 30		 jle	 SHORT $LN24@simple_vm_
; Line 207
  00017	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0001c	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  00022	ff c8		 dec	 eax
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00029	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 208
  0002f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00034	8b 80 70 19 00
	00		 mov	 eax, DWORD PTR [rax+6512]
  0003a	ff c8		 dec	 eax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00041	89 81 70 19 00
	00		 mov	 DWORD PTR [rcx+6512], eax
$LN24@simple_vm_:
; Line 211
  00047	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0004c	e8 00 00 00 00	 call	 simple_vm_restoreloadaddressscope
; Line 212
  00051	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00056	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  0005d	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00060	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00065	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  0006c	e8 00 00 00 00	 call	 simple_list_getlist
  00071	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 214
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  0007b	83 78 10 08	 cmp	 DWORD PTR [rax+16], 8
  0007f	7c 1f		 jl	 SHORT $LN23@simple_vm_
; Line 216
  00081	ba 08 00 00 00	 mov	 edx, 8
  00086	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0008b	e8 00 00 00 00	 call	 simple_list_getitem
  00090	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  00094	75 0a		 jne	 SHORT $LN22@simple_vm_
; Line 217
  00096	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0009b	e8 00 00 00 00	 call	 simple_vm_oop_callmethodfrombrace
$LN22@simple_vm_:
$LN23@simple_vm_:
; Line 221
  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a5	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  000a8	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  000ad	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b2	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000b9	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 223
  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c3	44 8b 80 94 18
	00 00		 mov	 r8d, DWORD PTR [rax+6292]
  000ca	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  000cf	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000d4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000db	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 224
  000e0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e5	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  000eb	89 44 24 2c	 mov	 DWORD PTR nBlockEx$[rsp], eax
; Line 225
  000ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f4	c7 80 94 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6292], 0
; Line 227
  000fe	ba 01 00 00 00	 mov	 edx, 1
  00103	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00108	e8 00 00 00 00	 call	 simple_list_getitem
  0010d	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  00111	0f 85 3e 01 00
	00		 jne	 $LN21@simple_vm_
; Line 229
  00117	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0011c	44 8b 80 6c 18
	00 00		 mov	 r8d, DWORD PTR [rax+6252]
  00123	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00128	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00134	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 230
  00139	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0013e	4c 8b 80 70 18
	00 00		 mov	 r8, QWORD PTR [rax+6256]
  00145	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  0014a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0014f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00156	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 231
  0015b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00160	c7 80 6c 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6252], 0
; Line 232
  0016a	33 d2		 xor	 edx, edx
  0016c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00171	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00178	e8 00 00 00 00	 call	 simple_list_new_gc
  0017d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 233
  00189	ba 03 00 00 00	 mov	 edx, 3
  0018e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00193	e8 00 00 00 00	 call	 simple_list_getitem
  00198	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0019d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  001a0	89 01		 mov	 DWORD PTR [rcx], eax
; Line 235
  001a2	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  001a7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ac	e8 00 00 00 00	 call	 simple_vm_savestate2
; Line 237
  001b1	ba 08 00 00 00	 mov	 edx, 8
  001b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  001bb	e8 00 00 00 00	 call	 simple_list_getitem
  001c0	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  001c4	75 6d		 jne	 SHORT $LN20@simple_vm_
; Line 238
  001c6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001cb	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  001d2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001d7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001de	e8 00 00 00 00	 call	 simple_list_newlist_gc
  001e3	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 239
  001e8	45 33 c0	 xor	 r8d, r8d
  001eb	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  001f0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001f5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001fc	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 240
  00201	45 33 c0	 xor	 r8d, r8d
  00204	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00209	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0020e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00215	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 241
  0021a	45 33 c0	 xor	 r8d, r8d
  0021d	48 8b 54 24 30	 mov	 rdx, QWORD PTR list$[rsp]
  00222	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00227	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0022e	e8 00 00 00 00	 call	 simple_list_addpointer_gc
$LN20@simple_vm_:
; Line 244
  00233	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00238	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  0023f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00244	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0024b	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
  00250	e9 14 04 00 00	 jmp	 $LN19@simple_vm_
$LN21@simple_vm_:
; Line 246
  00255	ba 01 00 00 00	 mov	 edx, 1
  0025a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0025f	e8 00 00 00 00	 call	 simple_list_getitem
  00264	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00268	0f 85 fb 03 00
	00		 jne	 $LN18@simple_vm_
; Line 248
  0026e	b2 05		 mov	 dl, 5
  00270	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00275	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 255
  0027a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0027f	48 8b 80 40 18
	00 00		 mov	 rax, QWORD PTR [rax+6208]
  00286	48 89 44 24 38	 mov	 QWORD PTR pActiveMem$[rsp], rax
; Line 257
  0028b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00290	e8 00 00 00 00	 call	 simple_vm_newscope
; Line 259
  00295	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0029a	c7 80 88 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6536], 0
; Line 260
  002a4	ba 04 00 00 00	 mov	 edx, 4
  002a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  002ae	e8 00 00 00 00	 call	 simple_list_getitem
  002b3	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  002b6	89 44 24 24	 mov	 DWORD PTR nsp$[rsp], eax
; Line 262
  002ba	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002bf	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002c6	39 44 24 24	 cmp	 DWORD PTR nsp$[rsp], eax
  002ca	0f 8d a4 01 00
	00		 jge	 $LN17@simple_vm_
; Line 263
  002d0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d5	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  002dc	89 44 24 28	 mov	 DWORD PTR nMax1$[rsp], eax
; Line 264
  002e0	8b 44 24 24	 mov	 eax, DWORD PTR nsp$[rsp]
  002e4	ff c0		 inc	 eax
  002e6	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  002ea	eb 0a		 jmp	 SHORT $LN16@simple_vm_
$LN15@simple_vm_:
  002ec	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  002f0	ff c0		 inc	 eax
  002f2	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN16@simple_vm_:
  002f6	8b 44 24 28	 mov	 eax, DWORD PTR nMax1$[rsp]
  002fa	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  002fe	0f 8f 60 01 00
	00		 jg	 $LN14@simple_vm_
; Line 265
  00304	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00309	0f b6 4c 24 20	 movzx	 ecx, BYTE PTR x$[rsp]
  0030e	88 88 30 18 00
	00		 mov	 BYTE PTR [rax+6192], cl
; Line 266
  00314	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00319	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00320	48 6b c0 18	 imul	 rax, 24
  00324	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00329	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0032d	83 e0 07	 and	 eax, 7
  00330	83 f8 01	 cmp	 eax, 1
  00333	75 55		 jne	 SHORT $LN13@simple_vm_
; Line 267
  00335	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0033a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00341	48 6b c0 18	 imul	 rax, 24
  00345	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0034a	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  0034f	e8 00 00 00 00	 call	 simple_string_size
  00354	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00359	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00360	48 6b c9 18	 imul	 rcx, 24
  00364	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00369	48 8b 4c 0a 38	 mov	 rcx, QWORD PTR [rdx+rcx+56]
  0036e	44 8b c8	 mov	 r9d, eax
  00371	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  00374	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82501
  0037b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00380	e8 00 00 00 00	 call	 simple_vm_addnewstringvar2
  00385	e9 bd 00 00 00	 jmp	 $LN12@simple_vm_
$LN13@simple_vm_:
; Line 269
  0038a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0038f	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00396	48 6b c0 18	 imul	 rax, 24
  0039a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0039f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003a3	83 e0 07	 and	 eax, 7
  003a6	83 f8 02	 cmp	 eax, 2
  003a9	75 2e		 jne	 SHORT $LN11@simple_vm_
; Line 270
  003ab	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003b0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003b7	48 6b c0 18	 imul	 rax, 24
  003bb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003c0	f2 0f 10 54 01
	38		 movsdx	 xmm2, QWORD PTR [rcx+rax+56]
  003c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82504
  003cd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003d2	e8 00 00 00 00	 call	 simple_vm_addnewnumbervar
  003d7	eb 6e		 jmp	 SHORT $LN10@simple_vm_
$LN11@simple_vm_:
; Line 272
  003d9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003de	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  003e5	48 6b c0 18	 imul	 rax, 24
  003e9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ee	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  003f2	83 e0 07	 and	 eax, 7
  003f5	83 f8 03	 cmp	 eax, 3
  003f8	75 4d		 jne	 SHORT $LN9@simple_vm_
; Line 273
  003fa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003ff	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00406	48 6b c0 18	 imul	 rax, 24
  0040a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0040f	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00413	c1 e8 05	 shr	 eax, 5
  00416	83 e0 03	 and	 eax, 3
  00419	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0041e	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00425	48 6b c9 18	 imul	 rcx, 24
  00429	44 8b c8	 mov	 r9d, eax
  0042c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00431	4c 8b 44 08 38	 mov	 r8, QWORD PTR [rax+rcx+56]
  00436	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82507
  0043d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00442	e8 00 00 00 00	 call	 simple_vm_addnewpointervar
$LN9@simple_vm_:
$LN10@simple_vm_:
$LN12@simple_vm_:
; Line 275
  00447	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0044c	8b 80 88 19 00
	00		 mov	 eax, DWORD PTR [rax+6536]
  00452	ff c0		 inc	 eax
  00454	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00459	89 81 88 19 00
	00		 mov	 DWORD PTR [rcx+6536], eax
; Line 276
  0045f	e9 88 fe ff ff	 jmp	 $LN15@simple_vm_
$LN14@simple_vm_:
; Line 277
  00464	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00469	0f b6 4c 24 24	 movzx	 ecx, BYTE PTR nsp$[rsp]
  0046e	88 88 30 18 00
	00		 mov	 BYTE PTR [rax+6192], cl
$LN17@simple_vm_:
; Line 280
  00474	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00479	c7 80 fc 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6396], 0
; Line 282
  00483	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00488	c6 80 b8 19 00
	00 00		 mov	 BYTE PTR [rax+6584], 0
; Line 284
  0048f	ba 03 00 00 00	 mov	 edx, 3
  00494	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00499	e8 00 00 00 00	 call	 simple_list_getitem
  0049e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004a3	ff 50 08	 call	 QWORD PTR [rax+8]
; Line 286
  004a6	b2 06		 mov	 dl, 6
  004a8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004ad	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 288
  004b2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004b7	8b 4c 24 2c	 mov	 ecx, DWORD PTR nBlockEx$[rsp]
  004bb	89 88 94 18 00
	00		 mov	 DWORD PTR [rax+6292], ecx
; Line 290
  004c1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004c6	83 b8 fc 18 00
	00 01		 cmp	 DWORD PTR [rax+6396], 1
  004cd	75 16		 jne	 SHORT $LN8@simple_vm_
; Line 296
  004cf	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004d4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pActiveMem$[rsp]
  004d9	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 297
  004e0	e9 84 01 00 00	 jmp	 $LN25@simple_vm_
$LN8@simple_vm_:
; Line 300
  004e5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004ea	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  004f1	39 44 24 24	 cmp	 DWORD PTR nsp$[rsp], eax
  004f5	75 5a		 jne	 SHORT $LN7@simple_vm_
; Line 302
  004f7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004fc	0f be 80 8c 19
	00 00		 movsx	 eax, BYTE PTR [rax+6540]
  00503	85 c0		 test	 eax, eax
  00505	75 3e		 jne	 SHORT $LN6@simple_vm_
; Line 303
  00507	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0050c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00513	fe c0		 inc	 al
  00515	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0051a	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00520	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00525	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0052c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00531	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00535	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82511
  0053c	8b d0		 mov	 edx, eax
  0053e	e8 00 00 00 00	 call	 simple_itemarray_setstring
; Line 305
  00543	eb 0c		 jmp	 SHORT $LN5@simple_vm_
$LN6@simple_vm_:
; Line 306
  00545	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0054a	c6 80 8c 19 00
	00 00		 mov	 BYTE PTR [rax+6540], 0
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 310
  00551	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00556	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0055d	48 6b c0 18	 imul	 rax, 24
  00561	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00566	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  0056a	83 e0 07	 and	 eax, 7
  0056d	83 f8 03	 cmp	 eax, 3
  00570	75 0a		 jne	 SHORT $LN4@simple_vm_
; Line 311
  00572	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00577	e8 00 00 00 00	 call	 simple_vm_movetoprevscope
$LN4@simple_vm_:
; Line 314
  0057c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00581	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00588	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0058c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00591	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  00598	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0059d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  005a4	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 315
  005a9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005ae	e8 00 00 00 00	 call	 simple_vm_deletescope
; Line 317
  005b3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005b8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pActiveMem$[rsp]
  005bd	48 89 88 40 18
	00 00		 mov	 QWORD PTR [rax+6208], rcx
; Line 319
  005c4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005c9	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  005d0	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  005d4	7e 44		 jle	 SHORT $LN3@simple_vm_
; Line 320
  005d6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005db	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  005e2	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  005e5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005ea	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  005f1	e8 00 00 00 00	 call	 simple_list_getlist
  005f6	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 321
  005fb	ba 04 00 00 00	 mov	 edx, 4
  00600	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00605	e8 00 00 00 00	 call	 simple_list_getitem
  0060a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0060f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00612	89 81 90 18 00
	00		 mov	 DWORD PTR [rcx+6288], eax
; Line 322
  00618	eb 0f		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 323
  0061a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0061f	c7 80 90 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6288], 0
$LN2@simple_vm_:
; Line 326
  00629	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0062e	0f be 80 80 19
	00 00		 movsx	 eax, BYTE PTR [rax+6528]
  00635	83 f8 01	 cmp	 eax, 1
  00638	75 2f		 jne	 SHORT $LN1@simple_vm_
; Line 327
  0063a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0063f	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 333
  00646	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0064b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00652	fe c8		 dec	 al
  00654	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00659	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 334
  0065f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00664	e8 00 00 00 00	 call	 simple_vm_mainloop
$LN1@simple_vm_:
$LN18@simple_vm_:
$LN19@simple_vm_:
$LN25@simple_vm_:
; Line 337
  00669	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0066d	c3		 ret	 0
simple_vm_call2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_call PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 181
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 184
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	0f be 80 c0 00
	00 00		 movsx	 eax, BYTE PTR [rax+192]
  0001c	83 f8 03	 cmp	 eax, 3
  0001f	0f 85 c1 00 00
	00		 jne	 $LN3@simple_vm_
; Line 185
  00025	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00031	b9 08 00 00 00	 mov	 ecx, 8
  00036	48 6b c9 02	 imul	 rcx, 2
  0003a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0003e	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00042	0f 84 9e 00 00
	00		 je	 $LN2@simple_vm_
; Line 191
  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004d	48 8b 80 60 19
	00 00		 mov	 rax, QWORD PTR [rax+6496]
  00054	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00058	0f 8e 88 00 00
	00		 jle	 $LN1@simple_vm_
; Line 192
  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00063	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0006f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00076	e8 00 00 00 00	 call	 simple_list_newlist_gc
  0007b	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 193
  00080	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00085	48 8b 80 60 19
	00 00		 mov	 rax, QWORD PTR [rax+6496]
  0008c	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0008f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00094	48 8b 88 60 19
	00 00		 mov	 rcx, QWORD PTR [rax+6496]
  0009b	e8 00 00 00 00	 call	 simple_list_getlist
  000a0	4c 8b c0	 mov	 r8, rax
  000a3	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ad	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000b4	e8 00 00 00 00	 call	 simple_list_copy_gc
; Line 194
  000b9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000be	48 8b 80 60 19
	00 00		 mov	 rax, QWORD PTR [rax+6496]
  000c5	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  000c9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ce	48 8b 90 60 19
	00 00		 mov	 rdx, QWORD PTR [rax+6496]
  000d5	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000da	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000e1	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 198
  000e6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000eb	e8 00 00 00 00	 call	 simple_vm_call2
; Line 199
  000f0	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000f4	c3		 ret	 0
simple_vm_call ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
y$ = 32
list2$ = 40
list3$ = 48
list$ = 56
vm$ = 80
block_name$ = 88
nPerformance$ = 96
simple_vm_loadblock2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 24
$LN24:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 28
  00013	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00018	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  0001e	ff c0		 inc	 eax
  00020	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00025	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 29
  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00030	8b 80 70 19 00
	00		 mov	 eax, DWORD PTR [rax+6512]
  00036	ff c0		 inc	 eax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0003d	89 81 70 19 00
	00		 mov	 DWORD PTR [rcx+6512], eax
; Line 31
  00043	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR y$[rsp], 2
  0004b	eb 0a		 jmp	 SHORT $LN21@simple_vm_
$LN20@simple_vm_:
  0004d	8b 44 24 20	 mov	 eax, DWORD PTR y$[rsp]
  00051	ff c8		 dec	 eax
  00053	89 44 24 20	 mov	 DWORD PTR y$[rsp], eax
$LN21@simple_vm_:
  00057	83 7c 24 20 01	 cmp	 DWORD PTR y$[rsp], 1
  0005c	0f 8c 09 05 00
	00		 jl	 $LN19@simple_vm_
; Line 33
  00062	83 7c 24 20 02	 cmp	 DWORD PTR y$[rsp], 2
  00067	0f 85 cf 00 00
	00		 jne	 $LN18@simple_vm_
; Line 35
  0006d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00072	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  00079	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0007d	74 11		 je	 SHORT $LN16@simple_vm_
  0007f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00084	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  0008b	83 f8 01	 cmp	 eax, 1
  0008e	75 02		 jne	 SHORT $LN17@simple_vm_
$LN16@simple_vm_:
; Line 36
  00090	eb bb		 jmp	 SHORT $LN20@simple_vm_
$LN17@simple_vm_:
; Line 38
  00092	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00097	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0009e	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a6	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  000ad	e8 00 00 00 00	 call	 simple_list_getlist
  000b2	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
; Line 40
  000b7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000bc	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000c3	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  000c7	7e 4c		 jle	 SHORT $LN15@simple_vm_
  000c9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000ce	0f be 80 b9 19
	00 00		 movsx	 eax, BYTE PTR [rax+6585]
  000d5	85 c0		 test	 eax, eax
  000d7	74 3c		 je	 SHORT $LN15@simple_vm_
; Line 41
  000d9	48 8b 54 24 58	 mov	 rdx, QWORD PTR block_name$[rsp]
  000de	48 8b 4c 24 58	 mov	 rcx, QWORD PTR block_name$[rsp]
  000e3	e8 00 00 00 00	 call	 strcmp
  000e8	85 c0		 test	 eax, eax
  000ea	74 29		 je	 SHORT $LN14@simple_vm_
; Line 42
  000ec	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f1	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  000f8	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000fb	ff c8		 dec	 eax
  000fd	8b d0		 mov	 edx, eax
  000ff	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00104	48 8b 88 d0 18
	00 00		 mov	 rcx, QWORD PTR [rax+6352]
  0010b	e8 00 00 00 00	 call	 simple_list_getlist
  00110	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
$LN14@simple_vm_:
$LN15@simple_vm_:
; Line 45
  00115	ba 02 00 00 00	 mov	 edx, 2
  0011a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  0011f	e8 00 00 00 00	 call	 simple_list_getitem
  00124	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00128	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
; Line 46
  0012d	48 83 7c 24 38
	00		 cmp	 QWORD PTR list$[rsp], 0
  00133	75 05		 jne	 SHORT $LN13@simple_vm_
; Line 47
  00135	e9 13 ff ff ff	 jmp	 $LN20@simple_vm_
$LN13@simple_vm_:
; Line 50
  0013a	eb 0e		 jmp	 SHORT $LN12@simple_vm_
$LN18@simple_vm_:
; Line 52
  0013c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00141	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00145	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
$LN12@simple_vm_:
; Line 54
  0014a	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  0014f	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00154	75 16		 jne	 SHORT $LN11@simple_vm_
; Line 55
  00156	48 8b 54 24 38	 mov	 rdx, QWORD PTR list$[rsp]
  0015b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00160	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00167	e8 00 00 00 00	 call	 simple_list_genhashtable2_gc
$LN11@simple_vm_:
; Line 57
  0016c	48 8b 54 24 58	 mov	 rdx, QWORD PTR block_name$[rsp]
  00171	48 8b 44 24 38	 mov	 rax, QWORD PTR list$[rsp]
  00176	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0017a	e8 00 00 00 00	 call	 simple_hashtable_findpointer
  0017f	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 58
  00184	48 83 7c 24 28
	00		 cmp	 QWORD PTR list2$[rsp], 0
  0018a	0f 84 d6 03 00
	00		 je	 $LN10@simple_vm_
; Line 60
  00190	ba 04 00 00 00	 mov	 edx, 4
  00195	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  0019a	e8 00 00 00 00	 call	 simple_list_getitem
  0019f	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  001a3	75 2b		 jne	 SHORT $LN9@simple_vm_
; Line 61
  001a5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001aa	e8 00 00 00 00	 call	 simple_vm_oop_callmethodinsideclass
  001af	85 c0		 test	 eax, eax
  001b1	75 1d		 jne	 SHORT $LN8@simple_vm_
; Line 62
  001b3	4c 8b 44 24 58	 mov	 r8, QWORD PTR block_name$[rsp]
  001b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82456
  001bf	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c4	e8 00 00 00 00	 call	 simple_vm_error2
; Line 63
  001c9	33 c0		 xor	 eax, eax
  001cb	e9 01 06 00 00	 jmp	 $LN22@simple_vm_
$LN8@simple_vm_:
$LN9@simple_vm_:
; Line 66
  001d0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001d5	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  001dc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001e1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e8	e8 00 00 00 00	 call	 simple_list_newlist_gc
  001ed	48 89 44 24 30	 mov	 QWORD PTR list3$[rsp], rax
; Line 67
  001f2	41 b8 01 00 00
	00		 mov	 r8d, 1
  001f8	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  001fd	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00202	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00209	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 69
  0020e	4c 8b 44 24 58	 mov	 r8, QWORD PTR block_name$[rsp]
  00213	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  00218	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0021d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00224	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 70
  00229	ba 02 00 00 00	 mov	 edx, 2
  0022e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00233	e8 00 00 00 00	 call	 simple_list_getitem
  00238	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  0023c	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  00241	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00246	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0024d	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 71
  00252	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00257	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0025e	44 8b c0	 mov	 r8d, eax
  00261	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  00266	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0026b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00272	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 73
  00277	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  0027c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00281	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00288	e8 00 00 00 00	 call	 simple_list_newlist_gc
; Line 75
  0028d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00292	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  00299	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  0029e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002a3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002aa	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 76
  002af	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002b4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b9	48 8b 89 60 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6240]
  002c0	48 89 88 c0 19
	00 00		 mov	 QWORD PTR [rax+6592], rcx
; Line 77
  002c7	ba 03 00 00 00	 mov	 edx, 3
  002cc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  002d1	e8 00 00 00 00	 call	 simple_list_getitem
  002d6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002da	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002df	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002e2	48 89 81 60 18
	00 00		 mov	 QWORD PTR [rcx+6240], rax
; Line 78
  002e9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002ee	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  002f5	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  002fa	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002ff	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00306	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 80
  0030b	83 7c 24 20 01	 cmp	 DWORD PTR y$[rsp], 1
  00310	75 2c		 jne	 SHORT $LN7@simple_vm_
  00312	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00317	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  0031e	83 f8 01	 cmp	 eax, 1
  00321	74 1b		 je	 SHORT $LN7@simple_vm_
; Line 81
  00323	45 33 c0	 xor	 r8d, r8d
  00326	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  0032b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00330	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00337	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 82
  0033c	eb 1c		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 83
  0033e	41 b8 01 00 00
	00		 mov	 r8d, 1
  00344	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  00349	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0034e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00355	e8 00 00 00 00	 call	 simple_list_addint_gc
$LN6@simple_vm_:
; Line 86
  0035a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0035f	44 8b 80 68 18
	00 00		 mov	 r8d, DWORD PTR [rax+6248]
  00366	48 8b 54 24 30	 mov	 rdx, QWORD PTR list3$[rsp]
  0036b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00370	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00377	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 87
  0037c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82460
  00383	48 8b 4c 24 58	 mov	 rcx, QWORD PTR block_name$[rsp]
  00388	e8 00 00 00 00	 call	 strcmp
  0038d	85 c0		 test	 eax, eax
  0038f	0f 84 bd 01 00
	00		 je	 $LN5@simple_vm_
  00395	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0039a	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  003a1	83 f8 01	 cmp	 eax, 1
  003a4	0f 84 a8 01 00
	00		 je	 $LN5@simple_vm_
  003aa	83 7c 24 20 02	 cmp	 DWORD PTR y$[rsp], 2
  003af	0f 84 9d 01 00
	00		 je	 $LN5@simple_vm_
  003b5	83 7c 24 60 01	 cmp	 DWORD PTR nPerformance$[rsp], 1
  003ba	0f 85 92 01 00
	00		 jne	 $LN5@simple_vm_
; Line 92
  003c0	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003c5	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  003cc	b9 08 00 00 00	 mov	 ecx, 8
  003d1	48 6b c9 00	 imul	 rcx, 0
  003d5	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  003d9	c7 40 08 49 00
	00 00		 mov	 DWORD PTR [rax+8], 73	; 00000049H
; Line 97
  003e0	ba 02 00 00 00	 mov	 edx, 2
  003e5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ea	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 98
  003ef	ba 03 00 00 00	 mov	 edx, 3
  003f4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003f9	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 99
  003fe	ba 04 00 00 00	 mov	 edx, 4
  00403	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00408	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 100
  0040d	ba 05 00 00 00	 mov	 edx, 5
  00412	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00417	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 101
  0041c	ba 06 00 00 00	 mov	 edx, 6
  00421	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00426	e8 00 00 00 00	 call	 simple_vm_newbytecodeitem
; Line 111
  0042b	ba 02 00 00 00	 mov	 edx, 2
  00430	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00435	e8 00 00 00 00	 call	 simple_list_getitem
  0043a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0043f	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  00446	ba 08 00 00 00	 mov	 edx, 8
  0044b	48 6b d2 02	 imul	 rdx, 2
  0044f	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00453	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00457	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0045c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00463	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 112
  00468	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0046d	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00474	b9 08 00 00 00	 mov	 ecx, 8
  00479	48 6b c9 03	 imul	 rcx, 3
  0047d	41 b8 01 00 00
	00		 mov	 r8d, 1
  00483	48 8b 14 08	 mov	 rdx, QWORD PTR [rax+rcx]
  00487	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0048c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00493	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 113
  00498	ba 03 00 00 00	 mov	 edx, 3
  0049d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  004a2	e8 00 00 00 00	 call	 simple_list_getitem
  004a7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  004ab	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004b0	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  004b7	ba 08 00 00 00	 mov	 edx, 8
  004bc	48 6b d2 04	 imul	 rdx, 4
  004c0	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  004c3	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  004c7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004cc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004d3	e8 00 00 00 00	 call	 simple_item_setpointer_gc
; Line 114
  004d8	ba 08 00 00 00	 mov	 edx, 8
  004dd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  004e2	e8 00 00 00 00	 call	 simple_list_getitem
  004e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004ec	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  004f3	ba 08 00 00 00	 mov	 edx, 8
  004f8	48 6b d2 05	 imul	 rdx, 5
  004fc	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  00500	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00504	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00509	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00510	e8 00 00 00 00	 call	 simple_item_setint_gc
; Line 115
  00515	ba 09 00 00 00	 mov	 edx, 9
  0051a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list3$[rsp]
  0051f	e8 00 00 00 00	 call	 simple_list_getitem
  00524	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00529	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  00530	ba 08 00 00 00	 mov	 edx, 8
  00535	48 6b d2 06	 imul	 rdx, 6
  00539	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  0053d	48 8b 14 11	 mov	 rdx, QWORD PTR [rcx+rdx]
  00541	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00546	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0054d	e8 00 00 00 00	 call	 simple_item_setint_gc
$LN5@simple_vm_:
; Line 118
  00552	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00557	e8 00 00 00 00	 call	 simple_vm_saveloadaddressscope
; Line 119
  0055c	b8 01 00 00 00	 mov	 eax, 1
  00561	e9 6b 02 00 00	 jmp	 $LN22@simple_vm_
$LN10@simple_vm_:
; Line 121
  00566	e9 e2 fa ff ff	 jmp	 $LN20@simple_vm_
$LN19@simple_vm_:
; Line 123
  0056b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00570	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  00577	83 f8 01	 cmp	 eax, 1
  0057a	75 5e		 jne	 SHORT $LN4@simple_vm_
; Line 125
  0057c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00581	8b 00		 mov	 eax, DWORD PTR [rax]
  00583	83 c0 02	 add	 eax, 2
  00586	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0058b	89 01		 mov	 DWORD PTR [rcx], eax
; Line 127
  0058d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00592	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  00598	ff c8		 dec	 eax
  0059a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0059f	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 128
  005a5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005aa	8b 80 70 19 00
	00		 mov	 eax, DWORD PTR [rax+6512]
  005b0	ff c8		 dec	 eax
  005b2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005b7	89 81 70 19 00
	00		 mov	 DWORD PTR [rcx+6512], eax
; Line 129
  005bd	4c 8b 44 24 58	 mov	 r8, QWORD PTR block_name$[rsp]
  005c2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82462
  005c9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005ce	e8 00 00 00 00	 call	 simple_vm_error2
; Line 130
  005d3	33 c0		 xor	 eax, eax
  005d5	e9 f7 01 00 00	 jmp	 $LN22@simple_vm_
$LN4@simple_vm_:
; Line 133
  005da	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  005df	48 8b 80 98 18
	00 00		 mov	 rax, QWORD PTR [rax+6296]
  005e6	48 8b 54 24 58	 mov	 rdx, QWORD PTR block_name$[rsp]
  005eb	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  005ef	e8 00 00 00 00	 call	 simple_hashtable_findpointer
  005f4	48 89 44 24 38	 mov	 QWORD PTR list$[rsp], rax
; Line 134
  005f9	48 83 7c 24 38
	00		 cmp	 QWORD PTR list$[rsp], 0
  005ff	0f 84 4d 01 00
	00		 je	 $LN3@simple_vm_
; Line 135
  00605	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0060a	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  00611	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00616	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0061d	e8 00 00 00 00	 call	 simple_list_newlist_gc
  00622	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 136
  00627	41 b8 02 00 00
	00		 mov	 r8d, 2
  0062d	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00632	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00637	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0063e	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 137
  00643	4c 8b 44 24 58	 mov	 r8, QWORD PTR block_name$[rsp]
  00648	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0064d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00652	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00659	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 138
  0065e	ba 02 00 00 00	 mov	 edx, 2
  00663	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list$[rsp]
  00668	e8 00 00 00 00	 call	 simple_list_getitem
  0066d	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  00671	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00676	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0067b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00682	e8 00 00 00 00	 call	 simple_list_addblockpointer_gc
; Line 139
  00687	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0068c	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00693	44 8b c0	 mov	 r8d, eax
  00696	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0069b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006a0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006a7	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 141
  006ac	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  006b1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006b6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006bd	e8 00 00 00 00	 call	 simple_list_newlist_gc
; Line 146
  006c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006c7	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  006ce	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  006d3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006d8	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006df	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 148
  006e4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006e9	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  006f0	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  006f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  006fa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00701	e8 00 00 00 00	 call	 simple_list_addpointer_gc
; Line 150
  00706	45 33 c0	 xor	 r8d, r8d
  00709	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  0070e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00713	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0071a	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 152
  0071f	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00724	44 8b 80 68 18
	00 00		 mov	 r8d, DWORD PTR [rax+6248]
  0072b	48 8b 54 24 28	 mov	 rdx, QWORD PTR list2$[rsp]
  00730	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00735	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0073c	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 154
  00741	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00746	e8 00 00 00 00	 call	 simple_vm_saveloadaddressscope
; Line 155
  0074b	b8 01 00 00 00	 mov	 eax, 1
  00750	eb 7f		 jmp	 SHORT $LN22@simple_vm_
$LN3@simple_vm_:
; Line 158
  00752	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00757	83 b8 b0 18 00
	00 00		 cmp	 DWORD PTR [rax+6320], 0
  0075e	75 19		 jne	 SHORT $LN2@simple_vm_
; Line 159
  00760	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82468
  00767	48 8b 4c 24 58	 mov	 rcx, QWORD PTR block_name$[rsp]
  0076c	e8 00 00 00 00	 call	 strcmp
  00771	85 c0		 test	 eax, eax
  00773	75 04		 jne	 SHORT $LN1@simple_vm_
; Line 160
  00775	33 c0		 xor	 eax, eax
  00777	eb 58		 jmp	 SHORT $LN22@simple_vm_
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 169
  00779	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0077e	8b 00		 mov	 eax, DWORD PTR [rax]
  00780	ff c0		 inc	 eax
  00782	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00787	89 01		 mov	 DWORD PTR [rcx], eax
; Line 174
  00789	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0078e	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  00794	ff c8		 dec	 eax
  00796	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0079b	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 175
  007a1	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  007a6	8b 80 70 19 00
	00		 mov	 eax, DWORD PTR [rax+6512]
  007ac	ff c8		 dec	 eax
  007ae	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  007b3	89 81 70 19 00
	00		 mov	 DWORD PTR [rcx+6512], eax
; Line 176
  007b9	4c 8b 44 24 58	 mov	 r8, QWORD PTR block_name$[rsp]
  007be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82469
  007c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  007ca	e8 00 00 00 00	 call	 simple_vm_error2
; Line 177
  007cf	33 c0		 xor	 eax, eax
$LN22@simple_vm_:
; Line 178
  007d1	48 83 c4 48	 add	 rsp, 72			; 00000048H
  007d5	c3		 ret	 0
simple_vm_loadblock2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_loadblock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmblock.c
; Line 19
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 20
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00015	b9 08 00 00 00	 mov	 ecx, 8
  0001a	48 6b c9 01	 imul	 rcx, 1
  0001e	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00022	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00026	41 b8 01 00 00
	00		 mov	 r8d, 1
  0002c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00034	e8 00 00 00 00	 call	 simple_vm_loadblock2
; Line 21
  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
simple_vm_loadblock ENDP
_TEXT	ENDS
END
