; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG82478 DB	'simple_sys_temp', 00H
$SG82481 DB	'simple_temp_object', 00H
	ORG $+5
$SG82538 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82560 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
_DATA	ENDS
PUBLIC	simple_vm_gc_checkreferences
PUBLIC	simple_vm_gc_checknewreference
PUBLIC	simple_vm_gc_checkupdatereference
PUBLIC	simple_vm_gc_deleteitem
PUBLIC	simple_vm_gc_killreference
PUBLIC	simple_vm_gc_deletetemlists
PUBLIC	simple_vm_gc_newitemreference
PUBLIC	simple_malloc
PUBLIC	simple_free
PUBLIC	simple_calloc
PUBLIC	simple_realloc
PUBLIC	simple_state_malloc
PUBLIC	simple_state_free
PUBLIC	simple_state_calloc
PUBLIC	simple_state_realloc
PUBLIC	simple_vm_gc_deleteitem_gc
PUBLIC	simple_poolmanager_newblock
PUBLIC	simple_poolmanager_allocate
PUBLIC	simple_poolmanager_free
PUBLIC	simple_poolmanager_delete
EXTRN	exit:PROC
EXTRN	calloc:PROC
EXTRN	free:PROC
EXTRN	malloc:PROC
EXTRN	realloc:PROC
EXTRN	printf:PROC
EXTRN	strcmp:PROC
EXTRN	simple_item_delete:PROC
EXTRN	simple_item_content_delete:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_deleteitem:PROC
EXTRN	simple_list_genhashtable2:PROC
EXTRN	simple_hashtable_delete:PROC
pdata	SEGMENT
$pdata$simple_vm_gc_checkreferences DD imagerel $LN9
	DD	imagerel $LN9+190
	DD	imagerel $unwind$simple_vm_gc_checkreferences
$pdata$simple_vm_gc_checknewreference DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$simple_vm_gc_checknewreference
$pdata$simple_vm_gc_checkupdatereference DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$simple_vm_gc_checkupdatereference
$pdata$simple_vm_gc_deleteitem DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_vm_gc_deleteitem
$pdata$simple_vm_gc_killreference DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$simple_vm_gc_killreference
$pdata$simple_vm_gc_deletetemlists DD imagerel $LN12
	DD	imagerel $LN12+302
	DD	imagerel $unwind$simple_vm_gc_deletetemlists
$pdata$simple_malloc DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$simple_malloc
$pdata$simple_free DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$simple_free
$pdata$simple_calloc DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$simple_calloc
$pdata$simple_realloc DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$simple_realloc
$pdata$simple_state_malloc DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$simple_state_malloc
$pdata$simple_state_free DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$simple_state_free
$pdata$simple_state_calloc DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$simple_state_calloc
$pdata$simple_state_realloc DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$simple_state_realloc
$pdata$simple_vm_gc_deleteitem_gc DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$simple_vm_gc_deleteitem_gc
$pdata$simple_poolmanager_newblock DD imagerel $LN7
	DD	imagerel $LN7+204
	DD	imagerel $unwind$simple_poolmanager_newblock
$pdata$simple_poolmanager_allocate DD imagerel $LN7
	DD	imagerel $LN7+159
	DD	imagerel $unwind$simple_poolmanager_allocate
$pdata$simple_poolmanager_free DD imagerel $LN6
	DD	imagerel $LN6+125
	DD	imagerel $unwind$simple_poolmanager_free
$pdata$simple_poolmanager_delete DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$simple_poolmanager_delete
pdata	ENDS
xdata	SEGMENT
$unwind$simple_vm_gc_checkreferences DD 010901H
	DD	08209H
$unwind$simple_vm_gc_checknewreference DD 010d01H
	DD	0220dH
$unwind$simple_vm_gc_checkupdatereference DD 010901H
	DD	06209H
$unwind$simple_vm_gc_deleteitem DD 010901H
	DD	04209H
$unwind$simple_vm_gc_killreference DD 010901H
	DD	06209H
$unwind$simple_vm_gc_deletetemlists DD 010901H
	DD	08209H
$unwind$simple_malloc DD 010901H
	DD	04209H
$unwind$simple_free DD 010901H
	DD	04209H
$unwind$simple_calloc DD 010e01H
	DD	0420eH
$unwind$simple_realloc DD 010e01H
	DD	0420eH
$unwind$simple_state_malloc DD 010e01H
	DD	0420eH
$unwind$simple_state_free DD 010e01H
	DD	0420eH
$unwind$simple_state_calloc DD 011301H
	DD	04213H
$unwind$simple_state_realloc DD 011301H
	DD	04213H
$unwind$simple_vm_gc_deleteitem_gc DD 010e01H
	DD	0420eH
$unwind$simple_poolmanager_newblock DD 010901H
	DD	06209H
$unwind$simple_poolmanager_allocate DD 010e01H
	DD	0620eH
$unwind$simple_poolmanager_free DD 010e01H
	DD	0620eH
$unwind$simple_poolmanager_delete DD 010901H
	DD	04209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
sState$ = 48
simple_poolmanager_delete PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 270
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 271
  00009	48 83 7c 24 30
	00		 cmp	 QWORD PTR sState$[rsp], 0
  0000f	74 1a		 je	 SHORT $LN2@simple_poo
; Line 272
  00011	48 8b 44 24 30	 mov	 rax, QWORD PTR sState$[rsp]
  00016	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  0001b	74 0e		 je	 SHORT $LN1@simple_poo
; Line 273
  0001d	48 8b 44 24 30	 mov	 rax, QWORD PTR sState$[rsp]
  00022	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
  00026	e8 00 00 00 00	 call	 free
$LN1@simple_poo:
$LN2@simple_poo:
; Line 276
  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
simple_poolmanager_delete ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pPoolData$ = 32
sState$ = 64
pMemory$ = 72
simple_poolmanager_free PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 254
$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 256
  0000e	48 83 7c 24 40
	00		 cmp	 QWORD PTR sState$[rsp], 0
  00014	74 58		 je	 SHORT $LN3@simple_poo
; Line 257
  00016	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  0001b	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  00020	74 4c		 je	 SHORT $LN2@simple_poo
; Line 258
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00027	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0002b	48 39 44 24 48	 cmp	 QWORD PTR pMemory$[rsp], rax
  00030	76 3c		 jbe	 SHORT $LN1@simple_poo
  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00037	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0003b	48 39 44 24 48	 cmp	 QWORD PTR pMemory$[rsp], rax
  00040	77 2c		 ja	 SHORT $LN1@simple_poo
; Line 259
  00042	48 8b 44 24 48	 mov	 rax, QWORD PTR pMemory$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR pPoolData$[rsp], rax
; Line 260
  0004c	48 8b 44 24 20	 mov	 rax, QWORD PTR pPoolData$[rsp]
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00056	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  0005a	48 89 48 40	 mov	 QWORD PTR [rax+64], rcx
; Line 261
  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00063	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pPoolData$[rsp]
  00068	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
; Line 262
  0006c	eb 0a		 jmp	 SHORT $LN4@simple_poo
$LN1@simple_poo:
$LN2@simple_poo:
$LN3@simple_poo:
; Line 266
  0006e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pMemory$[rsp]
  00073	e8 00 00 00 00	 call	 simple_free
$LN4@simple_poo:
; Line 267
  00078	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007c	c3		 ret	 0
simple_poolmanager_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pMemory$ = 32
sState$ = 64
size$ = 72
simple_poolmanager_allocate PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 229
$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 231
  0000e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR pMemory$[rsp], 0
; Line 233
  00017	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  0001c	48 83 78 58 00	 cmp	 QWORD PTR [rax+88], 0
  00021	75 16		 jne	 SHORT $LN4@simple_poo
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00028	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  0002d	75 0a		 jne	 SHORT $LN4@simple_poo
; Line 234
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00034	e8 00 00 00 00	 call	 simple_poolmanager_newblock
$LN4@simple_poo:
; Line 237
  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  0003e	48 83 78 58 00	 cmp	 QWORD PTR [rax+88], 0
  00043	74 26		 je	 SHORT $LN3@simple_poo
; Line 238
  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  0004a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0004e	48 89 44 24 20	 mov	 QWORD PTR pMemory$[rsp], rax
; Line 239
  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00058	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0005c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00061	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00065	48 89 41 58	 mov	 QWORD PTR [rcx+88], rax
; Line 242
  00069	eb 2a		 jmp	 SHORT $LN2@simple_poo
$LN3@simple_poo:
; Line 243
  0006b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR size$[rsp]
  00070	e8 00 00 00 00	 call	 simple_malloc
  00075	48 89 44 24 20	 mov	 QWORD PTR pMemory$[rsp], rax
; Line 245
  0007a	48 83 7c 24 20
	00		 cmp	 QWORD PTR pMemory$[rsp], 0
  00080	75 13		 jne	 SHORT $LN1@simple_poo
; Line 246
  00082	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82560
  00089	e8 00 00 00 00	 call	 printf
; Line 247
  0008e	33 c9		 xor	 ecx, ecx
  00090	e8 00 00 00 00	 call	 exit
$LN1@simple_poo:
$LN2@simple_poo:
; Line 250
  00095	48 8b 44 24 20	 mov	 rax, QWORD PTR pMemory$[rsp]
$LN6@simple_poo:
; Line 251
  0009a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009e	c3		 ret	 0
simple_poolmanager_allocate ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pMemory$ = 40
sState$ = 64
simple_poolmanager_newblock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 203
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 207
  00009	b9 80 fc 0a 00	 mov	 ecx, 720000		; 000afc80H
  0000e	e8 00 00 00 00	 call	 simple_malloc
  00013	48 89 44 24 28	 mov	 QWORD PTR pMemory$[rsp], rax
; Line 209
  00018	48 83 7c 24 28
	00		 cmp	 QWORD PTR pMemory$[rsp], 0
  0001e	75 13		 jne	 SHORT $LN4@simple_poo
; Line 210
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82538
  00027	e8 00 00 00 00	 call	 printf
; Line 211
  0002c	33 c9		 xor	 ecx, ecx
  0002e	e8 00 00 00 00	 call	 exit
$LN4@simple_poo:
; Line 214
  00033	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  0003b	eb 0a		 jmp	 SHORT $LN3@simple_poo
$LN2@simple_poo:
  0003d	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00041	ff c0		 inc	 eax
  00043	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_poo:
  00047	81 7c 24 20 0e
	27 00 00	 cmp	 DWORD PTR x$[rsp], 9998	; 0000270eH
  0004f	7d 28		 jge	 SHORT $LN1@simple_poo
; Line 215
  00051	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00056	48 6b c0 48	 imul	 rax, 72			; 00000048H
  0005a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pMemory$[rsp]
  0005f	48 8d 44 01 48	 lea	 rax, QWORD PTR [rcx+rax+72]
  00064	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00069	48 6b c9 48	 imul	 rcx, 72			; 00000048H
  0006d	48 8b 54 24 28	 mov	 rdx, QWORD PTR pMemory$[rsp]
  00072	48 89 44 0a 40	 mov	 QWORD PTR [rdx+rcx+64], rax
; Line 216
  00077	eb c4		 jmp	 SHORT $LN2@simple_poo
$LN1@simple_poo:
; Line 217
  00079	b8 48 00 00 00	 mov	 eax, 72			; 00000048H
  0007e	48 69 c0 0f 27
	00 00		 imul	 rax, 9999		; 0000270fH
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pMemory$[rsp]
  0008a	48 c7 44 01 40
	00 00 00 00	 mov	 QWORD PTR [rcx+rax+64], 0
; Line 222
  00093	48 8b 44 24 28	 mov	 rax, QWORD PTR pMemory$[rsp]
  00098	48 83 c0 48	 add	 rax, 72			; 00000048H
  0009c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  000a1	48 89 41 58	 mov	 QWORD PTR [rcx+88], rax
; Line 224
  000a5	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  000aa	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pMemory$[rsp]
  000af	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
; Line 225
  000b3	48 8b 44 24 28	 mov	 rax, QWORD PTR pMemory$[rsp]
  000b8	48 05 38 fc 0a
	00		 add	 rax, 719928		; 000afc38H
  000be	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  000c3	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax
$LN6@simple_poo:
; Line 226
  000c7	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000cb	c3		 ret	 0
simple_poolmanager_newblock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
pItem$ = 56
simple_vm_gc_deleteitem_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 69
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 70
  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00013	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00017	75 1b		 jne	 SHORT $LN2@simple_vm_
; Line 74
  00019	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pItem$[rsp]
  0001e	e8 00 00 00 00	 call	 simple_item_content_delete
; Line 75
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR pItem$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0002d	e8 00 00 00 00	 call	 simple_state_free
; Line 77
  00032	eb 12		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 78
  00034	48 8b 44 24 38	 mov	 rax, QWORD PTR pItem$[rsp]
  00039	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0003c	ff c8		 dec	 eax
  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pItem$[rsp]
  00043	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN1@simple_vm_:
; Line 80
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	c3		 ret	 0
simple_vm_gc_deleteitem_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
ptr$ = 56
size$ = 64
simple_state_realloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 192
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 193
  00013	48 8b 54 24 40	 mov	 rdx, QWORD PTR size$[rsp]
  00018	48 8b 4c 24 38	 mov	 rcx, QWORD PTR ptr$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_realloc
; Line 194
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
simple_state_realloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
nitems$ = 56
size$ = 64
simple_state_calloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 187
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 188
  00013	48 8b 54 24 40	 mov	 rdx, QWORD PTR size$[rsp]
  00018	48 8b 4c 24 38	 mov	 rcx, QWORD PTR nitems$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_calloc
; Line 189
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
simple_state_calloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
pMemory$ = 56
simple_state_free PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 177
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 182
  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pMemory$[rsp]
  00013	e8 00 00 00 00	 call	 simple_free
; Line 184
  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
simple_state_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
size$ = 56
simple_state_malloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 163
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 173
  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR size$[rsp]
  00013	e8 00 00 00 00	 call	 simple_malloc
; Line 174
  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
simple_state_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
ptr$ = 48
size$ = 56
simple_realloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 157
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 158
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR size$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  00018	e8 00 00 00 00	 call	 realloc
; Line 159
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
simple_realloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nitems$ = 48
size$ = 56
simple_calloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 152
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 153
  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR size$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nitems$[rsp]
  00018	e8 00 00 00 00	 call	 calloc
; Line 154
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
simple_calloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
ptr$ = 48
simple_free PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 147
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 148
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  0000e	e8 00 00 00 00	 call	 free
; Line 149
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
simple_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
size$ = 48
simple_malloc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 142
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 143
  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR size$[rsp]
  0000e	e8 00 00 00 00	 call	 malloc
; Line 144
  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
simple_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 8
simple_vm_gc_newitemreference PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 136
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 137
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR pItem$[rsp]
  0000a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0000d	ff c0		 inc	 eax
  0000f	48 8b 4c 24 08	 mov	 rcx, QWORD PTR pItem$[rsp]
  00014	89 41 10	 mov	 DWORD PTR [rcx+16], eax
; Line 138
  00017	c3		 ret	 0
simple_vm_gc_newitemreference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pScope$ = 40
list$ = 48
vm$ = 80
simple_vm_gc_deletetemlists PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 92
$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 96
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  00015	85 c0		 test	 eax, eax
  00017	74 05		 je	 SHORT $LN9@simple_vm_
; Line 97
  00019	e9 0b 01 00 00	 jmp	 $LN10@simple_vm_
$LN9@simple_vm_:
; Line 114
  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00023	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  0002a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0002d	ff c8		 dec	 eax
  0002f	8b d0		 mov	 edx, eax
  00031	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00036	48 8b 88 38 18
	00 00		 mov	 rcx, QWORD PTR [rax+6200]
  0003d	e8 00 00 00 00	 call	 simple_list_getlist
  00042	48 89 44 24 28	 mov	 QWORD PTR pScope$[rsp], rax
; Line 116
  00047	48 8b 44 24 28	 mov	 rax, QWORD PTR pScope$[rsp]
  0004c	83 78 10 01	 cmp	 DWORD PTR [rax+16], 1
  00050	0f 8c b2 00 00
	00		 jl	 $LN8@simple_vm_
; Line 117
  00056	48 8b 44 24 28	 mov	 rax, QWORD PTR pScope$[rsp]
  0005b	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0005e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  00062	eb 0a		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
  00064	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00068	ff c8		 dec	 eax
  0006a	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN7@simple_vm_:
  0006e	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  00073	0f 8c 8f 00 00
	00		 jl	 $LN5@simple_vm_
; Line 118
  00079	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  0007d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pScope$[rsp]
  00082	e8 00 00 00 00	 call	 simple_list_getlist
  00087	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 119
  0008c	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00091	83 78 10 05	 cmp	 DWORD PTR [rax+16], 5
  00095	74 02		 je	 SHORT $LN4@simple_vm_
; Line 120
  00097	eb cb		 jmp	 SHORT $LN6@simple_vm_
$LN4@simple_vm_:
; Line 122
  00099	ba 01 00 00 00	 mov	 edx, 1
  0009e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000a3	e8 00 00 00 00	 call	 simple_list_getitem
  000a8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82478
  000b3	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000b6	e8 00 00 00 00	 call	 strcmp
  000bb	85 c0		 test	 eax, eax
  000bd	75 10		 jne	 SHORT $LN3@simple_vm_
; Line 123
  000bf	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000c3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pScope$[rsp]
  000c8	e8 00 00 00 00	 call	 simple_list_deleteitem
  000cd	eb 34		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 125
  000cf	ba 01 00 00 00	 mov	 edx, 1
  000d4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000d9	e8 00 00 00 00	 call	 simple_list_getitem
  000de	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82481
  000e9	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000ec	e8 00 00 00 00	 call	 strcmp
  000f1	85 c0		 test	 eax, eax
  000f3	75 0e		 jne	 SHORT $LN1@simple_vm_
; Line 126
  000f5	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  000f9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pScope$[rsp]
  000fe	e8 00 00 00 00	 call	 simple_list_deleteitem
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 128
  00103	e9 5c ff ff ff	 jmp	 $LN6@simple_vm_
$LN5@simple_vm_:
$LN8@simple_vm_:
; Line 131
  00108	48 8b 44 24 28	 mov	 rax, QWORD PTR pScope$[rsp]
  0010d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00111	e8 00 00 00 00	 call	 simple_hashtable_delete
  00116	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pScope$[rsp]
  0011b	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; Line 132
  0011f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pScope$[rsp]
  00124	e8 00 00 00 00	 call	 simple_list_genhashtable2
$LN10@simple_vm_:
; Line 133
  00129	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0012d	c3		 ret	 0
simple_vm_gc_deletetemlists ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_gc_killreference PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 83
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 85
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00015	48 6b c0 18	 imul	 rax, 24
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00022	c1 e8 05	 shr	 eax, 5
  00025	83 e0 03	 and	 eax, 3
  00028	83 f8 01	 cmp	 eax, 1
  0002b	75 29		 jne	 SHORT $LN1@simple_vm_
; Line 86
  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00032	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00039	48 6b c0 18	 imul	 rax, 24
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00042	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  00047	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 87
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  00051	e8 00 00 00 00	 call	 simple_vm_gc_checkupdatereference
$LN1@simple_vm_:
; Line 89
  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	c3		 ret	 0
simple_vm_gc_killreference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 48
simple_vm_gc_deleteitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 197
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 198
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR pItem$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_vm_gc_deleteitem_gc
; Line 199
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_vm_gc_deleteitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
list$ = 64
simple_vm_gc_checkupdatereference PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 57
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 60
  00009	ba 02 00 00 00	 mov	 edx, 2
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00013	e8 00 00 00 00	 call	 simple_list_getitem
  00018	83 78 08 04	 cmp	 DWORD PTR [rax+8], 4
  0001c	75 37		 jne	 SHORT $LN2@simple_vm_
; Line 61
  0001e	ba 04 00 00 00	 mov	 edx, 4
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00028	e8 00 00 00 00	 call	 simple_list_getitem
  0002d	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00031	75 22		 jne	 SHORT $LN1@simple_vm_
; Line 62
  00033	ba 03 00 00 00	 mov	 edx, 3
  00038	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0003d	e8 00 00 00 00	 call	 simple_list_getitem
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 63
  0004b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pItem$[rsp]
  00050	e8 00 00 00 00	 call	 simple_item_delete
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 66
  00055	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00059	c3		 ret	 0
simple_vm_gc_checkupdatereference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 0
pointer$ = 32
nType$ = 40
simple_vm_gc_checknewreference PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 40
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 18	 sub	 rsp, 24
; Line 47
  0000d	83 7c 24 28 02	 cmp	 DWORD PTR nType$[rsp], 2
  00012	75 19		 jne	 SHORT $LN1@simple_vm_
; Line 48
  00014	48 8b 44 24 20	 mov	 rax, QWORD PTR pointer$[rsp]
  00019	48 89 04 24	 mov	 QWORD PTR pItem$[rsp], rax
; Line 49
  0001d	48 8b 04 24	 mov	 rax, QWORD PTR pItem$[rsp]
  00021	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00024	ff c0		 inc	 eax
  00026	48 8b 0c 24	 mov	 rcx, QWORD PTR pItem$[rsp]
  0002a	89 41 10	 mov	 DWORD PTR [rcx+16], eax
$LN1@simple_vm_:
; Line 54
  0002d	48 83 c4 18	 add	 rsp, 24
  00031	c3		 ret	 0
simple_vm_gc_checknewreference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list2$ = 40
list$ = 48
pItem$ = 56
vm$ = 80
simple_vm_gc_checkreferences PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vmgc.c
; Line 17
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 22
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  00015	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00018	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 38 18
	00 00		 mov	 rcx, QWORD PTR [rax+6200]
  00024	e8 00 00 00 00	 call	 simple_list_getlist
  00029	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 23
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00033	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00036	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  0003a	eb 0a		 jmp	 SHORT $LN6@simple_vm_
$LN5@simple_vm_:
  0003c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00040	ff c8		 dec	 eax
  00042	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_vm_:
  00046	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  0004b	7c 6c		 jl	 SHORT $LN4@simple_vm_
; Line 24
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00056	e8 00 00 00 00	 call	 simple_list_getlist
  0005b	48 89 44 24 28	 mov	 QWORD PTR list2$[rsp], rax
; Line 25
  00060	48 8b 44 24 28	 mov	 rax, QWORD PTR list2$[rsp]
  00065	83 78 10 05	 cmp	 DWORD PTR [rax+16], 5
  00069	75 4c		 jne	 SHORT $LN3@simple_vm_
; Line 26
  0006b	ba 02 00 00 00	 mov	 edx, 2
  00070	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  00075	e8 00 00 00 00	 call	 simple_list_getitem
  0007a	83 78 08 04	 cmp	 DWORD PTR [rax+8], 4
  0007e	75 37		 jne	 SHORT $LN2@simple_vm_
; Line 27
  00080	ba 04 00 00 00	 mov	 edx, 4
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  0008a	e8 00 00 00 00	 call	 simple_list_getitem
  0008f	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00093	75 22		 jne	 SHORT $LN1@simple_vm_
; Line 28
  00095	ba 03 00 00 00	 mov	 edx, 3
  0009a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list2$[rsp]
  0009f	e8 00 00 00 00	 call	 simple_list_getitem
  000a4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a8	48 89 44 24 38	 mov	 QWORD PTR pItem$[rsp], rax
; Line 32
  000ad	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pItem$[rsp]
  000b2	e8 00 00 00 00	 call	 simple_item_delete
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN3@simple_vm_:
; Line 36
  000b7	eb 83		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
; Line 37
  000b9	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000bd	c3		 ret	 0
simple_vm_gc_checkreferences ENDP
_TEXT	ENDS
END
