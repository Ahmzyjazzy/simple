; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
$SG82959 DB	01H DUP (?)
$SG82449 DB	01H DUP (?)
$SG82450 DB	01H DUP (?)
$SG82871 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG82432 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82477 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82504 DB	'RUNTIME ERROR 3 : Stack Overflow ', 00H
	ORG $+2
$SG82738 DB	': ', 00H
	ORG $+1
$SG82510 DB	0aH, 'VM Pointer  : %p  ', 00H
$SG82833 DB	'at ', 00H
$SG82511 DB	0aH, 'Operation  : %s  ', 00H
	ORG $+1
$SG82834 DB	'%s', 00H
	ORG $+1
$SG82512 DB	0aH, 'PC         : %d  ', 00H
	ORG $+1
$SG82841 DB	'%s', 00H
	ORG $+1
$SG82513 DB	0aH, 'Line Number    : %d  , File %s ', 0aH, ' ', 00H
	ORG $+1
$SG82869 DB	0aH, 00H
	ORG $+2
$SG82516 DB	0aH, 'Data       : %s ', 0aH, 00H
	ORG $+1
$SG82888 DB	09H, 00H
	ORG $+2
$SG82519 DB	0aH, 'sp (After) : %d  - BlockSP : %d ', 0aH, ' LineNumbe'
	DB	'r %d ', 0aH, 00H
	ORG $+1
$SG82889 DB	'tab', 00H
$SG82521 DB	'RUNTIME ERROR 3 : Stack Overflow ', 00H
	ORG $+2
$SG82640 DB	'self', 00H
	ORG $+3
$SG82844 DB	'In %s ', 00H
	ORG $+1
$SG82890 DB	0dH, 00H
	ORG $+2
$SG82643 DB	'braceerror', 00H
	ORG $+1
$SG82891 DB	'cr', 00H
	ORG $+1
$SG82644 DB	'braceerror()', 00H
	ORG $+3
$SG82664 DB	'executeCode', 00H
	ORG $+4
$SG82665 DB	'executeCode', 00H
	ORG $+4
$SG82671 DB	'Error in executeCode!', 00H
	ORG $+2
$SG82680 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82687 DB	'Error in executeCode!', 00H
	ORG $+2
$SG82698 DB	0aH, 'Error (E4) : Long VM Instruction! ', 0aH, 00H
	ORG $+3
$SG82699 DB	'In File : %s  - Byte-Code PC : %d  ', 00H
	ORG $+4
$SG82729 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82771 DB	'Simple_EmbeddedCode', 00H
	ORG $+4
$SG82772 DB	'Simple_EmbeddedCode', 00H
	ORG $+4
$SG82781 DB	'operator', 00H
	ORG $+7
$SG82787 DB	0aH, '*****************************************', 0aH, 00H
	ORG $+4
$SG82788 DB	'Stack Size %d ', 0aH, 00H
$SG82794 DB	'(String) : %s  ', 0aH, 00H
	ORG $+7
$SG82797 DB	'(Number) : %f  ', 0aH, 00H
	ORG $+7
$SG82800 DB	'(Pointer) : %p  ', 0aH, 00H
	ORG $+6
$SG82802 DB	'(Pointer Type) : Variable ', 0aH, 00H
	ORG $+4
$SG82806 DB	'(Pointer Type) : ListItem ', 0aH, 00H
	ORG $+4
$SG82808 DB	0aH, '*****************************************', 0aH, 00H
	ORG $+4
$SG82824 DB	0aH, 'Line %d -> %s ', 0aH, 00H
	ORG $+3
$SG82831 DB	09H, 'at ', 00H
	ORG $+7
$SG82835 DB	'() in file ', 00H
	ORG $+4
$SG82842 DB	0aH, 09H, 'at line %d ', 00H
	ORG $+2
$SG82846 DB	'in file %s ', 00H
	ORG $+4
$SG82850 DB	09H, 'in file %s ', 00H
	ORG $+3
$SG82867 DB	'true', 00H
	ORG $+3
$SG82868 DB	'false', 00H
	ORG $+2
$SG82870 DB	'crlf', 00H
	ORG $+3
$SG82872 DB	'null', 00H
	ORG $+3
$SG82874 DB	'simple_gettemp_var', 00H
	ORG $+1
$SG82875 DB	'NULL', 00H
	ORG $+7
$SG82876 DB	'__err__', 00H
$SG82878 DB	'simple_settemp_var', 00H
	ORG $+5
$SG82879 DB	'simple_tempflag_var', 00H
$SG82880 DB	'file', 00H
	ORG $+3
$SG82881 DB	'stdin', 00H
	ORG $+2
$SG82882 DB	'file', 00H
	ORG $+3
$SG82883 DB	'stdout', 00H
	ORG $+1
$SG82884 DB	'file', 00H
	ORG $+3
$SG82885 DB	'stderr', 00H
	ORG $+1
$SG82887 DB	'this', 00H
	ORG $+7
$SG82892 DB	'cmdparams', 00H
_DATA	ENDS
PUBLIC	simple_vm_new
PUBLIC	simple_vm_delete
PUBLIC	simple_vm_loadcode
PUBLIC	simple_vm_start
PUBLIC	simple_vm_fetch
PUBLIC	simple_vm_fetch2
PUBLIC	simple_vm_execute
PUBLIC	simple_vm_error
PUBLIC	simple_vm_exec
PUBLIC	simple_vm_tobytecode
PUBLIC	simple_vm_error2
PUBLIC	simple_vm_newbytecodeitem
PUBLIC	simple_vm_mainloop
PUBLIC	simple_vm_runcode
PUBLIC	simple_vm_init
PUBLIC	simple_vm_printstack
PUBLIC	simple_vm_showerrormessage
PUBLIC	simple_vm_addglobalvariables
PUBLIC	simple_vm_setfilename
PUBLIC	simple_vm_loadaddressfirst
PUBLIC	simple_vm_endblockexec
PUBLIC	simple_vm_returneval
PUBLIC	simple_vm_retitemref
PUBLIC	simple_vm_callclassinit
PUBLIC	simple_vm_mutexblocks
PUBLIC	simple_vm_mutexlock
PUBLIC	simple_vm_mutexunlock
PUBLIC	simple_vm_mutexdestroy
PUBLIC	simple_vm_runcodefromthread
PUBLIC	simple_vm_traceevent
PUBLIC	simple_vm_callblock
PUBLIC	__real@3ff0000000000000
EXTRN	exit:PROC
EXTRN	__iob_func:PROC
EXTRN	printf:PROC
EXTRN	strcmp:PROC
EXTRN	strlen:PROC
EXTRN	file_real_name:PROC
EXTRN	simple_string_new_gc:PROC
EXTRN	simple_string_delete_gc:PROC
EXTRN	simple_string_size:PROC
EXTRN	simple_string_add_gc:PROC
EXTRN	simple_string_lower:PROC
EXTRN	simple_item_print:PROC
EXTRN	simple_item_content_delete:PROC
EXTRN	simple_itemarray_setdouble:PROC
EXTRN	simple_itemarray_setstring2:PROC
EXTRN	simple_list_new_gc:PROC
EXTRN	simple_list_getitem:PROC
EXTRN	simple_list_delete_gc:PROC
EXTRN	simple_list_deleteitem_gc:PROC
EXTRN	simple_list_print:PROC
EXTRN	simple_list_setint_gc:PROC
EXTRN	simple_list_addint_gc:PROC
EXTRN	simple_list_adddouble_gc:PROC
EXTRN	simple_list_setstsimple_gc:PROC
EXTRN	simple_list_addstring_gc:PROC
EXTRN	simple_list_setlist_gc:PROC
EXTRN	simple_list_getlist:PROC
EXTRN	simple_list_deleteallitems_gc:PROC
EXTRN	simple_list_genarray:PROC
EXTRN	simple_list_copy:PROC
EXTRN	simple_list_genhashtable2:PROC
EXTRN	finalize:PROC
EXTRN	simple_state_cgiheader:PROC
EXTRN	print_line:PROC
EXTRN	create_instance:PROC
EXTRN	execute_code:PROC
EXTRN	new_simple_scanner:PROC
EXTRN	delete_simple_scanner:PROC
EXTRN	simple_scanner_readchar:PROC
EXTRN	simple_scanner_checklasttoken:PROC
EXTRN	simple_scanner_endofline:PROC
EXTRN	simple_scanner_addreturn:PROC
EXTRN	simple_scanner_addreturn2:PROC
EXTRN	simple_scanner_addreturn3:PROC
EXTRN	simple_parser_start:PROC
EXTRN	simple_vm_pushv:PROC
EXTRN	simple_vm_loadaddress:PROC
EXTRN	simple_vm_assignment:PROC
EXTRN	simple_vm_inc:PROC
EXTRN	simple_vm_loadapushv:PROC
EXTRN	simple_vm_newline:PROC
EXTRN	simple_vm_freestack:PROC
EXTRN	simple_vm_setreference:PROC
EXTRN	simple_vm_assignmentpointer:PROC
EXTRN	simple_vm_freeloadaddressscope:PROC
EXTRN	simple_vm_equal:PROC
EXTRN	simple_vm_lessequal:PROC
EXTRN	simple_vm_less:PROC
EXTRN	simple_vm_greater:PROC
EXTRN	simple_vm_greaterequal:PROC
EXTRN	simple_vm_notequal:PROC
EXTRN	simple_vm_sum:PROC
EXTRN	simple_vm_sub:PROC
EXTRN	simple_vm_mul:PROC
EXTRN	simple_vm_div:PROC
EXTRN	simple_vm_mod:PROC
EXTRN	simple_vm_neg:PROC
EXTRN	simple_vm_plusplus:PROC
EXTRN	simple_vm_minusminus:PROC
EXTRN	simple_vm_and:PROC
EXTRN	simple_vm_or:PROC
EXTRN	simple_vm_not:PROC
EXTRN	simple_vm_newscope:PROC
EXTRN	simple_vm_findvar:PROC
EXTRN	simple_vm_newvar2:PROC
EXTRN	simple_vm_addnewnumbervar:PROC
EXTRN	simple_vm_addnewstringvar:PROC
EXTRN	simple_vm_addnewpointervar:PROC
EXTRN	simple_vm_addnewcpointervar:PROC
EXTRN	simple_vm_jump:PROC
EXTRN	simple_vm_jumpzero:PROC
EXTRN	simple_vm_jumpfor:PROC
EXTRN	simple_vm_jumpone:PROC
EXTRN	simple_vm_jumpzero2:PROC
EXTRN	simple_vm_jumpone2:PROC
EXTRN	simple_vm_liststart:PROC
EXTRN	simple_vm_listitem:PROC
EXTRN	simple_vm_listend:PROC
EXTRN	simple_vm_loadindexaddress:PROC
EXTRN	simple_vm_loadblock:PROC
EXTRN	simple_vm_loadblock2:PROC
EXTRN	simple_vm_call:PROC
EXTRN	simple_vm_call2:PROC
EXTRN	simple_vm_return:PROC
EXTRN	simple_vm_returnnull:PROC
EXTRN	simple_vm_newblock:PROC
EXTRN	simple_vm_blockflag:PROC
EXTRN	simple_vm_blockflag2:PROC
EXTRN	simple_vm_anonymous:PROC
EXTRN	simple_vm_display:PROC
EXTRN	simple_vm_read:PROC
EXTRN	simple_vm_try:PROC
EXTRN	simple_vm_catch:PROC
EXTRN	simple_vm_finally:PROC
EXTRN	simple_vm_dup:PROC
EXTRN	simple_vm_range:PROC
EXTRN	simple_vm_oop_newobj:PROC
EXTRN	simple_vm_oop_property:PROC
EXTRN	simple_vm_oop_isobject:PROC
EXTRN	simple_vm_oop_getobj:PROC
EXTRN	simple_vm_oop_loadmethod:PROC
EXTRN	simple_vm_oop_aftercallmethod:PROC
EXTRN	simple_vm_oop_setscope:PROC
EXTRN	simple_vm_oop_newclass:PROC
EXTRN	simple_vm_oop_bracestart:PROC
EXTRN	simple_vm_oop_braceend:PROC
EXTRN	simple_vm_oop_import:PROC
EXTRN	simple_vm_oop_callmethodinsideclass:PROC
EXTRN	simple_vm_oop_setproperty:PROC
EXTRN	simple_vm_oop_isblock:PROC
EXTRN	simple_vm_pushp:PROC
EXTRN	simple_vm_incp:PROC
EXTRN	simple_vm_pushpv:PROC
EXTRN	simple_vm_incjump:PROC
EXTRN	simple_vm_incpjump:PROC
EXTRN	simple_vm_jumpvarlenum:PROC
EXTRN	simple_vm_jumpvarplenum:PROC
EXTRN	simple_vm_loadblockp:PROC
EXTRN	simple_vm_pushplocal:PROC
EXTRN	simple_vm_inclpjump:PROC
EXTRN	simple_vm_jumpvarlplenum:PROC
EXTRN	simple_vm_incpjumpstep1:PROC
EXTRN	simple_vm_jumpvarplenumstep1:PROC
EXTRN	exit_simple_vm:PROC
EXTRN	simple_vm_exitmark:PROC
EXTRN	simple_vm_popexitmark:PROC
EXTRN	simple_vm_exit:PROC
EXTRN	simple_vm_savestack:PROC
EXTRN	simple_vm_restorestack:PROC
EXTRN	simple_vm_bitand:PROC
EXTRN	simple_vm_bitor:PROC
EXTRN	simple_vm_bitxor:PROC
EXTRN	simple_vm_bitnot:PROC
EXTRN	simple_vm_bitshl:PROC
EXTRN	simple_vm_bitshr:PROC
EXTRN	simple_vm_stepnumber:PROC
EXTRN	simple_vm_popstep:PROC
EXTRN	simple_vm_newglobalscope:PROC
EXTRN	simple_vm_endglobalscope:PROC
EXTRN	simple_vm_setglobalscope:PROC
EXTRN	simple_vm_getglobalscope:PROC
EXTRN	simple_vm_gc_killreference:PROC
EXTRN	simple_state_malloc:PROC
EXTRN	simple_state_free:PROC
EXTRN	simple_state_calloc:PROC
EXTRN	simple_state_realloc:PROC
EXTRN	loadcblocks:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	SIMPLE_IC_OP:BYTE
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
pdata	SEGMENT
$pdata$simple_vm_new DD imagerel $LN8
	DD	imagerel $LN8+1962
	DD	imagerel $unwind$simple_vm_new
$pdata$simple_vm_delete DD imagerel $LN9
	DD	imagerel $LN9+1349
	DD	imagerel $unwind$simple_vm_delete
$pdata$simple_vm_loadcode DD imagerel $LN7
	DD	imagerel $LN7+178
	DD	imagerel $unwind$simple_vm_loadcode
$pdata$simple_vm_start DD imagerel $LN4
	DD	imagerel $LN4+175
	DD	imagerel $unwind$simple_vm_start
$pdata$simple_vm_fetch DD imagerel $LN4
	DD	imagerel $LN4+159
	DD	imagerel $unwind$simple_vm_fetch
$pdata$simple_vm_fetch2 DD imagerel $LN8
	DD	imagerel $LN8+453
	DD	imagerel $unwind$simple_vm_fetch2
$pdata$simple_vm_execute DD imagerel $LN108
	DD	imagerel $LN108+2244
	DD	imagerel $unwind$simple_vm_execute
$pdata$simple_vm_error DD imagerel $LN12
	DD	imagerel $LN12+510
	DD	imagerel $unwind$simple_vm_error
$pdata$simple_vm_exec DD imagerel $LN20
	DD	imagerel $LN20+1130
	DD	imagerel $unwind$simple_vm_exec
$pdata$simple_vm_tobytecode DD imagerel $LN16
	DD	imagerel $LN16+379
	DD	imagerel $unwind$simple_vm_tobytecode
$pdata$simple_vm_error2 DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$simple_vm_error2
$pdata$simple_vm_newbytecodeitem DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$simple_vm_newbytecodeitem
$pdata$simple_vm_mainloop DD imagerel $LN13
	DD	imagerel $LN13+177
	DD	imagerel $unwind$simple_vm_mainloop
$pdata$simple_vm_runcode DD imagerel $LN6
	DD	imagerel $LN6+484
	DD	imagerel $unwind$simple_vm_runcode
$pdata$simple_vm_init DD imagerel $LN6
	DD	imagerel $LN6+291
	DD	imagerel $unwind$simple_vm_init
$pdata$simple_vm_printstack DD imagerel $LN15
	DD	imagerel $LN15+551
	DD	imagerel $unwind$simple_vm_printstack
$pdata$simple_vm_showerrormessage DD imagerel $LN19
	DD	imagerel $LN19+605
	DD	imagerel $unwind$simple_vm_showerrormessage
$pdata$simple_vm_addglobalvariables DD imagerel $LN6
	DD	imagerel $LN6+606
	DD	imagerel $unwind$simple_vm_addglobalvariables
$pdata$simple_vm_loadaddressfirst DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$simple_vm_loadaddressfirst
$pdata$simple_vm_returneval DD imagerel $LN8
	DD	imagerel $LN8+479
	DD	imagerel $unwind$simple_vm_returneval
$pdata$simple_vm_retitemref DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$simple_vm_retitemref
$pdata$simple_vm_mutexblocks DD imagerel $LN4
	DD	imagerel $LN4+111
	DD	imagerel $unwind$simple_vm_mutexblocks
$pdata$simple_vm_mutexlock DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$simple_vm_mutexlock
$pdata$simple_vm_mutexunlock DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$simple_vm_mutexunlock
$pdata$simple_vm_mutexdestroy DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$simple_vm_mutexdestroy
$pdata$simple_vm_runcodefromthread DD imagerel $LN3
	DD	imagerel $LN3+1063
	DD	imagerel $unwind$simple_vm_runcodefromthread
$pdata$simple_vm_traceevent DD imagerel $LN6
	DD	imagerel $LN6+483
	DD	imagerel $unwind$simple_vm_traceevent
$pdata$simple_vm_callblock DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$simple_vm_callblock
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
xdata	SEGMENT
$unwind$simple_vm_new DD 010901H
	DD	06209H
$unwind$simple_vm_delete DD 010901H
	DD	08209H
$unwind$simple_vm_loadcode DD 010901H
	DD	06209H
$unwind$simple_vm_start DD 010e01H
	DD	0420eH
$unwind$simple_vm_fetch DD 010901H
	DD	04209H
$unwind$simple_vm_fetch2 DD 010901H
	DD	04209H
$unwind$simple_vm_execute DD 010901H
	DD	08209H
$unwind$simple_vm_error DD 010e01H
	DD	0620eH
$unwind$simple_vm_exec DD 011d19H
	DD	0e20eH
	DD	imagerel __GSHandlerCheck
	DD	060H
$unwind$simple_vm_tobytecode DD 010d01H
	DD	0820dH
$unwind$simple_vm_error2 DD 011301H
	DD	06213H
$unwind$simple_vm_newbytecodeitem DD 010d01H
	DD	0620dH
$unwind$simple_vm_mainloop DD 010901H
	DD	04209H
$unwind$simple_vm_runcode DD 010e01H
	DD	0a20eH
$unwind$simple_vm_init DD 010901H
	DD	08209H
$unwind$simple_vm_printstack DD 010901H
	DD	06209H
$unwind$simple_vm_showerrormessage DD 010e01H
	DD	0820eH
$unwind$simple_vm_addglobalvariables DD 010901H
	DD	06209H
$unwind$simple_vm_loadaddressfirst DD 010901H
	DD	04209H
$unwind$simple_vm_returneval DD 011819H
	DD	08209H
	DD	imagerel __GSHandlerCheck
	DD	038H
$unwind$simple_vm_retitemref DD 010901H
	DD	06209H
$unwind$simple_vm_mutexblocks DD 011801H
	DD	04218H
$unwind$simple_vm_mutexlock DD 010901H
	DD	04209H
$unwind$simple_vm_mutexunlock DD 010901H
	DD	04209H
$unwind$simple_vm_mutexdestroy DD 010901H
	DD	04209H
$unwind$simple_vm_runcodefromthread DD 010e01H
	DD	0c20eH
$unwind$simple_vm_traceevent DD 010d01H
	DD	0620dH
$unwind$simple_vm_callblock DD 010e01H
	DD	0420eH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
cBlockName$ = 56
simple_vm_callblock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1335
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1337
  0000e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cBlockName$[rsp]
  00013	e8 00 00 00 00	 call	 simple_string_lower
; Line 1339
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00024	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0002d	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00039	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00040	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 1341
  00045	45 33 c0	 xor	 r8d, r8d
  00048	48 8b 54 24 38	 mov	 rdx, QWORD PTR cBlockName$[rsp]
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00052	e8 00 00 00 00	 call	 simple_vm_loadblock2
; Line 1342
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0005c	e8 00 00 00 00	 call	 simple_vm_call2
; Line 1344
  00061	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00066	e8 00 00 00 00	 call	 simple_vm_mainloop
; Line 1346
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00070	e8 00 00 00 00	 call	 simple_vm_freestack
; Line 1348
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0007a	c7 80 fc 18 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+6396], 1
; Line 1349
  00084	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00088	c3		 ret	 0
simple_vm_callblock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
nEvent$ = 72
simple_vm_traceevent PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1353
$LN6:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1355
  0000d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00012	0f be 80 e0 19
	00 00		 movsx	 eax, BYTE PTR [rax+6624]
  00019	83 f8 01	 cmp	 eax, 1
  0001c	0f 85 bc 01 00
	00		 jne	 $LN3@simple_vm_
  00022	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00027	0f be 80 f0 19
	00 00		 movsx	 eax, BYTE PTR [rax+6640]
  0002e	85 c0		 test	 eax, eax
  00030	0f 85 a8 01 00
	00		 jne	 $LN3@simple_vm_
; Line 1356
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	c6 80 f0 19 00
	00 01		 mov	 BYTE PTR [rax+6640], 1
; Line 1357
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00047	0f b6 4c 24 48	 movzx	 ecx, BYTE PTR nEvent$[rsp]
  0004c	88 88 f1 19 00
	00		 mov	 BYTE PTR [rax+6641], cl
; Line 1359
  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00057	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00063	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0006a	e8 00 00 00 00	 call	 simple_list_deleteallitems_gc
; Line 1361
  0006f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00074	f2 0f 2a 80 68
	18 00 00	 cvtsi2sd xmm0, DWORD PTR [rax+6248]
  0007c	0f 28 d0	 movaps	 xmm2, xmm0
  0007f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00084	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  0008b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00090	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00097	e8 00 00 00 00	 call	 simple_list_adddouble_gc
; Line 1363
  0009c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000a1	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ad	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  000b4	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000b9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000c0	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1365
  000c5	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  000d1	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  000d5	0f 8e 8e 00 00
	00		 jle	 $LN2@simple_vm_
; Line 1366
  000db	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e0	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  000e7	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  000ea	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000ef	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  000f6	e8 00 00 00 00	 call	 simple_list_getlist
  000fb	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1367
  00100	ba 02 00 00 00	 mov	 edx, 2
  00105	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0010a	e8 00 00 00 00	 call	 simple_list_getitem
  0010f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00113	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00116	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0011b	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  00122	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00127	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0012e	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1369
  00133	ba 08 00 00 00	 mov	 edx, 8
  00138	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0013d	e8 00 00 00 00	 call	 simple_list_getitem
  00142	f2 0f 2a 40 08	 cvtsi2sd xmm0, DWORD PTR [rax+8]
  00147	0f 28 d0	 movaps	 xmm2, xmm0
  0014a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0014f	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  00156	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0015b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00162	e8 00 00 00 00	 call	 simple_list_adddouble_gc
; Line 1371
  00167	eb 44		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1372
  00169	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82959
  00170	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00175	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  0017c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00181	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00188	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1374
  0018d	0f 57 d2	 xorps	 xmm2, xmm2
  00190	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00195	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  0019c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001a1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001a8	e8 00 00 00 00	 call	 simple_list_adddouble_gc
$LN1@simple_vm_:
; Line 1377
  001ad	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001b2	48 8b 80 e8 19
	00 00		 mov	 rax, QWORD PTR [rax+6632]
  001b9	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001c1	e8 00 00 00 00	 call	 simple_vm_runcode
; Line 1378
  001c6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001cb	c6 80 f0 19 00
	00 00		 mov	 BYTE PTR [rax+6640], 0
; Line 1379
  001d2	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001d7	c6 80 f1 19 00
	00 00		 mov	 BYTE PTR [rax+6641], 0
$LN3@simple_vm_:
; Line 1381
  001de	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001e2	c3		 ret	 0
simple_vm_traceevent ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 32
list$ = 40
list2$ = 48
list3$ = 56
list4$ = 64
list5$ = 72
pItem$ = 80
vm$ = 112
cStr$ = 120
simple_vm_runcodefromthread PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1269
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 68	 sub	 rsp, 104		; 00000068H
; Line 1274
  0000e	e8 00 00 00 00	 call	 create_instance
  00013	48 89 44 24 20	 mov	 QWORD PTR pState$[rsp], rax
; Line 1275
  00018	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00024	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00027	c1 e8 06	 shr	 eax, 6
  0002a	83 e0 01	 and	 eax, 1
  0002d	83 e0 01	 and	 eax, 1
  00030	c1 e0 06	 shl	 eax, 6
  00033	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00038	8b 49 38	 mov	 ecx, DWORD PTR [rcx+56]
  0003b	83 e1 bf	 and	 ecx, -65		; ffffffbfH
  0003e	0b c8		 or	 ecx, eax
  00040	8b c1		 mov	 eax, ecx
  00042	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	89 41 38	 mov	 DWORD PTR [rcx+56], eax
; Line 1277
  0004a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  0004f	e8 00 00 00 00	 call	 simple_vm_mutexlock
; Line 1278
  00054	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00059	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0005d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  00062	48 8b 89 b0 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6576]
  00069	48 89 88 b0 19
	00 00		 mov	 QWORD PTR [rax+6576], rcx
; Line 1279
  00070	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00075	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00079	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  0007e	48 8b 89 98 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6552]
  00085	48 89 88 98 19
	00 00		 mov	 QWORD PTR [rax+6552], rcx
; Line 1280
  0008c	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00091	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00095	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  0009a	48 8b 89 a0 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6560]
  000a1	48 89 88 a0 19
	00 00		 mov	 QWORD PTR [rax+6560], rcx
; Line 1281
  000a8	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  000ad	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  000b1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  000b6	48 8b 89 a8 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6568]
  000bd	48 89 88 a8 19
	00 00		 mov	 QWORD PTR [rax+6568], rcx
; Line 1283
  000c4	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  000c9	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  000cd	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  000d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000da	48 89 44 24 50	 mov	 QWORD PTR pItem$[rsp], rax
; Line 1284
  000df	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  000e4	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  000eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ee	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  000f3	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  000f7	48 8b 89 38 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6200]
  000fe	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00101	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 1286
  00107	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0010c	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00110	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00114	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1287
  00119	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0011e	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00122	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00126	48 89 44 24 30	 mov	 QWORD PTR list2$[rsp], rax
; Line 1288
  0012b	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00130	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00134	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00138	48 89 44 24 38	 mov	 QWORD PTR list3$[rsp], rax
; Line 1289
  0013d	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00142	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00146	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0014a	48 89 44 24 40	 mov	 QWORD PTR list4$[rsp], rax
; Line 1290
  0014f	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00154	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00158	48 8b 80 98 18
	00 00		 mov	 rax, QWORD PTR [rax+6296]
  0015f	48 89 44 24 48	 mov	 QWORD PTR list5$[rsp], rax
; Line 1292
  00164	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00169	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00170	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00175	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00179	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0017d	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; Line 1293
  00181	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00186	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  0018d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00192	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00196	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0019a	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; Line 1294
  0019e	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001a3	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  001aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  001af	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  001b3	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  001b7	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
; Line 1295
  001bb	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  001c0	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  001c4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  001c9	48 8b 89 98 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6296]
  001d0	48 89 88 98 18
	00 00		 mov	 QWORD PTR [rax+6296], rcx
; Line 1296
  001d7	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001dc	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  001e3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  001e8	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  001ec	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax
; Line 1297
  001f0	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  001f5	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  001fc	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00201	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00205	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
; Line 1298
  00209	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0020e	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00215	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  0021a	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0021e	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax
; Line 1299
  00222	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00227	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  0022e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00233	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00237	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
; Line 1301
  0023b	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00240	8b 80 ec 18 00
	00		 mov	 eax, DWORD PTR [rax+6380]
  00246	05 10 27 00 00	 add	 eax, 10000		; 00002710H
  0024b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00250	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00254	89 81 ec 18 00
	00		 mov	 DWORD PTR [rcx+6380], eax
; Line 1302
  0025a	33 d2		 xor	 edx, edx
  0025c	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  00261	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00268	e8 00 00 00 00	 call	 simple_list_new_gc
  0026d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  00272	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00276	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; Line 1303
  0027a	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  0027f	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00286	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  0028b	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  0028f	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  00293	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00297	e8 00 00 00 00	 call	 simple_list_copy
; Line 1304
  0029c	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  002a1	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  002a5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  002aa	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002ae	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax
; Line 1305
  002b2	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  002b7	48 8b 48 48	 mov	 rcx, QWORD PTR [rax+72]
  002bb	e8 00 00 00 00	 call	 simple_vm_loadcode
; Line 1307
  002c0	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  002c5	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  002c9	c7 80 b0 18 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+6320], 1
; Line 1308
  002d3	48 8b 4c 24 70	 mov	 rcx, QWORD PTR vm$[rsp]
  002d8	e8 00 00 00 00	 call	 simple_vm_mutexunlock
; Line 1310
  002dd	48 8b 54 24 78	 mov	 rdx, QWORD PTR cStr$[rsp]
  002e2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  002e7	e8 00 00 00 00	 call	 execute_code
; Line 1311
  002ec	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  002f1	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  002f5	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  002f9	48 8b 44 24 70	 mov	 rax, QWORD PTR vm$[rsp]
  002fe	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00305	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 1313
  0030a	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0030f	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00313	48 8b 80 38 18
	00 00		 mov	 rax, QWORD PTR [rax+6200]
  0031a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0031d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pItem$[rsp]
  00322	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 1315
  00325	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0032a	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0032e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  00333	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 1316
  00337	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0033c	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00340	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  00345	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 1317
  00349	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  0034e	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00352	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  00357	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 1318
  0035b	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00360	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00364	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list4$[rsp]
  00369	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; Line 1319
  0036d	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00372	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00376	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list5$[rsp]
  0037b	48 89 88 98 18
	00 00		 mov	 QWORD PTR [rax+6296], rcx
; Line 1320
  00382	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00387	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  0038c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 1321
  00390	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00395	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list2$[rsp]
  0039a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 1322
  0039e	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003a3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR list3$[rsp]
  003a8	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; Line 1323
  003ac	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003b1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list4$[rsp]
  003b6	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
; Line 1324
  003ba	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003bf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR list5$[rsp]
  003c4	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; Line 1325
  003c8	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003cd	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  003d1	48 c7 80 b0 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6576], 0
; Line 1326
  003dc	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003e1	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  003e5	48 c7 80 98 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6552], 0
; Line 1327
  003f0	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  003f5	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  003f9	48 c7 80 a0 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6560], 0
; Line 1328
  00404	48 8b 44 24 20	 mov	 rax, QWORD PTR pState$[rsp]
  00409	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  0040d	48 c7 80 a8 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6568], 0
; Line 1330
  00418	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pState$[rsp]
  0041d	e8 00 00 00 00	 call	 finalize
; Line 1331
  00422	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00426	c3		 ret	 0
simple_vm_runcodefromthread ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_mutexdestroy PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1261
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1262
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 83 b8 b0 19
	00 00 00	 cmp	 QWORD PTR [rax+6576], 0
  00016	74 27		 je	 SHORT $LN1@simple_vm_
; Line 1263
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 b0 19
	00 00		 mov	 rcx, QWORD PTR [rax+6576]
  00024	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00029	ff 90 98 19 00
	00		 call	 QWORD PTR [rax+6552]
; Line 1264
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00034	48 c7 80 b0 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6576], 0
$LN1@simple_vm_:
; Line 1266
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	c3		 ret	 0
simple_vm_mutexdestroy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_mutexunlock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1254
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1255
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 83 b8 b0 19
	00 00 00	 cmp	 QWORD PTR [rax+6576], 0
  00016	74 17		 je	 SHORT $LN1@simple_vm_
; Line 1256
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 b0 19
	00 00		 mov	 rcx, QWORD PTR [rax+6576]
  00024	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00029	ff 90 a8 19 00
	00		 call	 QWORD PTR [rax+6568]
$LN1@simple_vm_:
; Line 1258
  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
simple_vm_mutexunlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_mutexlock PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1247
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1248
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 83 b8 b0 19
	00 00 00	 cmp	 QWORD PTR [rax+6576], 0
  00016	74 17		 je	 SHORT $LN1@simple_vm_
; Line 1249
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 b0 19
	00 00		 mov	 rcx, QWORD PTR [rax+6576]
  00024	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00029	ff 90 a0 19 00
	00		 call	 QWORD PTR [rax+6560]
$LN1@simple_vm_:
; Line 1251
  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
simple_vm_mutexlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
pBlock$ = 56
pBlockLock$ = 64
pBlockUnlock$ = 72
pBlockDestroy$ = 80
simple_vm_mutexblocks PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1237
$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1238
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 83 b8 b0 19
	00 00 00	 cmp	 QWORD PTR [rax+6576], 0
  00025	75 43		 jne	 SHORT $LN1@simple_vm_
; Line 1239
  00027	ff 54 24 38	 call	 QWORD PTR pBlock$[rsp]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00030	48 89 81 b0 19
	00 00		 mov	 QWORD PTR [rcx+6576], rax
; Line 1240
  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBlockLock$[rsp]
  00041	48 89 88 a0 19
	00 00		 mov	 QWORD PTR [rax+6560], rcx
; Line 1241
  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0004d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pBlockUnlock$[rsp]
  00052	48 89 88 a8 19
	00 00		 mov	 QWORD PTR [rax+6568], rcx
; Line 1242
  00059	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0005e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pBlockDestroy$[rsp]
  00063	48 89 88 98 19
	00 00		 mov	 QWORD PTR [rax+6552], rcx
$LN1@simple_vm_:
; Line 1244
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	c3		 ret	 0
simple_vm_mutexblocks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 8
simple_vm_callclassinit PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1094
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 1095
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  0000a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	48 6b c9 01	 imul	 rcx, 1
  0001a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0001e	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00022	74 1b		 je	 SHORT $LN2@simple_vm_
; Line 1096
  00024	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  00029	0f b6 80 b9 19
	00 00		 movzx	 eax, BYTE PTR [rax+6585]
  00030	fe c0		 inc	 al
  00032	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  00037	88 81 b9 19 00
	00		 mov	 BYTE PTR [rcx+6585], al
; Line 1098
  0003d	eb 19		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1099
  0003f	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  00044	0f b6 80 b9 19
	00 00		 movzx	 eax, BYTE PTR [rax+6585]
  0004b	fe c8		 dec	 al
  0004d	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  00052	88 81 b9 19 00
	00		 mov	 BYTE PTR [rcx+6585], al
$LN1@simple_vm_:
; Line 1101
  00058	f3 c3		 fatret	 0
simple_vm_callclassinit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
simple_vm_retitemref PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1041
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1043
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	0f b6 80 94 19
	00 00		 movzx	 eax, BYTE PTR [rax+6548]
  00015	fe c0		 inc	 al
  00017	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001c	88 81 94 19 00
	00		 mov	 BYTE PTR [rcx+6548], al
; Line 1045
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	e8 00 00 00 00	 call	 simple_vm_freestack
; Line 1053
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00031	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00038	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0003c	7e 64		 jle	 SHORT $LN2@simple_vm_
; Line 1054
  0003e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00043	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  0004a	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00052	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00059	e8 00 00 00 00	 call	 simple_list_getlist
  0005e	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 1055
  00063	ba 02 00 00 00	 mov	 edx, 2
  00068	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_list_getitem
  00072	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82781
  0007d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00080	e8 00 00 00 00	 call	 strcmp
  00085	85 c0		 test	 eax, eax
  00087	75 19		 jne	 SHORT $LN1@simple_vm_
; Line 1056
  00089	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0008e	0f b6 80 94 19
	00 00		 movzx	 eax, BYTE PTR [rax+6548]
  00095	fe c0		 inc	 al
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0009c	88 81 94 19 00
	00		 mov	 BYTE PTR [rcx+6548], al
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 1059
  000a2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000a6	c3		 ret	 0
simple_vm_retitemref ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pByteCode$ = 32
aPara$ = 40
__$ArrayPad$ = 56
vm$ = 80
simple_vm_returneval PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 898
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00010	48 33 c4	 xor	 rax, rsp
  00013	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 901
  00018	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_vm_return
; Line 902
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00027	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0002e	b9 08 00 00 00	 mov	 ecx, 8
  00033	48 6b c9 01	 imul	 rcx, 1
  00037	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0003b	b9 04 00 00 00	 mov	 ecx, 4
  00040	48 6b c9 00	 imul	 rcx, 0
  00044	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00047	89 44 0c 28	 mov	 DWORD PTR aPara$[rsp+rcx], eax
; Line 903
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00050	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00057	b9 08 00 00 00	 mov	 ecx, 8
  0005c	48 6b c9 02	 imul	 rcx, 2
  00060	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00064	b9 04 00 00 00	 mov	 ecx, 4
  00069	48 6b c9 01	 imul	 rcx, 1
  0006d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00070	89 44 0c 28	 mov	 DWORD PTR aPara$[rsp+rcx], eax
; Line 904
  00074	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00079	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00080	b9 08 00 00 00	 mov	 ecx, 8
  00085	48 6b c9 03	 imul	 rcx, 3
  00089	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0008d	b9 04 00 00 00	 mov	 ecx, 4
  00092	48 6b c9 02	 imul	 rcx, 2
  00096	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00099	89 44 0c 28	 mov	 DWORD PTR aPara$[rsp+rcx], eax
; Line 905
  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000a2	0f be 80 ba 19
	00 00		 movsx	 eax, BYTE PTR [rax+6586]
  000a9	85 c0		 test	 eax, eax
  000ab	0f 85 04 01 00
	00		 jne	 $LN5@simple_vm_
  000b1	b8 04 00 00 00	 mov	 eax, 4
  000b6	48 6b c0 01	 imul	 rax, 1
  000ba	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000bf	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000c3	8b 49 10	 mov	 ecx, DWORD PTR [rcx+16]
  000c6	39 4c 04 28	 cmp	 DWORD PTR aPara$[rsp+rax], ecx
  000ca	0f 85 e5 00 00
	00		 jne	 $LN5@simple_vm_
  000d0	b8 04 00 00 00	 mov	 eax, 4
  000d5	48 6b c0 02	 imul	 rax, 2
  000d9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000de	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  000e2	8b 49 10	 mov	 ecx, DWORD PTR [rcx+16]
  000e5	39 4c 04 28	 cmp	 DWORD PTR aPara$[rsp+rax], ecx
  000e9	0f 85 c6 00 00
	00		 jne	 $LN5@simple_vm_
$LN4@simple_vm_:
; Line 911
  000ef	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000f4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000f8	b9 04 00 00 00	 mov	 ecx, 4
  000fd	48 6b c9 00	 imul	 rcx, 0
  00101	8b 4c 0c 28	 mov	 ecx, DWORD PTR aPara$[rsp+rcx]
  00105	39 48 10	 cmp	 DWORD PTR [rax+16], ecx
  00108	74 29		 je	 SHORT $LN3@simple_vm_
; Line 912
  0010a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0010f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00113	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  00117	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0011c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00120	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00125	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0012c	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 913
  00131	eb bc		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
; Line 914
  00133	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00138	0f be 80 82 19
	00 00		 movsx	 eax, BYTE PTR [rax+6530]
  0013f	83 f8 01	 cmp	 eax, 1
  00142	75 71		 jne	 SHORT $LN2@simple_vm_
; Line 915
  00144	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00149	c6 80 82 19 00
	00 00		 mov	 BYTE PTR [rax+6530], 0
; Line 916
  00150	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00155	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00159	48 63 40 10	 movsxd	 rax, DWORD PTR [rax+16]
  0015d	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00164	4c 8b c0	 mov	 r8, rax
  00167	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0016c	48 8b 90 50 18
	00 00		 mov	 rdx, QWORD PTR [rax+6224]
  00173	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00178	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0017f	e8 00 00 00 00	 call	 simple_state_realloc
  00184	48 89 44 24 20	 mov	 QWORD PTR pByteCode$[rsp], rax
; Line 917
  00189	48 83 7c 24 20
	00		 cmp	 QWORD PTR pByteCode$[rsp], 0
  0018f	75 13		 jne	 SHORT $LN1@simple_vm_
; Line 918
  00191	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82729
  00198	e8 00 00 00 00	 call	 printf
; Line 919
  0019d	33 c9		 xor	 ecx, ecx
  0019f	e8 00 00 00 00	 call	 exit
$LN1@simple_vm_:
; Line 921
  001a4	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pByteCode$[rsp]
  001ae	48 89 88 50 18
	00 00		 mov	 QWORD PTR [rax+6224], rcx
$LN2@simple_vm_:
$LN5@simple_vm_:
; Line 937
  001b5	b8 04 00 00 00	 mov	 eax, 4
  001ba	48 6b c0 00	 imul	 rax, 0
  001be	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c3	8b 44 04 28	 mov	 eax, DWORD PTR aPara$[rsp+rax]
  001c7	89 81 90 19 00
	00		 mov	 DWORD PTR [rcx+6544], eax
$LN7@simple_vm_:
; Line 938
  001cd	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001d2	48 33 cc	 xor	 rcx, rsp
  001d5	e8 00 00 00 00	 call	 __security_check_cookie
  001da	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001de	c3		 ret	 0
simple_vm_returneval ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 8
simple_vm_endblockexec PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1197
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 1198
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  0000a	83 b8 94 18 00
	00 00		 cmp	 DWORD PTR [rax+6292], 0
  00011	7e 18		 jle	 SHORT $LN1@simple_vm_
; Line 1199
  00013	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  00018	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  0001e	ff c8		 dec	 eax
  00020	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  00025	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
$LN1@simple_vm_:
; Line 1201
  0002b	f3 c3		 fatret	 0
simple_vm_endblockexec ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_loadaddressfirst PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1190
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1191
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	c6 80 48 19 00
	00 01		 mov	 BYTE PTR [rax+6472], 1
; Line 1192
  00015	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001a	e8 00 00 00 00	 call	 simple_vm_loadaddress
; Line 1193
  0001f	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00024	c6 80 48 19 00
	00 00		 mov	 BYTE PTR [rax+6472], 0
; Line 1194
  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	c3		 ret	 0
simple_vm_loadaddressfirst ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 8
simple_vm_setfilename PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1176
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 1177
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  0000a	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  00011	85 c0		 test	 eax, eax
  00013	74 2e		 je	 SHORT $LN1@simple_vm_
; Line 1182
  00015	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00021	b9 08 00 00 00	 mov	 ecx, 8
  00026	48 6b c9 01	 imul	 rcx, 1
  0002a	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0002e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00032	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 81 20 1a
	00 00		 mov	 QWORD PTR [rcx+6688], rax
; Line 1183
  00041	eb 44		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 1185
  00043	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  00048	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  0004d	48 8b 89 60 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6240]
  00054	48 89 88 c0 19
	00 00		 mov	 QWORD PTR [rax+6592], rcx
; Line 1186
  0005b	48 8b 44 24 08	 mov	 rax, QWORD PTR vm$[rsp]
  00060	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00067	b9 08 00 00 00	 mov	 ecx, 8
  0006c	48 6b c9 01	 imul	 rcx, 1
  00070	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00074	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00078	48 8b 4c 24 08	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00080	48 89 81 60 18
	00 00		 mov	 QWORD PTR [rcx+6240], rax
$LN2@simple_vm_:
; Line 1187
  00087	f3 c3		 fatret	 0
simple_vm_setfilename ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
list$ = 40
vm$ = 64
simple_vm_addglobalvariables PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1204
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1211
  00009	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  00011	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82867
  00018	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_vm_addnewnumbervar
; Line 1212
  00022	0f 57 d2	 xorps	 xmm2, xmm2
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82868
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00031	e8 00 00 00 00	 call	 simple_vm_addnewnumbervar
; Line 1213
  00036	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82869
  0003d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82870
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00049	e8 00 00 00 00	 call	 simple_vm_addnewstringvar
; Line 1214
  0004e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82871
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82872
  0005c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00061	e8 00 00 00 00	 call	 simple_vm_addnewstringvar
; Line 1215
  00066	45 33 c9	 xor	 r9d, r9d
  00069	45 33 c0	 xor	 r8d, r8d
  0006c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82874
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00078	e8 00 00 00 00	 call	 simple_vm_addnewpointervar
; Line 1216
  0007d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82875
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82876
  0008b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00090	e8 00 00 00 00	 call	 simple_vm_addnewstringvar
; Line 1217
  00095	45 33 c9	 xor	 r9d, r9d
  00098	45 33 c0	 xor	 r8d, r8d
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82878
  000a2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a7	e8 00 00 00 00	 call	 simple_vm_addnewpointervar
; Line 1218
  000ac	0f 57 d2	 xorps	 xmm2, xmm2
  000af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82879
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000bb	e8 00 00 00 00	 call	 simple_vm_addnewnumbervar
; Line 1219
  000c0	e8 00 00 00 00	 call	 __iob_func
  000c5	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ca	48 6b c9 00	 imul	 rcx, 0
  000ce	48 03 c1	 add	 rax, rcx
  000d1	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG82880
  000d8	4c 8b c0	 mov	 r8, rax
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82881
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000e7	e8 00 00 00 00	 call	 simple_vm_addnewcpointervar
; Line 1220
  000ec	e8 00 00 00 00	 call	 __iob_func
  000f1	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000f6	48 6b c9 01	 imul	 rcx, 1
  000fa	48 03 c1	 add	 rax, rcx
  000fd	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG82882
  00104	4c 8b c0	 mov	 r8, rax
  00107	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82883
  0010e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00113	e8 00 00 00 00	 call	 simple_vm_addnewcpointervar
; Line 1221
  00118	e8 00 00 00 00	 call	 __iob_func
  0011d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00122	48 6b c9 02	 imul	 rcx, 2
  00126	48 03 c1	 add	 rax, rcx
  00129	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG82884
  00130	4c 8b c0	 mov	 r8, rax
  00133	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82885
  0013a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0013f	e8 00 00 00 00	 call	 simple_vm_addnewcpointervar
; Line 1222
  00144	45 33 c9	 xor	 r9d, r9d
  00147	45 33 c0	 xor	 r8d, r8d
  0014a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82887
  00151	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00156	e8 00 00 00 00	 call	 simple_vm_addnewpointervar
; Line 1223
  0015b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82888
  00162	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82889
  00169	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0016e	e8 00 00 00 00	 call	 simple_vm_addnewstringvar
; Line 1224
  00173	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82890
  0017a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82891
  00181	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00186	e8 00 00 00 00	 call	 simple_vm_addnewstringvar
; Line 1226
  0018b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00190	4c 8b 80 40 18
	00 00		 mov	 r8, QWORD PTR [rax+6208]
  00197	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82892
  0019e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001a3	e8 00 00 00 00	 call	 simple_vm_newvar2
  001a8	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1227
  001ad	41 b9 03 00 00
	00		 mov	 r9d, 3
  001b3	41 b8 02 00 00
	00		 mov	 r8d, 2
  001b9	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  001be	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001c3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001ca	e8 00 00 00 00	 call	 simple_list_setint_gc
; Line 1228
  001cf	41 b8 03 00 00
	00		 mov	 r8d, 3
  001d5	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  001da	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001df	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e6	e8 00 00 00 00	 call	 simple_list_setlist_gc
; Line 1229
  001eb	ba 03 00 00 00	 mov	 edx, 3
  001f0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR list$[rsp]
  001f5	e8 00 00 00 00	 call	 simple_list_getlist
  001fa	48 89 44 24 28	 mov	 QWORD PTR list$[rsp], rax
; Line 1230
  001ff	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00207	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  00209	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0020d	ff c0		 inc	 eax
  0020f	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_vm_:
  00213	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00218	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  0021f	8b 40 3c	 mov	 eax, DWORD PTR [rax+60]
  00222	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00226	7d 31		 jge	 SHORT $LN1@simple_vm_
; Line 1231
  00228	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0022d	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00234	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00239	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  0023d	4c 8b 04 c8	 mov	 r8, QWORD PTR [rax+rcx*8]
  00241	48 8b 54 24 28	 mov	 rdx, QWORD PTR list$[rsp]
  00246	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0024b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00252	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1232
  00257	eb b0		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 1233
  00259	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0025d	c3		 ret	 0
simple_vm_addglobalvariables ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
lBlockCall$ = 36
is_last_block$ = 40
list$ = 48
cFile$ = 56
vm$ = 80
cStr$ = 88
simple_vm_showerrormessage PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1104
$LN19:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1109
  0000e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00013	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0001a	e8 00 00 00 00	 call	 simple_state_cgiheader
; Line 1111
  0001f	4c 8b 44 24 58	 mov	 r8, QWORD PTR cStr$[rsp]
  00024	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00029	8b 90 68 18 00
	00		 mov	 edx, DWORD PTR [rax+6248]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82824
  00036	e8 00 00 00 00	 call	 printf
; Line 1113
  0003b	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR lBlockCall$[rsp], 0
  00043	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR is_last_block$[rsp], 1
; Line 1114
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00050	48 8b 80 88 18
	00 00		 mov	 rax, QWORD PTR [rax+6280]
  00057	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0005a	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  0005e	eb 0a		 jmp	 SHORT $LN16@simple_vm_
$LN15@simple_vm_:
  00060	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00064	ff c8		 dec	 eax
  00066	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN16@simple_vm_:
  0006a	83 7c 24 20 01	 cmp	 DWORD PTR x$[rsp], 1
  0006f	0f 8c 5c 01 00
	00		 jl	 $LN14@simple_vm_
; Line 1115
  00075	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00079	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007e	48 8b 88 88 18
	00 00		 mov	 rcx, QWORD PTR [rax+6280]
  00085	e8 00 00 00 00	 call	 simple_list_getlist
  0008a	48 89 44 24 30	 mov	 QWORD PTR list$[rsp], rax
; Line 1120
  0008f	48 8b 44 24 30	 mov	 rax, QWORD PTR list$[rsp]
  00094	83 78 10 0a	 cmp	 DWORD PTR [rax+16], 10
  00098	7d 02		 jge	 SHORT $LN13@simple_vm_
; Line 1121
  0009a	eb c4		 jmp	 SHORT $LN15@simple_vm_
$LN13@simple_vm_:
; Line 1123
  0009c	ba 01 00 00 00	 mov	 edx, 1
  000a1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000a6	e8 00 00 00 00	 call	 simple_list_getitem
  000ab	83 78 08 01	 cmp	 DWORD PTR [rax+8], 1
  000af	0f 85 ed 00 00
	00		 jne	 $LN12@simple_vm_
; Line 1128
  000b5	83 7c 24 28 01	 cmp	 DWORD PTR is_last_block$[rsp], 1
  000ba	75 16		 jne	 SHORT $LN11@simple_vm_
  000bc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82831
  000c3	e8 00 00 00 00	 call	 printf
  000c8	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR is_last_block$[rsp], 0
  000d0	eb 0c		 jmp	 SHORT $LN10@simple_vm_
$LN11@simple_vm_:
  000d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82833
  000d9	e8 00 00 00 00	 call	 printf
$LN10@simple_vm_:
; Line 1137
  000de	ba 02 00 00 00	 mov	 edx, 2
  000e3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  000e8	e8 00 00 00 00	 call	 simple_list_getitem
  000ed	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000f1	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000f4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82834
  000fb	e8 00 00 00 00	 call	 printf
; Line 1139
  00100	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82835
  00107	e8 00 00 00 00	 call	 printf
; Line 1141
  0010c	83 7c 24 24 01	 cmp	 DWORD PTR lBlockCall$[rsp], 1
  00111	75 1a		 jne	 SHORT $LN9@simple_vm_
; Line 1142
  00113	ba 06 00 00 00	 mov	 edx, 6
  00118	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  0011d	e8 00 00 00 00	 call	 simple_list_getitem
  00122	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00126	48 89 44 24 38	 mov	 QWORD PTR cFile$[rsp], rax
; Line 1144
  0012b	eb 34		 jmp	 SHORT $LN8@simple_vm_
$LN9@simple_vm_:
; Line 1145
  0012d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00132	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  00139	85 c0		 test	 eax, eax
  0013b	74 13		 je	 SHORT $LN7@simple_vm_
; Line 1146
  0013d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00142	48 8b 80 20 1a
	00 00		 mov	 rax, QWORD PTR [rax+6688]
  00149	48 89 44 24 38	 mov	 QWORD PTR cFile$[rsp], rax
; Line 1148
  0014e	eb 11		 jmp	 SHORT $LN6@simple_vm_
$LN7@simple_vm_:
; Line 1149
  00150	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00155	48 8b 80 60 18
	00 00		 mov	 rax, QWORD PTR [rax+6240]
  0015c	48 89 44 24 38	 mov	 QWORD PTR cFile$[rsp], rax
$LN6@simple_vm_:
$LN8@simple_vm_:
; Line 1152
  00161	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cFile$[rsp]
  00166	e8 00 00 00 00	 call	 file_real_name
  0016b	48 8b d0	 mov	 rdx, rax
  0016e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82841
  00175	e8 00 00 00 00	 call	 printf
; Line 1154
  0017a	ba 09 00 00 00	 mov	 edx, 9
  0017f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  00184	e8 00 00 00 00	 call	 simple_list_getitem
  00189	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  0018c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82842
  00193	e8 00 00 00 00	 call	 printf
; Line 1155
  00198	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR lBlockCall$[rsp], 1
; Line 1157
  001a0	eb 2a		 jmp	 SHORT $LN5@simple_vm_
$LN12@simple_vm_:
; Line 1158
  001a2	ba 02 00 00 00	 mov	 edx, 2
  001a7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR list$[rsp]
  001ac	e8 00 00 00 00	 call	 simple_list_getitem
  001b1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001b5	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001b8	e8 00 00 00 00	 call	 file_real_name
  001bd	48 8b d0	 mov	 rdx, rax
  001c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82844
  001c7	e8 00 00 00 00	 call	 printf
$LN5@simple_vm_:
; Line 1160
  001cc	e9 8f fe ff ff	 jmp	 $LN15@simple_vm_
$LN14@simple_vm_:
; Line 1161
  001d1	83 7c 24 24 00	 cmp	 DWORD PTR lBlockCall$[rsp], 0
  001d6	74 36		 je	 SHORT $LN4@simple_vm_
; Line 1162
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  001e4	ba 01 00 00 00	 mov	 edx, 1
  001e9	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001ec	e8 00 00 00 00	 call	 simple_list_getitem
  001f1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001f5	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  001f8	e8 00 00 00 00	 call	 file_real_name
  001fd	48 8b d0	 mov	 rdx, rax
  00200	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82846
  00207	e8 00 00 00 00	 call	 printf
; Line 1164
  0020c	eb 4a		 jmp	 SHORT $LN3@simple_vm_
$LN4@simple_vm_:
; Line 1165
  0020e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00213	0f be 80 01 19
	00 00		 movsx	 eax, BYTE PTR [rax+6401]
  0021a	85 c0		 test	 eax, eax
  0021c	74 13		 je	 SHORT $LN2@simple_vm_
; Line 1166
  0021e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00223	48 8b 80 20 1a
	00 00		 mov	 rax, QWORD PTR [rax+6688]
  0022a	48 89 44 24 38	 mov	 QWORD PTR cFile$[rsp], rax
; Line 1168
  0022f	eb 16		 jmp	 SHORT $LN1@simple_vm_
$LN2@simple_vm_:
; Line 1169
  00231	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00236	48 8b 88 60 18
	00 00		 mov	 rcx, QWORD PTR [rax+6240]
  0023d	e8 00 00 00 00	 call	 file_real_name
  00242	48 89 44 24 38	 mov	 QWORD PTR cFile$[rsp], rax
$LN1@simple_vm_:
; Line 1171
  00247	48 8b 54 24 38	 mov	 rdx, QWORD PTR cFile$[rsp]
  0024c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82850
  00253	e8 00 00 00 00	 call	 printf
$LN3@simple_vm_:
; Line 1173
  00258	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0025c	c3		 ret	 0
simple_vm_showerrormessage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nsp$ = 36
vm$ = 64
simple_vm_printstack PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1062
$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 1064
  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82787
  00010	e8 00 00 00 00	 call	 printf
; Line 1065
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00021	8b d0		 mov	 edx, eax
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82788
  0002a	e8 00 00 00 00	 call	 printf
; Line 1066
  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00034	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0003b	89 44 24 24	 mov	 DWORD PTR nsp$[rsp], eax
; Line 1067
  0003f	83 7c 24 24 00	 cmp	 DWORD PTR nsp$[rsp], 0
  00044	0f 8e d8 01 00
	00		 jle	 $LN12@simple_vm_
; Line 1068
  0004a	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00052	eb 0a		 jmp	 SHORT $LN11@simple_vm_
$LN10@simple_vm_:
  00054	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00058	ff c0		 inc	 eax
  0005a	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN11@simple_vm_:
  0005e	8b 44 24 24	 mov	 eax, DWORD PTR nsp$[rsp]
  00062	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00066	0f 8f b6 01 00
	00		 jg	 $LN9@simple_vm_
; Line 1070
  0006c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00071	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00078	48 6b c0 18	 imul	 rax, 24
  0007c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00081	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00085	83 e0 07	 and	 eax, 7
  00088	83 f8 01	 cmp	 eax, 1
  0008b	75 2e		 jne	 SHORT $LN8@simple_vm_
; Line 1071
  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00092	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00099	48 6b c0 18	 imul	 rax, 24
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a2	48 8b 44 01 38	 mov	 rax, QWORD PTR [rcx+rax+56]
  000a7	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82794
  000b1	e8 00 00 00 00	 call	 printf
  000b6	e9 3d 01 00 00	 jmp	 $LN7@simple_vm_
$LN8@simple_vm_:
; Line 1073
  000bb	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000c0	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000c7	48 6b c0 18	 imul	 rax, 24
  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d0	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  000d4	83 e0 07	 and	 eax, 7
  000d7	83 f8 02	 cmp	 eax, 2
  000da	75 31		 jne	 SHORT $LN6@simple_vm_
; Line 1074
  000dc	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000e1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000e8	48 6b c0 18	 imul	 rax, 24
  000ec	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000f1	f2 0f 10 4c 01
	38		 movsdx	 xmm1, QWORD PTR [rcx+rax+56]
  000f7	66 48 0f 7e ca	 movd	 rdx, xmm1
  000fc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82797
  00103	e8 00 00 00 00	 call	 printf
  00108	e9 eb 00 00 00	 jmp	 $LN5@simple_vm_
$LN6@simple_vm_:
; Line 1076
  0010d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00112	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00119	48 6b c0 18	 imul	 rax, 24
  0011d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00122	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00126	83 e0 07	 and	 eax, 7
  00129	83 f8 03	 cmp	 eax, 3
  0012c	0f 85 c6 00 00
	00		 jne	 $LN4@simple_vm_
; Line 1077
  00132	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00137	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0013e	48 6b c0 18	 imul	 rax, 24
  00142	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00147	48 8b 54 01 38	 mov	 rdx, QWORD PTR [rcx+rax+56]
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82800
  00153	e8 00 00 00 00	 call	 printf
; Line 1078
  00158	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0015d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00164	48 6b c0 18	 imul	 rax, 24
  00168	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0016d	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00171	c1 e8 05	 shr	 eax, 5
  00174	83 e0 03	 and	 eax, 3
  00177	83 f8 01	 cmp	 eax, 1
  0017a	75 2d		 jne	 SHORT $LN3@simple_vm_
; Line 1079
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82802
  00183	e8 00 00 00 00	 call	 printf
; Line 1080
  00188	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0018d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00194	48 6b c0 18	 imul	 rax, 24
  00198	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0019d	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  001a2	e8 00 00 00 00	 call	 simple_list_print
  001a7	eb 4f		 jmp	 SHORT $LN2@simple_vm_
$LN3@simple_vm_:
; Line 1082
  001a9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ae	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001b5	48 6b c0 18	 imul	 rax, 24
  001b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001be	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001c2	c1 e8 05	 shr	 eax, 5
  001c5	83 e0 03	 and	 eax, 3
  001c8	83 f8 02	 cmp	 eax, 2
  001cb	75 2b		 jne	 SHORT $LN1@simple_vm_
; Line 1083
  001cd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82806
  001d4	e8 00 00 00 00	 call	 printf
; Line 1084
  001d9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001de	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001e5	48 6b c0 18	 imul	 rax, 24
  001e9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001ee	48 8b 4c 01 38	 mov	 rcx, QWORD PTR [rcx+rax+56]
  001f3	e8 00 00 00 00	 call	 simple_item_print
$LN1@simple_vm_:
$LN2@simple_vm_:
$LN4@simple_vm_:
$LN5@simple_vm_:
$LN7@simple_vm_:
; Line 1087
  001f8	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001fd	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00204	fe c8		 dec	 al
  00206	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0020b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 1088
  00211	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82808
  00218	e8 00 00 00 00	 call	 printf
; Line 1089
  0021d	e9 32 fe ff ff	 jmp	 $LN10@simple_vm_
$LN9@simple_vm_:
$LN12@simple_vm_:
; Line 1091
  00222	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00226	c3		 ret	 0
simple_vm_printstack ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nFreeFilesList$ = 32
nRunVM$ = 36
scanner$ = 40
vm$ = 48
sState$ = 80
simple_vm_init PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 1006
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 1009
  00009	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR nFreeFilesList$[rsp], 0
; Line 1011
  00011	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  00016	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0001a	75 31		 jne	 SHORT $LN3@simple_vm_
; Line 1012
  0001c	33 d2		 xor	 edx, edx
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  00023	e8 00 00 00 00	 call	 simple_list_new_gc
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  0002d	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 1013
  00030	33 d2		 xor	 edx, edx
  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  00037	e8 00 00 00 00	 call	 simple_list_new_gc
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  00041	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; Line 1014
  00045	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR nFreeFilesList$[rsp], 1
$LN3@simple_vm_:
; Line 1016
  0004d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82771
  00054	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  00059	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  00061	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1017
  00066	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82772
  0006d	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  00072	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00076	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  0007b	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 1019
  00080	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  00085	e8 00 00 00 00	 call	 new_simple_scanner
  0008a	48 89 44 24 28	 mov	 QWORD PTR scanner$[rsp], rax
; Line 1021
  0008f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  00094	e8 00 00 00 00	 call	 simple_scanner_endofline
; Line 1023
  00099	48 8b 54 24 50	 mov	 rdx, QWORD PTR sState$[rsp]
  0009e	48 8b 44 24 28	 mov	 rax, QWORD PTR scanner$[rsp]
  000a3	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  000a7	e8 00 00 00 00	 call	 simple_parser_start
  000ac	89 44 24 24	 mov	 DWORD PTR nRunVM$[rsp], eax
; Line 1024
  000b0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  000b5	e8 00 00 00 00	 call	 delete_simple_scanner
; Line 1026
  000ba	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  000bf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c3	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  000c7	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  000cc	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000d0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  000d5	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 1027
  000da	83 7c 24 20 00	 cmp	 DWORD PTR nFreeFilesList$[rsp], 0
  000df	74 3d		 je	 SHORT $LN2@simple_vm_
; Line 1029
  000e1	83 7c 24 24 01	 cmp	 DWORD PTR nRunVM$[rsp], 1
  000e6	75 36		 jne	 SHORT $LN1@simple_vm_
; Line 1031
  000e8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  000ed	e8 00 00 00 00	 call	 simple_scanner_addreturn
; Line 1032
  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  000f7	e8 00 00 00 00	 call	 simple_vm_new
  000fc	48 89 44 24 30	 mov	 QWORD PTR vm$[rsp], rax
; Line 1033
  00101	48 8b 54 24 30	 mov	 rdx, QWORD PTR vm$[rsp]
  00106	48 8b 4c 24 50	 mov	 rcx, QWORD PTR sState$[rsp]
  0010b	e8 00 00 00 00	 call	 simple_vm_start
; Line 1034
  00110	48 8b 44 24 50	 mov	 rax, QWORD PTR sState$[rsp]
  00115	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0011a	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
$LN1@simple_vm_:
$LN2@simple_vm_:
; Line 1038
  0011e	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00122	c3		 ret	 0
simple_vm_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
nsp$ = 32
nRunVM$ = 36
nBlockSP$ = 40
nEvalReallocationFlag$ = 44
nLineNumber$ = 48
nEvalReturnPC$ = 52
nRetEvalDontDelete$ = 56
nPC$ = 60
pStackList$ = 64
vm$ = 96
cStr$ = 104
simple_vm_runcode PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 959
$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H
; Line 963
  0000e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00013	0f b6 80 c8 19
	00 00		 movzx	 eax, BYTE PTR [rax+6600]
  0001a	fe c0		 inc	 al
  0001c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00021	88 81 c8 19 00
	00		 mov	 BYTE PTR [rcx+6600], al
; Line 964
  00027	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0002c	8b 80 90 19 00
	00		 mov	 eax, DWORD PTR [rax+6544]
  00032	89 44 24 34	 mov	 DWORD PTR nEvalReturnPC$[rsp], eax
; Line 965
  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	0f be 80 82 19
	00 00		 movsx	 eax, BYTE PTR [rax+6530]
  00042	89 44 24 2c	 mov	 DWORD PTR nEvalReallocationFlag$[rsp], eax
; Line 966
  00046	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	89 44 24 3c	 mov	 DWORD PTR nPC$[rsp], eax
; Line 967
  00051	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00056	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0005d	89 44 24 20	 mov	 DWORD PTR nsp$[rsp], eax
; Line 968
  00061	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00066	8b 80 90 18 00
	00		 mov	 eax, DWORD PTR [rax+6288]
  0006c	89 44 24 28	 mov	 DWORD PTR nBlockSP$[rsp], eax
; Line 969
  00070	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00075	e8 00 00 00 00	 call	 simple_vm_savestack
  0007a	48 89 44 24 40	 mov	 QWORD PTR pStackList$[rsp], rax
; Line 970
  0007f	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00084	8b 80 68 18 00
	00		 mov	 eax, DWORD PTR [rax+6248]
  0008a	89 44 24 30	 mov	 DWORD PTR nLineNumber$[rsp], eax
; Line 971
  0008e	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00093	0f be 80 ba 19
	00 00		 movsx	 eax, BYTE PTR [rax+6586]
  0009a	89 44 24 38	 mov	 DWORD PTR nRetEvalDontDelete$[rsp], eax
; Line 972
  0009e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000a3	e8 00 00 00 00	 call	 simple_vm_mutexlock
; Line 973
  000a8	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ad	c6 80 80 19 00
	00 01		 mov	 BYTE PTR [rax+6528], 1
; Line 975
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000b9	0f be 80 c8 19
	00 00		 movsx	 eax, BYTE PTR [rax+6600]
  000c0	83 f8 01	 cmp	 eax, 1
  000c3	74 0c		 je	 SHORT $LN3@simple_vm_
; Line 977
  000c5	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	c6 80 ba 19 00
	00 01		 mov	 BYTE PTR [rax+6586], 1
$LN3@simple_vm_:
; Line 979
  000d1	48 8b 54 24 68	 mov	 rdx, QWORD PTR cStr$[rsp]
  000d6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000db	e8 00 00 00 00	 call	 simple_vm_exec
  000e0	89 44 24 24	 mov	 DWORD PTR nRunVM$[rsp], eax
; Line 980
  000e4	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  000e9	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 981
  000f0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  000f5	e8 00 00 00 00	 call	 simple_vm_mutexunlock
; Line 982
  000fa	83 7c 24 24 00	 cmp	 DWORD PTR nRunVM$[rsp], 0
  000ff	74 28		 je	 SHORT $LN2@simple_vm_
; Line 983
  00101	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00106	c7 80 94 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6292], 0
; Line 984
  00110	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00115	c7 80 70 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6512], 0
; Line 985
  0011f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00124	e8 00 00 00 00	 call	 simple_vm_mainloop
$LN2@simple_vm_:
; Line 988
  00129	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  0012e	0f b6 80 c8 19
	00 00		 movzx	 eax, BYTE PTR [rax+6600]
  00135	fe c8		 dec	 al
  00137	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  0013c	88 81 c8 19 00
	00		 mov	 BYTE PTR [rcx+6600], al
; Line 989
  00142	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00147	8b 4c 24 34	 mov	 ecx, DWORD PTR nEvalReturnPC$[rsp]
  0014b	89 88 90 19 00
	00		 mov	 DWORD PTR [rax+6544], ecx
; Line 990
  00151	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00156	0f b6 4c 24 2c	 movzx	 ecx, BYTE PTR nEvalReallocationFlag$[rsp]
  0015b	88 88 82 19 00
	00		 mov	 BYTE PTR [rax+6530], cl
; Line 991
  00161	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00166	8b 4c 24 3c	 mov	 ecx, DWORD PTR nPC$[rsp]
  0016a	89 08		 mov	 DWORD PTR [rax], ecx
; Line 992
  0016c	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00171	0f be 80 c8 19
	00 00		 movsx	 eax, BYTE PTR [rax+6600]
  00178	85 c0		 test	 eax, eax
  0017a	74 0f		 je	 SHORT $LN1@simple_vm_
; Line 994
  0017c	48 8b 54 24 40	 mov	 rdx, QWORD PTR pStackList$[rsp]
  00181	48 8b 4c 24 60	 mov	 rcx, QWORD PTR vm$[rsp]
  00186	e8 00 00 00 00	 call	 simple_vm_restorestack
$LN1@simple_vm_:
; Line 997
  0018b	48 8b 54 24 40	 mov	 rdx, QWORD PTR pStackList$[rsp]
  00190	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  00195	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0019c	e8 00 00 00 00	 call	 simple_list_delete_gc
; Line 999
  001a1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001a6	0f b6 4c 24 20	 movzx	 ecx, BYTE PTR nsp$[rsp]
  001ab	88 88 30 18 00
	00		 mov	 BYTE PTR [rax+6192], cl
; Line 1000
  001b1	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001b6	8b 4c 24 28	 mov	 ecx, DWORD PTR nBlockSP$[rsp]
  001ba	89 88 90 18 00
	00		 mov	 DWORD PTR [rax+6288], ecx
; Line 1001
  001c0	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001c5	8b 4c 24 30	 mov	 ecx, DWORD PTR nLineNumber$[rsp]
  001c9	89 88 68 18 00
	00		 mov	 DWORD PTR [rax+6248], ecx
; Line 1002
  001cf	48 8b 44 24 60	 mov	 rax, QWORD PTR vm$[rsp]
  001d4	0f b6 4c 24 38	 movzx	 ecx, BYTE PTR nRetEvalDontDelete$[rsp]
  001d9	88 88 ba 19 00
	00		 mov	 BYTE PTR [rax+6586], cl
; Line 1003
  001df	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001e3	c3		 ret	 0
simple_vm_runcode ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_mainloop PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 308
$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 311
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00015	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  00018	c1 e8 06	 shr	 eax, 6
  0001b	83 e0 01	 and	 eax, 1
  0001e	85 c0		 test	 eax, eax
  00020	74 46		 je	 SHORT $LN10@simple_vm_
$LN9@simple_vm_:
; Line 313
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00027	e8 00 00 00 00	 call	 simple_vm_fetch2
; Line 314
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00036	8b 89 90 19 00
	00		 mov	 ecx, DWORD PTR [rcx+6544]
  0003c	39 08		 cmp	 DWORD PTR [rax], ecx
  0003e	7f 11		 jg	 SHORT $LN6@simple_vm_
; Line 315
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00045	c7 80 90 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6544], 0
; Line 316
  0004f	eb 15		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
; Line 318
  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00056	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0005f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00062	39 01		 cmp	 DWORD PTR [rcx], eax
  00064	7e bc		 jle	 SHORT $LN9@simple_vm_
$LN7@simple_vm_:
; Line 320
  00066	eb 44		 jmp	 SHORT $LN5@simple_vm_
$LN10@simple_vm_:
$LN4@simple_vm_:
; Line 322
  00068	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0006d	e8 00 00 00 00	 call	 simple_vm_fetch
; Line 323
  00072	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00077	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0007c	8b 89 90 19 00
	00		 mov	 ecx, DWORD PTR [rcx+6544]
  00082	39 08		 cmp	 DWORD PTR [rax], ecx
  00084	7f 11		 jg	 SHORT $LN1@simple_vm_
; Line 324
  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0008b	c7 80 90 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6544], 0
; Line 325
  00095	eb 15		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 327
  00097	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0009c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  000a5	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000a8	39 01		 cmp	 DWORD PTR [rcx], eax
  000aa	7e bc		 jle	 SHORT $LN4@simple_vm_
$LN2@simple_vm_:
$LN5@simple_vm_:
; Line 338
  000ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b0	c3		 ret	 0
simple_vm_mainloop ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pItem$ = 32
vm$ = 64
x$ = 72
simple_vm_newbytecodeitem PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 951
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 953
  0000d	45 33 c0	 xor	 r8d, r8d
  00010	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00015	48 8b 90 78 19
	00 00		 mov	 rdx, QWORD PTR [rax+6520]
  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00021	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00028	e8 00 00 00 00	 call	 simple_list_addint_gc
; Line 954
  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00032	48 8b 80 78 19
	00 00		 mov	 rax, QWORD PTR [rax+6520]
  00039	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00041	48 8b 88 78 19
	00 00		 mov	 rcx, QWORD PTR [rax+6520]
  00048	e8 00 00 00 00	 call	 simple_list_getitem
  0004d	48 89 44 24 20	 mov	 QWORD PTR pItem$[rsp], rax
; Line 955
  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00057	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0005e	48 63 4c 24 48	 movsxd	 rcx, DWORD PTR x$[rsp]
  00063	48 8b 54 24 20	 mov	 rdx, QWORD PTR pItem$[rsp]
  00068	48 89 14 c8	 mov	 QWORD PTR [rax+rcx*8], rdx
; Line 956
  0006c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00070	c3		 ret	 0
simple_vm_newbytecodeitem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pError$ = 32
vm$ = 64
cStr$ = 72
cStr2$ = 80
simple_vm_error2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 941
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 943
  00013	48 8b 54 24 48	 mov	 rdx, QWORD PTR cStr$[rsp]
  00018	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0001d	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00024	e8 00 00 00 00	 call	 simple_string_new_gc
  00029	48 89 44 24 20	 mov	 QWORD PTR pError$[rsp], rax
; Line 944
  0002e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82738
  00035	48 8b 54 24 20	 mov	 rdx, QWORD PTR pError$[rsp]
  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0003f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00046	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 945
  0004b	4c 8b 44 24 50	 mov	 r8, QWORD PTR cStr2$[rsp]
  00050	48 8b 54 24 20	 mov	 rdx, QWORD PTR pError$[rsp]
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00061	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 946
  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR pError$[rsp]
  0006b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00073	e8 00 00 00 00	 call	 simple_vm_error
; Line 947
  00078	48 8b 54 24 20	 mov	 rdx, QWORD PTR pError$[rsp]
  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00082	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00089	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 948
  0008e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00092	c3		 ret	 0
simple_vm_error2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x2$ = 32
tv128 = 36
pItem$ = 40
pIR$ = 48
pByteCode$ = 56
vm$ = 80
x$ = 88
simple_vm_tobytecode PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 856
$LN16:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 861
  0000d	48 63 44 24 58	 movsxd	 rax, DWORD PTR x$[rsp]
  00012	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0001e	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00025	48 8d 84 01 30
	ff ff ff	 lea	 rax, QWORD PTR [rcx+rax-208]
  0002d	48 89 44 24 38	 mov	 QWORD PTR pByteCode$[rsp], rax
; Line 862
  00032	8b 54 24 58	 mov	 edx, DWORD PTR x$[rsp]
  00036	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003f	e8 00 00 00 00	 call	 simple_list_getlist
  00044	48 89 44 24 30	 mov	 QWORD PTR pIR$[rsp], rax
; Line 863
  00049	48 8b 44 24 38	 mov	 rax, QWORD PTR pByteCode$[rsp]
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pIR$[rsp]
  00053	0f b6 49 10	 movzx	 ecx, BYTE PTR [rcx+16]
  00057	88 88 c0 00 00
	00		 mov	 BYTE PTR [rax+192], cl
; Line 868
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR pIR$[rsp]
  00062	83 78 10 18	 cmp	 DWORD PTR [rax+16], 24
  00066	7e 30		 jle	 SHORT $LN13@simple_vm_
; Line 869
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82698
  0006f	e8 00 00 00 00	 call	 printf
; Line 870
  00074	44 8b 44 24 58	 mov	 r8d, DWORD PTR x$[rsp]
  00079	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0007e	48 8b 90 60 18
	00 00		 mov	 rdx, QWORD PTR [rax+6240]
  00085	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82699
  0008c	e8 00 00 00 00	 call	 printf
; Line 871
  00091	33 c9		 xor	 ecx, ecx
  00093	e8 00 00 00 00	 call	 exit
$LN13@simple_vm_:
; Line 873
  00098	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x2$[rsp], 1
  000a0	eb 0a		 jmp	 SHORT $LN12@simple_vm_
$LN11@simple_vm_:
  000a2	8b 44 24 20	 mov	 eax, DWORD PTR x2$[rsp]
  000a6	ff c0		 inc	 eax
  000a8	89 44 24 20	 mov	 DWORD PTR x2$[rsp], eax
$LN12@simple_vm_:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR pIR$[rsp]
  000b1	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000b4	39 44 24 20	 cmp	 DWORD PTR x2$[rsp], eax
  000b8	0f 8f 80 00 00
	00		 jg	 $LN10@simple_vm_
; Line 874
  000be	8b 54 24 20	 mov	 edx, DWORD PTR x2$[rsp]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pIR$[rsp]
  000c7	e8 00 00 00 00	 call	 simple_list_getitem
  000cc	48 89 44 24 28	 mov	 QWORD PTR pItem$[rsp], rax
; Line 875
  000d1	8b 44 24 20	 mov	 eax, DWORD PTR x2$[rsp]
  000d5	ff c8		 dec	 eax
  000d7	48 98		 cdqe
  000d9	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pByteCode$[rsp]
  000de	48 8b 54 24 28	 mov	 rdx, QWORD PTR pItem$[rsp]
  000e3	48 89 14 c1	 mov	 QWORD PTR [rcx+rax*8], rdx
; Line 877
  000e7	83 7c 24 20 01	 cmp	 DWORD PTR x2$[rsp], 1
  000ec	75 4b		 jne	 SHORT $LN9@simple_vm_
; Line 878
  000ee	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  000f3	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  000f6	89 44 24 24	 mov	 DWORD PTR tv128[rsp], eax
  000fa	83 7c 24 24 20	 cmp	 DWORD PTR tv128[rsp], 32 ; 00000020H
  000ff	74 10		 je	 SHORT $LN6@simple_vm_
  00101	83 7c 24 24 4c	 cmp	 DWORD PTR tv128[rsp], 76 ; 0000004cH
  00106	74 25		 je	 SHORT $LN4@simple_vm_
  00108	83 7c 24 24 4d	 cmp	 DWORD PTR tv128[rsp], 77 ; 0000004dH
  0010d	74 10		 je	 SHORT $LN5@simple_vm_
  0010f	eb 28		 jmp	 SHORT $LN7@simple_vm_
$LN6@simple_vm_:
; Line 880
  00111	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  00116	c7 40 08 10 00
	00 00		 mov	 DWORD PTR [rax+8], 16
; Line 881
  0011d	eb 1a		 jmp	 SHORT $LN7@simple_vm_
$LN5@simple_vm_:
; Line 883
  0011f	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  00124	c7 40 08 3f 00
	00 00		 mov	 DWORD PTR [rax+8], 63	; 0000003fH
; Line 884
  0012b	eb 0c		 jmp	 SHORT $LN7@simple_vm_
$LN4@simple_vm_:
; Line 886
  0012d	48 8b 44 24 28	 mov	 rax, QWORD PTR pItem$[rsp]
  00132	c7 40 08 3d 00
	00 00		 mov	 DWORD PTR [rax+8], 61	; 0000003dH
$LN7@simple_vm_:
$LN9@simple_vm_:
; Line 890
  00139	e9 64 ff ff ff	 jmp	 $LN11@simple_vm_
$LN10@simple_vm_:
; Line 892
  0013e	48 8b 44 24 30	 mov	 rax, QWORD PTR pIR$[rsp]
  00143	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00146	ff c0		 inc	 eax
  00148	89 44 24 20	 mov	 DWORD PTR x2$[rsp], eax
  0014c	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  0014e	8b 44 24 20	 mov	 eax, DWORD PTR x2$[rsp]
  00152	ff c0		 inc	 eax
  00154	89 44 24 20	 mov	 DWORD PTR x2$[rsp], eax
$LN3@simple_vm_:
  00158	83 7c 24 20 18	 cmp	 DWORD PTR x2$[rsp], 24
  0015d	7f 17		 jg	 SHORT $LN1@simple_vm_
; Line 893
  0015f	8b 44 24 20	 mov	 eax, DWORD PTR x2$[rsp]
  00163	ff c8		 dec	 eax
  00165	48 98		 cdqe
  00167	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pByteCode$[rsp]
  0016c	48 c7 04 c1 00
	00 00 00	 mov	 QWORD PTR [rcx+rax*8], 0
; Line 894
  00174	eb d8		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
$LN15@simple_vm_:
; Line 895
  00176	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0017a	c3		 ret	 0
simple_vm_tobytecode ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
scanner$ = 40
nLastPC$ = 48
nSize$ = 52
nRunVM$ = 56
nCont$ = 60
nPC$ = 64
pByteCode$ = 72
aPara$ = 80
__$ArrayPad$ = 96
vm$ = 128
cStr$ = 136
simple_vm_exec PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 762
$LN20:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0000e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00015	48 33 c4	 xor	 rax, rsp
  00018	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 767
  0001d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR cStr$[rsp]
  00025	e8 00 00 00 00	 call	 strlen
  0002a	89 44 24 34	 mov	 DWORD PTR nSize$[rsp], eax
; Line 768
  0002e	83 7c 24 34 00	 cmp	 DWORD PTR nSize$[rsp], 0
  00033	75 07		 jne	 SHORT $LN17@simple_vm_
; Line 769
  00035	33 c0		 xor	 eax, eax
  00037	e9 1c 04 00 00	 jmp	 $LN18@simple_vm_
$LN17@simple_vm_:
; Line 771
  0003c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00044	8b 00		 mov	 eax, DWORD PTR [rax]
  00046	89 44 24 40	 mov	 DWORD PTR nPC$[rsp], eax
; Line 773
  0004a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00052	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00059	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82664
  00060	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00063	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0006b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00072	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 774
  00077	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0007f	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00086	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82665
  0008d	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00091	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00099	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a0	e8 00 00 00 00	 call	 simple_list_addstring_gc
; Line 775
  000a5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  000ad	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000b4	e8 00 00 00 00	 call	 new_simple_scanner
  000b9	48 89 44 24 28	 mov	 QWORD PTR scanner$[rsp], rax
; Line 776
  000be	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  000c6	eb 0a		 jmp	 SHORT $LN16@simple_vm_
$LN15@simple_vm_:
  000c8	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000cc	ff c0		 inc	 eax
  000ce	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN16@simple_vm_:
  000d2	8b 44 24 34	 mov	 eax, DWORD PTR nSize$[rsp]
  000d6	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000da	7d 1d		 jge	 SHORT $LN14@simple_vm_
; Line 777
  000dc	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  000e1	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR cStr$[rsp]
  000e9	0f b6 14 01	 movzx	 edx, BYTE PTR [rcx+rax]
  000ed	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  000f2	e8 00 00 00 00	 call	 simple_scanner_readchar
; Line 778
  000f7	eb cf		 jmp	 SHORT $LN15@simple_vm_
$LN14@simple_vm_:
; Line 779
  000f9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  000fe	e8 00 00 00 00	 call	 simple_scanner_checklasttoken
  00103	89 44 24 3c	 mov	 DWORD PTR nCont$[rsp], eax
; Line 781
  00107	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  0010c	e8 00 00 00 00	 call	 simple_scanner_endofline
; Line 782
  00111	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00119	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011d	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00120	89 44 24 30	 mov	 DWORD PTR nLastPC$[rsp], eax
; Line 784
  00124	b8 04 00 00 00	 mov	 eax, 4
  00129	48 6b c0 00	 imul	 rax, 0
  0012d	8b 4c 24 30	 mov	 ecx, DWORD PTR nLastPC$[rsp]
  00131	89 4c 04 50	 mov	 DWORD PTR aPara$[rsp+rax], ecx
; Line 785
  00135	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0013d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00141	b9 04 00 00 00	 mov	 ecx, 4
  00146	48 6b c9 01	 imul	 rcx, 1
  0014a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0014d	89 44 0c 50	 mov	 DWORD PTR aPara$[rsp+rcx], eax
; Line 786
  00151	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00159	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0015d	b9 04 00 00 00	 mov	 ecx, 4
  00162	48 6b c9 02	 imul	 rcx, 2
  00166	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00169	89 44 0c 50	 mov	 DWORD PTR aPara$[rsp+rcx], eax
; Line 788
  0016d	83 7c 24 3c 01	 cmp	 DWORD PTR nCont$[rsp], 1
  00172	75 49		 jne	 SHORT $LN13@simple_vm_
; Line 789
  00174	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0017c	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00183	c6 40 70 01	 mov	 BYTE PTR [rax+112], 1
; Line 790
  00187	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0018f	48 8b 90 50 19
	00 00		 mov	 rdx, QWORD PTR [rax+6480]
  00196	48 8b 44 24 28	 mov	 rax, QWORD PTR scanner$[rsp]
  0019b	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0019f	e8 00 00 00 00	 call	 simple_parser_start
  001a4	89 44 24 38	 mov	 DWORD PTR nRunVM$[rsp], eax
; Line 791
  001a8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001b0	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  001b7	c6 40 70 00	 mov	 BYTE PTR [rax+112], 0
; Line 792
  001bb	eb 25		 jmp	 SHORT $LN12@simple_vm_
$LN13@simple_vm_:
; Line 793
  001bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82671
  001c4	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  001cc	e8 00 00 00 00	 call	 simple_vm_error
; Line 794
  001d1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  001d6	e8 00 00 00 00	 call	 delete_simple_scanner
; Line 795
  001db	33 c0		 xor	 eax, eax
  001dd	e9 76 02 00 00	 jmp	 $LN18@simple_vm_
$LN12@simple_vm_:
; Line 797
  001e2	83 7c 24 38 01	 cmp	 DWORD PTR nRunVM$[rsp], 1
  001e7	0f 85 be 01 00
	00		 jne	 $LN11@simple_vm_
; Line 802
  001ed	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  001f5	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  001f9	e8 00 00 00 00	 call	 simple_list_genhashtable2
; Line 803
  001fe	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00206	0f be 80 80 19
	00 00		 movsx	 eax, BYTE PTR [rax+6528]
  0020d	85 c0		 test	 eax, eax
  0020f	74 1b		 je	 SHORT $LN10@simple_vm_
; Line 804
  00211	48 8d 54 24 50	 lea	 rdx, QWORD PTR aPara$[rsp]
  00216	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0021e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00225	e8 00 00 00 00	 call	 simple_scanner_addreturn3
; Line 806
  0022a	eb 14		 jmp	 SHORT $LN9@simple_vm_
$LN10@simple_vm_:
; Line 807
  0022c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00234	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0023b	e8 00 00 00 00	 call	 simple_scanner_addreturn2
$LN9@simple_vm_:
; Line 809
  00240	8b 54 24 40	 mov	 edx, DWORD PTR nPC$[rsp]
  00244	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0024c	e8 00 00 00 00	 call	 simple_vm_blockflag2
; Line 810
  00251	8b 44 24 30	 mov	 eax, DWORD PTR nLastPC$[rsp]
  00255	ff c0		 inc	 eax
  00257	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0025f	89 01		 mov	 DWORD PTR [rcx], eax
; Line 811
  00261	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00269	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0026d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00275	8b 89 84 19 00
	00		 mov	 ecx, DWORD PTR [rcx+6532]
  0027b	39 48 10	 cmp	 DWORD PTR [rax+16], ecx
  0027e	0f 8e 9f 00 00
	00		 jle	 $LN8@simple_vm_
; Line 812
  00284	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0028c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00290	48 63 40 10	 movsxd	 rax, DWORD PTR [rax+16]
  00294	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  0029b	4c 8b c0	 mov	 r8, rax
  0029e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	48 8b 90 50 18
	00 00		 mov	 rdx, QWORD PTR [rax+6224]
  002ad	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002b5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002bc	e8 00 00 00 00	 call	 simple_state_realloc
  002c1	48 89 44 24 48	 mov	 QWORD PTR pByteCode$[rsp], rax
; Line 813
  002c6	48 83 7c 24 48
	00		 cmp	 QWORD PTR pByteCode$[rsp], 0
  002cc	75 1d		 jne	 SHORT $LN7@simple_vm_
; Line 814
  002ce	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82680
  002d5	e8 00 00 00 00	 call	 printf
; Line 815
  002da	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  002df	e8 00 00 00 00	 call	 delete_simple_scanner
; Line 816
  002e4	33 c9		 xor	 ecx, ecx
  002e6	e8 00 00 00 00	 call	 exit
$LN7@simple_vm_:
; Line 818
  002eb	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  002f3	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pByteCode$[rsp]
  002f8	48 89 88 50 18
	00 00		 mov	 QWORD PTR [rax+6224], rcx
; Line 819
  002ff	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00307	0f be 80 80 19
	00 00		 movsx	 eax, BYTE PTR [rax+6528]
  0030e	85 c0		 test	 eax, eax
  00310	74 0f		 je	 SHORT $LN6@simple_vm_
; Line 821
  00312	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0031a	c6 80 82 19 00
	00 01		 mov	 BYTE PTR [rax+6530], 1
$LN6@simple_vm_:
; Line 824
  00321	eb 0f		 jmp	 SHORT $LN5@simple_vm_
$LN8@simple_vm_:
; Line 825
  00323	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0032b	c6 80 82 19 00
	00 00		 mov	 BYTE PTR [rax+6530], 0
$LN5@simple_vm_:
; Line 828
  00332	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0033a	8b 00		 mov	 eax, DWORD PTR [rax]
  0033c	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
  00340	eb 0a		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
  00342	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00346	ff c0		 inc	 eax
  00348	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_vm_:
  0034c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00354	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00358	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0035b	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0035f	7f 13		 jg	 SHORT $LN2@simple_vm_
; Line 829
  00361	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00365	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  0036d	e8 00 00 00 00	 call	 simple_vm_tobytecode
; Line 830
  00372	eb ce		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
; Line 843
  00374	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0037c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00380	8b 4c 24 30	 mov	 ecx, DWORD PTR nLastPC$[rsp]
  00384	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00387	2b c1		 sub	 eax, ecx
  00389	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00391	8b 89 84 19 00
	00		 mov	 ecx, DWORD PTR [rcx+6532]
  00397	2b c8		 sub	 ecx, eax
  00399	8b c1		 mov	 eax, ecx
  0039b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003a3	89 81 84 19 00
	00		 mov	 DWORD PTR [rcx+6532], eax
; Line 844
  003a9	eb 25		 jmp	 SHORT $LN1@simple_vm_
$LN11@simple_vm_:
; Line 845
  003ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82687
  003b2	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003ba	e8 00 00 00 00	 call	 simple_vm_error
; Line 846
  003bf	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  003c4	e8 00 00 00 00	 call	 delete_simple_scanner
; Line 847
  003c9	33 c0		 xor	 eax, eax
  003cb	e9 88 00 00 00	 jmp	 $LN18@simple_vm_
$LN1@simple_vm_:
; Line 849
  003d0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR scanner$[rsp]
  003d5	e8 00 00 00 00	 call	 delete_simple_scanner
; Line 850
  003da	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  003e2	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  003e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ec	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  003f4	48 8b 89 50 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6480]
  003fb	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  003ff	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00402	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0040a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00411	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 851
  00416	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  0041e	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00425	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00429	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR vm$[rsp]
  00431	48 8b 89 50 19
	00 00		 mov	 rcx, QWORD PTR [rcx+6480]
  00438	44 8b 40 10	 mov	 r8d, DWORD PTR [rax+16]
  0043c	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00440	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR vm$[rsp]
  00448	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0044f	e8 00 00 00 00	 call	 simple_list_deleteitem_gc
; Line 852
  00454	8b 44 24 38	 mov	 eax, DWORD PTR nRunVM$[rsp]
$LN18@simple_vm_:
$LN19@simple_vm_:
; Line 853
  00458	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0045d	48 33 cc	 xor	 rcx, rsp
  00460	e8 00 00 00 00	 call	 __security_check_cookie
  00465	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00469	c3		 ret	 0
simple_vm_exec ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
list$ = 32
vm$ = 64
cStr$ = 72
simple_vm_error PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 710
$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 713
  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00013	0f be 80 c9 19
	00 00		 movsx	 eax, BYTE PTR [rax+6601]
  0001a	85 c0		 test	 eax, eax
  0001c	74 05		 je	 SHORT $LN9@simple_vm_
; Line 714
  0001e	e9 d6 01 00 00	 jmp	 $LN10@simple_vm_
$LN9@simple_vm_:
; Line 716
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00028	c6 80 c9 19 00
	00 01		 mov	 BYTE PTR [rax+6601], 1
; Line 718
  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00034	48 8b 80 d0 18
	00 00		 mov	 rax, QWORD PTR [rax+6352]
  0003b	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0003f	0f 8e e7 00 00
	00		 jle	 $LN8@simple_vm_
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0004a	e8 00 00 00 00	 call	 simple_vm_oop_callmethodinsideclass
  0004f	85 c0		 test	 eax, eax
  00051	0f 85 d5 00 00
	00		 jne	 $LN8@simple_vm_
  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0005c	0f be 80 c8 18
	00 00		 movsx	 eax, BYTE PTR [rax+6344]
  00063	85 c0		 test	 eax, eax
  00065	0f 85 c1 00 00
	00		 jne	 $LN8@simple_vm_
; Line 719
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82640
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00077	e8 00 00 00 00	 call	 simple_vm_findvar
  0007c	85 c0		 test	 eax, eax
  0007e	0f 84 a8 00 00
	00		 je	 $LN7@simple_vm_
; Line 720
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00089	e8 00 00 00 00	 call	 simple_vm_oop_getobj
  0008e	48 89 44 24 20	 mov	 QWORD PTR list$[rsp], rax
; Line 721
  00093	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00098	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  0009f	fe c8		 dec	 al
  000a1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000a6	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
; Line 722
  000ac	48 8b 4c 24 20	 mov	 rcx, QWORD PTR list$[rsp]
  000b1	e8 00 00 00 00	 call	 simple_vm_oop_isobject
  000b6	85 c0		 test	 eax, eax
  000b8	74 72		 je	 SHORT $LN6@simple_vm_
; Line 723
  000ba	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG82643
  000c1	48 8b 54 24 20	 mov	 rdx, QWORD PTR list$[rsp]
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000cb	e8 00 00 00 00	 call	 simple_vm_oop_isblock
  000d0	85 c0		 test	 eax, eax
  000d2	74 58		 je	 SHORT $LN5@simple_vm_
; Line 724
  000d4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  000d9	e8 00 00 00 00	 call	 simple_vm_getglobalscope
  000de	ba 06 00 00 00	 mov	 edx, 6
  000e3	48 8b c8	 mov	 rcx, rax
  000e6	e8 00 00 00 00	 call	 simple_list_getlist
  000eb	4c 8b 4c 24 48	 mov	 r9, QWORD PTR cStr$[rsp]
  000f0	41 b8 03 00 00
	00		 mov	 r8d, 3
  000f6	48 8b d0	 mov	 rdx, rax
  000f9	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000fe	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00105	e8 00 00 00 00	 call	 simple_list_setstsimple_gc
; Line 725
  0010a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82644
  00111	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00116	e8 00 00 00 00	 call	 simple_vm_runcode
; Line 726
  0011b	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00120	c6 80 c9 19 00
	00 00		 mov	 BYTE PTR [rax+6601], 0
; Line 727
  00127	e9 cd 00 00 00	 jmp	 $LN10@simple_vm_
$LN5@simple_vm_:
$LN6@simple_vm_:
$LN7@simple_vm_:
$LN8@simple_vm_:
; Line 732
  0012c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00131	48 8b 80 b8 18
	00 00		 mov	 rax, QWORD PTR [rax+6328]
  00138	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0013c	75 69		 jne	 SHORT $LN4@simple_vm_
; Line 733
  0013e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00143	0f be 80 02 1a
	00 00		 movsx	 eax, BYTE PTR [rax+6658]
  0014a	85 c0		 test	 eax, eax
  0014c	75 0f		 jne	 SHORT $LN3@simple_vm_
; Line 734
  0014e	48 8b 54 24 48	 mov	 rdx, QWORD PTR cStr$[rsp]
  00153	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00158	e8 00 00 00 00	 call	 simple_vm_showerrormessage
$LN3@simple_vm_:
; Line 737
  0015d	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00162	c6 80 c9 19 00
	00 00		 mov	 BYTE PTR [rax+6601], 0
; Line 738
  00169	b2 04		 mov	 dl, 4
  0016b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00170	e8 00 00 00 00	 call	 simple_vm_traceevent
; Line 739
  00175	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0017a	0f be 80 01 1a
	00 00		 movsx	 eax, BYTE PTR [rax+6657]
  00181	83 f8 01	 cmp	 eax, 1
  00184	75 0e		 jne	 SHORT $LN2@simple_vm_
; Line 740
  00186	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0018b	c6 80 01 1a 00
	00 00		 mov	 BYTE PTR [rax+6657], 0
; Line 741
  00192	eb 65		 jmp	 SHORT $LN10@simple_vm_
$LN2@simple_vm_:
; Line 743
  00194	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00199	c6 80 c9 19 00
	00 01		 mov	 BYTE PTR [rax+6601], 1
; Line 744
  001a0	33 c9		 xor	 ecx, ecx
  001a2	e8 00 00 00 00	 call	 exit
$LN4@simple_vm_:
; Line 751
  001a7	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001ac	0f be 80 00 1a
	00 00		 movsx	 eax, BYTE PTR [rax+6656]
  001b3	85 c0		 test	 eax, eax
  001b5	74 27		 je	 SHORT $LN1@simple_vm_
; Line 752
  001b7	48 8b 54 24 48	 mov	 rdx, QWORD PTR cStr$[rsp]
  001bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001c1	e8 00 00 00 00	 call	 simple_vm_showerrormessage
; Line 753
  001c6	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001cb	c6 80 c9 19 00
	00 00		 mov	 BYTE PTR [rax+6601], 0
; Line 754
  001d2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001d7	e8 00 00 00 00	 call	 simple_vm_freestack
; Line 755
  001dc	eb 1b		 jmp	 SHORT $LN10@simple_vm_
$LN1@simple_vm_:
; Line 757
  001de	48 8b 54 24 48	 mov	 rdx, QWORD PTR cStr$[rsp]
  001e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  001e8	e8 00 00 00 00	 call	 simple_vm_catch
; Line 758
  001ed	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  001f2	c6 80 c9 19 00
	00 00		 mov	 BYTE PTR [rax+6601], 0
$LN10@simple_vm_:
$LN11@simple_vm_:
; Line 759
  001f9	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001fd	c3		 ret	 0
simple_vm_error ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv65 = 32
tv88 = 40
tv135 = 48
vm$ = 80
simple_vm_execute PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 381
$LN108:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 382
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00011	89 44 24 20	 mov	 DWORD PTR tv65[rsp], eax
  00015	83 7c 24 20 68	 cmp	 DWORD PTR tv65[rsp], 104 ; 00000068H
  0001a	0f 87 f8 06 00
	00		 ja	 $LN103@simple_vm_
  00020	48 63 44 24 20	 movsxd	 rax, DWORD PTR tv65[rsp]
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0002c	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN107@simple_vm_[rcx+rax*4]
  00033	48 03 c1	 add	 rax, rcx
  00036	ff e0		 jmp	 rax
$LN102@simple_vm_:
; Line 385
  00038	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00044	fe c0		 inc	 al
  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0004b	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  00051	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00056	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  0005d	b9 08 00 00 00	 mov	 ecx, 8
  00062	48 6b c9 01	 imul	 rcx, 1
  00066	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0006a	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0006e	e8 00 00 00 00	 call	 simple_string_size
  00073	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00078	48 8b 89 58 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6232]
  0007f	ba 08 00 00 00	 mov	 edx, 8
  00084	48 6b d2 01	 imul	 rdx, 1
  00088	48 8b 0c 11	 mov	 rcx, QWORD PTR [rcx+rdx]
  0008c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00090	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00095	0f b6 92 30 18
	00 00		 movzx	 edx, BYTE PTR [rdx+6192]
  0009c	4c 8b 44 24 50	 mov	 r8, QWORD PTR vm$[rsp]
  000a1	49 83 c0 30	 add	 r8, 48			; 00000030H
  000a5	4c 89 44 24 28	 mov	 QWORD PTR tv88[rsp], r8
  000aa	44 8b c8	 mov	 r9d, eax
  000ad	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  000b0	48 8b 44 24 28	 mov	 rax, QWORD PTR tv88[rsp]
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 simple_itemarray_setstring2
; Line 386
  000bd	e9 56 06 00 00	 jmp	 $LN103@simple_vm_
$LN101@simple_vm_:
; Line 388
  000c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000c7	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  000ce	fe c0		 inc	 al
  000d0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000d5	88 81 30 18 00
	00		 mov	 BYTE PTR [rcx+6192], al
  000db	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e0	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  000e7	b9 08 00 00 00	 mov	 ecx, 8
  000ec	48 6b c9 01	 imul	 rcx, 1
  000f0	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  000f4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f9	0f b6 89 30 18
	00 00		 movzx	 ecx, BYTE PTR [rcx+6192]
  00100	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00105	48 83 c2 30	 add	 rdx, 48			; 00000030H
  00109	48 89 54 24 30	 mov	 QWORD PTR tv135[rsp], rdx
  0010e	f2 0f 10 50 08	 movsdx	 xmm2, QWORD PTR [rax+8]
  00113	8b d1		 mov	 edx, ecx
  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR tv135[rsp]
  0011a	48 8b c8	 mov	 rcx, rax
  0011d	e8 00 00 00 00	 call	 simple_itemarray_setdouble
; Line 389
  00122	e9 f1 05 00 00	 jmp	 $LN103@simple_vm_
$LN100@simple_vm_:
; Line 391
  00127	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0012c	e8 00 00 00 00	 call	 simple_vm_pushv
; Line 392
  00131	e9 e2 05 00 00	 jmp	 $LN103@simple_vm_
$LN99@simple_vm_:
; Line 394
  00136	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0013b	e8 00 00 00 00	 call	 simple_vm_loadaddress
; Line 395
  00140	e9 d3 05 00 00	 jmp	 $LN103@simple_vm_
$LN98@simple_vm_:
; Line 397
  00145	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0014a	e8 00 00 00 00	 call	 simple_vm_assignment
; Line 398
  0014f	e9 c4 05 00 00	 jmp	 $LN103@simple_vm_
$LN97@simple_vm_:
; Line 400
  00154	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00159	e8 00 00 00 00	 call	 simple_vm_inc
; Line 401
  0015e	e9 b5 05 00 00	 jmp	 $LN103@simple_vm_
$LN96@simple_vm_:
; Line 403
  00163	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00168	e8 00 00 00 00	 call	 simple_vm_loadapushv
; Line 404
  0016d	e9 a6 05 00 00	 jmp	 $LN103@simple_vm_
$LN95@simple_vm_:
; Line 406
  00172	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00177	e8 00 00 00 00	 call	 simple_vm_newline
; Line 407
  0017c	e9 97 05 00 00	 jmp	 $LN103@simple_vm_
$LN94@simple_vm_:
; Line 409
  00181	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00186	e8 00 00 00 00	 call	 simple_vm_freestack
; Line 410
  0018b	e9 88 05 00 00	 jmp	 $LN103@simple_vm_
$LN93@simple_vm_:
; Line 412
  00190	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00195	e8 00 00 00 00	 call	 simple_vm_setfilename
; Line 413
  0019a	e9 79 05 00 00	 jmp	 $LN103@simple_vm_
$LN92@simple_vm_:
; Line 415
  0019f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001a4	e8 00 00 00 00	 call	 simple_vm_freeloadaddressscope
; Line 416
  001a9	e9 6a 05 00 00	 jmp	 $LN103@simple_vm_
$LN91@simple_vm_:
; Line 419
  001ae	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001b3	e8 00 00 00 00	 call	 simple_vm_jump
; Line 420
  001b8	e9 5b 05 00 00	 jmp	 $LN103@simple_vm_
$LN90@simple_vm_:
; Line 422
  001bd	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c2	e8 00 00 00 00	 call	 simple_vm_jumpzero
; Line 423
  001c7	e9 4c 05 00 00	 jmp	 $LN103@simple_vm_
$LN89@simple_vm_:
; Line 425
  001cc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001d1	e8 00 00 00 00	 call	 simple_vm_jumpfor
; Line 426
  001d6	e9 3d 05 00 00	 jmp	 $LN103@simple_vm_
$LN88@simple_vm_:
; Line 428
  001db	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001e0	e8 00 00 00 00	 call	 simple_vm_jumpone
; Line 429
  001e5	e9 2e 05 00 00	 jmp	 $LN103@simple_vm_
$LN87@simple_vm_:
; Line 431
  001ea	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ef	e8 00 00 00 00	 call	 simple_vm_jumpzero2
; Line 432
  001f4	e9 1f 05 00 00	 jmp	 $LN103@simple_vm_
$LN86@simple_vm_:
; Line 434
  001f9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001fe	e8 00 00 00 00	 call	 simple_vm_jumpone2
; Line 435
  00203	e9 10 05 00 00	 jmp	 $LN103@simple_vm_
$LN85@simple_vm_:
; Line 438
  00208	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0020d	e8 00 00 00 00	 call	 simple_vm_lessequal
; Line 439
  00212	e9 01 05 00 00	 jmp	 $LN103@simple_vm_
$LN84@simple_vm_:
; Line 441
  00217	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0021c	e8 00 00 00 00	 call	 simple_vm_equal
; Line 442
  00221	e9 f2 04 00 00	 jmp	 $LN103@simple_vm_
$LN83@simple_vm_:
; Line 444
  00226	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0022b	e8 00 00 00 00	 call	 simple_vm_less
; Line 445
  00230	e9 e3 04 00 00	 jmp	 $LN103@simple_vm_
$LN82@simple_vm_:
; Line 447
  00235	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0023a	e8 00 00 00 00	 call	 simple_vm_greater
; Line 448
  0023f	e9 d4 04 00 00	 jmp	 $LN103@simple_vm_
$LN81@simple_vm_:
; Line 450
  00244	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00249	e8 00 00 00 00	 call	 simple_vm_greaterequal
; Line 451
  0024e	e9 c5 04 00 00	 jmp	 $LN103@simple_vm_
$LN80@simple_vm_:
; Line 453
  00253	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00258	e8 00 00 00 00	 call	 simple_vm_notequal
; Line 454
  0025d	e9 b6 04 00 00	 jmp	 $LN103@simple_vm_
$LN79@simple_vm_:
; Line 457
  00262	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00267	e8 00 00 00 00	 call	 simple_vm_sum
; Line 458
  0026c	e9 a7 04 00 00	 jmp	 $LN103@simple_vm_
$LN78@simple_vm_:
; Line 460
  00271	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00276	e8 00 00 00 00	 call	 simple_vm_sub
; Line 461
  0027b	e9 98 04 00 00	 jmp	 $LN103@simple_vm_
$LN77@simple_vm_:
; Line 463
  00280	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00285	e8 00 00 00 00	 call	 simple_vm_mul
; Line 464
  0028a	e9 89 04 00 00	 jmp	 $LN103@simple_vm_
$LN76@simple_vm_:
; Line 466
  0028f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00294	e8 00 00 00 00	 call	 simple_vm_div
; Line 467
  00299	e9 7a 04 00 00	 jmp	 $LN103@simple_vm_
$LN75@simple_vm_:
; Line 469
  0029e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002a3	e8 00 00 00 00	 call	 simple_vm_mod
; Line 470
  002a8	e9 6b 04 00 00	 jmp	 $LN103@simple_vm_
$LN74@simple_vm_:
; Line 472
  002ad	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002b2	e8 00 00 00 00	 call	 simple_vm_neg
; Line 473
  002b7	e9 5c 04 00 00	 jmp	 $LN103@simple_vm_
$LN73@simple_vm_:
; Line 475
  002bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002c1	e8 00 00 00 00	 call	 simple_vm_plusplus
; Line 476
  002c6	e9 4d 04 00 00	 jmp	 $LN103@simple_vm_
$LN72@simple_vm_:
; Line 478
  002cb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002d0	e8 00 00 00 00	 call	 simple_vm_minusminus
; Line 479
  002d5	e9 3e 04 00 00	 jmp	 $LN103@simple_vm_
$LN71@simple_vm_:
; Line 482
  002da	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002df	e8 00 00 00 00	 call	 simple_vm_and
; Line 483
  002e4	e9 2f 04 00 00	 jmp	 $LN103@simple_vm_
$LN70@simple_vm_:
; Line 485
  002e9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002ee	e8 00 00 00 00	 call	 simple_vm_or
; Line 486
  002f3	e9 20 04 00 00	 jmp	 $LN103@simple_vm_
$LN69@simple_vm_:
; Line 488
  002f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002fd	e8 00 00 00 00	 call	 simple_vm_not
; Line 489
  00302	e9 11 04 00 00	 jmp	 $LN103@simple_vm_
$LN68@simple_vm_:
; Line 492
  00307	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0030c	e8 00 00 00 00	 call	 simple_vm_liststart
; Line 493
  00311	e9 02 04 00 00	 jmp	 $LN103@simple_vm_
$LN67@simple_vm_:
; Line 495
  00316	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0031b	e8 00 00 00 00	 call	 simple_vm_listitem
; Line 496
  00320	e9 f3 03 00 00	 jmp	 $LN103@simple_vm_
$LN66@simple_vm_:
; Line 498
  00325	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0032a	e8 00 00 00 00	 call	 simple_vm_listend
; Line 499
  0032f	e9 e4 03 00 00	 jmp	 $LN103@simple_vm_
$LN65@simple_vm_:
; Line 501
  00334	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00339	e8 00 00 00 00	 call	 simple_vm_loadindexaddress
; Line 502
  0033e	e9 d5 03 00 00	 jmp	 $LN103@simple_vm_
$LN64@simple_vm_:
; Line 505
  00343	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00348	e8 00 00 00 00	 call	 simple_vm_loadblock
; Line 506
  0034d	e9 c6 03 00 00	 jmp	 $LN103@simple_vm_
$LN63@simple_vm_:
; Line 508
  00352	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00357	e8 00 00 00 00	 call	 simple_vm_call
; Line 509
  0035c	e9 b7 03 00 00	 jmp	 $LN103@simple_vm_
$LN62@simple_vm_:
; Line 511
  00361	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00366	e8 00 00 00 00	 call	 simple_vm_return
; Line 512
  0036b	e9 a8 03 00 00	 jmp	 $LN103@simple_vm_
$LN61@simple_vm_:
; Line 514
  00370	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00375	e8 00 00 00 00	 call	 simple_vm_returnnull
; Line 515
  0037a	e9 99 03 00 00	 jmp	 $LN103@simple_vm_
$LN60@simple_vm_:
; Line 517
  0037f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00384	e8 00 00 00 00	 call	 simple_vm_returneval
; Line 518
  00389	e9 8a 03 00 00	 jmp	 $LN103@simple_vm_
$LN59@simple_vm_:
; Line 520
  0038e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00393	e8 00 00 00 00	 call	 simple_vm_retitemref
; Line 521
  00398	e9 7b 03 00 00	 jmp	 $LN103@simple_vm_
$LN58@simple_vm_:
; Line 523
  0039d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003a2	e8 00 00 00 00	 call	 simple_vm_newblock
; Line 524
  003a7	e9 6c 03 00 00	 jmp	 $LN103@simple_vm_
$LN57@simple_vm_:
; Line 526
  003ac	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003b1	e8 00 00 00 00	 call	 simple_vm_blockflag
; Line 527
  003b6	e9 5d 03 00 00	 jmp	 $LN103@simple_vm_
$LN56@simple_vm_:
; Line 529
  003bb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003c0	8b 80 94 18 00
	00		 mov	 eax, DWORD PTR [rax+6292]
  003c6	ff c0		 inc	 eax
  003c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003cd	89 81 94 18 00
	00		 mov	 DWORD PTR [rcx+6292], eax
; Line 530
  003d3	e9 40 03 00 00	 jmp	 $LN103@simple_vm_
$LN55@simple_vm_:
; Line 532
  003d8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003dd	e8 00 00 00 00	 call	 simple_vm_endblockexec
; Line 533
  003e2	e9 31 03 00 00	 jmp	 $LN103@simple_vm_
$LN54@simple_vm_:
; Line 535
  003e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003ec	e8 00 00 00 00	 call	 simple_vm_anonymous
; Line 536
  003f1	e9 22 03 00 00	 jmp	 $LN103@simple_vm_
$LN53@simple_vm_:
; Line 539
  003f6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  003fb	e8 00 00 00 00	 call	 simple_vm_display
; Line 540
  00400	e9 13 03 00 00	 jmp	 $LN103@simple_vm_
$LN52@simple_vm_:
; Line 542
  00405	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0040a	e8 00 00 00 00	 call	 simple_vm_read
; Line 543
  0040f	e9 04 03 00 00	 jmp	 $LN103@simple_vm_
$LN51@simple_vm_:
; Line 546
  00414	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00419	e8 00 00 00 00	 call	 exit_simple_vm
; Line 547
  0041e	e9 f5 02 00 00	 jmp	 $LN103@simple_vm_
$LN50@simple_vm_:
; Line 549
  00423	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00428	e8 00 00 00 00	 call	 simple_vm_exitmark
; Line 550
  0042d	e9 e6 02 00 00	 jmp	 $LN103@simple_vm_
$LN49@simple_vm_:
; Line 552
  00432	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00437	e8 00 00 00 00	 call	 simple_vm_popexitmark
; Line 553
  0043c	e9 d7 02 00 00	 jmp	 $LN103@simple_vm_
$LN48@simple_vm_:
; Line 555
  00441	ba 01 00 00 00	 mov	 edx, 1
  00446	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0044b	e8 00 00 00 00	 call	 simple_vm_exit
; Line 556
  00450	e9 c3 02 00 00	 jmp	 $LN103@simple_vm_
$LN47@simple_vm_:
; Line 558
  00455	ba 02 00 00 00	 mov	 edx, 2
  0045a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0045f	e8 00 00 00 00	 call	 simple_vm_exit
; Line 559
  00464	e9 af 02 00 00	 jmp	 $LN103@simple_vm_
$LN46@simple_vm_:
; Line 562
  00469	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0046e	e8 00 00 00 00	 call	 simple_vm_pushp
; Line 563
  00473	e9 a0 02 00 00	 jmp	 $LN103@simple_vm_
$LN45@simple_vm_:
; Line 565
  00478	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0047d	e8 00 00 00 00	 call	 simple_vm_incp
; Line 566
  00482	e9 91 02 00 00	 jmp	 $LN103@simple_vm_
$LN44@simple_vm_:
; Line 568
  00487	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0048c	e8 00 00 00 00	 call	 simple_vm_pushpv
; Line 569
  00491	e9 82 02 00 00	 jmp	 $LN103@simple_vm_
$LN43@simple_vm_:
; Line 571
  00496	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0049b	e8 00 00 00 00	 call	 simple_vm_incjump
; Line 572
  004a0	e9 73 02 00 00	 jmp	 $LN103@simple_vm_
$LN42@simple_vm_:
; Line 574
  004a5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004aa	e8 00 00 00 00	 call	 simple_vm_incpjump
; Line 575
  004af	e9 64 02 00 00	 jmp	 $LN103@simple_vm_
$LN41@simple_vm_:
; Line 577
  004b4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004b9	e8 00 00 00 00	 call	 simple_vm_jumpvarlenum
; Line 578
  004be	e9 55 02 00 00	 jmp	 $LN103@simple_vm_
$LN40@simple_vm_:
; Line 580
  004c3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004c8	e8 00 00 00 00	 call	 simple_vm_jumpvarplenum
; Line 581
  004cd	e9 46 02 00 00	 jmp	 $LN103@simple_vm_
$LN39@simple_vm_:
; Line 583
  004d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004d7	e8 00 00 00 00	 call	 simple_vm_loadblockp
; Line 584
  004dc	e9 37 02 00 00	 jmp	 $LN103@simple_vm_
$LN38@simple_vm_:
; Line 586
  004e1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004e6	e8 00 00 00 00	 call	 simple_vm_pushplocal
; Line 587
  004eb	e9 28 02 00 00	 jmp	 $LN103@simple_vm_
$LN37@simple_vm_:
; Line 589
  004f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004f5	e8 00 00 00 00	 call	 simple_vm_inclpjump
; Line 590
  004fa	e9 19 02 00 00	 jmp	 $LN103@simple_vm_
$LN36@simple_vm_:
; Line 592
  004ff	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00504	e8 00 00 00 00	 call	 simple_vm_jumpvarlplenum
; Line 593
  00509	e9 0a 02 00 00	 jmp	 $LN103@simple_vm_
$LN35@simple_vm_:
; Line 595
  0050e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00513	e8 00 00 00 00	 call	 simple_vm_incpjumpstep1
; Line 596
  00518	e9 fb 01 00 00	 jmp	 $LN103@simple_vm_
$LN34@simple_vm_:
; Line 598
  0051d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00522	e8 00 00 00 00	 call	 simple_vm_jumpvarplenumstep1
; Line 599
  00527	e9 ec 01 00 00	 jmp	 $LN103@simple_vm_
$LN33@simple_vm_:
; Line 602
  0052c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00531	e8 00 00 00 00	 call	 simple_vm_try
; Line 603
  00536	e9 dd 01 00 00	 jmp	 $LN103@simple_vm_
$LN32@simple_vm_:
; Line 605
  0053b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00540	e8 00 00 00 00	 call	 simple_vm_finally
; Line 606
  00545	e9 ce 01 00 00	 jmp	 $LN103@simple_vm_
$LN31@simple_vm_:
; Line 609
  0054a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0054f	e8 00 00 00 00	 call	 simple_vm_dup
; Line 610
  00554	e9 bf 01 00 00	 jmp	 $LN103@simple_vm_
$LN30@simple_vm_:
; Line 612
  00559	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0055e	e8 00 00 00 00	 call	 simple_vm_range
; Line 613
  00563	e9 b0 01 00 00	 jmp	 $LN103@simple_vm_
$LN29@simple_vm_:
; Line 616
  00568	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0056d	e8 00 00 00 00	 call	 simple_vm_oop_newobj
; Line 617
  00572	e9 a1 01 00 00	 jmp	 $LN103@simple_vm_
$LN28@simple_vm_:
; Line 619
  00577	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0057c	e8 00 00 00 00	 call	 simple_vm_oop_setscope
; Line 620
  00581	e9 92 01 00 00	 jmp	 $LN103@simple_vm_
$LN27@simple_vm_:
; Line 622
  00586	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0058b	e8 00 00 00 00	 call	 simple_vm_oop_property
; Line 623
  00590	e9 83 01 00 00	 jmp	 $LN103@simple_vm_
$LN26@simple_vm_:
; Line 625
  00595	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0059a	e8 00 00 00 00	 call	 simple_vm_oop_loadmethod
; Line 626
  0059f	e9 74 01 00 00	 jmp	 $LN103@simple_vm_
$LN25@simple_vm_:
; Line 628
  005a4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005a9	e8 00 00 00 00	 call	 simple_vm_oop_aftercallmethod
; Line 629
  005ae	e9 65 01 00 00	 jmp	 $LN103@simple_vm_
$LN24@simple_vm_:
; Line 631
  005b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005b8	e8 00 00 00 00	 call	 simple_vm_oop_aftercallmethod
; Line 632
  005bd	e9 56 01 00 00	 jmp	 $LN103@simple_vm_
$LN23@simple_vm_:
; Line 634
  005c2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005c7	e8 00 00 00 00	 call	 simple_vm_oop_newclass
; Line 635
  005cc	e9 47 01 00 00	 jmp	 $LN103@simple_vm_
$LN22@simple_vm_:
; Line 637
  005d1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005d6	e8 00 00 00 00	 call	 simple_vm_oop_bracestart
; Line 638
  005db	e9 38 01 00 00	 jmp	 $LN103@simple_vm_
$LN21@simple_vm_:
; Line 640
  005e0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005e5	e8 00 00 00 00	 call	 simple_vm_oop_braceend
; Line 641
  005ea	e9 29 01 00 00	 jmp	 $LN103@simple_vm_
$LN20@simple_vm_:
; Line 643
  005ef	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  005f4	e8 00 00 00 00	 call	 simple_vm_oop_import
; Line 644
  005f9	e9 1a 01 00 00	 jmp	 $LN103@simple_vm_
$LN19@simple_vm_:
; Line 646
  005fe	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00603	c6 80 10 19 00
	00 01		 mov	 BYTE PTR [rax+6416], 1
; Line 647
  0060a	e9 09 01 00 00	 jmp	 $LN103@simple_vm_
$LN18@simple_vm_:
; Line 649
  0060f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00614	e8 00 00 00 00	 call	 simple_vm_oop_setproperty
; Line 650
  00619	e9 fa 00 00 00	 jmp	 $LN103@simple_vm_
$LN17@simple_vm_:
; Line 652
  0061e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00623	e8 00 00 00 00	 call	 simple_vm_callclassinit
; Line 653
  00628	e9 eb 00 00 00	 jmp	 $LN103@simple_vm_
$LN16@simple_vm_:
; Line 656
  0062d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00632	e8 00 00 00 00	 call	 simple_vm_setreference
; Line 657
  00637	e9 dc 00 00 00	 jmp	 $LN103@simple_vm_
$LN15@simple_vm_:
; Line 659
  0063c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00641	e8 00 00 00 00	 call	 simple_vm_gc_killreference
; Line 660
  00646	e9 cd 00 00 00	 jmp	 $LN103@simple_vm_
$LN14@simple_vm_:
; Line 662
  0064b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00650	e8 00 00 00 00	 call	 simple_vm_assignmentpointer
; Line 663
  00655	e9 be 00 00 00	 jmp	 $LN103@simple_vm_
$LN13@simple_vm_:
; Line 665
  0065a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0065f	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00666	b9 08 00 00 00	 mov	 ecx, 8
  0066b	48 6b c9 01	 imul	 rcx, 1
  0066f	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00673	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00678	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0067c	88 81 49 19 00
	00		 mov	 BYTE PTR [rcx+6473], al
; Line 666
  00682	e9 91 00 00 00	 jmp	 $LN103@simple_vm_
$LN12@simple_vm_:
; Line 669
  00687	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0068c	e8 00 00 00 00	 call	 simple_vm_bitand
; Line 670
  00691	e9 82 00 00 00	 jmp	 $LN103@simple_vm_
$LN11@simple_vm_:
; Line 672
  00696	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0069b	e8 00 00 00 00	 call	 simple_vm_bitor
; Line 673
  006a0	eb 76		 jmp	 SHORT $LN103@simple_vm_
$LN10@simple_vm_:
; Line 675
  006a2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006a7	e8 00 00 00 00	 call	 simple_vm_bitxor
; Line 676
  006ac	eb 6a		 jmp	 SHORT $LN103@simple_vm_
$LN9@simple_vm_:
; Line 678
  006ae	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006b3	e8 00 00 00 00	 call	 simple_vm_bitnot
; Line 679
  006b8	eb 5e		 jmp	 SHORT $LN103@simple_vm_
$LN8@simple_vm_:
; Line 681
  006ba	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006bf	e8 00 00 00 00	 call	 simple_vm_bitshl
; Line 682
  006c4	eb 52		 jmp	 SHORT $LN103@simple_vm_
$LN7@simple_vm_:
; Line 684
  006c6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006cb	e8 00 00 00 00	 call	 simple_vm_bitshr
; Line 685
  006d0	eb 46		 jmp	 SHORT $LN103@simple_vm_
$LN6@simple_vm_:
; Line 688
  006d2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006d7	e8 00 00 00 00	 call	 simple_vm_stepnumber
; Line 689
  006dc	eb 3a		 jmp	 SHORT $LN103@simple_vm_
$LN5@simple_vm_:
; Line 691
  006de	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006e3	e8 00 00 00 00	 call	 simple_vm_popstep
; Line 692
  006e8	eb 2e		 jmp	 SHORT $LN103@simple_vm_
$LN4@simple_vm_:
; Line 694
  006ea	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006ef	e8 00 00 00 00	 call	 simple_vm_loadaddressfirst
; Line 695
  006f4	eb 22		 jmp	 SHORT $LN103@simple_vm_
$LN3@simple_vm_:
; Line 698
  006f6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  006fb	e8 00 00 00 00	 call	 simple_vm_newglobalscope
; Line 699
  00700	eb 16		 jmp	 SHORT $LN103@simple_vm_
$LN2@simple_vm_:
; Line 701
  00702	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00707	e8 00 00 00 00	 call	 simple_vm_endglobalscope
; Line 702
  0070c	eb 0a		 jmp	 SHORT $LN103@simple_vm_
$LN1@simple_vm_:
; Line 704
  0070e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00713	e8 00 00 00 00	 call	 simple_vm_setglobalscope
$LN103@simple_vm_:
; Line 707
  00718	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0071c	c3		 ret	 0
  0071d	0f 1f 00	 npad	 3
$LN107@simple_vm_:
  00720	00 00 00 00	 DD	 $LN95@simple_vm_
  00724	00 00 00 00	 DD	 $LN93@simple_vm_
  00728	00 00 00 00	 DD	 $LN53@simple_vm_
  0072c	00 00 00 00	 DD	 $LN23@simple_vm_
  00730	00 00 00 00	 DD	 $LN58@simple_vm_
  00734	00 00 00 00	 DD	 $LN31@simple_vm_
  00738	00 00 00 00	 DD	 $LN29@simple_vm_
  0073c	00 00 00 00	 DD	 $LN52@simple_vm_
  00740	00 00 00 00	 DD	 $LN19@simple_vm_
  00744	00 00 00 00	 DD	 $LN103@simple_vm_
  00748	00 00 00 00	 DD	 $LN91@simple_vm_
  0074c	00 00 00 00	 DD	 $LN90@simple_vm_
  00750	00 00 00 00	 DD	 $LN88@simple_vm_
  00754	00 00 00 00	 DD	 $LN89@simple_vm_
  00758	00 00 00 00	 DD	 $LN87@simple_vm_
  0075c	00 00 00 00	 DD	 $LN86@simple_vm_
  00760	00 00 00 00	 DD	 $LN99@simple_vm_
  00764	00 00 00 00	 DD	 $LN98@simple_vm_
  00768	00 00 00 00	 DD	 $LN27@simple_vm_
  0076c	00 00 00 00	 DD	 $LN65@simple_vm_
  00770	00 00 00 00	 DD	 $LN96@simple_vm_
  00774	00 00 00 00	 DD	 $LN84@simple_vm_
  00778	00 00 00 00	 DD	 $LN83@simple_vm_
  0077c	00 00 00 00	 DD	 $LN82@simple_vm_
  00780	00 00 00 00	 DD	 $LN80@simple_vm_
  00784	00 00 00 00	 DD	 $LN85@simple_vm_
  00788	00 00 00 00	 DD	 $LN81@simple_vm_
  0078c	00 00 00 00	 DD	 $LN102@simple_vm_
  00790	00 00 00 00	 DD	 $LN101@simple_vm_
  00794	00 00 00 00	 DD	 $LN100@simple_vm_
  00798	00 00 00 00	 DD	 $LN46@simple_vm_
  0079c	00 00 00 00	 DD	 $LN44@simple_vm_
  007a0	00 00 00 00	 DD	 $LN38@simple_vm_
  007a4	00 00 00 00	 DD	 $LN79@simple_vm_
  007a8	00 00 00 00	 DD	 $LN78@simple_vm_
  007ac	00 00 00 00	 DD	 $LN77@simple_vm_
  007b0	00 00 00 00	 DD	 $LN76@simple_vm_
  007b4	00 00 00 00	 DD	 $LN75@simple_vm_
  007b8	00 00 00 00	 DD	 $LN74@simple_vm_
  007bc	00 00 00 00	 DD	 $LN97@simple_vm_
  007c0	00 00 00 00	 DD	 $LN45@simple_vm_
  007c4	00 00 00 00	 DD	 $LN64@simple_vm_
  007c8	00 00 00 00	 DD	 $LN63@simple_vm_
  007cc	00 00 00 00	 DD	 $LN62@simple_vm_
  007d0	00 00 00 00	 DD	 $LN61@simple_vm_
  007d4	00 00 00 00	 DD	 $LN60@simple_vm_
  007d8	00 00 00 00	 DD	 $LN59@simple_vm_
  007dc	00 00 00 00	 DD	 $LN68@simple_vm_
  007e0	00 00 00 00	 DD	 $LN67@simple_vm_
  007e4	00 00 00 00	 DD	 $LN66@simple_vm_
  007e8	00 00 00 00	 DD	 $LN71@simple_vm_
  007ec	00 00 00 00	 DD	 $LN70@simple_vm_
  007f0	00 00 00 00	 DD	 $LN69@simple_vm_
  007f4	00 00 00 00	 DD	 $LN94@simple_vm_
  007f8	00 00 00 00	 DD	 $LN57@simple_vm_
  007fc	00 00 00 00	 DD	 $LN56@simple_vm_
  00800	00 00 00 00	 DD	 $LN55@simple_vm_
  00804	00 00 00 00	 DD	 $LN48@simple_vm_
  00808	00 00 00 00	 DD	 $LN50@simple_vm_
  0080c	00 00 00 00	 DD	 $LN49@simple_vm_
  00810	00 00 00 00	 DD	 $LN51@simple_vm_
  00814	00 00 00 00	 DD	 $LN43@simple_vm_
  00818	00 00 00 00	 DD	 $LN42@simple_vm_
  0081c	00 00 00 00	 DD	 $LN41@simple_vm_
  00820	00 00 00 00	 DD	 $LN40@simple_vm_
  00824	00 00 00 00	 DD	 $LN33@simple_vm_
  00828	00 00 00 00	 DD	 $LN32@simple_vm_
  0082c	00 00 00 00	 DD	 $LN30@simple_vm_
  00830	00 00 00 00	 DD	 $LN26@simple_vm_
  00834	00 00 00 00	 DD	 $LN28@simple_vm_
  00838	00 00 00 00	 DD	 $LN25@simple_vm_
  0083c	00 00 00 00	 DD	 $LN22@simple_vm_
  00840	00 00 00 00	 DD	 $LN21@simple_vm_
  00844	00 00 00 00	 DD	 $LN39@simple_vm_
  00848	00 00 00 00	 DD	 $LN92@simple_vm_
  0084c	00 00 00 00	 DD	 $LN47@simple_vm_
  00850	00 00 00 00	 DD	 $LN37@simple_vm_
  00854	00 00 00 00	 DD	 $LN36@simple_vm_
  00858	00 00 00 00	 DD	 $LN103@simple_vm_
  0085c	00 00 00 00	 DD	 $LN20@simple_vm_
  00860	00 00 00 00	 DD	 $LN18@simple_vm_
  00864	00 00 00 00	 DD	 $LN103@simple_vm_
  00868	00 00 00 00	 DD	 $LN24@simple_vm_
  0086c	00 00 00 00	 DD	 $LN16@simple_vm_
  00870	00 00 00 00	 DD	 $LN15@simple_vm_
  00874	00 00 00 00	 DD	 $LN14@simple_vm_
  00878	00 00 00 00	 DD	 $LN13@simple_vm_
  0087c	00 00 00 00	 DD	 $LN73@simple_vm_
  00880	00 00 00 00	 DD	 $LN72@simple_vm_
  00884	00 00 00 00	 DD	 $LN12@simple_vm_
  00888	00 00 00 00	 DD	 $LN11@simple_vm_
  0088c	00 00 00 00	 DD	 $LN9@simple_vm_
  00890	00 00 00 00	 DD	 $LN10@simple_vm_
  00894	00 00 00 00	 DD	 $LN8@simple_vm_
  00898	00 00 00 00	 DD	 $LN7@simple_vm_
  0089c	00 00 00 00	 DD	 $LN6@simple_vm_
  008a0	00 00 00 00	 DD	 $LN5@simple_vm_
  008a4	00 00 00 00	 DD	 $LN4@simple_vm_
  008a8	00 00 00 00	 DD	 $LN35@simple_vm_
  008ac	00 00 00 00	 DD	 $LN34@simple_vm_
  008b0	00 00 00 00	 DD	 $LN54@simple_vm_
  008b4	00 00 00 00	 DD	 $LN17@simple_vm_
  008b8	00 00 00 00	 DD	 $LN3@simple_vm_
  008bc	00 00 00 00	 DD	 $LN2@simple_vm_
  008c0	00 00 00 00	 DD	 $LN1@simple_vm_
simple_vm_execute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_fetch2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 352
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 353
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00011	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001d	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00024	48 8d 84 01 30
	ff ff ff	 lea	 rax, QWORD PTR [rcx+rax-208]
  0002c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00031	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 354
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00044	b9 08 00 00 00	 mov	 ecx, 8
  00049	48 6b c9 00	 imul	 rcx, 0
  0004d	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00059	89 41 28	 mov	 DWORD PTR [rcx+40], eax
; Line 356
  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00061	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00068	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0006b	c1 e8 06	 shr	 eax, 6
  0006e	83 e0 01	 and	 eax, 1
  00071	85 c0		 test	 eax, eax
  00073	0f 84 b9 00 00
	00		 je	 $LN5@simple_vm_
; Line 357
  00079	e8 00 00 00 00	 call	 print_line
; Line 358
  0007e	48 8b 54 24 30	 mov	 rdx, QWORD PTR vm$[rsp]
  00083	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82510
  0008a	e8 00 00 00 00	 call	 printf
; Line 359
  0008f	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00094	48 63 40 28	 movsxd	 rax, DWORD PTR [rax+40]
  00098	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SIMPLE_IC_OP
  0009f	48 8b 14 c1	 mov	 rdx, QWORD PTR [rcx+rax*8]
  000a3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82511
  000aa	e8 00 00 00 00	 call	 printf
; Line 360
  000af	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000b4	8b 10		 mov	 edx, DWORD PTR [rax]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82512
  000bd	e8 00 00 00 00	 call	 printf
; Line 361
  000c2	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000c7	4c 8b 80 60 18
	00 00		 mov	 r8, QWORD PTR [rax+6240]
  000ce	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000d3	8b 90 68 18 00
	00		 mov	 edx, DWORD PTR [rax+6248]
  000d9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82513
  000e0	e8 00 00 00 00	 call	 printf
; Line 362
  000e5	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000ea	83 78 28 1b	 cmp	 DWORD PTR [rax+40], 27
  000ee	74 16		 je	 SHORT $LN3@simple_vm_
  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  000f5	83 78 28 10	 cmp	 DWORD PTR [rax+40], 16
  000f9	74 0b		 je	 SHORT $LN3@simple_vm_
  000fb	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00100	83 78 28 29	 cmp	 DWORD PTR [rax+40], 41	; 00000029H
  00104	75 2c		 jne	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
; Line 363
  00106	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0010b	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00112	b9 08 00 00 00	 mov	 ecx, 8
  00117	48 6b c9 01	 imul	 rcx, 1
  0011b	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  0011f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00123	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00126	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82516
  0012d	e8 00 00 00 00	 call	 printf
$LN4@simple_vm_:
$LN5@simple_vm_:
; Line 367
  00132	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00137	8b 00		 mov	 eax, DWORD PTR [rax]
  00139	ff c0		 inc	 eax
  0013b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00140	89 01		 mov	 DWORD PTR [rcx], eax
; Line 368
  00142	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00147	e8 00 00 00 00	 call	 simple_vm_execute
; Line 370
  0014c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00151	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00158	8b 40 38	 mov	 eax, DWORD PTR [rax+56]
  0015b	c1 e8 06	 shr	 eax, 6
  0015e	83 e0 01	 and	 eax, 1
  00161	85 c0		 test	 eax, eax
  00163	74 37		 je	 SHORT $LN2@simple_vm_
; Line 371
  00165	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0016a	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00171	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00176	44 8b 89 68 18
	00 00		 mov	 r9d, DWORD PTR [rcx+6248]
  0017d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00182	44 8b 81 90 18
	00 00		 mov	 r8d, DWORD PTR [rcx+6288]
  00189	8b d0		 mov	 edx, eax
  0018b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82519
  00192	e8 00 00 00 00	 call	 printf
; Line 372
  00197	e8 00 00 00 00	 call	 print_line
$LN2@simple_vm_:
; Line 375
  0019c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  001a1	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  001a8	3d fd 00 00 00	 cmp	 eax, 253		; 000000fdH
  001ad	7e 11		 jle	 SHORT $LN1@simple_vm_
; Line 376
  001af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82521
  001b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  001bb	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
; Line 378
  001c0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c4	c3		 ret	 0
simple_vm_fetch2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
vm$ = 48
simple_vm_fetch PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 341
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 342
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00011	48 69 c0 d0 00
	00 00		 imul	 rax, 208		; 000000d0H
  00018	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0001d	48 8b 89 50 18
	00 00		 mov	 rcx, QWORD PTR [rcx+6224]
  00024	48 8d 84 01 30
	ff ff ff	 lea	 rax, QWORD PTR [rcx+rax-208]
  0002c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00031	48 89 81 58 18
	00 00		 mov	 QWORD PTR [rcx+6232], rax
; Line 343
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	48 8b 80 58 18
	00 00		 mov	 rax, QWORD PTR [rax+6232]
  00044	b9 08 00 00 00	 mov	 ecx, 8
  00049	48 6b c9 00	 imul	 rcx, 0
  0004d	48 8b 04 08	 mov	 rax, QWORD PTR [rax+rcx]
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00056	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00059	89 41 28	 mov	 DWORD PTR [rcx+40], eax
; Line 344
  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  00061	8b 00		 mov	 eax, DWORD PTR [rax]
  00063	ff c0		 inc	 eax
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  0006a	89 01		 mov	 DWORD PTR [rcx], eax
; Line 345
  0006c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00071	e8 00 00 00 00	 call	 simple_vm_execute
; Line 346
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR vm$[rsp]
  0007b	0f b6 80 30 18
	00 00		 movzx	 eax, BYTE PTR [rax+6192]
  00082	3d fd 00 00 00	 cmp	 eax, 253		; 000000fdH
  00087	7e 11		 jle	 SHORT $LN1@simple_vm_
; Line 347
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82504
  00090	48 8b 4c 24 30	 mov	 rcx, QWORD PTR vm$[rsp]
  00095	e8 00 00 00 00	 call	 simple_vm_error
$LN1@simple_vm_:
; Line 349
  0009a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009e	c3		 ret	 0
simple_vm_fetch ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
sState$ = 48
vm$ = 56
simple_vm_start PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 291
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 292
  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00018	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0001c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 293
  00020	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0002a	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0002e	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 294
  00032	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0003c	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  00040	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
; Line 295
  00044	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  00049	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  0004e	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  00052	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
; Line 296
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR vm$[rsp]
  0005b	e8 00 00 00 00	 call	 simple_vm_loadcode
; Line 297
  00060	48 8b 4c 24 30	 mov	 rcx, QWORD PTR sState$[rsp]
  00065	e8 00 00 00 00	 call	 loadcblocks
; Line 299
  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR sState$[rsp]
  0006f	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
  00073	e8 00 00 00 00	 call	 simple_list_genarray
; Line 300
  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR sState$[rsp]
  0007d	48 8b 48 30	 mov	 rcx, QWORD PTR [rax+48]
  00081	e8 00 00 00 00	 call	 simple_list_genhashtable2
; Line 301
  00086	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  0008b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008f	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  00093	7e 15		 jle	 SHORT $LN1@simple_vm_
; Line 302
  00095	48 8b 44 24 38	 mov	 rax, QWORD PTR vm$[rsp]
  0009a	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1
; Line 303
  000a0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR vm$[rsp]
  000a5	e8 00 00 00 00	 call	 simple_vm_mainloop
$LN1@simple_vm_:
; Line 305
  000aa	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ae	c3		 ret	 0
simple_vm_start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nSize$ = 36
vm$ = 64
simple_vm_loadcode PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 271
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 278
  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00012	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00015	d1 e0		 shl	 eax, 1
  00017	89 44 24 24	 mov	 DWORD PTR nSize$[rsp], eax
; Line 279
  0001b	48 63 44 24 24	 movsxd	 rax, DWORD PTR nSize$[rsp]
  00020	41 b8 d0 00 00
	00		 mov	 r8d, 208		; 000000d0H
  00026	48 8b d0	 mov	 rdx, rax
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0002e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00035	e8 00 00 00 00	 call	 simple_state_calloc
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  0003f	48 89 81 50 18
	00 00		 mov	 QWORD PTR [rcx+6224], rax
; Line 280
  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  0004b	48 83 b8 50 18
	00 00 00	 cmp	 QWORD PTR [rax+6224], 0
  00053	75 13		 jne	 SHORT $LN4@simple_vm_
; Line 281
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82477
  0005c	e8 00 00 00 00	 call	 printf
; Line 282
  00061	33 c9		 xor	 ecx, ecx
  00063	e8 00 00 00 00	 call	 exit
$LN4@simple_vm_:
; Line 284
  00068	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  00070	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  00072	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00076	ff c0		 inc	 eax
  00078	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_vm_:
  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  00081	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00085	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00088	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0008c	7f 10		 jg	 SHORT $LN1@simple_vm_
; Line 285
  0008e	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR vm$[rsp]
  00097	e8 00 00 00 00	 call	 simple_vm_tobytecode
; Line 286
  0009c	eb d4		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 287
  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR vm$[rsp]
  000a3	8b 4c 24 24	 mov	 ecx, DWORD PTR nSize$[rsp]
  000a7	89 88 84 19 00
	00		 mov	 DWORD PTR [rax+6532], ecx
$LN6@simple_vm_:
; Line 288
  000ad	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000b1	c3		 ret	 0
simple_vm_loadcode ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pRecord$ = 40
pItem$ = 48
vm$ = 80
simple_vm_delete PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 215
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 220
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0000e	48 8b 90 38 18
	00 00		 mov	 rdx, QWORD PTR [rax+6200]
  00015	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0001a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00021	e8 00 00 00 00	 call	 simple_list_delete_gc
  00026	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0002b	48 89 81 38 18
	00 00		 mov	 QWORD PTR [rcx+6200], rax
; Line 221
  00032	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00037	48 8b 90 70 18
	00 00		 mov	 rdx, QWORD PTR [rax+6256]
  0003e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00043	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0004a	e8 00 00 00 00	 call	 simple_list_delete_gc
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00054	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 222
  0005b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00060	48 8b 90 88 18
	00 00		 mov	 rdx, QWORD PTR [rax+6280]
  00067	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0006c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00073	e8 00 00 00 00	 call	 simple_list_delete_gc
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0007d	48 89 81 88 18
	00 00		 mov	 QWORD PTR [rcx+6280], rax
; Line 223
  00084	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00089	48 8b 90 80 18
	00 00		 mov	 rdx, QWORD PTR [rax+6272]
  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00095	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0009c	e8 00 00 00 00	 call	 simple_list_delete_gc
  000a1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000a6	48 89 81 80 18
	00 00		 mov	 QWORD PTR [rcx+6272], rax
; Line 224
  000ad	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000b2	48 8b 90 48 18
	00 00		 mov	 rdx, QWORD PTR [rax+6216]
  000b9	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000be	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000c5	e8 00 00 00 00	 call	 simple_list_delete_gc
  000ca	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000cf	48 89 81 48 18
	00 00		 mov	 QWORD PTR [rcx+6216], rax
; Line 225
  000d6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000db	48 8b 90 a0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6304]
  000e2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000ee	e8 00 00 00 00	 call	 simple_list_delete_gc
  000f3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  000f8	48 89 81 a0 18
	00 00		 mov	 QWORD PTR [rcx+6304], rax
; Line 226
  000ff	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00104	48 8b 90 a8 18
	00 00		 mov	 rdx, QWORD PTR [rax+6312]
  0010b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00110	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00117	e8 00 00 00 00	 call	 simple_list_delete_gc
  0011c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00121	48 89 81 a8 18
	00 00		 mov	 QWORD PTR [rcx+6312], rax
; Line 227
  00128	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0012d	48 8b 90 b8 18
	00 00		 mov	 rdx, QWORD PTR [rax+6328]
  00134	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00139	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00140	e8 00 00 00 00	 call	 simple_list_delete_gc
  00145	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0014a	48 89 81 b8 18
	00 00		 mov	 QWORD PTR [rcx+6328], rax
; Line 228
  00151	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00156	48 8b 90 c0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6336]
  0015d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00162	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00169	e8 00 00 00 00	 call	 simple_list_delete_gc
  0016e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00173	48 89 81 c0 18
	00 00		 mov	 QWORD PTR [rcx+6336], rax
; Line 229
  0017a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0017f	48 8b 90 d0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6352]
  00186	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0018b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00192	e8 00 00 00 00	 call	 simple_list_delete_gc
  00197	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0019c	48 89 81 d0 18
	00 00		 mov	 QWORD PTR [rcx+6352], rax
; Line 230
  001a3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001a8	48 8b 90 e0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6368]
  001af	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001b4	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001bb	e8 00 00 00 00	 call	 simple_list_delete_gc
  001c0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001c5	48 89 81 e0 18
	00 00		 mov	 QWORD PTR [rcx+6368], rax
; Line 231
  001cc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001d1	48 8b 90 f0 18
	00 00		 mov	 rdx, QWORD PTR [rax+6384]
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001dd	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e4	e8 00 00 00 00	 call	 simple_list_delete_gc
  001e9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  001ee	48 89 81 f0 18
	00 00		 mov	 QWORD PTR [rcx+6384], rax
; Line 232
  001f5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  001fa	48 8b 90 08 19
	00 00		 mov	 rdx, QWORD PTR [rax+6408]
  00201	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00206	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0020d	e8 00 00 00 00	 call	 simple_list_delete_gc
  00212	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00217	48 89 81 08 19
	00 00		 mov	 QWORD PTR [rcx+6408], rax
; Line 233
  0021e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00223	48 8b 90 28 19
	00 00		 mov	 rdx, QWORD PTR [rax+6440]
  0022a	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0022f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00236	e8 00 00 00 00	 call	 simple_list_delete_gc
  0023b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00240	48 89 81 28 19
	00 00		 mov	 QWORD PTR [rcx+6440], rax
; Line 234
  00247	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0024c	48 8b 90 38 19
	00 00		 mov	 rdx, QWORD PTR [rax+6456]
  00253	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00258	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0025f	e8 00 00 00 00	 call	 simple_list_delete_gc
  00264	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00269	48 89 81 38 19
	00 00		 mov	 QWORD PTR [rcx+6456], rax
; Line 235
  00270	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00275	48 8b 90 40 19
	00 00		 mov	 rdx, QWORD PTR [rax+6464]
  0027c	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00281	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00288	e8 00 00 00 00	 call	 simple_list_delete_gc
  0028d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00292	48 89 81 40 19
	00 00		 mov	 QWORD PTR [rcx+6464], rax
; Line 236
  00299	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0029e	48 8b 90 58 19
	00 00		 mov	 rdx, QWORD PTR [rax+6488]
  002a5	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002aa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002b1	e8 00 00 00 00	 call	 simple_list_delete_gc
  002b6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002bb	48 89 81 58 19
	00 00		 mov	 QWORD PTR [rcx+6488], rax
; Line 237
  002c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002c7	48 8b 90 60 19
	00 00		 mov	 rdx, QWORD PTR [rax+6496]
  002ce	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002d3	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002da	e8 00 00 00 00	 call	 simple_list_delete_gc
  002df	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  002e4	48 89 81 60 19
	00 00		 mov	 QWORD PTR [rcx+6496], rax
; Line 238
  002eb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002f0	48 8b 90 68 19
	00 00		 mov	 rdx, QWORD PTR [rax+6504]
  002f7	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  002fc	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00303	e8 00 00 00 00	 call	 simple_list_delete_gc
  00308	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0030d	48 89 81 68 19
	00 00		 mov	 QWORD PTR [rcx+6504], rax
; Line 239
  00314	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00319	48 8b 90 78 19
	00 00		 mov	 rdx, QWORD PTR [rax+6520]
  00320	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00325	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0032c	e8 00 00 00 00	 call	 simple_list_delete_gc
  00331	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00336	48 89 81 78 19
	00 00		 mov	 QWORD PTR [rcx+6520], rax
; Line 241
  0033d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00345	eb 0a		 jmp	 SHORT $LN6@simple_vm_
$LN5@simple_vm_:
  00347	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0034b	ff c0		 inc	 eax
  0034d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_vm_:
  00351	81 7c 24 20 00
	01 00 00	 cmp	 DWORD PTR x$[rsp], 256	; 00000100H
  00359	7d 1d		 jge	 SHORT $LN4@simple_vm_
; Line 242
  0035b	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00360	48 6b c0 18	 imul	 rax, 24
  00364	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00369	48 8d 44 01 30	 lea	 rax, QWORD PTR [rcx+rax+48]
  0036e	48 8b c8	 mov	 rcx, rax
  00371	e8 00 00 00 00	 call	 simple_item_content_delete
; Line 243
  00376	eb cf		 jmp	 SHORT $LN5@simple_vm_
$LN4@simple_vm_:
; Line 244
  00378	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0037d	48 8b 90 50 18
	00 00		 mov	 rdx, QWORD PTR [rax+6224]
  00384	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00389	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00390	e8 00 00 00 00	 call	 simple_state_free
; Line 246
  00395	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0039a	e8 00 00 00 00	 call	 simple_vm_mutexdestroy
; Line 251
  0039f	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR x$[rsp], 1
  003a7	eb 0a		 jmp	 SHORT $LN3@simple_vm_
$LN2@simple_vm_:
  003a9	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  003ad	ff c0		 inc	 eax
  003af	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_vm_:
  003b3	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003b8	48 8b 80 d0 19
	00 00		 mov	 rax, QWORD PTR [rax+6608]
  003bf	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  003c2	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  003c6	7f 4a		 jg	 SHORT $LN1@simple_vm_
; Line 252
  003c8	8b 54 24 20	 mov	 edx, DWORD PTR x$[rsp]
  003cc	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  003d1	48 8b 88 d0 19
	00 00		 mov	 rcx, QWORD PTR [rax+6608]
  003d8	e8 00 00 00 00	 call	 simple_list_getlist
  003dd	48 89 44 24 28	 mov	 QWORD PTR pRecord$[rsp], rax
; Line 253
  003e2	ba 02 00 00 00	 mov	 edx, 2
  003e7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR pRecord$[rsp]
  003ec	e8 00 00 00 00	 call	 simple_list_getitem
  003f1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003f5	48 89 44 24 30	 mov	 QWORD PTR pItem$[rsp], rax
; Line 254
  003fa	48 8b 54 24 30	 mov	 rdx, QWORD PTR pItem$[rsp]
  003ff	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00404	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0040b	e8 00 00 00 00	 call	 simple_state_free
; Line 255
  00410	eb 97		 jmp	 SHORT $LN2@simple_vm_
$LN1@simple_vm_:
; Line 257
  00412	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00417	48 8b 90 d0 19
	00 00		 mov	 rdx, QWORD PTR [rax+6608]
  0041e	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00423	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0042a	e8 00 00 00 00	 call	 simple_list_delete_gc
  0042f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00434	48 89 81 d0 19
	00 00		 mov	 QWORD PTR [rcx+6608], rax
; Line 258
  0043b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00440	48 8b 90 d8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6616]
  00447	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0044c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00453	e8 00 00 00 00	 call	 simple_string_delete_gc
  00458	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  0045d	48 89 81 d8 19
	00 00		 mov	 QWORD PTR [rcx+6616], rax
; Line 259
  00464	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00469	48 8b 90 e8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6632]
  00470	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00475	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0047c	e8 00 00 00 00	 call	 simple_string_delete_gc
  00481	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00486	48 89 81 e8 19
	00 00		 mov	 QWORD PTR [rcx+6632], rax
; Line 260
  0048d	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00492	48 8b 90 f8 19
	00 00		 mov	 rdx, QWORD PTR [rax+6648]
  00499	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0049e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004a5	e8 00 00 00 00	 call	 simple_list_delete_gc
  004aa	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004af	48 89 81 f8 19
	00 00		 mov	 QWORD PTR [rcx+6648], rax
; Line 262
  004b6	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004bb	48 8b 90 08 1a
	00 00		 mov	 rdx, QWORD PTR [rax+6664]
  004c2	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004c7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004ce	e8 00 00 00 00	 call	 simple_list_delete_gc
  004d3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  004d8	48 89 81 08 1a
	00 00		 mov	 QWORD PTR [rcx+6664], rax
; Line 263
  004df	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004e4	48 8b 90 10 1a
	00 00		 mov	 rdx, QWORD PTR [rax+6672]
  004eb	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  004f0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004f7	e8 00 00 00 00	 call	 simple_list_delete_gc
  004fc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR vm$[rsp]
  00501	48 89 81 10 1a
	00 00		 mov	 QWORD PTR [rcx+6672], rax
; Line 264
  00508	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  0050d	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00514	48 c7 40 48 00
	00 00 00	 mov	 QWORD PTR [rax+72], 0
; Line 265
  0051c	48 8b 54 24 50	 mov	 rdx, QWORD PTR vm$[rsp]
  00521	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
  00526	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0052d	e8 00 00 00 00	 call	 simple_state_free
; Line 266
  00532	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR vm$[rsp], 0
; Line 267
  0053b	48 8b 44 24 50	 mov	 rax, QWORD PTR vm$[rsp]
; Line 268
  00540	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00544	c3		 ret	 0
simple_vm_delete ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
vm$ = 40
sState$ = 64
simple_vm_new PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_vm.c
; Line 22
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 25
  00009	ba 28 1a 00 00	 mov	 edx, 6696		; 00001a28H
  0000e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00013	e8 00 00 00 00	 call	 simple_state_malloc
  00018	48 89 44 24 28	 mov	 QWORD PTR vm$[rsp], rax
; Line 26
  0001d	48 83 7c 24 28
	00		 cmp	 QWORD PTR vm$[rsp], 0
  00023	75 13		 jne	 SHORT $LN5@simple_vm_
; Line 27
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82432
  0002c	e8 00 00 00 00	 call	 printf
; Line 28
  00031	33 c9		 xor	 ecx, ecx
  00033	e8 00 00 00 00	 call	 exit
$LN5@simple_vm_:
; Line 31
  00038	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00042	48 89 88 50 19
	00 00		 mov	 QWORD PTR [rax+6480], rcx
; Line 32
  00049	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  0004e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00053	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; Line 33
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0005c	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1
; Line 34
  00062	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00067	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; Line 35
  0006f	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00074	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
; Line 36
  0007c	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00081	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0
; Line 37
  00088	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0008d	c6 80 30 18 00
	00 00		 mov	 BYTE PTR [rax+6192], 0
; Line 38
  00094	33 d2		 xor	 edx, edx
  00096	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0009b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000a2	e8 00 00 00 00	 call	 simple_list_new_gc
  000a7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  000ac	48 89 81 38 18
	00 00		 mov	 QWORD PTR [rcx+6200], rax
; Line 39
  000b3	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  000b8	48 c7 80 40 18
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6208], 0
; Line 40
  000c3	33 d2		 xor	 edx, edx
  000c5	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  000ca	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  000d1	e8 00 00 00 00	 call	 simple_list_new_gc
  000d6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  000db	48 89 81 48 18
	00 00		 mov	 QWORD PTR [rcx+6216], rax
; Line 41
  000e2	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  000e7	c7 80 68 18 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+6248], 1
; Line 43
  000f1	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  000f6	c7 80 ec 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6380], 0
; Line 44
  00100	33 d2		 xor	 edx, edx
  00102	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00107	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0010e	e8 00 00 00 00	 call	 simple_list_new_gc
  00113	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00118	48 89 81 f0 18
	00 00		 mov	 QWORD PTR [rcx+6384], rax
; Line 45
  0011f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00124	e8 00 00 00 00	 call	 simple_vm_newscope
; Line 46
  00129	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00131	eb 0a		 jmp	 SHORT $LN4@simple_vm_
$LN3@simple_vm_:
  00133	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00137	ff c0		 inc	 eax
  00139	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_vm_:
  0013d	81 7c 24 20 00
	01 00 00	 cmp	 DWORD PTR x$[rsp], 256	; 00000100H
  00145	7d 7a		 jge	 SHORT $LN2@simple_vm_
; Line 47
  00147	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  0014c	48 6b c0 18	 imul	 rax, 24
  00150	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00155	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00159	83 e0 f8	 and	 eax, -8			; fffffff8H
  0015c	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00161	48 6b c9 18	 imul	 rcx, 24
  00165	48 8b 54 24 28	 mov	 rdx, QWORD PTR vm$[rsp]
  0016a	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 48
  0016e	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00173	48 6b c0 18	 imul	 rax, 24
  00177	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0017c	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  00180	83 e0 9f	 and	 eax, -97		; ffffff9fH
  00183	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00188	48 6b c9 18	 imul	 rcx, 24
  0018c	48 8b 54 24 28	 mov	 rdx, QWORD PTR vm$[rsp]
  00191	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 49
  00195	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  0019a	48 6b c0 18	 imul	 rax, 24
  0019e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  001a3	8b 44 01 30	 mov	 eax, DWORD PTR [rcx+rax+48]
  001a7	83 e0 e7	 and	 eax, -25		; ffffffe7H
  001aa	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  001af	48 6b c9 18	 imul	 rcx, 24
  001b3	48 8b 54 24 28	 mov	 rdx, QWORD PTR vm$[rsp]
  001b8	89 44 0a 30	 mov	 DWORD PTR [rdx+rcx+48], eax
; Line 50
  001bc	e9 72 ff ff ff	 jmp	 $LN3@simple_vm_
$LN2@simple_vm_:
; Line 52
  001c1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  001c6	e8 00 00 00 00	 call	 simple_vm_addglobalvariables
; Line 54
  001cb	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  001d0	c7 80 6c 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6252], 0
; Line 55
  001da	33 d2		 xor	 edx, edx
  001dc	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  001e1	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  001e8	e8 00 00 00 00	 call	 simple_list_new_gc
  001ed	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  001f2	48 89 81 70 18
	00 00		 mov	 QWORD PTR [rcx+6256], rax
; Line 57
  001f9	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  001fe	c7 80 78 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6264], 0
; Line 58
  00208	33 d2		 xor	 edx, edx
  0020a	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0020f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00216	e8 00 00 00 00	 call	 simple_list_new_gc
  0021b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00220	48 89 81 80 18
	00 00		 mov	 QWORD PTR [rcx+6272], rax
; Line 60
  00227	33 d2		 xor	 edx, edx
  00229	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0022e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00235	e8 00 00 00 00	 call	 simple_list_new_gc
  0023a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0023f	48 89 81 88 18
	00 00		 mov	 QWORD PTR [rcx+6280], rax
; Line 61
  00246	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0024b	c7 80 90 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6288], 0
; Line 62
  00255	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0025a	c7 80 94 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6292], 0
; Line 63
  00264	48 8b 44 24 40	 mov	 rax, QWORD PTR sState$[rsp]
  00269	48 83 78 30 00	 cmp	 QWORD PTR [rax+48], 0
  0026e	75 1c		 jne	 SHORT $LN1@simple_vm_
; Line 64
  00270	33 d2		 xor	 edx, edx
  00272	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00277	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0027e	e8 00 00 00 00	 call	 simple_list_new_gc
  00283	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00288	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax
$LN1@simple_vm_:
; Line 66
  0028c	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00291	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sState$[rsp]
  00296	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  0029a	48 89 88 98 18
	00 00		 mov	 QWORD PTR [rax+6296], rcx
; Line 67
  002a1	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  002a6	c7 80 b0 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6320], 0
; Line 69
  002b0	33 d2		 xor	 edx, edx
  002b2	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  002b7	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002be	e8 00 00 00 00	 call	 simple_list_new_gc
  002c3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  002c8	48 89 81 a0 18
	00 00		 mov	 QWORD PTR [rcx+6304], rax
; Line 70
  002cf	33 d2		 xor	 edx, edx
  002d1	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  002d6	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002dd	e8 00 00 00 00	 call	 simple_list_new_gc
  002e2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  002e7	48 89 81 a8 18
	00 00		 mov	 QWORD PTR [rcx+6312], rax
; Line 72
  002ee	33 d2		 xor	 edx, edx
  002f0	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  002f5	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  002fc	e8 00 00 00 00	 call	 simple_list_new_gc
  00301	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00306	48 89 81 b8 18
	00 00		 mov	 QWORD PTR [rcx+6328], rax
; Line 74
  0030d	33 d2		 xor	 edx, edx
  0030f	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00314	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0031b	e8 00 00 00 00	 call	 simple_list_new_gc
  00320	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00325	48 89 81 c0 18
	00 00		 mov	 QWORD PTR [rcx+6336], rax
; Line 76
  0032c	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00331	c6 80 c8 18 00
	00 00		 mov	 BYTE PTR [rax+6344], 0
; Line 78
  00338	33 d2		 xor	 edx, edx
  0033a	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0033f	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00346	e8 00 00 00 00	 call	 simple_list_new_gc
  0034b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00350	48 89 81 d0 18
	00 00		 mov	 QWORD PTR [rcx+6352], rax
; Line 80
  00357	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0035c	48 c7 80 d8 18
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6360], 0
; Line 81
  00367	33 d2		 xor	 edx, edx
  00369	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0036e	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00375	e8 00 00 00 00	 call	 simple_list_new_gc
  0037a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0037f	48 89 81 e0 18
	00 00		 mov	 QWORD PTR [rcx+6368], rax
; Line 83
  00386	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0038b	c6 80 00 19 00
	00 00		 mov	 BYTE PTR [rax+6400], 0
; Line 85
  00392	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00397	c7 80 e8 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6376], 0
; Line 87
  003a1	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  003a6	c7 80 fc 18 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6396], 0
; Line 92
  003b0	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  003b5	c6 80 01 19 00
	00 00		 mov	 BYTE PTR [rax+6401], 0
; Line 93
  003bc	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  003c1	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
; Line 95
  003c9	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  003ce	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  003d5	ba 01 00 00 00	 mov	 edx, 1
  003da	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  003dd	e8 00 00 00 00	 call	 simple_list_getitem
  003e2	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  003e6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  003eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ee	48 89 81 60 18
	00 00		 mov	 QWORD PTR [rcx+6240], rax
; Line 96
  003f5	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  003fa	48 8b 80 50 19
	00 00		 mov	 rax, QWORD PTR [rax+6480]
  00401	ba 01 00 00 00	 mov	 edx, 1
  00406	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00409	e8 00 00 00 00	 call	 simple_list_getitem
  0040e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00412	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00417	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0041a	48 89 81 c0 19
	00 00		 mov	 QWORD PTR [rcx+6592], rax
; Line 98
  00421	33 d2		 xor	 edx, edx
  00423	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00428	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0042f	e8 00 00 00 00	 call	 simple_list_new_gc
  00434	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00439	48 89 81 08 19
	00 00		 mov	 QWORD PTR [rcx+6408], rax
; Line 100
  00440	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00445	c6 80 10 19 00
	00 00		 mov	 BYTE PTR [rax+6416], 0
; Line 102
  0044c	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00451	c6 80 11 19 00
	00 00		 mov	 BYTE PTR [rax+6417], 0
; Line 103
  00458	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0045d	48 c7 80 18 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6424], 0
; Line 104
  00468	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0046d	c6 80 20 19 00
	00 00		 mov	 BYTE PTR [rax+6432], 0
; Line 105
  00474	33 d2		 xor	 edx, edx
  00476	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0047b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00482	e8 00 00 00 00	 call	 simple_list_new_gc
  00487	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0048c	48 89 81 28 19
	00 00		 mov	 QWORD PTR [rcx+6440], rax
; Line 107
  00493	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00498	48 c7 80 30 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6448], 0
; Line 109
  004a3	33 d2		 xor	 edx, edx
  004a5	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  004aa	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004b1	e8 00 00 00 00	 call	 simple_list_new_gc
  004b6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  004bb	48 89 81 38 19
	00 00		 mov	 QWORD PTR [rcx+6456], rax
; Line 111
  004c2	33 d2		 xor	 edx, edx
  004c4	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  004c9	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  004d0	e8 00 00 00 00	 call	 simple_list_new_gc
  004d5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  004da	48 89 81 40 19
	00 00		 mov	 QWORD PTR [rcx+6464], rax
; Line 113
  004e1	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  004e6	c6 80 48 19 00
	00 00		 mov	 BYTE PTR [rax+6472], 0
; Line 115
  004ed	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  004f2	c6 80 49 19 00
	00 00		 mov	 BYTE PTR [rax+6473], 0
; Line 123
  004f9	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  004fe	c6 80 4a 19 00
	00 00		 mov	 BYTE PTR [rax+6474], 0
; Line 125
  00505	33 d2		 xor	 edx, edx
  00507	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0050c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00513	e8 00 00 00 00	 call	 simple_list_new_gc
  00518	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0051d	48 89 81 58 19
	00 00		 mov	 QWORD PTR [rcx+6488], rax
; Line 127
  00524	33 d2		 xor	 edx, edx
  00526	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0052b	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00532	e8 00 00 00 00	 call	 simple_list_new_gc
  00537	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0053c	48 89 81 60 19
	00 00		 mov	 QWORD PTR [rcx+6496], rax
; Line 129
  00543	33 d2		 xor	 edx, edx
  00545	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0054a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00551	e8 00 00 00 00	 call	 simple_list_new_gc
  00556	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0055b	48 89 81 68 19
	00 00		 mov	 QWORD PTR [rcx+6504], rax
; Line 131
  00562	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00567	c7 80 70 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6512], 0
; Line 133
  00571	33 d2		 xor	 edx, edx
  00573	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00578	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0057f	e8 00 00 00 00	 call	 simple_list_new_gc
  00584	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00589	48 89 81 78 19
	00 00		 mov	 QWORD PTR [rcx+6520], rax
; Line 135
  00590	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00595	c6 80 80 19 00
	00 00		 mov	 BYTE PTR [rax+6528], 0
; Line 137
  0059c	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005a1	c6 80 81 19 00
	00 02		 mov	 BYTE PTR [rax+6529], 2
; Line 142
  005a8	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005ad	c7 80 84 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6532], 0
; Line 144
  005b7	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005bc	c6 80 82 19 00
	00 00		 mov	 BYTE PTR [rax+6530], 0
; Line 146
  005c3	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005c8	c7 80 88 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6536], 0
; Line 152
  005d2	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005d7	c6 80 8c 19 00
	00 00		 mov	 BYTE PTR [rax+6540], 0
; Line 154
  005de	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005e3	c7 80 90 19 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6544], 0
; Line 156
  005ed	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005f2	c6 80 94 19 00
	00 00		 mov	 BYTE PTR [rax+6548], 0
; Line 158
  005f9	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  005fe	48 c7 80 a0 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6560], 0
; Line 159
  00609	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0060e	48 c7 80 a8 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6568], 0
; Line 160
  00619	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0061e	48 c7 80 98 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6552], 0
; Line 161
  00629	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0062e	48 c7 80 b0 19
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6576], 0
; Line 163
  00639	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0063e	c6 80 b8 19 00
	00 00		 mov	 BYTE PTR [rax+6584], 0
; Line 171
  00645	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0064a	c6 80 b9 19 00
	00 00		 mov	 BYTE PTR [rax+6585], 0
; Line 178
  00651	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00656	c6 80 ba 19 00
	00 00		 mov	 BYTE PTR [rax+6586], 0
; Line 180
  0065d	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00662	c6 80 c8 19 00
	00 00		 mov	 BYTE PTR [rax+6600], 0
; Line 182
  00669	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0066e	c6 80 c9 19 00
	00 00		 mov	 BYTE PTR [rax+6601], 0
; Line 184
  00675	33 d2		 xor	 edx, edx
  00677	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0067c	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00683	e8 00 00 00 00	 call	 simple_list_new_gc
  00688	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0068d	48 89 81 d0 19
	00 00		 mov	 QWORD PTR [rcx+6608], rax
; Line 186
  00694	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82449
  0069b	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  006a0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006a7	e8 00 00 00 00	 call	 simple_string_new_gc
  006ac	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  006b1	48 89 81 d8 19
	00 00		 mov	 QWORD PTR [rcx+6616], rax
; Line 194
  006b8	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  006bd	c6 80 e0 19 00
	00 00		 mov	 BYTE PTR [rax+6624], 0
; Line 195
  006c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82450
  006cb	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  006d0	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  006d7	e8 00 00 00 00	 call	 simple_string_new_gc
  006dc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  006e1	48 89 81 e8 19
	00 00		 mov	 QWORD PTR [rcx+6632], rax
; Line 196
  006e8	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  006ed	c6 80 f0 19 00
	00 00		 mov	 BYTE PTR [rax+6640], 0
; Line 197
  006f4	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  006f9	c6 80 f1 19 00
	00 00		 mov	 BYTE PTR [rax+6641], 0
; Line 198
  00700	33 d2		 xor	 edx, edx
  00702	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00707	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  0070e	e8 00 00 00 00	 call	 simple_list_new_gc
  00713	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  00718	48 89 81 f8 19
	00 00		 mov	 QWORD PTR [rcx+6648], rax
; Line 200
  0071f	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00724	c6 80 00 1a 00
	00 00		 mov	 BYTE PTR [rax+6656], 0
; Line 202
  0072b	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00730	c6 80 01 1a 00
	00 00		 mov	 BYTE PTR [rax+6657], 0
; Line 204
  00737	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0073c	c6 80 02 1a 00
	00 00		 mov	 BYTE PTR [rax+6658], 0
; Line 206
  00743	33 d2		 xor	 edx, edx
  00745	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  0074a	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00751	e8 00 00 00 00	 call	 simple_list_new_gc
  00756	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0075b	48 89 81 08 1a
	00 00		 mov	 QWORD PTR [rcx+6664], rax
; Line 207
  00762	33 d2		 xor	 edx, edx
  00764	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00769	48 8b 88 50 19
	00 00		 mov	 rcx, QWORD PTR [rax+6480]
  00770	e8 00 00 00 00	 call	 simple_list_new_gc
  00775	48 8b 4c 24 28	 mov	 rcx, QWORD PTR vm$[rsp]
  0077a	48 89 81 10 1a
	00 00		 mov	 QWORD PTR [rcx+6672], rax
; Line 208
  00781	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00786	c7 80 18 1a 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+6680], 0
; Line 210
  00790	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
  00795	48 c7 80 20 1a
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+6688], 0
; Line 211
  007a0	48 8b 44 24 28	 mov	 rax, QWORD PTR vm$[rsp]
$LN7@simple_vm_:
; Line 212
  007a5	48 83 c4 38	 add	 rsp, 56			; 00000038H
  007a9	c3		 ret	 0
simple_vm_new ENDP
_TEXT	ENDS
END
