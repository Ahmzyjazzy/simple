; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG82442 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82446 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82486 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82514 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82525 DB	'%s ', 0aH, 00H
	ORG $+3
$SG82535 DB	'%d', 00H
	ORG $+1
$SG82661 DB	'%s', 0aH, 00H
$SG82627 DB	0aH, 'Error (E2) : Out of Memory!', 0aH, 00H
	ORG $+2
$SG82650 DB	'Wow Really i like the c language so much', 00H
	ORG $+3
$SG82654 DB	'Hello ', 00H
	ORG $+1
$SG82655 DB	'World', 00H
	ORG $+6
$SG82656 DB	0aH, 'Test String Add , Output = %s', 0aH, 00H
$SG82657 DB	' Welcome to the C programming language', 00H
	ORG $+1
$SG82658 DB	0aH, 'Test String Add , Output = %s', 0aH, 00H
$SG82659 DB	'Welcome to my StrinG', 00H
	ORG $+3
$SG82660 DB	'Test string to lower ', 0aH, 00H
_DATA	ENDS
PUBLIC	simple_string_new_gc
PUBLIC	simple_string_new2_gc
PUBLIC	simple_string_delete_gc
PUBLIC	simple_string_size
PUBLIC	simple_string_set_gc
PUBLIC	simple_string_set2_gc
PUBLIC	simple_string_add_gc
PUBLIC	simple_string_add2_gc
PUBLIC	simple_string_print
PUBLIC	simple_string_setfromint_gc
PUBLIC	simple_string_lower
PUBLIC	simple_string_upper
PUBLIC	simple_string_lower2
PUBLIC	simple_string_upper2
PUBLIC	simple_string_find_gc
PUBLIC	simple_string_find2_gc
PUBLIC	simple_string_find3_gc
PUBLIC	simple_string_test
PUBLIC	simple_string_new2
PUBLIC	simple_string_new
PUBLIC	simple_string_add
PUBLIC	simple_string_add2
PUBLIC	simple_string_set
PUBLIC	simple_string_set2
PUBLIC	simple_string_find
PUBLIC	simple_string_find2
PUBLIC	simple_string_find3
PUBLIC	simple_string_delete
PUBLIC	simple_string_setfromint
EXTRN	exit:PROC
EXTRN	getchar:PROC
EXTRN	printf:PROC
EXTRN	sprintf:PROC
EXTRN	strlen:PROC
EXTRN	isalpha:PROC
EXTRN	toupper:PROC
EXTRN	tolower:PROC
EXTRN	simple_state_malloc:PROC
EXTRN	simple_state_free:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	NOT_CASE_SENSITIVE:DWORD
EXTRN	__security_cookie:QWORD
pdata	SEGMENT
$pdata$simple_string_new_gc DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$simple_string_new_gc
$pdata$simple_string_new2_gc DD imagerel $LN8
	DD	imagerel $LN8+227
	DD	imagerel $unwind$simple_string_new2_gc
$pdata$simple_string_delete_gc DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$simple_string_delete_gc
$pdata$simple_string_set_gc DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$simple_string_set_gc
$pdata$simple_string_set2_gc DD imagerel $LN7
	DD	imagerel $LN7+198
	DD	imagerel $unwind$simple_string_set2_gc
$pdata$simple_string_add_gc DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$simple_string_add_gc
$pdata$simple_string_add2_gc DD imagerel $LN10
	DD	imagerel $LN10+324
	DD	imagerel $unwind$simple_string_add2_gc
$pdata$simple_string_print DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$simple_string_print
$pdata$simple_string_setfromint_gc DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$simple_string_setfromint_gc
$pdata$simple_string_lower DD imagerel $LN8
	DD	imagerel $LN8+135
	DD	imagerel $unwind$simple_string_lower
$pdata$simple_string_upper DD imagerel $LN7
	DD	imagerel $LN7+126
	DD	imagerel $unwind$simple_string_upper
$pdata$simple_string_lower2 DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$simple_string_lower2
$pdata$simple_string_upper2 DD imagerel $LN7
	DD	imagerel $LN7+114
	DD	imagerel $unwind$simple_string_upper2
$pdata$simple_string_find_gc DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$simple_string_find_gc
$pdata$simple_string_find2_gc DD imagerel $LN9
	DD	imagerel $LN9+181
	DD	imagerel $unwind$simple_string_find2_gc
$pdata$simple_string_find3_gc DD imagerel $LN17
	DD	imagerel $LN17+476
	DD	imagerel $unwind$simple_string_find3_gc
$pdata$simple_string_test DD imagerel $LN9
	DD	imagerel $LN9+308
	DD	imagerel $unwind$simple_string_test
$pdata$simple_string_new2 DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_string_new2
$pdata$simple_string_new DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_string_new
$pdata$simple_string_add DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_string_add
$pdata$simple_string_add2 DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$simple_string_add2
$pdata$simple_string_set DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_string_set
$pdata$simple_string_set2 DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$simple_string_set2
$pdata$simple_string_find DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$simple_string_find
$pdata$simple_string_find2 DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$simple_string_find2
$pdata$simple_string_find3 DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$simple_string_find3
$pdata$simple_string_delete DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$simple_string_delete
$pdata$simple_string_setfromint DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$simple_string_setfromint
pdata	ENDS
xdata	SEGMENT
$unwind$simple_string_new_gc DD 010e01H
	DD	0620eH
$unwind$simple_string_new2_gc DD 011301H
	DD	06213H
$unwind$simple_string_delete_gc DD 010e01H
	DD	0420eH
$unwind$simple_string_set_gc DD 011301H
	DD	06213H
$unwind$simple_string_set2_gc DD 011801H
	DD	06218H
$unwind$simple_string_add_gc DD 011301H
	DD	06213H
$unwind$simple_string_add2_gc DD 011801H
	DD	08218H
$unwind$simple_string_print DD 010901H
	DD	04209H
$unwind$simple_string_setfromint_gc DD 012219H
	DD	08213H
	DD	imagerel __GSHandlerCheck
	DD	038H
$unwind$simple_string_lower DD 010901H
	DD	06209H
$unwind$simple_string_upper DD 010901H
	DD	06209H
$unwind$simple_string_lower2 DD 010d01H
	DD	0620dH
$unwind$simple_string_upper2 DD 010d01H
	DD	0620dH
$unwind$simple_string_find_gc DD 011301H
	DD	08213H
$unwind$simple_string_find2_gc DD 011801H
	DD	02218H
$unwind$simple_string_find3_gc DD 011801H
	DD	08218H
$unwind$simple_string_test DD 020701H
	DD	0110107H
$unwind$simple_string_new2 DD 010d01H
	DD	0420dH
$unwind$simple_string_new DD 010901H
	DD	04209H
$unwind$simple_string_add DD 010e01H
	DD	0420eH
$unwind$simple_string_add2 DD 011301H
	DD	04213H
$unwind$simple_string_set DD 010e01H
	DD	0420eH
$unwind$simple_string_set2 DD 011301H
	DD	04213H
$unwind$simple_string_find DD 010e01H
	DD	0420eH
$unwind$simple_string_find2 DD 011701H
	DD	06217H
$unwind$simple_string_find3 DD 011701H
	DD	06217H
$unwind$simple_string_delete DD 010901H
	DD	04209H
$unwind$simple_string_setfromint DD 010d01H
	DD	0420dH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
x$ = 56
simple_string_setfromint PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 332
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 333
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR x$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_string_setfromint_gc
; Line 334
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_string_setfromint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
simple_string_delete PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 327
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 328
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_string_delete_gc
; Line 329
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_string_delete ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string_one$ = 64
str_size1$ = 72
cStr2$ = 80
str_size2$ = 88
simple_string_find3 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 322
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 323
  00017	8b 44 24 58	 mov	 eax, DWORD PTR str_size2$[rsp]
  0001b	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0001f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR cStr2$[rsp]
  00024	44 8b 44 24 48	 mov	 r8d, DWORD PTR str_size1$[rsp]
  00029	48 8b 54 24 40	 mov	 rdx, QWORD PTR string_one$[rsp]
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 simple_string_find3_gc
; Line 324
  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
simple_string_find3 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string_one$ = 64
str_size1$ = 72
cStr2$ = 80
str_size2$ = 88
simple_string_find2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 317
$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 318
  00017	8b 44 24 58	 mov	 eax, DWORD PTR str_size2$[rsp]
  0001b	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0001f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR cStr2$[rsp]
  00024	44 8b 44 24 48	 mov	 r8d, DWORD PTR str_size1$[rsp]
  00029	48 8b 54 24 40	 mov	 rdx, QWORD PTR string_one$[rsp]
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 simple_string_find2_gc
; Line 319
  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
simple_string_find2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string_one$ = 48
cStr2$ = 56
simple_string_find PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 312
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 313
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR cStr2$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR string_one$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_string_find_gc
; Line 314
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_string_find ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
str$ = 56
str_size$ = 64
simple_string_set2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 307
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 308
  00013	44 8b 4c 24 40	 mov	 r9d, DWORD PTR str_size$[rsp]
  00018	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  0001d	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00022	33 c9		 xor	 ecx, ecx
  00024	e8 00 00 00 00	 call	 simple_string_set2_gc
; Line 309
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_string_set2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
str$ = 56
simple_string_set PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 302
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 303
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_string_set_gc
; Line 304
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_string_set ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
str$ = 56
str_size$ = 64
simple_string_add2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 297
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 298
  00013	44 8b 4c 24 40	 mov	 r9d, DWORD PTR str_size$[rsp]
  00018	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  0001d	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00022	33 c9		 xor	 ecx, ecx
  00024	e8 00 00 00 00	 call	 simple_string_add2_gc
; Line 299
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
simple_string_add2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
str$ = 56
simple_string_add PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 292
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 293
  0000e	4c 8b 44 24 38	 mov	 r8, QWORD PTR str$[rsp]
  00013	48 8b 54 24 30	 mov	 rdx, QWORD PTR string$[rsp]
  00018	33 c9		 xor	 ecx, ecx
  0001a	e8 00 00 00 00	 call	 simple_string_add_gc
; Line 294
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
simple_string_add ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
str$ = 48
simple_string_new PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 287
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 288
  00009	48 8b 54 24 30	 mov	 rdx, QWORD PTR str$[rsp]
  0000e	33 c9		 xor	 ecx, ecx
  00010	e8 00 00 00 00	 call	 simple_string_new_gc
; Line 289
  00015	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00019	c3		 ret	 0
simple_string_new ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
str$ = 48
str_size$ = 56
simple_string_new2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 282
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 283
  0000d	44 8b 44 24 38	 mov	 r8d, DWORD PTR str_size$[rsp]
  00012	48 8b 54 24 30	 mov	 rdx, QWORD PTR str$[rsp]
  00017	33 c9		 xor	 ecx, ecx
  00019	e8 00 00 00 00	 call	 simple_string_new2_gc
; Line 284
  0001e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00022	c3		 ret	 0
simple_string_new2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
string$ = 40
mystr$ = 48
simple_string_test PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 253
$LN9:
  00000	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H
; Line 258
  00007	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  0000f	eb 0a		 jmp	 SHORT $LN6@simple_str
$LN5@simple_str:
  00011	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00015	ff c0		 inc	 eax
  00017	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_str:
  0001b	83 7c 24 20 0a	 cmp	 DWORD PTR x$[rsp], 10
  00020	7d 27		 jge	 SHORT $LN4@simple_str
; Line 259
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82650
  00029	e8 00 00 00 00	 call	 simple_string_new
  0002e	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00033	48 89 44 cc 30	 mov	 QWORD PTR mystr$[rsp+rcx*8], rax
; Line 260
  00038	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  0003d	48 8b 4c c4 30	 mov	 rcx, QWORD PTR mystr$[rsp+rax*8]
  00042	e8 00 00 00 00	 call	 simple_string_print
; Line 261
  00047	eb c8		 jmp	 SHORT $LN5@simple_str
$LN4@simple_str:
; Line 262
  00049	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00051	eb 0a		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
  00053	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00057	ff c0		 inc	 eax
  00059	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_str:
  0005d	83 7c 24 20 0a	 cmp	 DWORD PTR x$[rsp], 10
  00062	7d 1b		 jge	 SHORT $LN1@simple_str
; Line 263
  00064	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00069	48 8b 4c c4 30	 mov	 rcx, QWORD PTR mystr$[rsp+rax*8]
  0006e	e8 00 00 00 00	 call	 simple_string_delete
  00073	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  00078	48 89 44 cc 30	 mov	 QWORD PTR mystr$[rsp+rcx*8], rax
; Line 264
  0007d	eb d4		 jmp	 SHORT $LN2@simple_str
$LN1@simple_str:
; Line 266
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82654
  00086	e8 00 00 00 00	 call	 simple_string_new
  0008b	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 267
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82655
  00097	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  0009c	e8 00 00 00 00	 call	 simple_string_add
; Line 268
  000a1	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  000a6	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82656
  000b0	e8 00 00 00 00	 call	 printf
; Line 269
  000b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82657
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  000c1	e8 00 00 00 00	 call	 simple_string_add
; Line 270
  000c6	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  000cb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000ce	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82658
  000d5	e8 00 00 00 00	 call	 printf
; Line 271
  000da	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  000df	e8 00 00 00 00	 call	 simple_string_delete
; Line 273
  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82659
  000eb	e8 00 00 00 00	 call	 simple_string_new
  000f0	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 274
  000f5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82660
  000fc	e8 00 00 00 00	 call	 printf
; Line 275
  00101	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  00106	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00109	e8 00 00 00 00	 call	 simple_string_lower
  0010e	48 8b d0	 mov	 rdx, rax
  00111	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82661
  00118	e8 00 00 00 00	 call	 printf
; Line 276
  0011d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  00122	e8 00 00 00 00	 call	 simple_string_delete
; Line 277
  00127	e8 00 00 00 00	 call	 getchar
; Line 278
  0012c	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00133	c3		 ret	 0
simple_string_test ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
nPos$ = 36
cStr3$ = 40
cStr4$ = 48
pOutput$ = 56
pState$ = 80
string_one$ = 88
str_size1$ = 96
cStr2$ = 104
str_size2$ = 112
simple_string_find3_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 209
$LN17:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 215
  00018	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR nPos$[rsp], 0
; Line 216
  00020	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  00024	8b 4c 24 60	 mov	 ecx, DWORD PTR str_size1$[rsp]
  00028	2b c8		 sub	 ecx, eax
  0002a	8b c1		 mov	 eax, ecx
  0002c	85 c0		 test	 eax, eax
  0002e	7d 07		 jge	 SHORT $LN14@simple_str
; Line 217
  00030	33 c0		 xor	 eax, eax
  00032	e9 a0 01 00 00	 jmp	 $LN15@simple_str
$LN14@simple_str:
; Line 220
  00037	8b 44 24 60	 mov	 eax, DWORD PTR str_size1$[rsp]
  0003b	ff c0		 inc	 eax
  0003d	48 98		 cdqe
  0003f	48 8b d0	 mov	 rdx, rax
  00042	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	e8 00 00 00 00	 call	 simple_state_malloc
  0004c	48 89 44 24 28	 mov	 QWORD PTR cStr3$[rsp], rax
; Line 221
  00051	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  00055	ff c0		 inc	 eax
  00057	48 98		 cdqe
  00059	48 8b d0	 mov	 rdx, rax
  0005c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  00061	e8 00 00 00 00	 call	 simple_state_malloc
  00066	48 89 44 24 30	 mov	 QWORD PTR cStr4$[rsp], rax
; Line 222
  0006b	48 83 7c 24 28
	00		 cmp	 QWORD PTR cStr3$[rsp], 0
  00071	74 08		 je	 SHORT $LN12@simple_str
  00073	48 83 7c 24 30
	00		 cmp	 QWORD PTR cStr4$[rsp], 0
  00079	75 13		 jne	 SHORT $LN13@simple_str
$LN12@simple_str:
; Line 223
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82627
  00082	e8 00 00 00 00	 call	 printf
; Line 224
  00087	33 c9		 xor	 ecx, ecx
  00089	e8 00 00 00 00	 call	 exit
$LN13@simple_str:
; Line 226
  0008e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00096	eb 0a		 jmp	 SHORT $LN11@simple_str
$LN10@simple_str:
  00098	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0009c	ff c0		 inc	 eax
  0009e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN11@simple_str:
  000a2	8b 44 24 60	 mov	 eax, DWORD PTR str_size1$[rsp]
  000a6	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000aa	7f 1e		 jg	 SHORT $LN9@simple_str
; Line 227
  000ac	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  000b1	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  000b6	48 8b 54 24 28	 mov	 rdx, QWORD PTR cStr3$[rsp]
  000bb	4c 8b 44 24 58	 mov	 r8, QWORD PTR string_one$[rsp]
  000c0	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  000c5	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
; Line 228
  000c8	eb ce		 jmp	 SHORT $LN10@simple_str
$LN9@simple_str:
; Line 229
  000ca	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  000d2	eb 0a		 jmp	 SHORT $LN8@simple_str
$LN7@simple_str:
  000d4	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000d8	ff c0		 inc	 eax
  000da	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN8@simple_str:
  000de	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  000e2	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000e6	7f 1e		 jg	 SHORT $LN6@simple_str
; Line 230
  000e8	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  000ed	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  000f2	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr4$[rsp]
  000f7	4c 8b 44 24 68	 mov	 r8, QWORD PTR cStr2$[rsp]
  000fc	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00101	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
; Line 231
  00104	eb ce		 jmp	 SHORT $LN7@simple_str
$LN6@simple_str:
; Line 232
  00106	8b 54 24 60	 mov	 edx, DWORD PTR str_size1$[rsp]
  0010a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cStr3$[rsp]
  0010f	e8 00 00 00 00	 call	 simple_string_lower2
; Line 233
  00114	8b 54 24 70	 mov	 edx, DWORD PTR str_size2$[rsp]
  00118	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cStr4$[rsp]
  0011d	e8 00 00 00 00	 call	 simple_string_lower2
; Line 234
  00122	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR pOutput$[rsp], 0
$LN5@simple_str:
; Line 235
  0012b	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  0012f	8b 4c 24 60	 mov	 ecx, DWORD PTR str_size1$[rsp]
  00133	2b c8		 sub	 ecx, eax
  00135	8b c1		 mov	 eax, ecx
  00137	39 44 24 24	 cmp	 DWORD PTR nPos$[rsp], eax
  0013b	7f 77		 jg	 SHORT $LN4@simple_str
; Line 236
  0013d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
$LN3@simple_str:
; Line 237
  00145	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  00149	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0014d	7d 35		 jge	 SHORT $LN2@simple_str
  0014f	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00153	8b 4c 24 24	 mov	 ecx, DWORD PTR nPos$[rsp]
  00157	03 c8		 add	 ecx, eax
  00159	8b c1		 mov	 eax, ecx
  0015b	48 98		 cdqe
  0015d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cStr3$[rsp]
  00162	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00166	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  0016b	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr4$[rsp]
  00170	0f be 0c 0a	 movsx	 ecx, BYTE PTR [rdx+rcx]
  00174	3b c1		 cmp	 eax, ecx
  00176	75 0c		 jne	 SHORT $LN2@simple_str
; Line 238
  00178	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0017c	ff c0		 inc	 eax
  0017e	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
; Line 239
  00182	eb c1		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
; Line 240
  00184	8b 44 24 70	 mov	 eax, DWORD PTR str_size2$[rsp]
  00188	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  0018c	75 17		 jne	 SHORT $LN1@simple_str
; Line 241
  0018e	48 63 44 24 24	 movsxd	 rax, DWORD PTR nPos$[rsp]
  00193	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string_one$[rsp]
  00198	48 03 c8	 add	 rcx, rax
  0019b	48 8b c1	 mov	 rax, rcx
  0019e	48 89 44 24 38	 mov	 QWORD PTR pOutput$[rsp], rax
; Line 242
  001a3	eb 0f		 jmp	 SHORT $LN4@simple_str
$LN1@simple_str:
; Line 244
  001a5	8b 44 24 24	 mov	 eax, DWORD PTR nPos$[rsp]
  001a9	ff c0		 inc	 eax
  001ab	89 44 24 24	 mov	 DWORD PTR nPos$[rsp], eax
; Line 245
  001af	e9 77 ff ff ff	 jmp	 $LN5@simple_str
$LN4@simple_str:
; Line 247
  001b4	48 8b 54 24 28	 mov	 rdx, QWORD PTR cStr3$[rsp]
  001b9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  001be	e8 00 00 00 00	 call	 simple_state_free
; Line 248
  001c3	48 8b 54 24 30	 mov	 rdx, QWORD PTR cStr4$[rsp]
  001c8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  001cd	e8 00 00 00 00	 call	 simple_state_free
; Line 249
  001d2	48 8b 44 24 38	 mov	 rax, QWORD PTR pOutput$[rsp]
$LN15@simple_str:
$LN16@simple_str:
; Line 250
  001d7	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001db	c3		 ret	 0
simple_string_find3_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 0
nPos$ = 4
pState$ = 32
string_one$ = 40
str_size1$ = 48
cStr2$ = 56
str_size2$ = 64
simple_string_find2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 189
$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 18	 sub	 rsp, 24
; Line 191
  00018	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR nPos$[rsp], 0
; Line 192
  00020	8b 44 24 40	 mov	 eax, DWORD PTR str_size2$[rsp]
  00024	8b 4c 24 30	 mov	 ecx, DWORD PTR str_size1$[rsp]
  00028	2b c8		 sub	 ecx, eax
  0002a	8b c1		 mov	 eax, ecx
  0002c	85 c0		 test	 eax, eax
  0002e	7d 04		 jge	 SHORT $LN6@simple_str
; Line 193
  00030	33 c0		 xor	 eax, eax
  00032	eb 7c		 jmp	 SHORT $LN7@simple_str
$LN6@simple_str:
$LN5@simple_str:
; Line 195
  00034	8b 44 24 40	 mov	 eax, DWORD PTR str_size2$[rsp]
  00038	8b 4c 24 30	 mov	 ecx, DWORD PTR str_size1$[rsp]
  0003c	2b c8		 sub	 ecx, eax
  0003e	8b c1		 mov	 eax, ecx
  00040	39 44 24 04	 cmp	 DWORD PTR nPos$[rsp], eax
  00044	7f 68		 jg	 SHORT $LN4@simple_str
; Line 196
  00046	c7 04 24 00 00
	00 00		 mov	 DWORD PTR x$[rsp], 0
$LN3@simple_str:
; Line 197
  0004d	8b 44 24 40	 mov	 eax, DWORD PTR str_size2$[rsp]
  00051	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  00054	7d 31		 jge	 SHORT $LN2@simple_str
  00056	8b 04 24	 mov	 eax, DWORD PTR x$[rsp]
  00059	8b 4c 24 04	 mov	 ecx, DWORD PTR nPos$[rsp]
  0005d	03 c8		 add	 ecx, eax
  0005f	8b c1		 mov	 eax, ecx
  00061	48 98		 cdqe
  00063	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  00068	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  0006c	48 63 0c 24	 movsxd	 rcx, DWORD PTR x$[rsp]
  00070	48 8b 54 24 38	 mov	 rdx, QWORD PTR cStr2$[rsp]
  00075	0f be 0c 0a	 movsx	 ecx, BYTE PTR [rdx+rcx]
  00079	3b c1		 cmp	 eax, ecx
  0007b	75 0a		 jne	 SHORT $LN2@simple_str
; Line 198
  0007d	8b 04 24	 mov	 eax, DWORD PTR x$[rsp]
  00080	ff c0		 inc	 eax
  00082	89 04 24	 mov	 DWORD PTR x$[rsp], eax
; Line 199
  00085	eb c6		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
; Line 200
  00087	8b 44 24 40	 mov	 eax, DWORD PTR str_size2$[rsp]
  0008b	39 04 24	 cmp	 DWORD PTR x$[rsp], eax
  0008e	75 12		 jne	 SHORT $LN1@simple_str
; Line 201
  00090	48 63 44 24 04	 movsxd	 rax, DWORD PTR nPos$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string_one$[rsp]
  0009a	48 03 c8	 add	 rcx, rax
  0009d	48 8b c1	 mov	 rax, rcx
  000a0	eb 0e		 jmp	 SHORT $LN7@simple_str
$LN1@simple_str:
; Line 203
  000a2	8b 44 24 04	 mov	 eax, DWORD PTR nPos$[rsp]
  000a6	ff c0		 inc	 eax
  000a8	89 44 24 04	 mov	 DWORD PTR nPos$[rsp], eax
; Line 204
  000ac	eb 86		 jmp	 SHORT $LN5@simple_str
$LN4@simple_str:
; Line 205
  000ae	33 c0		 xor	 eax, eax
$LN7@simple_str:
; Line 206
  000b0	48 83 c4 18	 add	 rsp, 24
  000b4	c3		 ret	 0
simple_string_find2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv65 = 48
pState$ = 80
string_one$ = 88
cStr2$ = 96
simple_string_find_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 184
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 185
  00013	48 8b 4c 24 60	 mov	 rcx, QWORD PTR cStr2$[rsp]
  00018	e8 00 00 00 00	 call	 strlen
  0001d	48 89 44 24 30	 mov	 QWORD PTR tv65[rsp], rax
  00022	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string_one$[rsp]
  00027	e8 00 00 00 00	 call	 strlen
  0002c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv65[rsp]
  00031	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  00035	4c 8b 4c 24 60	 mov	 r9, QWORD PTR cStr2$[rsp]
  0003a	44 8b c0	 mov	 r8d, eax
  0003d	48 8b 54 24 58	 mov	 rdx, QWORD PTR string_one$[rsp]
  00042	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	e8 00 00 00 00	 call	 simple_string_find2_gc
; Line 186
  0004c	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00050	c3		 ret	 0
simple_string_find_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
cStr$ = 64
str_size$ = 72
simple_string_upper2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 173
$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 175
  0000d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00015	eb 0a		 jmp	 SHORT $LN4@simple_str
$LN3@simple_str:
  00017	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001b	ff c0		 inc	 eax
  0001d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_str:
  00021	8b 44 24 48	 mov	 eax, DWORD PTR str_size$[rsp]
  00025	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00029	7d 3d		 jge	 SHORT $LN2@simple_str
; Line 176
  0002b	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  00035	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 isalpha
  00040	85 c0		 test	 eax, eax
  00042	74 22		 je	 SHORT $LN1@simple_str
; Line 177
  00044	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  0004e	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 toupper
  00059	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  0005e	48 8b 54 24 40	 mov	 rdx, QWORD PTR cStr$[rsp]
  00063	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
$LN1@simple_str:
; Line 179
  00066	eb af		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
; Line 180
  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR cStr$[rsp]
; Line 181
  0006d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00071	c3		 ret	 0
simple_string_upper2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
cStr$ = 64
str_size$ = 72
simple_string_lower2 PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 151
$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 153
  0000d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00015	eb 0a		 jmp	 SHORT $LN4@simple_str
$LN3@simple_str:
  00017	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001b	ff c0		 inc	 eax
  0001d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_str:
  00021	8b 44 24 48	 mov	 eax, DWORD PTR str_size$[rsp]
  00025	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00029	7d 3d		 jge	 SHORT $LN2@simple_str
; Line 154
  0002b	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  00035	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 isalpha
  00040	85 c0		 test	 eax, eax
  00042	74 22		 je	 SHORT $LN1@simple_str
; Line 155
  00044	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  0004e	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00052	8b c8		 mov	 ecx, eax
  00054	e8 00 00 00 00	 call	 tolower
  00059	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  0005e	48 8b 54 24 40	 mov	 rdx, QWORD PTR cStr$[rsp]
  00063	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
$LN1@simple_str:
; Line 157
  00066	eb af		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
; Line 158
  00068	48 8b 44 24 40	 mov	 rax, QWORD PTR cStr$[rsp]
; Line 159
  0006d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00071	c3		 ret	 0
simple_string_lower2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
tv65 = 40
cStr$ = 64
simple_string_upper PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 162
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 164
  00009	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00011	eb 0a		 jmp	 SHORT $LN4@simple_str
$LN3@simple_str:
  00013	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00017	ff c0		 inc	 eax
  00019	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN4@simple_str:
  0001d	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00021	48 89 44 24 28	 mov	 QWORD PTR tv65[rsp], rax
  00026	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  0002b	e8 00 00 00 00	 call	 strlen
  00030	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv65[rsp]
  00035	48 3b c8	 cmp	 rcx, rax
  00038	73 3a		 jae	 SHORT $LN2@simple_str
; Line 165
  0003a	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  00043	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00047	8b c8		 mov	 ecx, eax
  00049	e8 00 00 00 00	 call	 isalpha
  0004e	85 c0		 test	 eax, eax
  00050	74 20		 je	 SHORT $LN1@simple_str
; Line 166
  00052	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00056	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  0005b	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 toupper
  00066	8b 4c 24 20	 mov	 ecx, DWORD PTR x$[rsp]
  0006a	48 8b 54 24 40	 mov	 rdx, QWORD PTR cStr$[rsp]
  0006f	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
$LN1@simple_str:
; Line 168
  00072	eb 9f		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
; Line 169
  00074	48 8b 44 24 40	 mov	 rax, QWORD PTR cStr$[rsp]
; Line 170
  00079	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007d	c3		 ret	 0
simple_string_upper ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$1 = 32
tv66 = 40
cStr$ = 64
simple_string_lower PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 138
$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 139
  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR NOT_CASE_SENSITIVE, 0
  00010	74 6b		 je	 SHORT $LN5@simple_str
; Line 141
  00012	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$1[rsp], 0
  0001a	eb 0a		 jmp	 SHORT $LN4@simple_str
$LN3@simple_str:
  0001c	8b 44 24 20	 mov	 eax, DWORD PTR x$1[rsp]
  00020	ff c0		 inc	 eax
  00022	89 44 24 20	 mov	 DWORD PTR x$1[rsp], eax
$LN4@simple_str:
  00026	8b 44 24 20	 mov	 eax, DWORD PTR x$1[rsp]
  0002a	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  00034	e8 00 00 00 00	 call	 strlen
  00039	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  0003e	48 3b c8	 cmp	 rcx, rax
  00041	73 3a		 jae	 SHORT $LN2@simple_str
; Line 142
  00043	8b 44 24 20	 mov	 eax, DWORD PTR x$1[rsp]
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  0004c	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 isalpha
  00057	85 c0		 test	 eax, eax
  00059	74 20		 je	 SHORT $LN1@simple_str
; Line 143
  0005b	8b 44 24 20	 mov	 eax, DWORD PTR x$1[rsp]
  0005f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR cStr$[rsp]
  00064	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 tolower
  0006f	8b 4c 24 20	 mov	 ecx, DWORD PTR x$1[rsp]
  00073	48 8b 54 24 40	 mov	 rdx, QWORD PTR cStr$[rsp]
  00078	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
$LN1@simple_str:
; Line 145
  0007b	eb 9f		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
$LN5@simple_str:
; Line 147
  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR cStr$[rsp]
; Line 148
  00082	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00086	c3		 ret	 0
simple_string_lower ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
cStr$ = 32
__$ArrayPad$ = 56
pState$ = 80
string$ = 88
x$ = 96
simple_string_setfromint_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 130
$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00013	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001a	48 33 c4	 xor	 rax, rsp
  0001d	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 133
  00022	44 8b 44 24 60	 mov	 r8d, DWORD PTR x$[rsp]
  00027	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG82535
  0002e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR cStr$[rsp]
  00033	e8 00 00 00 00	 call	 sprintf
; Line 134
  00038	4c 8d 44 24 20	 lea	 r8, QWORD PTR cStr$[rsp]
  0003d	48 8b 54 24 58	 mov	 rdx, QWORD PTR string$[rsp]
  00042	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  00047	e8 00 00 00 00	 call	 simple_string_set_gc
; Line 135
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00051	48 33 cc	 xor	 rcx, rsp
  00054	e8 00 00 00 00	 call	 __security_check_cookie
  00059	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0005d	c3		 ret	 0
simple_string_setfromint_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 48
simple_string_print PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 124
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 126
  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR string$[rsp]
  0000e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00011	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82525
  00018	e8 00 00 00 00	 call	 printf
; Line 127
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
simple_string_print ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
x2$ = 36
cStr$ = 40
tv130 = 48
pState$ = 80
string$ = 88
str$ = 96
str_size$ = 104
simple_string_add2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 99
$LN10:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 104
  00018	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_string_size
  00022	8b 4c 24 68	 mov	 ecx, DWORD PTR str_size$[rsp]
  00026	03 c8		 add	 ecx, eax
  00028	8b c1		 mov	 eax, ecx
  0002a	89 44 24 24	 mov	 DWORD PTR x2$[rsp], eax
; Line 105
  0002e	48 8b 44 24 58	 mov	 rax, QWORD PTR string$[rsp]
  00033	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00036	48 89 44 24 28	 mov	 QWORD PTR cStr$[rsp], rax
; Line 106
  0003b	8b 44 24 24	 mov	 eax, DWORD PTR x2$[rsp]
  0003f	ff c0		 inc	 eax
  00041	48 98		 cdqe
  00043	48 8b d0	 mov	 rdx, rax
  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  0004b	e8 00 00 00 00	 call	 simple_state_malloc
  00050	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  00055	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 107
  00058	48 8b 44 24 58	 mov	 rax, QWORD PTR string$[rsp]
  0005d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00061	75 13		 jne	 SHORT $LN7@simple_str
; Line 108
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82514
  0006a	e8 00 00 00 00	 call	 printf
; Line 109
  0006f	33 c9		 xor	 ecx, ecx
  00071	e8 00 00 00 00	 call	 exit
$LN7@simple_str:
; Line 112
  00076	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  0007e	eb 0a		 jmp	 SHORT $LN6@simple_str
$LN5@simple_str:
  00080	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00084	ff c0		 inc	 eax
  00086	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN6@simple_str:
  0008a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  0008f	e8 00 00 00 00	 call	 simple_string_size
  00094	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00098	7d 21		 jge	 SHORT $LN4@simple_str
; Line 113
  0009a	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  0009f	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  000a4	48 8b 54 24 58	 mov	 rdx, QWORD PTR string$[rsp]
  000a9	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  000ac	4c 8b 44 24 28	 mov	 r8, QWORD PTR cStr$[rsp]
  000b1	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  000b6	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
; Line 114
  000b9	eb c5		 jmp	 SHORT $LN5@simple_str
$LN4@simple_str:
; Line 115
  000bb	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  000c3	eb 0a		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
  000c5	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  000c9	ff c0		 inc	 eax
  000cb	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_str:
  000cf	8b 44 24 68	 mov	 eax, DWORD PTR str_size$[rsp]
  000d3	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  000d7	7d 3a		 jge	 SHORT $LN1@simple_str
; Line 116
  000d9	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  000de	48 89 44 24 30	 mov	 QWORD PTR tv130[rsp], rax
  000e3	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  000e8	e8 00 00 00 00	 call	 simple_string_size
  000ed	8b 4c 24 20	 mov	 ecx, DWORD PTR x$[rsp]
  000f1	03 c8		 add	 ecx, eax
  000f3	8b c1		 mov	 eax, ecx
  000f5	48 98		 cdqe
  000f7	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  000fc	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ff	48 8b 54 24 60	 mov	 rdx, QWORD PTR str$[rsp]
  00104	4c 8b 44 24 30	 mov	 r8, QWORD PTR tv130[rsp]
  00109	42 0f b6 14 02	 movzx	 edx, BYTE PTR [rdx+r8]
  0010e	88 14 01	 mov	 BYTE PTR [rcx+rax], dl
; Line 117
  00111	eb b2		 jmp	 SHORT $LN2@simple_str
$LN1@simple_str:
; Line 118
  00113	48 63 44 24 24	 movsxd	 rax, DWORD PTR x2$[rsp]
  00118	48 8b 4c 24 58	 mov	 rcx, QWORD PTR string$[rsp]
  0011d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00120	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; Line 119
  00124	48 8b 44 24 58	 mov	 rax, QWORD PTR string$[rsp]
  00129	8b 4c 24 24	 mov	 ecx, DWORD PTR x2$[rsp]
  0012d	89 48 08	 mov	 DWORD PTR [rax+8], ecx
; Line 120
  00130	48 8b 54 24 28	 mov	 rdx, QWORD PTR cStr$[rsp]
  00135	48 8b 4c 24 50	 mov	 rcx, QWORD PTR pState$[rsp]
  0013a	e8 00 00 00 00	 call	 simple_state_free
$LN9@simple_str:
; Line 121
  0013f	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00143	c3		 ret	 0
simple_string_add2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pState$ = 64
string$ = 72
str$ = 80
simple_string_add_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 92
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 94
  00013	48 8b 4c 24 50	 mov	 rcx, QWORD PTR str$[rsp]
  00018	e8 00 00 00 00	 call	 strlen
  0001d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
; Line 95
  00021	44 8b 4c 24 20	 mov	 r9d, DWORD PTR x$[rsp]
  00026	4c 8b 44 24 50	 mov	 r8, QWORD PTR str$[rsp]
  0002b	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00035	e8 00 00 00 00	 call	 simple_string_add2_gc
; Line 96
  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
simple_string_add_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pState$ = 64
string$ = 72
str$ = 80
str_size$ = 88
simple_string_set2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 73
$LN7:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 77
  00018	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  0001d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00020	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00025	e8 00 00 00 00	 call	 simple_state_free
; Line 78
  0002a	8b 44 24 58	 mov	 eax, DWORD PTR str_size$[rsp]
  0002e	ff c0		 inc	 eax
  00030	48 98		 cdqe
  00032	48 8b d0	 mov	 rdx, rax
  00035	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0003a	e8 00 00 00 00	 call	 simple_state_malloc
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR string$[rsp]
  00044	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 79
  00047	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  0004c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00050	75 13		 jne	 SHORT $LN4@simple_str
; Line 80
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82486
  00059	e8 00 00 00 00	 call	 printf
; Line 81
  0005e	33 c9		 xor	 ecx, ecx
  00060	e8 00 00 00 00	 call	 exit
$LN4@simple_str:
; Line 84
  00065	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  0006d	eb 0a		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
  0006f	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00073	ff c0		 inc	 eax
  00075	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_str:
  00079	8b 44 24 58	 mov	 eax, DWORD PTR str_size$[rsp]
  0007d	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00081	7d 21		 jge	 SHORT $LN1@simple_str
; Line 85
  00083	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  00088	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  0008d	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  00092	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00095	4c 8b 44 24 50	 mov	 r8, QWORD PTR str$[rsp]
  0009a	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  0009f	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
; Line 86
  000a2	eb cb		 jmp	 SHORT $LN2@simple_str
$LN1@simple_str:
; Line 87
  000a4	48 63 44 24 58	 movsxd	 rax, DWORD PTR str_size$[rsp]
  000a9	48 8b 4c 24 48	 mov	 rcx, QWORD PTR string$[rsp]
  000ae	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000b1	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; Line 88
  000b5	48 8b 44 24 48	 mov	 rax, QWORD PTR string$[rsp]
  000ba	8b 4c 24 58	 mov	 ecx, DWORD PTR str_size$[rsp]
  000be	89 48 08	 mov	 DWORD PTR [rax+8], ecx
$LN6@simple_str:
; Line 89
  000c1	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000c5	c3		 ret	 0
simple_string_set2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pState$ = 64
string$ = 72
str$ = 80
simple_string_set_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 65
$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 68
  00013	48 8b 4c 24 50	 mov	 rcx, QWORD PTR str$[rsp]
  00018	e8 00 00 00 00	 call	 strlen
  0001d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
; Line 69
  00021	44 8b 4c 24 20	 mov	 r9d, DWORD PTR x$[rsp]
  00026	4c 8b 44 24 50	 mov	 r8, QWORD PTR str$[rsp]
  0002b	48 8b 54 24 48	 mov	 rdx, QWORD PTR string$[rsp]
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00035	e8 00 00 00 00	 call	 simple_string_set2_gc
; Line 70
  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
simple_string_set_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
string$ = 8
simple_string_size PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 59
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
; Line 61
  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR string$[rsp]
  0000a	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
; Line 62
  0000d	c3		 ret	 0
simple_string_size ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pState$ = 48
string$ = 56
simple_string_delete_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 50
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 52
  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR string$[rsp]
  00013	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00016	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  0001b	e8 00 00 00 00	 call	 simple_state_free
; Line 53
  00020	48 8b 44 24 38	 mov	 rax, QWORD PTR string$[rsp]
  00025	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
; Line 54
  0002c	48 8b 54 24 38	 mov	 rdx, QWORD PTR string$[rsp]
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pState$[rsp]
  00036	e8 00 00 00 00	 call	 simple_state_free
; Line 55
  0003b	33 c0		 xor	 eax, eax
; Line 56
  0003d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00041	c3		 ret	 0
simple_string_delete_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
string$ = 40
pState$ = 64
str$ = 72
str_size$ = 80
simple_string_new2_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 27
$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 30
  00013	ba 10 00 00 00	 mov	 edx, 16
  00018	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0001d	e8 00 00 00 00	 call	 simple_state_malloc
  00022	48 89 44 24 28	 mov	 QWORD PTR string$[rsp], rax
; Line 31
  00027	48 83 7c 24 28
	00		 cmp	 QWORD PTR string$[rsp], 0
  0002d	75 13		 jne	 SHORT $LN5@simple_str
; Line 32
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82442
  00036	e8 00 00 00 00	 call	 printf
; Line 33
  0003b	33 c9		 xor	 ecx, ecx
  0003d	e8 00 00 00 00	 call	 exit
$LN5@simple_str:
; Line 35
  00042	8b 44 24 50	 mov	 eax, DWORD PTR str_size$[rsp]
  00046	ff c0		 inc	 eax
  00048	48 98		 cdqe
  0004a	48 8b d0	 mov	 rdx, rax
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  00052	e8 00 00 00 00	 call	 simple_state_malloc
  00057	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 36
  0005f	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  00064	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00068	75 13		 jne	 SHORT $LN4@simple_str
; Line 37
  0006a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG82446
  00071	e8 00 00 00 00	 call	 printf
; Line 38
  00076	33 c9		 xor	 ecx, ecx
  00078	e8 00 00 00 00	 call	 exit
$LN4@simple_str:
; Line 41
  0007d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR x$[rsp], 0
  00085	eb 0a		 jmp	 SHORT $LN3@simple_str
$LN2@simple_str:
  00087	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0008b	ff c0		 inc	 eax
  0008d	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
$LN3@simple_str:
  00091	8b 44 24 50	 mov	 eax, DWORD PTR str_size$[rsp]
  00095	39 44 24 20	 cmp	 DWORD PTR x$[rsp], eax
  00099	7d 21		 jge	 SHORT $LN1@simple_str
; Line 42
  0009b	48 63 44 24 20	 movsxd	 rax, DWORD PTR x$[rsp]
  000a0	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR x$[rsp]
  000a5	48 8b 54 24 28	 mov	 rdx, QWORD PTR string$[rsp]
  000aa	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  000ad	4c 8b 44 24 48	 mov	 r8, QWORD PTR str$[rsp]
  000b2	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  000b7	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
; Line 43
  000ba	eb cb		 jmp	 SHORT $LN2@simple_str
$LN1@simple_str:
; Line 44
  000bc	48 63 44 24 50	 movsxd	 rax, DWORD PTR str_size$[rsp]
  000c1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR string$[rsp]
  000c6	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000c9	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
; Line 45
  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
  000d2	8b 4c 24 50	 mov	 ecx, DWORD PTR str_size$[rsp]
  000d6	89 48 08	 mov	 DWORD PTR [rax+8], ecx
; Line 46
  000d9	48 8b 44 24 28	 mov	 rax, QWORD PTR string$[rsp]
$LN7@simple_str:
; Line 47
  000de	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000e2	c3		 ret	 0
simple_string_new2_gc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
x$ = 32
pState$ = 64
str$ = 72
simple_string_new_gc PROC
; File c:\users\thecarisma\documents\simple_github\simple\simple\sources\simple_string.c
; Line 20
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H
; Line 22
  0000e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  00013	e8 00 00 00 00	 call	 strlen
  00018	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax
; Line 23
  0001c	44 8b 44 24 20	 mov	 r8d, DWORD PTR x$[rsp]
  00021	48 8b 54 24 48	 mov	 rdx, QWORD PTR str$[rsp]
  00026	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pState$[rsp]
  0002b	e8 00 00 00 00	 call	 simple_string_new2_gc
; Line 24
  00030	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00034	c3		 ret	 0
simple_string_new_gc ENDP
_TEXT	ENDS
END
