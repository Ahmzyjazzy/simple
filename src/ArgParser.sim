
/* Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com"> 

MIT License

Copyright (c) 2018 simple

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/

package simple

#1 #2
args = []
position = 0

class ArgParser

	executor = 2
	exe = 1

	#3
	block ArgParser() 
	
	#4
	block parse( inargs )
		args = inargs
		
		if len(args) < 0 
			getHelp()
		end
		
		for -> position = 0 to len(args)
			switch args[position]
				case "-h"
					getHelp() 
				case "--help"
					getHelp() 
				case "-s" 
					showTokens() 
				case "-token"
					showTokens() 
				case "-d"
					development = true 
				case "--dev"
					development = true 
				default 
					filePath = args[position]
					position++ cmdArgs = [] 
					for n = position to len(args)
						add(cmdArgs, args[n])
					loop
					commandLineArguments = cmdArgs
					break
			end
		loop
		
		if (len(args) > 1) {
			#printParsedArgs(filePath, cmdArgs)
		}
	
	
	
/**
	comment map
	-------
	#author - Azeez Adewale[[twitter]@iamthecarisma]
							 [[github]@Thecarisma]
	#date - Jan 21 2018
	#syntax - allsyntax
	#package - simple
	#name - ArgParser.sim
	#path - ./src/ArgParser.sim
	#detail - the command line are parsed into tokens that the 
	compiler and vm will understand
	
	#1 - argument dummy variable 
	#2 - position declaration
	#3 - empty constructor for the ArgParser class
	#4 - the block that parse the arguments

**/