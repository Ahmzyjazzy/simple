
/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

#1
INVALID_NUMBER = 000

UNKNOWN_ESCAPE_SEQUENCE = 001 

UNKNOWN_CHARACTER = 002

ANNOTATION_NOT_SUPPORTED_YET = 003

#2


#3
block getErrorValue(val)
	if -> val == INVALID_NUMBER
		return "ERROR (C"+val+") - INVALID NUMBER"
	elif -> val == UNKNOWN_ESCAPE_SEQUENCE
		return "ERROR (C"+val+") - UNKNOWN ESCAPE SEQUENCE"
	elif -> val == UNKNOWN_CHARACTER
		return "ERROR (C"+val+") - UNKNOWN_CHARACTER"
	elif -> val == ANNOTATION_NOT_SUPPORTED_YET
		return "ERROR (C"+val+") - ANNOTATION NOT SUPPORTED YET"
	else
		return "UNKNOWN ERROR"
	end

/**
	comment map 
	-------
	#author - Azeez Adewale[[twitter]@iamthecarisma]
							 [[github]@Thecarisma]
	#date - Jan 21 2018
	#syntax - allsyntax
	#name - Error.sim
	#path - ./src/utilities/Error.sim
	#detail - this file hold all the error codes for the compiler and virtual machine and values in relation to the error code
	
	#1 - compiler errors
	#2 - runtime error
	#3 - error values

**/