
package simple.scanner

TOKENTYPE_ASSIGNMENT = 0

TOKENTYPE_CHAR = 1

TOKENTYPE_CLOSECURLYBRACE = 2

TOKENTYPE_CLOSEPARENTESES = 3

TOKENTYPE_CLOSESQUAREBRACE = 4

TOKENTYPE_COLON = 5

TOKENTYPE_COMMA = 6

TOKENTYPE_COMAPRISON = 7

TOKENTYPE_DOT = 8

TOKENTYPE_FLOAT = 9

TOKENTYPE_IDENTIFIER = 10

TOKENTYPE_INTEGER = 11

TOKENTYPE_OPERATION = 12

TOKENTYPE_OPENCURLYBRACE = 13

TOKENTYPE_OPENPARENTESES = 14

TOKENTYPE_OPENSQUAREBRACE = 15

TOKENTYPE_QUESTION = 16

TOKENTYPE_SEMICOLON = 17

TOKENTYPE_STRING = 18

TOKENTYPE_SWAP = 19

block getTokenType( tokenType ) 

	if -> tokenType == TOKENTYPE_ASSIGNMENT
		return "Assignment"
	elif -> tokenType == TOKENTYPE_CHAR
		return "Char"
	elif -> tokenType == TOKENTYPE_CLOSECURLYBRACE
		return "CloseCurlyBrace"
	elif -> tokenType == TOKENTYPE_CLOSEPARENTESES
		return "CloseParenteses"
	elif -> tokenType == TOKENTYPE_CLOSESQUAREBRACE
		return "CloseSquareBrace"
	elif -> tokenType == TOKENTYPE_COLON
		return "Colon"
	elif -> tokenType == TOKENTYPE_COMMA
		return "Comma"
	elif -> tokenType == TOKENTYPE_COMAPRISON
		return "Comparison"
	elif -> tokenType == TOKENTYPE_DOT
		return "Dot"
	elif -> tokenType == TOKENTYPE_FLOAT
		return "Float"
	elif -> tokenType == TOKENTYPE_IDENTIFIER
		return "Identifier"
	elif -> tokenType == TOKENTYPE_INTEGER
		return "Integer"
	elif -> tokenType == TOKENTYPE_OPERATION
		return "Operation"
	elif -> tokenType == TOKENTYPE_OPENCURLYBRACE
		return "OpenCurlyBrace"
	elif -> tokenType == TOKENTYPE_OPENPARENTESES
		return "OpenParentheses"
	elif -> tokenType == TOKENTYPE_OPENSQUAREBRACE
		return "OpenSquareBrace"
	elif -> tokenType == TOKENTYPE_QUESTION
		return "Question"
	elif -> tokenType == TOKENTYPE_SEMICOLON
		return "Semicolon"
	elif -> tokenType == TOKENTYPE_STRING
		return "String"
	elif -> tokenType == TOKENTYPE_SWAP
		return "Swap"
	else
		return "Assignment" #throw errow
	end



