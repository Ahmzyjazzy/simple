/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * @filename - Throw.sim
 * @author - Azeez Adewale
 * @date - 18 Febuary 2018
 * @Time - 02:37 PM
 */

/*
	To prevent error in operation and at all level of a program the 
	@Block throw(errorvalue) and @Block throwOnly(errorvalue) can be use 
	to show error detail and print the stack trace to locate the error 
	position. 
		The @Block throw(errorvalue) shows error detail and exit the 
	program. This is most useful to prevent erroneous program and to catch 
	error just in time.
		The @Block throwOnly(errorvalue) behaves slightly different from 
	the @Block throw(errorvalue) block as it does not force the program to
	exit after the error detail has been displayed
	
*/
 
module simple.debugging

call "Debug.sim"
 
/*
	Throw an error at any point in the program with this block
	the parameter @Bold errorvalue @End is the main error message
	display when the error is thrown. Calling this block ends the 
	program after the error has been displayed. The error is 
	thrown in the format below
	@Code
	
		Line 24 -> Unknown Error Occur
			at throw() in file Throw.sim
			at line 40 at three() in file debugging.sim
			at line 37 at two() in file debugging.sim
			at line 34 at one() in file debugging.sim
			at line 29 at main() in file debugging.sim
			at line 21 in file debugging.sim
			
	@EndCode
	
	If intention is to show an error the @Block throwOnly(errorvalue)
	should be called instead because it does not exit the program
*/
block throw(errorvalue)
	if errorvalue = "" {
		errorvalue = "Unknown Error Occur"
	}
	__throw(errorvalue)
	if isLinux() {
		@ crlf
	}
	__exit__
	
/*
	Want to make the program error tolerant then this block is 
	the right block to call instead of the @Block throw because it does
	not exit the program after the error has been thrown. It definitely 
	far from safe as the reason why it is thrown is defied as the error 
	will be carried along to another throwOnly() statement because the
	error will still be active. so to prevent a very erroneous program 
	the @Block throw(errorvalue) should be called instead
*/
block throwOnly(errorvalue)
	if errorvalue = "" {
		errorvalue = "Unknown Error Occur"
	}
	__throw(errorvalue)
	if isLinux() {
		@ crlf
	}
	

block throwWithTitle(title,errorvalue)
	finalErrorValue = ""
	if title == "" {
		finalErrorValue += ""
	else
		finalErrorValue += title
	}
	finalErrorValue += " : "
	if errorvalue == "" {
		finalErrorValue += "Unknown Error Occur"
	else
		finalErrorValue += errorvalue
	}



	
	